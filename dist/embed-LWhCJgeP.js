var $v = (i) => {
  throw TypeError(i);
};
var yv = (i, e, t) => e.has(i) || $v("Cannot " + t);
var Wn = (i, e, t) => (yv(i, e, "read from private field"), t ? t.call(i) : e.get(i)), $d = (i, e, t) => e.has(i) ? $v("Cannot add the same private member more than once") : e instanceof WeakSet ? e.add(i) : e.set(i, t), yd = (i, e, t, n) => (yv(i, e, "write to private field"), n ? n.call(i, t) : e.set(i, t), t);
import * as LT from "https://cdn.jsdelivr.net/npm/minizinc/dist/minizinc.mjs";
import * as DT from "https://cdn.jsdelivr.net/npm/minizinc@edge/dist/minizinc.mjs";
const br = 2, db = 4, Vh = 8, Uh = 16, Gs = 32, jc = 64, Ju = 128, mr = 256, eh = 512, sn = 1024, Hs = 2048, ul = 4096, Ys = 8192, Yh = 16384, pb = 32768, zh = 65536, gb = 1 << 17, VT = 1 << 19, mb = 1 << 20, zs = Symbol("$state"), vb = Symbol("legacy props"), UT = Symbol(""), op = !1;
var Bc = Array.isArray, YT = Array.prototype.indexOf, Sg = Array.from, bg = Object.defineProperty, il = Object.getOwnPropertyDescriptor, Sb = Object.getOwnPropertyDescriptors, zT = Object.prototype, jT = Array.prototype, $g = Object.getPrototypeOf;
function BT(i) {
  return typeof i == "function";
}
const Lr = () => {
};
function IT(i) {
  return i();
}
function th(i) {
  for (var e = 0; e < i.length; e++)
    i[e]();
}
const NT = typeof requestIdleCallback > "u" ? (i) => setTimeout(i, 1) : requestIdleCallback;
let ih = !1, nh = !1, lp = [], ap = [];
function bb() {
  ih = !1;
  const i = lp.slice();
  lp = [], th(i);
}
function $b() {
  nh = !1;
  const i = ap.slice();
  ap = [], th(i);
}
function jh(i) {
  ih || (ih = !0, queueMicrotask(bb)), lp.push(i);
}
function FT(i) {
  nh || (nh = !0, NT($b)), ap.push(i);
}
function GT() {
  ih && bb(), nh && $b();
}
function yb(i) {
  return i === this.v;
}
function Qb(i, e) {
  return i != i ? e == e : i !== e || i !== null && typeof i == "object" || typeof i == "function";
}
function yg(i) {
  return !Qb(i, this.v);
}
function HT(i) {
  throw new Error("https://svelte.dev/e/effect_in_teardown");
}
function KT() {
  throw new Error("https://svelte.dev/e/effect_in_unowned_derived");
}
function JT(i) {
  throw new Error("https://svelte.dev/e/effect_orphan");
}
function eZ() {
  throw new Error("https://svelte.dev/e/effect_update_depth_exceeded");
}
function tZ() {
  throw new Error("https://svelte.dev/e/hydration_failed");
}
function iZ(i) {
  throw new Error("https://svelte.dev/e/props_invalid_value");
}
function nZ() {
  throw new Error("https://svelte.dev/e/state_descriptors_fixed");
}
function rZ() {
  throw new Error("https://svelte.dev/e/state_prototype_fixed");
}
function sZ() {
  throw new Error("https://svelte.dev/e/state_unsafe_local_read");
}
function oZ() {
  throw new Error("https://svelte.dev/e/state_unsafe_mutation");
}
let ha = !1, lZ = !1;
function aZ() {
  ha = !0;
}
const Qg = 1, wg = 2, wb = 4, cZ = 8, fZ = 16, uZ = 1, hZ = 2, OZ = 4, dZ = 8, pZ = 16, gZ = 4, Pb = 1, mZ = 2, xb = "[", Pg = "[!", xg = "]", Oc = {}, Tn = Symbol();
function kg(i) {
  console.warn("https://svelte.dev/e/hydration_mismatch");
}
function kb(i) {
  throw new Error("https://svelte.dev/e/lifecycle_outside_component");
}
let ei = null;
function Qv(i) {
  ei = i;
}
function zi(i, e = !1, t) {
  ei = {
    p: ei,
    c: null,
    e: null,
    m: !1,
    s: i,
    x: null,
    l: null
  }, ha && !e && (ei.l = {
    s: null,
    u: null,
    r1: [],
    r2: ur(!1)
  });
}
function ji(i) {
  const e = ei;
  if (e !== null) {
    i !== void 0 && (e.x = i);
    const o = e.e;
    if (o !== null) {
      var t = At, n = jt;
      e.e = null;
      try {
        for (var r = 0; r < o.length; r++) {
          var s = o[r];
          ds(s.effect), Os(s.reaction), pa(s.fn);
        }
      } finally {
        ds(t), Os(n);
      }
    }
    ei = e.p, e.m = !0;
  }
  return i || /** @type {T} */
  {};
}
function Ic() {
  return !ha || ei !== null && ei.l === null;
}
function ur(i, e) {
  var t = {
    f: 0,
    // TODO ideally we could skip this altogether, but it causes type errors
    v: i,
    reactions: null,
    equals: yb,
    rv: 0,
    wv: 0
  };
  return t;
}
// @__NO_SIDE_EFFECTS__
function Nc(i, e = !1) {
  var n;
  const t = ur(i);
  return e || (t.equals = yg), ha && ei !== null && ei.l !== null && ((n = ei.l).s ?? (n.s = [])).push(t), t;
}
function fe(i, e = !1) {
  return /* @__PURE__ */ vZ(/* @__PURE__ */ Nc(i, e));
}
// @__NO_SIDE_EFFECTS__
function vZ(i) {
  return jt !== null && !os && jt.f & br && (fs === null ? QZ([i]) : fs.push(i)), i;
}
function Ci(i, e) {
  return M(
    i,
    Kn(() => g(i))
  ), e;
}
function M(i, e) {
  return jt !== null && !os && Ic() && jt.f & (br | Uh) && // If the source was created locally within the current derived, then
  // we allow the mutation.
  (fs === null || !fs.includes(i)) && oZ(), bc(i, e);
}
function bc(i, e) {
  return i.equals(e) || (i.v, i.v = e, i.wv = qb(), _b(i, Hs), Ic() && At !== null && At.f & sn && !(At.f & (Gs | jc)) && (Es === null ? wZ([i]) : Es.push(i))), e;
}
function Oo(i, e = 1) {
  var t = g(i), n = e === 1 ? t++ : t--;
  return M(i, t), n;
}
function _b(i, e) {
  var t = i.reactions;
  if (t !== null)
    for (var n = Ic(), r = t.length, s = 0; s < r; s++) {
      var o = t[s], a = o.f;
      a & Hs || !n && o === At || (Yr(o, e), a & (sn | mr) && (a & br ? _b(
        /** @type {Derived} */
        o,
        ul
      ) : Nh(
        /** @type {Effect} */
        o
      )));
    }
}
// @__NO_SIDE_EFFECTS__
function $c(i) {
  var e = br | Hs, t = jt !== null && jt.f & br ? (
    /** @type {Derived} */
    jt
  ) : null;
  return At === null || t !== null && t.f & mr ? e |= mr : At.f |= mb, {
    ctx: ei,
    deps: null,
    effects: null,
    equals: yb,
    f: e,
    fn: i,
    reactions: null,
    rv: 0,
    v: (
      /** @type {V} */
      null
    ),
    wv: 0,
    parent: t ?? At
  };
}
// @__NO_SIDE_EFFECTS__
function gi(i) {
  const e = /* @__PURE__ */ $c(i);
  return e.equals = yg, e;
}
function Wb(i) {
  var e = i.effects;
  if (e !== null) {
    i.effects = null;
    for (var t = 0; t < e.length; t += 1)
      ko(
        /** @type {Effect} */
        e[t]
      );
  }
}
function SZ(i) {
  for (var e = i.parent; e !== null; ) {
    if (!(e.f & br))
      return (
        /** @type {Effect} */
        e
      );
    e = e.parent;
  }
  return null;
}
function bZ(i) {
  var e, t = At;
  ds(SZ(i));
  try {
    Wb(i), e = Db(i);
  } finally {
    ds(t);
  }
  return e;
}
function Tb(i) {
  var e = bZ(i), t = ($o || i.f & mr) && i.deps !== null ? ul : sn;
  Yr(i, t), i.equals(e) || (i.v = e, i.wv = qb());
}
let $t = !1;
function Us(i) {
  $t = i;
}
let Mt;
function vr(i) {
  if (i === null)
    throw kg(), Oc;
  return Mt = i;
}
function Fc() {
  return vr(
    /** @type {TemplateNode} */
    /* @__PURE__ */ Ks(Mt)
  );
}
function C(i) {
  if ($t) {
    if (/* @__PURE__ */ Ks(Mt) !== null)
      throw kg(), Oc;
    Mt = i;
  }
}
function Ct(i = 1) {
  if ($t) {
    for (var e = i, t = Mt; e--; )
      t = /** @type {TemplateNode} */
      /* @__PURE__ */ Ks(t);
    Mt = t;
  }
}
function cp() {
  for (var i = 0, e = Mt; ; ) {
    if (e.nodeType === 8) {
      var t = (
        /** @type {Comment} */
        e.data
      );
      if (t === xg) {
        if (i === 0) return e;
        i -= 1;
      } else (t === xb || t === Pg) && (i += 1);
    }
    var n = (
      /** @type {TemplateNode} */
      /* @__PURE__ */ Ks(e)
    );
    e.remove(), e = n;
  }
}
function Vl(i, e = null, t) {
  if (typeof i != "object" || i === null || zs in i)
    return i;
  const n = $g(i);
  if (n !== zT && n !== jT)
    return i;
  var r = /* @__PURE__ */ new Map(), s = Bc(i), o = ur(0);
  s && r.set("length", ur(
    /** @type {any[]} */
    i.length
  ));
  var a;
  return new Proxy(
    /** @type {any} */
    i,
    {
      defineProperty(c, u, h) {
        (!("value" in h) || h.configurable === !1 || h.enumerable === !1 || h.writable === !1) && nZ();
        var d = r.get(u);
        return d === void 0 ? (d = ur(h.value), r.set(u, d)) : M(d, Vl(h.value, a)), !0;
      },
      deleteProperty(c, u) {
        var h = r.get(u);
        if (h === void 0)
          u in c && r.set(u, ur(Tn));
        else {
          if (s && typeof u == "string") {
            var d = (
              /** @type {Source<number>} */
              r.get("length")
            ), p = Number(u);
            Number.isInteger(p) && p < d.v && M(d, p);
          }
          M(h, Tn), wv(o);
        }
        return !0;
      },
      get(c, u, h) {
        var b;
        if (u === zs)
          return i;
        var d = r.get(u), p = u in c;
        if (d === void 0 && (!p || (b = il(c, u)) != null && b.writable) && (d = ur(Vl(p ? c[u] : Tn, a)), r.set(u, d)), d !== void 0) {
          var m = g(d);
          return m === Tn ? void 0 : m;
        }
        return Reflect.get(c, u, h);
      },
      getOwnPropertyDescriptor(c, u) {
        var h = Reflect.getOwnPropertyDescriptor(c, u);
        if (h && "value" in h) {
          var d = r.get(u);
          d && (h.value = g(d));
        } else if (h === void 0) {
          var p = r.get(u), m = p == null ? void 0 : p.v;
          if (p !== void 0 && m !== Tn)
            return {
              enumerable: !0,
              configurable: !0,
              value: m,
              writable: !0
            };
        }
        return h;
      },
      has(c, u) {
        var m;
        if (u === zs)
          return !0;
        var h = r.get(u), d = h !== void 0 && h.v !== Tn || Reflect.has(c, u);
        if (h !== void 0 || At !== null && (!d || (m = il(c, u)) != null && m.writable)) {
          h === void 0 && (h = ur(d ? Vl(c[u], a) : Tn), r.set(u, h));
          var p = g(h);
          if (p === Tn)
            return !1;
        }
        return d;
      },
      set(c, u, h, d) {
        var x;
        var p = r.get(u), m = u in c;
        if (s && u === "length")
          for (var b = h; b < /** @type {Source<number>} */
          p.v; b += 1) {
            var y = r.get(b + "");
            y !== void 0 ? M(y, Tn) : b in c && (y = ur(Tn), r.set(b + "", y));
          }
        p === void 0 ? (!m || (x = il(c, u)) != null && x.writable) && (p = ur(void 0), M(p, Vl(h, a)), r.set(u, p)) : (m = p.v !== Tn, M(p, Vl(h, a)));
        var w = Reflect.getOwnPropertyDescriptor(c, u);
        if (w != null && w.set && w.set.call(d, h), !m) {
          if (s && typeof u == "string") {
            var k = (
              /** @type {Source<number>} */
              r.get("length")
            ), A = Number(u);
            Number.isInteger(A) && A >= k.v && M(k, A + 1);
          }
          wv(o);
        }
        return !0;
      },
      ownKeys(c) {
        g(o);
        var u = Reflect.ownKeys(c).filter((p) => {
          var m = r.get(p);
          return m === void 0 || m.v !== Tn;
        });
        for (var [h, d] of r)
          d.v !== Tn && !(h in c) && u.push(h);
        return u;
      },
      setPrototypeOf() {
        rZ();
      }
    }
  );
}
function wv(i, e = 1) {
  M(i, i.v + e);
}
function Pv(i) {
  return i !== null && typeof i == "object" && zs in i ? i[zs] : i;
}
function $Z(i, e) {
  return Object.is(Pv(i), Pv(e));
}
var fp, Zb, Cb, Rb, Ab;
function up() {
  if (fp === void 0) {
    fp = window, Zb = document, Cb = /Firefox/.test(navigator.userAgent);
    var i = Element.prototype, e = Node.prototype;
    Rb = il(e, "firstChild").get, Ab = il(e, "nextSibling").get, i.__click = void 0, i.__className = "", i.__attributes = null, i.__styles = null, i.__e = void 0, Text.prototype.__t = void 0;
  }
}
function xo(i = "") {
  return document.createTextNode(i);
}
// @__NO_SIDE_EFFECTS__
function Or(i) {
  return Rb.call(i);
}
// @__NO_SIDE_EFFECTS__
function Ks(i) {
  return Ab.call(i);
}
function R(i, e) {
  if (!$t)
    return /* @__PURE__ */ Or(i);
  var t = (
    /** @type {TemplateNode} */
    /* @__PURE__ */ Or(Mt)
  );
  if (t === null)
    t = Mt.appendChild(xo());
  else if (e && t.nodeType !== 3) {
    var n = xo();
    return t == null || t.before(n), vr(n), n;
  }
  return vr(t), t;
}
function Le(i, e) {
  if (!$t) {
    var t = (
      /** @type {DocumentFragment} */
      /* @__PURE__ */ Or(
        /** @type {Node} */
        i
      )
    );
    return t instanceof Comment && t.data === "" ? /* @__PURE__ */ Ks(t) : t;
  }
  return Mt;
}
function ie(i, e = 1, t = !1) {
  let n = $t ? Mt : i;
  for (var r; e--; )
    r = n, n = /** @type {TemplateNode} */
    /* @__PURE__ */ Ks(n);
  if (!$t)
    return n;
  var s = n == null ? void 0 : n.nodeType;
  if (t && s !== 3) {
    var o = xo();
    return n === null ? r == null || r.after(o) : n.before(o), vr(o), o;
  }
  return vr(n), /** @type {TemplateNode} */
  n;
}
function Xb(i) {
  i.textContent = "";
}
const Mb = 0, yZ = 1;
let Eu = !1, qu = Mb, yc = !1, Qc = null, Nl = !1, _g = !1;
function xv(i) {
  Nl = i;
}
function kv(i) {
  _g = i;
}
let Jo = [], Fl = 0;
let jt = null, os = !1;
function Os(i) {
  jt = i;
}
let At = null;
function ds(i) {
  At = i;
}
let fs = null;
function QZ(i) {
  fs = i;
}
let mn = null, Fn = 0, Es = null;
function wZ(i) {
  Es = i;
}
let Eb = 1, rh = 0, $o = !1, So = null;
function qb() {
  return ++Eb;
}
function Oa(i) {
  var d;
  var e = i.f;
  if (e & Hs)
    return !0;
  if (e & ul) {
    var t = i.deps, n = (e & mr) !== 0;
    if (t !== null) {
      var r, s, o = (e & eh) !== 0, a = n && At !== null && !$o, c = t.length;
      if (o || a) {
        var u = (
          /** @type {Derived} */
          i
        ), h = u.parent;
        for (r = 0; r < c; r++)
          s = t[r], (o || !((d = s == null ? void 0 : s.reactions) != null && d.includes(u))) && (s.reactions ?? (s.reactions = [])).push(u);
        o && (u.f ^= eh), a && h !== null && !(h.f & mr) && (u.f ^= mr);
      }
      for (r = 0; r < c; r++)
        if (s = t[r], Oa(
          /** @type {Derived} */
          s
        ) && Tb(
          /** @type {Derived} */
          s
        ), s.wv > i.wv)
          return !0;
    }
    (!n || At !== null && !$o) && Yr(i, sn);
  }
  return !1;
}
function PZ(i, e) {
  for (var t = e; t !== null; ) {
    if (t.f & Ju)
      try {
        t.fn(i);
        return;
      } catch {
        t.f ^= Ju;
      }
    t = t.parent;
  }
  throw Eu = !1, i;
}
function xZ(i) {
  return (i.f & Yh) === 0 && (i.parent === null || (i.parent.f & Ju) === 0);
}
function Bh(i, e, t, n) {
  if (Eu) {
    if (t === null && (Eu = !1), xZ(e))
      throw i;
    return;
  }
  t !== null && (Eu = !0);
  {
    PZ(i, e);
    return;
  }
}
function Lb(i, e, t = !0) {
  var n = i.reactions;
  if (n !== null)
    for (var r = 0; r < n.length; r++) {
      var s = n[r];
      s.f & br ? Lb(
        /** @type {Derived} */
        s,
        e,
        !1
      ) : e === s && (t ? Yr(s, Hs) : s.f & sn && Yr(s, ul), Nh(
        /** @type {Effect} */
        s
      ));
    }
}
function Db(i) {
  var m;
  var e = mn, t = Fn, n = Es, r = jt, s = $o, o = fs, a = ei, c = os, u = i.f;
  mn = /** @type {null | Value[]} */
  null, Fn = 0, Es = null, jt = u & (Gs | jc) ? null : i, $o = (u & mr) !== 0 && (!Nl || r === null || c), fs = null, Qv(i.ctx), os = !1, rh++;
  try {
    var h = (
      /** @type {Function} */
      (0, i.fn)()
    ), d = i.deps;
    if (mn !== null) {
      var p;
      if (sh(i, Fn), d !== null && Fn > 0)
        for (d.length = Fn + mn.length, p = 0; p < mn.length; p++)
          d[Fn + p] = mn[p];
      else
        i.deps = d = mn;
      if (!$o)
        for (p = Fn; p < d.length; p++)
          ((m = d[p]).reactions ?? (m.reactions = [])).push(i);
    } else d !== null && Fn < d.length && (sh(i, Fn), d.length = Fn);
    if (Ic() && Es !== null && !os && d !== null && !(i.f & (br | ul | Hs)))
      for (p = 0; p < /** @type {Source[]} */
      Es.length; p++)
        Lb(
          Es[p],
          /** @type {Effect} */
          i
        );
    return r !== null && rh++, h;
  } finally {
    mn = e, Fn = t, Es = n, jt = r, $o = s, fs = o, Qv(a), os = c;
  }
}
function kZ(i, e) {
  let t = e.reactions;
  if (t !== null) {
    var n = YT.call(t, i);
    if (n !== -1) {
      var r = t.length - 1;
      r === 0 ? t = e.reactions = null : (t[n] = t[r], t.pop());
    }
  }
  t === null && e.f & br && // Destroying a child effect while updating a parent effect can cause a dependency to appear
  // to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`
  // allows us to skip the expensive work of disconnecting and immediately reconnecting it
  (mn === null || !mn.includes(e)) && (Yr(e, ul), e.f & (mr | eh) || (e.f ^= eh), Wb(
    /** @type {Derived} **/
    e
  ), sh(
    /** @type {Derived} **/
    e,
    0
  ));
}
function sh(i, e) {
  var t = i.deps;
  if (t !== null)
    for (var n = e; n < t.length; n++)
      kZ(i, t[n]);
}
function Ih(i) {
  var e = i.f;
  if (!(e & Yh)) {
    Yr(i, sn);
    var t = At, n = ei;
    At = i;
    try {
      e & Uh ? MZ(i) : jb(i), zb(i);
      var r = Db(i);
      i.teardown = typeof r == "function" ? r : null, i.wv = Eb;
      var s = i.deps, o;
      op && lZ && i.f & Hs;
    } catch (a) {
      Bh(a, i, t, n || i.ctx);
    } finally {
      At = t;
    }
  }
}
function Vb() {
  if (Fl > 1e3) {
    Fl = 0;
    try {
      eZ();
    } catch (i) {
      if (Qc !== null)
        Bh(i, Qc, null);
      else
        throw i;
    }
  }
  Fl++;
}
function Ub(i) {
  var e = i.length;
  if (e !== 0) {
    Vb();
    var t = Nl;
    Nl = !0;
    try {
      for (var n = 0; n < e; n++) {
        var r = i[n];
        r.f & sn || (r.f ^= sn);
        var s = TZ(r);
        _Z(s);
      }
    } finally {
      Nl = t;
    }
  }
}
function _Z(i) {
  var e = i.length;
  if (e !== 0)
    for (var t = 0; t < e; t++) {
      var n = i[t];
      if (!(n.f & (Yh | Ys)))
        try {
          Oa(n) && (Ih(n), n.deps === null && n.first === null && n.nodes_start === null && (n.teardown === null ? Bb(n) : n.fn = null));
        } catch (r) {
          Bh(r, n, null, n.ctx);
        }
    }
}
function WZ() {
  if (yc = !1, Fl > 1001)
    return;
  const i = Jo;
  Jo = [], Ub(i), yc || (Fl = 0, Qc = null);
}
function Nh(i) {
  qu === Mb && (yc || (yc = !0, queueMicrotask(WZ))), Qc = i;
  for (var e = i; e.parent !== null; ) {
    e = e.parent;
    var t = e.f;
    if (t & (jc | Gs)) {
      if (!(t & sn)) return;
      e.f ^= sn;
    }
  }
  Jo.push(e);
}
function TZ(i) {
  var e = [], t = i.first;
  e: for (; t !== null; ) {
    var n = t.f, r = (n & Gs) !== 0, s = r && (n & sn) !== 0, o = t.next;
    if (!s && !(n & Ys)) {
      if (n & db)
        e.push(t);
      else if (r)
        t.f ^= sn;
      else {
        var a = jt;
        try {
          jt = t, Oa(t) && Ih(t);
        } catch (h) {
          Bh(h, t, null, t.ctx);
        } finally {
          jt = a;
        }
      }
      var c = t.first;
      if (c !== null) {
        t = c;
        continue;
      }
    }
    if (o === null) {
      let h = t.parent;
      for (; h !== null; ) {
        if (i === h)
          break e;
        var u = h.next;
        if (u !== null) {
          t = u;
          continue e;
        }
        h = h.parent;
      }
    }
    t = o;
  }
  return e;
}
function pe(i) {
  var e = qu, t = Jo;
  try {
    Vb();
    const r = [];
    qu = yZ, Jo = r, yc = !1, Ub(t);
    var n = i == null ? void 0 : i();
    return GT(), (Jo.length > 0 || r.length > 0) && pe(), Fl = 0, Qc = null, n;
  } finally {
    qu = e, Jo = t;
  }
}
async function Dr() {
  await Promise.resolve(), pe();
}
function g(i) {
  var e = i.f, t = (e & br) !== 0;
  if (So !== null && So.add(i), jt !== null && !os) {
    fs !== null && fs.includes(i) && sZ();
    var n = jt.deps;
    i.rv < rh && (i.rv = rh, mn === null && n !== null && n[Fn] === i ? Fn++ : mn === null ? mn = [i] : (!$o || !mn.includes(i)) && mn.push(i));
  } else if (t && /** @type {Derived} */
  i.deps === null && /** @type {Derived} */
  i.effects === null) {
    var r = (
      /** @type {Derived} */
      i
    ), s = r.parent;
    s !== null && !(s.f & mr) && (r.f ^= mr);
  }
  return t && (r = /** @type {Derived} */
  i, Oa(r) && Tb(r)), i.v;
}
function ZZ(i) {
  var e = So;
  So = /* @__PURE__ */ new Set();
  var t = So, n;
  try {
    if (Kn(i), e !== null)
      for (n of So)
        e.add(n);
  } finally {
    So = e;
  }
  return t;
}
function nl(i) {
  var e = ZZ(() => Kn(i));
  for (var t of e)
    if (t.f & gb)
      for (
        const n of
        /** @type {Derived} */
        t.deps || []
      )
        n.f & br || bc(n, n.v);
    else
      bc(t, t.v);
}
function Kn(i) {
  var e = os;
  try {
    return os = !0, i();
  } finally {
    os = e;
  }
}
const CZ = -7169;
function Yr(i, e) {
  i.f = i.f & CZ | e;
}
function Rt(i) {
  if (!(typeof i != "object" || !i || i instanceof EventTarget)) {
    if (zs in i)
      hp(i);
    else if (!Array.isArray(i))
      for (let e in i) {
        const t = i[e];
        typeof t == "object" && t && zs in t && hp(t);
      }
  }
}
function hp(i, e = /* @__PURE__ */ new Set()) {
  if (typeof i == "object" && i !== null && // We don't want to traverse DOM elements
  !(i instanceof EventTarget) && !e.has(i)) {
    e.add(i), i instanceof Date && i.getTime();
    for (let n in i)
      try {
        hp(i[n], e);
      } catch {
      }
    const t = $g(i);
    if (t !== Object.prototype && t !== Array.prototype && t !== Map.prototype && t !== Set.prototype && t !== Date.prototype) {
      const n = Sb(t);
      for (let r in n) {
        const s = n[r].get;
        if (s)
          try {
            s.call(i);
          } catch {
          }
      }
    }
  }
}
function Yb(i) {
  At === null && jt === null && JT(), jt !== null && jt.f & mr && At === null && KT(), _g && HT();
}
function RZ(i, e) {
  var t = e.last;
  t === null ? e.last = e.first = i : (t.next = i, i.prev = t, e.last = i);
}
function da(i, e, t, n = !0) {
  var r = (i & jc) !== 0, s = At, o = {
    ctx: ei,
    deps: null,
    nodes_start: null,
    nodes_end: null,
    f: i | Hs,
    first: null,
    fn: e,
    last: null,
    next: null,
    parent: r ? null : s,
    prev: null,
    teardown: null,
    transitions: null,
    wv: 0
  };
  if (t) {
    var a = Nl;
    try {
      xv(!0), Ih(o), o.f |= pb;
    } catch (h) {
      throw ko(o), h;
    } finally {
      xv(a);
    }
  } else e !== null && Nh(o);
  var c = t && o.deps === null && o.first === null && o.nodes_start === null && o.teardown === null && (o.f & (mb | Ju)) === 0;
  if (!c && !r && n && (s !== null && RZ(o, s), jt !== null && jt.f & br)) {
    var u = (
      /** @type {Derived} */
      jt
    );
    (u.effects ?? (u.effects = [])).push(o);
  }
  return o;
}
function Wg(i) {
  const e = da(Vh, null, !1);
  return Yr(e, sn), e.teardown = i, e;
}
function Op(i) {
  Yb();
  var e = At !== null && (At.f & Gs) !== 0 && ei !== null && !ei.m;
  if (e) {
    var t = (
      /** @type {ComponentContext} */
      ei
    );
    (t.e ?? (t.e = [])).push({
      fn: i,
      effect: At,
      reaction: jt
    });
  } else {
    var n = pa(i);
    return n;
  }
}
function AZ(i) {
  return Yb(), hl(i);
}
function XZ(i) {
  const e = da(jc, i, !0);
  return (t = {}) => new Promise((n) => {
    t.outro ? oh(e, () => {
      ko(e), n(void 0);
    }) : (ko(e), n(void 0));
  });
}
function pa(i) {
  return da(db, i, !1);
}
function Be(i, e) {
  var t = (
    /** @type {ComponentContextLegacy} */
    ei
  ), n = { effect: null, ran: !1 };
  t.l.r1.push(n), n.effect = hl(() => {
    i(), !n.ran && (n.ran = !0, M(t.l.r2, !0), Kn(e));
  });
}
function En() {
  var i = (
    /** @type {ComponentContextLegacy} */
    ei
  );
  hl(() => {
    if (g(i.l.r2)) {
      for (var e of i.l.r1) {
        var t = e.effect;
        t.f & sn && Yr(t, ul), Oa(t) && Ih(t), e.ran = !1;
      }
      i.l.r2.v = !1;
    }
  });
}
function hl(i) {
  return da(Vh, i, !0);
}
function we(i, e = [], t = $c) {
  const n = e.map(t);
  return Tg(() => i(...n.map(g)));
}
function Tg(i, e = 0) {
  return da(Vh | Uh | e, i, !0);
}
function wc(i, e = !0) {
  return da(Vh | Gs, i, !0, e);
}
function zb(i) {
  var e = i.teardown;
  if (e !== null) {
    const t = _g, n = jt;
    kv(!0), Os(null);
    try {
      e.call(null);
    } finally {
      kv(t), Os(n);
    }
  }
}
function jb(i, e = !1) {
  var t = i.first;
  for (i.first = i.last = null; t !== null; ) {
    var n = t.next;
    ko(t, e), t = n;
  }
}
function MZ(i) {
  for (var e = i.first; e !== null; ) {
    var t = e.next;
    e.f & Gs || ko(e), e = t;
  }
}
function ko(i, e = !0) {
  var t = !1;
  if ((e || i.f & VT) && i.nodes_start !== null) {
    for (var n = i.nodes_start, r = i.nodes_end; n !== null; ) {
      var s = n === r ? null : (
        /** @type {TemplateNode} */
        /* @__PURE__ */ Ks(n)
      );
      n.remove(), n = s;
    }
    t = !0;
  }
  jb(i, e && !t), sh(i, 0), Yr(i, Yh);
  var o = i.transitions;
  if (o !== null)
    for (const c of o)
      c.stop();
  zb(i);
  var a = i.parent;
  a !== null && a.first !== null && Bb(i), i.next = i.prev = i.teardown = i.ctx = i.deps = i.fn = i.nodes_start = i.nodes_end = null;
}
function Bb(i) {
  var e = i.parent, t = i.prev, n = i.next;
  t !== null && (t.next = n), n !== null && (n.prev = t), e !== null && (e.first === i && (e.first = n), e.last === i && (e.last = t));
}
function oh(i, e) {
  var t = [];
  Zg(i, t, !0), Ib(t, () => {
    ko(i), e && e();
  });
}
function Ib(i, e) {
  var t = i.length;
  if (t > 0) {
    var n = () => --t || e();
    for (var r of i)
      r.out(n);
  } else
    e();
}
function Zg(i, e, t) {
  if (!(i.f & Ys)) {
    if (i.f ^= Ys, i.transitions !== null)
      for (const o of i.transitions)
        (o.is_global || t) && e.push(o);
    for (var n = i.first; n !== null; ) {
      var r = n.next, s = (n.f & zh) !== 0 || (n.f & Gs) !== 0;
      Zg(n, e, s ? t : !1), n = r;
    }
  }
}
function lh(i) {
  Nb(i, !0);
}
function Nb(i, e) {
  if (i.f & Ys) {
    i.f ^= Ys, i.f & sn || (i.f ^= sn), Oa(i) && (Yr(i, Hs), Nh(i));
    for (var t = i.first; t !== null; ) {
      var n = t.next, r = (t.f & zh) !== 0 || (t.f & Gs) !== 0;
      Nb(t, r ? e : !1), t = n;
    }
    if (i.transitions !== null)
      for (const s of i.transitions)
        (s.is_global || e) && s.in();
  }
}
let _v = !1;
function Fb() {
  _v || (_v = !0, document.addEventListener(
    "reset",
    (i) => {
      Promise.resolve().then(() => {
        var e;
        if (!i.defaultPrevented)
          for (
            const t of
            /**@type {HTMLFormElement} */
            i.target.elements
          )
            (e = t.__on_r) == null || e.call(t);
      });
    },
    // In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)
    { capture: !0 }
  ));
}
function Cg(i) {
  var e = jt, t = At;
  Os(null), ds(null);
  try {
    return i();
  } finally {
    Os(e), ds(t);
  }
}
function Fh(i, e, t, n = t) {
  i.addEventListener(e, () => Cg(t));
  const r = i.__on_r;
  r ? i.__on_r = () => {
    r(), n(!0);
  } : i.__on_r = () => n(!0), Fb();
}
const EZ = /* @__PURE__ */ new Set(), Wv = /* @__PURE__ */ new Set();
function qZ(i, e, t, n = {}) {
  function r(s) {
    if (n.capture || sc.call(e, s), !s.cancelBubble)
      return Cg(() => t == null ? void 0 : t.call(this, s));
  }
  return i.startsWith("pointer") || i.startsWith("touch") || i === "wheel" ? jh(() => {
    e.addEventListener(i, r, n);
  }) : e.addEventListener(i, r, n), r;
}
function Pe(i, e, t, n, r) {
  var s = { capture: n, passive: r }, o = qZ(i, e, t, s);
  (e === document.body || e === window || e === document) && Wg(() => {
    e.removeEventListener(i, o, s);
  });
}
function sc(i) {
  var A;
  var e = this, t = (
    /** @type {Node} */
    e.ownerDocument
  ), n = i.type, r = ((A = i.composedPath) == null ? void 0 : A.call(i)) || [], s = (
    /** @type {null | Element} */
    r[0] || i.target
  ), o = 0, a = i.__root;
  if (a) {
    var c = r.indexOf(a);
    if (c !== -1 && (e === document || e === /** @type {any} */
    window)) {
      i.__root = e;
      return;
    }
    var u = r.indexOf(e);
    if (u === -1)
      return;
    c <= u && (o = c);
  }
  if (s = /** @type {Element} */
  r[o] || i.target, s !== e) {
    bg(i, "currentTarget", {
      configurable: !0,
      get() {
        return s || t;
      }
    });
    var h = jt, d = At;
    Os(null), ds(null);
    try {
      for (var p, m = []; s !== null; ) {
        var b = s.assignedSlot || s.parentNode || /** @type {any} */
        s.host || null;
        try {
          var y = s["__" + n];
          if (y !== void 0 && (!/** @type {any} */
          s.disabled || // DOM could've been updated already by the time this is reached, so we check this as well
          // -> the target could not have been disabled because it emits the event in the first place
          i.target === s))
            if (Bc(y)) {
              var [w, ...k] = y;
              w.apply(s, [i, ...k]);
            } else
              y.call(s, i);
        } catch (x) {
          p ? m.push(x) : p = x;
        }
        if (i.cancelBubble || b === e || b === null)
          break;
        s = b;
      }
      if (p) {
        for (let x of m)
          queueMicrotask(() => {
            throw x;
          });
        throw p;
      }
    } finally {
      i.__root = e, delete i.currentTarget, Os(h), ds(d);
    }
  }
}
function Gb(i) {
  var e = document.createElement("template");
  return e.innerHTML = i, e.content;
}
function Ur(i, e) {
  var t = (
    /** @type {Effect} */
    At
  );
  t.nodes_start === null && (t.nodes_start = i, t.nodes_end = e);
}
// @__NO_SIDE_EFFECTS__
function ne(i, e) {
  var t = (e & Pb) !== 0, n = (e & mZ) !== 0, r, s = !i.startsWith("<!>");
  return () => {
    if ($t)
      return Ur(Mt, null), Mt;
    r === void 0 && (r = Gb(s ? i : "<!>" + i), t || (r = /** @type {Node} */
    /* @__PURE__ */ Or(r)));
    var o = (
      /** @type {TemplateNode} */
      n || Cb ? document.importNode(r, !0) : r.cloneNode(!0)
    );
    if (t) {
      var a = (
        /** @type {TemplateNode} */
        /* @__PURE__ */ Or(o)
      ), c = (
        /** @type {TemplateNode} */
        o.lastChild
      );
      Ur(a, c);
    } else
      Ur(o, o);
    return o;
  };
}
// @__NO_SIDE_EFFECTS__
function Gh(i, e, t = "svg") {
  var n = !i.startsWith("<!>"), r = (e & Pb) !== 0, s = `<${t}>${n ? i : "<!>" + i}</${t}>`, o;
  return () => {
    if ($t)
      return Ur(Mt, null), Mt;
    if (!o) {
      var a = (
        /** @type {DocumentFragment} */
        Gb(s)
      ), c = (
        /** @type {Element} */
        /* @__PURE__ */ Or(a)
      );
      if (r)
        for (o = document.createDocumentFragment(); /* @__PURE__ */ Or(c); )
          o.appendChild(
            /** @type {Node} */
            /* @__PURE__ */ Or(c)
          );
      else
        o = /** @type {Element} */
        /* @__PURE__ */ Or(c);
    }
    var u = (
      /** @type {TemplateNode} */
      o.cloneNode(!0)
    );
    if (r) {
      var h = (
        /** @type {TemplateNode} */
        /* @__PURE__ */ Or(u)
      ), d = (
        /** @type {TemplateNode} */
        u.lastChild
      );
      Ur(h, d);
    } else
      Ur(u, u);
    return u;
  };
}
function zl(i = "") {
  if (!$t) {
    var e = xo(i + "");
    return Ur(e, e), e;
  }
  var t = Mt;
  return t.nodeType !== 3 && (t.before(t = xo()), vr(t)), Ur(t, t), t;
}
function Wt() {
  if ($t)
    return Ur(Mt, null), Mt;
  var i = document.createDocumentFragment(), e = document.createComment(""), t = xo();
  return i.append(e, t), Ur(e, t), i;
}
function z(i, e) {
  if ($t) {
    At.nodes_end = Mt, Fc();
    return;
  }
  i !== null && i.before(
    /** @type {Node} */
    e
  );
}
const LZ = ["touchstart", "touchmove"];
function DZ(i) {
  return LZ.includes(i);
}
let dp = !0;
function dt(i, e) {
  var t = e == null ? "" : typeof e == "object" ? e + "" : e;
  t !== (i.__t ?? (i.__t = i.nodeValue)) && (i.__t = t, i.nodeValue = t + "");
}
function Hb(i, e) {
  return Kb(i, e);
}
function VZ(i, e) {
  up(), e.intro = e.intro ?? !1;
  const t = e.target, n = $t, r = Mt;
  try {
    for (var s = (
      /** @type {TemplateNode} */
      /* @__PURE__ */ Or(t)
    ); s && (s.nodeType !== 8 || /** @type {Comment} */
    s.data !== xb); )
      s = /** @type {TemplateNode} */
      /* @__PURE__ */ Ks(s);
    if (!s)
      throw Oc;
    Us(!0), vr(
      /** @type {Comment} */
      s
    ), Fc();
    const o = Kb(i, { ...e, anchor: s });
    if (Mt === null || Mt.nodeType !== 8 || /** @type {Comment} */
    Mt.data !== xg)
      throw kg(), Oc;
    return Us(!1), /**  @type {Exports} */
    o;
  } catch (o) {
    if (o === Oc)
      return e.recover === !1 && tZ(), up(), Xb(t), Us(!1), Hb(i, e);
    throw o;
  } finally {
    Us(n), vr(r);
  }
}
const ql = /* @__PURE__ */ new Map();
function Kb(i, { target: e, anchor: t, props: n = {}, events: r, context: s, intro: o = !0 }) {
  up();
  var a = /* @__PURE__ */ new Set(), c = (d) => {
    for (var p = 0; p < d.length; p++) {
      var m = d[p];
      if (!a.has(m)) {
        a.add(m);
        var b = DZ(m);
        e.addEventListener(m, sc, { passive: b });
        var y = ql.get(m);
        y === void 0 ? (document.addEventListener(m, sc, { passive: b }), ql.set(m, 1)) : ql.set(m, y + 1);
      }
    }
  };
  c(Sg(EZ)), Wv.add(c);
  var u = void 0, h = XZ(() => {
    var d = t ?? e.appendChild(xo());
    return wc(() => {
      if (s) {
        zi({});
        var p = (
          /** @type {ComponentContext} */
          ei
        );
        p.c = s;
      }
      r && (n.$$events = r), $t && Ur(
        /** @type {TemplateNode} */
        d,
        null
      ), dp = o, u = i(d, n) || {}, dp = !0, $t && (At.nodes_end = Mt), s && ji();
    }), () => {
      var b;
      for (var p of a) {
        e.removeEventListener(p, sc);
        var m = (
          /** @type {number} */
          ql.get(p)
        );
        --m === 0 ? (document.removeEventListener(p, sc), ql.delete(p)) : ql.set(p, m);
      }
      Wv.delete(c), d !== t && ((b = d.parentNode) == null || b.removeChild(d));
    };
  });
  return pp.set(u, h), u;
}
let pp = /* @__PURE__ */ new WeakMap();
function UZ(i, e) {
  const t = pp.get(i);
  return t ? (pp.delete(i), t(e)) : Promise.resolve();
}
function Jb(i) {
  return function(...e) {
    var t = (
      /** @type {Event} */
      e[0]
    );
    return t.preventDefault(), i == null ? void 0 : i.apply(this, e);
  };
}
function on(i) {
  return new YZ(i);
}
var Ls, fr;
class YZ {
  /**
   * @param {ComponentConstructorOptions & {
   *  component: any;
   * }} options
   */
  constructor(e) {
    /** @type {any} */
    $d(this, Ls);
    /** @type {Record<string, any>} */
    $d(this, fr);
    var s;
    var t = /* @__PURE__ */ new Map(), n = (o, a) => {
      var c = /* @__PURE__ */ Nc(a);
      return t.set(o, c), c;
    };
    const r = new Proxy(
      { ...e.props || {}, $$events: {} },
      {
        get(o, a) {
          return g(t.get(a) ?? n(a, Reflect.get(o, a)));
        },
        has(o, a) {
          return a === vb ? !0 : (g(t.get(a) ?? n(a, Reflect.get(o, a))), Reflect.has(o, a));
        },
        set(o, a, c) {
          return M(t.get(a) ?? n(a, c), c), Reflect.set(o, a, c);
        }
      }
    );
    yd(this, fr, (e.hydrate ? VZ : Hb)(e.component, {
      target: e.target,
      anchor: e.anchor,
      props: r,
      context: e.context,
      intro: e.intro ?? !1,
      recover: e.recover
    })), (!((s = e == null ? void 0 : e.props) != null && s.$$host) || e.sync === !1) && pe(), yd(this, Ls, r.$$events);
    for (const o of Object.keys(Wn(this, fr)))
      o === "$set" || o === "$destroy" || o === "$on" || bg(this, o, {
        get() {
          return Wn(this, fr)[o];
        },
        /** @param {any} value */
        set(a) {
          Wn(this, fr)[o] = a;
        },
        enumerable: !0
      });
    Wn(this, fr).$set = /** @param {Record<string, any>} next */
    (o) => {
      Object.assign(r, o);
    }, Wn(this, fr).$destroy = () => {
      UZ(Wn(this, fr));
    };
  }
  /** @param {Record<string, any>} props */
  $set(e) {
    Wn(this, fr).$set(e);
  }
  /**
   * @param {string} event
   * @param {(...args: any[]) => any} callback
   * @returns {any}
   */
  $on(e, t) {
    Wn(this, Ls)[e] = Wn(this, Ls)[e] || [];
    const n = (...r) => t.call(this, ...r);
    return Wn(this, Ls)[e].push(n), () => {
      Wn(this, Ls)[e] = Wn(this, Ls)[e].filter(
        /** @param {any} fn */
        (r) => r !== n
      );
    };
  }
  $destroy() {
    Wn(this, fr).$destroy();
  }
}
Ls = new WeakMap(), fr = new WeakMap();
const zZ = "5";
typeof window < "u" && (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(zZ);
aZ();
function ge(i, e, t = !1) {
  $t && Fc();
  var n = i, r = null, s = null, o = Tn, a = t ? zh : 0, c = !1;
  const u = (d, p = !0) => {
    c = !0, h(p, d);
  }, h = (d, p) => {
    if (o === (o = d)) return;
    let m = !1;
    if ($t) {
      const b = (
        /** @type {Comment} */
        n.data === Pg
      );
      !!o === b && (n = cp(), vr(n), Us(!1), m = !0);
    }
    o ? (r ? lh(r) : p && (r = wc(() => p(n))), s && oh(s, () => {
      s = null;
    })) : (s ? lh(s) : p && (s = wc(() => p(n))), r && oh(r, () => {
      r = null;
    })), m && Us(!0);
  };
  Tg(() => {
    c = !1, e(u), c || h(null, null);
  }, a), $t && (n = Mt);
}
let Lu = null;
function Ri(i, e) {
  return e;
}
function jZ(i, e, t, n) {
  for (var r = [], s = e.length, o = 0; o < s; o++)
    Zg(e[o].e, r, !0);
  var a = s > 0 && r.length === 0 && t !== null;
  if (a) {
    var c = (
      /** @type {Element} */
      /** @type {Element} */
      t.parentNode
    );
    Xb(c), c.append(
      /** @type {Element} */
      t
    ), n.clear(), go(i, e[0].prev, e[s - 1].next);
  }
  Ib(r, () => {
    for (var u = 0; u < s; u++) {
      var h = e[u];
      a || (n.delete(h.k), go(i, h.prev, h.next)), ko(h.e, !a);
    }
  });
}
function _i(i, e, t, n, r, s = null) {
  var o = i, a = { flags: e, items: /* @__PURE__ */ new Map(), first: null }, c = (e & wb) !== 0;
  if (c) {
    var u = (
      /** @type {Element} */
      i
    );
    o = $t ? vr(
      /** @type {Comment | Text} */
      /* @__PURE__ */ Or(u)
    ) : u.appendChild(xo());
  }
  $t && Fc();
  var h = null, d = !1, p = /* @__PURE__ */ gi(() => {
    var m = t();
    return Bc(m) ? m : m == null ? [] : Sg(m);
  });
  Tg(() => {
    var m = g(p), b = m.length;
    if (d && b === 0)
      return;
    d = b === 0;
    let y = !1;
    if ($t) {
      var w = (
        /** @type {Comment} */
        o.data === Pg
      );
      w !== (b === 0) && (o = cp(), vr(o), Us(!1), y = !0);
    }
    if ($t) {
      for (var k = null, A, x = 0; x < b; x++) {
        if (Mt.nodeType === 8 && /** @type {Comment} */
        Mt.data === xg) {
          o = /** @type {Comment} */
          Mt, y = !0, Us(!1);
          break;
        }
        var _ = m[x], W = n(_, x);
        A = e$(
          Mt,
          a,
          k,
          null,
          _,
          W,
          x,
          r,
          e,
          t
        ), a.items.set(W, A), k = A;
      }
      b > 0 && vr(cp());
    }
    $t || BZ(m, a, o, r, e, n, t), s !== null && (b === 0 ? h ? lh(h) : h = wc(() => s(o)) : h !== null && oh(h, () => {
      h = null;
    })), y && Us(!0), g(p);
  }), $t && (o = Mt);
}
function BZ(i, e, t, n, r, s, o) {
  var se, be, ze, Ve;
  var a = (r & cZ) !== 0, c = (r & (Qg | wg)) !== 0, u = i.length, h = e.items, d = e.first, p = d, m, b = null, y, w = [], k = [], A, x, _, W;
  if (a)
    for (W = 0; W < u; W += 1)
      A = i[W], x = s(A, W), _ = h.get(x), _ !== void 0 && ((se = _.a) == null || se.measure(), (y ?? (y = /* @__PURE__ */ new Set())).add(_));
  for (W = 0; W < u; W += 1) {
    if (A = i[W], x = s(A, W), _ = h.get(x), _ === void 0) {
      var D = p ? (
        /** @type {TemplateNode} */
        p.e.nodes_start
      ) : t;
      b = e$(
        D,
        e,
        b,
        b === null ? e.first : b.next,
        A,
        x,
        W,
        n,
        r,
        o
      ), h.set(x, b), w = [], k = [], p = b.next;
      continue;
    }
    if (c && IZ(_, A, W, r), _.e.f & Ys && (lh(_.e), a && ((be = _.a) == null || be.unfix(), (y ?? (y = /* @__PURE__ */ new Set())).delete(_))), _ !== p) {
      if (m !== void 0 && m.has(_)) {
        if (w.length < k.length) {
          var q = k[0], V;
          b = q.prev;
          var U = w[0], N = w[w.length - 1];
          for (V = 0; V < w.length; V += 1)
            Tv(w[V], q, t);
          for (V = 0; V < k.length; V += 1)
            m.delete(k[V]);
          go(e, U.prev, N.next), go(e, b, U), go(e, N, q), p = q, b = N, W -= 1, w = [], k = [];
        } else
          m.delete(_), Tv(_, p, t), go(e, _.prev, _.next), go(e, _, b === null ? e.first : b.next), go(e, b, _), b = _;
        continue;
      }
      for (w = [], k = []; p !== null && p.k !== x; )
        p.e.f & Ys || (m ?? (m = /* @__PURE__ */ new Set())).add(p), k.push(p), p = p.next;
      if (p === null)
        continue;
      _ = p;
    }
    w.push(_), b = _, p = _.next;
  }
  if (p !== null || m !== void 0) {
    for (var j = m === void 0 ? [] : Sg(m); p !== null; )
      p.e.f & Ys || j.push(p), p = p.next;
    var I = j.length;
    if (I > 0) {
      var Y = r & wb && u === 0 ? t : null;
      if (a) {
        for (W = 0; W < I; W += 1)
          (ze = j[W].a) == null || ze.measure();
        for (W = 0; W < I; W += 1)
          (Ve = j[W].a) == null || Ve.fix();
      }
      jZ(e, j, Y, h);
    }
  }
  a && jh(() => {
    var Xe;
    if (y !== void 0)
      for (_ of y)
        (Xe = _.a) == null || Xe.apply();
  }), At.first = e.first && e.first.e, At.last = b && b.e;
}
function IZ(i, e, t, n) {
  n & Qg && bc(i.v, e), n & wg ? bc(
    /** @type {Value<number>} */
    i.i,
    t
  ) : i.i = t;
}
function e$(i, e, t, n, r, s, o, a, c, u) {
  var h = Lu, d = (c & Qg) !== 0, p = (c & fZ) === 0, m = d ? p ? /* @__PURE__ */ Nc(r) : ur(r) : r, b = c & wg ? ur(o) : o, y = {
    i: b,
    v: m,
    k: s,
    a: null,
    // @ts-expect-error
    e: null,
    prev: t,
    next: n
  };
  Lu = y;
  try {
    return y.e = wc(() => a(i, m, b, u), $t), y.e.prev = t && t.e, y.e.next = n && n.e, t === null ? e.first = y : (t.next = y, t.e.next = y.e), n !== null && (n.prev = y, n.e.prev = y.e), y;
  } finally {
    Lu = h;
  }
}
function Tv(i, e, t) {
  for (var n = i.next ? (
    /** @type {TemplateNode} */
    i.next.e.nodes_start
  ) : t, r = e ? (
    /** @type {TemplateNode} */
    e.e.nodes_start
  ) : t, s = (
    /** @type {TemplateNode} */
    i.e.nodes_start
  ); s !== n; ) {
    var o = (
      /** @type {TemplateNode} */
      /* @__PURE__ */ Ks(s)
    );
    r.before(s), s = o;
  }
}
function go(i, e, t) {
  e === null ? i.first = t : (e.next = t, e.e.next = t && t.e), t !== null && (t.prev = e, t.e.prev = e && e.e);
}
function Ji(i, e, t, n, r) {
  var a;
  $t && Fc();
  var s = (a = e.$$slots) == null ? void 0 : a[t], o = !1;
  s === !0 && (s = e[t === "default" ? "children" : t], o = !0), s === void 0 ? r !== null && r(i) : s(i, o ? () => n : n);
}
function en(i) {
  if ($t) {
    var e = !1, t = () => {
      if (!e) {
        if (e = !0, i.hasAttribute("value")) {
          var n = i.value;
          ct(i, "value", null), i.value = n;
        }
        if (i.hasAttribute("checked")) {
          var r = i.checked;
          ct(i, "checked", null), i.checked = r;
        }
      }
    };
    i.__on_r = t, FT(t), Fb();
  }
}
function NZ(i, e) {
  var t = i.__attributes ?? (i.__attributes = {});
  t.value === (t.value = // treat null and undefined the same for the initial value
  e ?? void 0) || // @ts-expect-error
  // `progress` elements always need their value set when it's `0`
  i.value === e && (e !== 0 || i.nodeName !== "PROGRESS") || (i.value = e ?? "");
}
function ct(i, e, t, n) {
  var r = i.__attributes ?? (i.__attributes = {});
  $t && (r[e] = i.getAttribute(e), e === "src" || e === "srcset" || e === "href" && i.nodeName === "LINK") || r[e] !== (r[e] = t) && (e === "style" && "__styles" in i && (i.__styles = {}), e === "loading" && (i[UT] = t), t == null ? i.removeAttribute(e) : typeof t != "string" && FZ(i).includes(e) ? i[e] = t : i.setAttribute(e, t));
}
var Zv = /* @__PURE__ */ new Map();
function FZ(i) {
  var e = Zv.get(i.nodeName);
  if (e) return e;
  Zv.set(i.nodeName, e = []);
  for (var t, n = i, r = Element.prototype; r !== n; ) {
    t = Sb(n);
    for (var s in t)
      t[s].set && e.push(s);
    n = $g(n);
  }
  return e;
}
function GZ(i, e, t) {
  var n = i.__className, r = t$(e);
  $t && i.getAttribute("class") === r ? i.__className = r : (n !== r || $t && i.getAttribute("class") !== r) && (r === "" ? i.removeAttribute("class") : i.setAttribute("class", r), i.__className = r);
}
function Cv(i, e, t) {
  var n = i.__className, r = t$(e);
  $t && i.className === r ? i.__className = r : (n !== r || $t && i.className !== r) && (e == null ? i.removeAttribute("class") : i.className = r, i.__className = r);
}
function t$(i, e) {
  return (i ?? "") + "";
}
function Ge(i, e, t) {
  if (t) {
    if (i.classList.contains(e)) return;
    i.classList.add(e);
  } else {
    if (!i.classList.contains(e)) return;
    i.classList.remove(e);
  }
}
function HZ(i, e, t, n) {
  var r = i.__styles ?? (i.__styles = {});
  r[e] !== t && (r[e] = t, t == null ? i.style.removeProperty(e) : i.style.setProperty(e, t, ""));
}
const KZ = () => performance.now(), Ds = {
  // don't access requestAnimationFrame eagerly outside method
  // this allows basic testing of user code without JSDOM
  // bunder will eval and remove ternary when the user's app is built
  tick: (
    /** @param {any} _ */
    (i) => requestAnimationFrame(i)
  ),
  now: () => KZ(),
  tasks: /* @__PURE__ */ new Set()
};
function i$() {
  const i = Ds.now();
  Ds.tasks.forEach((e) => {
    e.c(i) || (Ds.tasks.delete(e), e.f());
  }), Ds.tasks.size !== 0 && Ds.tick(i$);
}
function JZ(i) {
  let e;
  return Ds.tasks.size === 0 && Ds.tick(i$), {
    promise: new Promise((t) => {
      Ds.tasks.add(e = { c: i, f: t });
    }),
    abort() {
      Ds.tasks.delete(e);
    }
  };
}
function au(i, e) {
  Cg(() => {
    i.dispatchEvent(new CustomEvent(e));
  });
}
function e5(i) {
  if (i === "float") return "cssFloat";
  if (i === "offset") return "cssOffset";
  if (i.startsWith("--")) return i;
  const e = i.split("-");
  return e.length === 1 ? e[0] : e[0] + e.slice(1).map(
    /** @param {any} word */
    (t) => t[0].toUpperCase() + t.slice(1)
  ).join("");
}
function Rv(i) {
  const e = {}, t = i.split(";");
  for (const n of t) {
    const [r, s] = n.split(":");
    if (!r || s === void 0) break;
    const o = e5(r.trim());
    e[o] = s.trim();
  }
  return e;
}
const t5 = (i) => i;
function i5(i, e, t) {
  var n = (
    /** @type {EachItem} */
    Lu
  ), r, s, o, a = null;
  n.a ?? (n.a = {
    element: i,
    measure() {
      r = this.element.getBoundingClientRect();
    },
    apply() {
      if (o == null || o.abort(), s = this.element.getBoundingClientRect(), r.left !== s.left || r.right !== s.right || r.top !== s.top || r.bottom !== s.bottom) {
        const c = e()(this.element, { from: r, to: s }, t == null ? void 0 : t());
        o = ah(this.element, c, void 0, 1, () => {
          o == null || o.abort(), o = void 0;
        });
      }
    },
    fix() {
      if (!i.getAnimations().length) {
        var { position: c, width: u, height: h } = getComputedStyle(i);
        if (c !== "absolute" && c !== "fixed") {
          var d = (
            /** @type {HTMLElement | SVGElement} */
            i.style
          );
          a = {
            position: d.position,
            width: d.width,
            height: d.height,
            transform: d.transform
          }, d.position = "absolute", d.width = u, d.height = h;
          var p = i.getBoundingClientRect();
          if (r.left !== p.left || r.top !== p.top) {
            var m = `translate(${r.left - p.left}px, ${r.top - p.top}px)`;
            d.transform = d.transform ? `${d.transform} ${m}` : m;
          }
        }
      }
    },
    unfix() {
      if (a) {
        var c = (
          /** @type {HTMLElement | SVGElement} */
          i.style
        );
        c.position = a.position, c.width = a.width, c.height = a.height, c.transform = a.transform;
      }
    }
  }), n.a.element = i;
}
function gp(i, e, t, n) {
  var r = (i & gZ) !== 0, s = "both", o, a = e.inert, c = e.style.overflow, u, h;
  function d() {
    var w = jt, k = At;
    Os(null), ds(null);
    try {
      return o ?? (o = t()(e, (n == null ? void 0 : n()) ?? /** @type {P} */
      {}, {
        direction: s
      }));
    } finally {
      Os(w), ds(k);
    }
  }
  var p = {
    is_global: r,
    in() {
      e.inert = a, au(e, "introstart"), u = ah(e, d(), h, 1, () => {
        au(e, "introend"), u == null || u.abort(), u = o = void 0, e.style.overflow = c;
      });
    },
    out(w) {
      e.inert = !0, au(e, "outrostart"), h = ah(e, d(), u, 0, () => {
        au(e, "outroend"), w == null || w();
      });
    },
    stop: () => {
      u == null || u.abort(), h == null || h.abort();
    }
  }, m = (
    /** @type {Effect} */
    At
  );
  if ((m.transitions ?? (m.transitions = [])).push(p), dp) {
    var b = r;
    if (!b) {
      for (var y = (
        /** @type {Effect | null} */
        m.parent
      ); y && y.f & zh; )
        for (; (y = y.parent) && !(y.f & Uh); )
          ;
      b = !y || (y.f & pb) !== 0;
    }
    b && pa(() => {
      Kn(() => p.in());
    });
  }
}
function ah(i, e, t, n, r) {
  var s = n === 1;
  if (BT(e)) {
    var o, a = !1;
    return jh(() => {
      if (!a) {
        var w = e({ direction: s ? "in" : "out" });
        o = ah(i, w, t, n, r);
      }
    }), {
      abort: () => {
        a = !0, o == null || o.abort();
      },
      deactivate: () => o.deactivate(),
      reset: () => o.reset(),
      t: () => o.t()
    };
  }
  if (t == null || t.deactivate(), !(e != null && e.duration))
    return r(), {
      abort: Lr,
      deactivate: Lr,
      reset: Lr,
      t: () => n
    };
  const { delay: c = 0, css: u, tick: h, easing: d = t5 } = e;
  var p = [];
  if (s && t === void 0 && (h && h(0, 1), u)) {
    var m = Rv(u(0, 1));
    p.push(m, m);
  }
  var b = () => 1 - n, y = i.animate(p, { duration: c });
  return y.onfinish = () => {
    var w = (t == null ? void 0 : t.t()) ?? 1 - n;
    t == null || t.abort();
    var k = n - w, A = (
      /** @type {number} */
      e.duration * Math.abs(k)
    ), x = [];
    if (A > 0) {
      var _ = !1;
      if (u)
        for (var W = Math.ceil(A / 16.666666666666668), D = 0; D <= W; D += 1) {
          var q = w + k * d(D / W), V = Rv(u(q, 1 - q));
          x.push(V), _ || (_ = V.overflow === "hidden");
        }
      _ && (i.style.overflow = "hidden"), b = () => {
        var U = (
          /** @type {number} */
          /** @type {globalThis.Animation} */
          y.currentTime
        );
        return w + k * d(U / A);
      }, h && JZ(() => {
        if (y.playState !== "running") return !1;
        var U = b();
        return h(U, 1 - U), !0;
      });
    }
    y = i.animate(x, { duration: A, fill: "forwards" }), y.onfinish = () => {
      b = () => n, h == null || h(n, 1 - n), r();
    };
  }, {
    abort: () => {
      y && (y.cancel(), y.effect = null, y.onfinish = Lr);
    },
    deactivate: () => {
      r = Lr;
    },
    reset: () => {
      n === 0 && (h == null || h(1, 0));
    },
    t: () => b()
  };
}
function sl(i, e, t = e) {
  var n = Ic();
  Fh(i, "input", (r) => {
    var s = r ? i.defaultValue : i.value;
    if (s = Qd(i) ? wd(s) : s, t(s), n && s !== (s = e())) {
      var o = i.selectionStart, a = i.selectionEnd;
      i.value = s ?? "", a !== null && (i.selectionStart = o, i.selectionEnd = Math.min(a, i.value.length));
    }
  }), // If we are hydrating and the value has since changed,
  // then use the updated value from the input instead.
  ($t && i.defaultValue !== i.value || // If defaultValue is set, then value == defaultValue
  // TODO Svelte 6: remove input.value check and set to empty string?
  Kn(e) == null && i.value) && t(Qd(i) ? wd(i.value) : i.value), hl(() => {
    var r = e();
    Qd(i) && r === wd(i.value) || i.type === "date" && !r && !i.value || r !== i.value && (i.value = r ?? "");
  });
}
function ho(i, e, t = e) {
  Fh(i, "change", (n) => {
    var r = n ? i.defaultChecked : i.checked;
    t(r);
  }), // If we are hydrating and the value has since changed,
  // then use the update value from the input instead.
  ($t && i.defaultChecked !== i.checked || // If defaultChecked is set, then checked == defaultChecked
  Kn(e) == null) && t(i.checked), hl(() => {
    var n = e();
    i.checked = !!n;
  });
}
function Qd(i) {
  var e = i.type;
  return e === "number" || e === "range";
}
function wd(i) {
  return i === "" ? null : +i;
}
function n5(i, e, t = e) {
  Fh(i, "change", () => {
    t(i.files);
  }), // If we are hydrating and the value has since changed,
  // then use the updated value from the input instead.
  $t && i.files && t(i.files), hl(() => {
    i.files = e();
  });
}
function bi(i, e, t) {
  var n = il(i, e);
  n && n.set && (i[e] = t, Wg(() => {
    i[e] = null;
  }));
}
function n$(i, e, t) {
  if (i.multiple)
    return s5(i, e);
  for (var n of i.options) {
    var r = dc(n);
    if ($Z(r, e)) {
      n.selected = !0;
      return;
    }
  }
  (!t || e !== void 0) && (i.selectedIndex = -1);
}
function r5(i, e) {
  pa(() => {
    var t = new MutationObserver(() => {
      var n = i.__value;
      n$(i, n);
    });
    return t.observe(i, {
      // Listen to option element changes
      childList: !0,
      subtree: !0,
      // because of <optgroup>
      // Listen to option element value attribute changes
      // (doesn't get notified of select value changes,
      // because that property is not reflected as an attribute)
      attributes: !0,
      attributeFilter: ["value"]
    }), () => {
      t.disconnect();
    };
  });
}
function ch(i, e, t = e) {
  var n = !0;
  Fh(i, "change", (r) => {
    var s = r ? "[selected]" : ":checked", o;
    if (i.multiple)
      o = [].map.call(i.querySelectorAll(s), dc);
    else {
      var a = i.querySelector(s) ?? // will fall back to first non-disabled option if no option is selected
      i.querySelector("option:not([disabled])");
      o = a && dc(a);
    }
    t(o);
  }), pa(() => {
    var r = e();
    if (n$(i, r, n), n && r === void 0) {
      var s = i.querySelector(":checked");
      s !== null && (r = dc(s), t(r));
    }
    i.__value = r, n = !1;
  }), r5(i);
}
function s5(i, e) {
  for (var t of i.options)
    t.selected = ~e.indexOf(dc(t));
}
function dc(i) {
  return "__value" in i ? i.__value : i.value;
}
function Av(i, e) {
  return i === e || (i == null ? void 0 : i[zs]) === e;
}
function Xi(i = {}, e, t, n) {
  return pa(() => {
    var r, s;
    return hl(() => {
      r = s, s = (n == null ? void 0 : n()) || [], Kn(() => {
        i !== t(...s) && (e(i, ...s), r && Av(t(...r), i) && e(null, ...r));
      });
    }), () => {
      jh(() => {
        s && Av(t(...s), i) && e(null, ...s);
      });
    };
  }), i;
}
function ln(i = !1) {
  const e = (
    /** @type {ComponentContextLegacy} */
    ei
  ), t = e.l.u;
  if (!t) return;
  let n = () => Rt(e.s);
  if (i) {
    let r = 0, s = (
      /** @type {Record<string, any>} */
      {}
    );
    const o = /* @__PURE__ */ $c(() => {
      let a = !1;
      const c = e.s;
      for (const u in c)
        c[u] !== s[u] && (s[u] = c[u], a = !0);
      return a && r++, r;
    });
    n = () => g(o);
  }
  t.b.length && AZ(() => {
    Xv(e, n), th(t.b);
  }), Op(() => {
    const r = Kn(() => t.m.map(IT));
    return () => {
      for (const s of r)
        typeof s == "function" && s();
    };
  }), t.a.length && Op(() => {
    Xv(e, n), th(t.a);
  });
}
function Xv(i, e) {
  if (i.l.s)
    for (const t of i.l.s) g(t);
  e();
}
function Mv(i, e) {
  var s;
  var t = (
    /** @type {Record<string, Function[] | Function>} */
    (s = i.$$events) == null ? void 0 : s[e.type]
  ), n = Bc(t) ? t.slice() : t == null ? [] : [t];
  for (var r of n)
    r.call(this, e);
}
function an(i, e, t) {
  var n;
  i.$$events || (i.$$events = {}), (n = i.$$events)[e] || (n[e] = []), i.$$events[e].push(t);
}
function cn(i) {
  for (var e in i)
    e in this && (this[e] = i[e]);
}
function Rg(i) {
  ei === null && kb(), ha && ei.l !== null ? l5(ei).m.push(i) : Op(() => {
    const e = Kn(i);
    if (typeof e == "function") return (
      /** @type {() => void} */
      e
    );
  });
}
function o5(i, e, { bubbles: t = !1, cancelable: n = !1 } = {}) {
  return new CustomEvent(i, { detail: e, bubbles: t, cancelable: n });
}
function Jn() {
  const i = ei;
  return i === null && kb(), (e, t, n) => {
    var s;
    const r = (
      /** @type {Record<string, Function | Function[]>} */
      (s = i.s.$$events) == null ? void 0 : s[
        /** @type {any} */
        e
      ]
    );
    if (r) {
      const o = Bc(r) ? r.slice() : [r], a = o5(
        /** @type {string} */
        e,
        t,
        n
      );
      for (const c of o)
        c.call(i.x, a);
      return !a.defaultPrevented;
    }
    return !0;
  };
}
function l5(i) {
  var e = (
    /** @type {ComponentContextLegacy} */
    i.l
  );
  return e.u ?? (e.u = { a: [], b: [], m: [] });
}
function r$(i, e, t) {
  if (i == null)
    return e(void 0), Lr;
  const n = Kn(
    () => i.subscribe(
      e,
      // @ts-expect-error
      t
    )
  );
  return n.unsubscribe ? () => n.unsubscribe() : n;
}
const Ll = [];
function a5(i, e = Lr) {
  let t = null;
  const n = /* @__PURE__ */ new Set();
  function r(a) {
    if (Qb(i, a) && (i = a, t)) {
      const c = !Ll.length;
      for (const u of n)
        u[1](), Ll.push(u, i);
      if (c) {
        for (let u = 0; u < Ll.length; u += 2)
          Ll[u][0](Ll[u + 1]);
        Ll.length = 0;
      }
    }
  }
  function s(a) {
    r(a(
      /** @type {T} */
      i
    ));
  }
  function o(a, c = Lr) {
    const u = [a, c];
    return n.add(u), n.size === 1 && (t = e(r, s) || Lr), a(
      /** @type {T} */
      i
    ), () => {
      n.delete(u), n.size === 0 && t && (t(), t = null);
    };
  }
  return { set: r, update: s, subscribe: o };
}
function c5(i) {
  let e;
  return r$(i, (t) => e = t)(), e;
}
let cu = !1, mp = Symbol();
function Ev(i, e, t) {
  const n = t[e] ?? (t[e] = {
    store: null,
    source: /* @__PURE__ */ Nc(void 0),
    unsubscribe: Lr
  });
  if (n.store !== i && !(mp in t))
    if (n.unsubscribe(), n.store = i ?? null, i == null)
      n.source.v = void 0, n.unsubscribe = Lr;
    else {
      var r = !0;
      n.unsubscribe = r$(i, (s) => {
        r ? n.source.v = s : M(n.source, s);
      }), r = !1;
    }
  return i && mp in t ? c5(i) : g(n.source);
}
function f5() {
  const i = {};
  function e() {
    Wg(() => {
      for (var t in i)
        i[t].unsubscribe();
      bg(i, mp, {
        enumerable: !1,
        value: !0
      });
    });
  }
  return [i, e];
}
function u5(i) {
  var e = cu;
  try {
    return cu = !1, [i(), cu];
  } finally {
    cu = e;
  }
}
function ve(i, e, t, n) {
  var q;
  var r = (t & uZ) !== 0, s = !ha || (t & hZ) !== 0, o = (t & dZ) !== 0, a = (t & pZ) !== 0, c = !1, u;
  o ? [u, c] = u5(() => (
    /** @type {V} */
    i[e]
  )) : u = /** @type {V} */
  i[e];
  var h = zs in i || vb in i, d = o && (((q = il(i, e)) == null ? void 0 : q.set) ?? (h && e in i && ((V) => i[e] = V))) || void 0, p = (
    /** @type {V} */
    n
  ), m = !0, b = !1, y = () => (b = !0, m && (m = !1, a ? p = Kn(
    /** @type {() => V} */
    n
  ) : p = /** @type {V} */
  n), p);
  u === void 0 && n !== void 0 && (d && s && iZ(), u = y(), d && d(u));
  var w;
  if (s)
    w = () => {
      var V = (
        /** @type {V} */
        i[e]
      );
      return V === void 0 ? y() : (m = !0, b = !1, V);
    };
  else {
    var k = (r ? $c : gi)(
      () => (
        /** @type {V} */
        i[e]
      )
    );
    k.f |= gb, w = () => {
      var V = g(k);
      return V !== void 0 && (p = /** @type {V} */
      void 0), V === void 0 ? p : V;
    };
  }
  if (!(t & OZ))
    return w;
  if (d) {
    var A = i.$$legacy;
    return function(V, U) {
      return arguments.length > 0 ? ((!s || !U || A || c) && d(U ? w() : V), V) : w();
    };
  }
  var x = !1, _ = !1, W = /* @__PURE__ */ Nc(u), D = /* @__PURE__ */ $c(() => {
    var V = w(), U = g(W);
    return x ? (x = !1, _ = !0, U) : (_ = !1, W.v = V);
  });
  return r || (D.equals = yg), function(V, U) {
    if (So !== null && (x = _, w(), g(W)), arguments.length > 0) {
      const N = U ? g(D) : s && o ? Vl(V) : V;
      return D.equals(N) || (x = !0, M(W, N), b && p !== void 0 && (p = N), Kn(() => g(D))), V;
    }
    return g(D);
  };
}
let vp = [], s$ = [];
(() => {
  let i = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);
  for (let e = 0, t = 0; e < i.length; e++)
    (e % 2 ? s$ : vp).push(t = t + i[e]);
})();
function h5(i) {
  if (i < 768) return !1;
  for (let e = 0, t = vp.length; ; ) {
    let n = e + t >> 1;
    if (i < vp[n]) t = n;
    else if (i >= s$[n]) e = n + 1;
    else return !0;
    if (e == t) return !1;
  }
}
function qv(i) {
  return i >= 127462 && i <= 127487;
}
const Lv = 8205;
function O5(i, e, t = !0, n = !0) {
  return (t ? o$ : d5)(i, e, n);
}
function o$(i, e, t) {
  if (e == i.length) return e;
  e && l$(i.charCodeAt(e)) && a$(i.charCodeAt(e - 1)) && e--;
  let n = Pd(i, e);
  for (e += Dv(n); e < i.length; ) {
    let r = Pd(i, e);
    if (n == Lv || r == Lv || t && h5(r))
      e += Dv(r), n = r;
    else if (qv(r)) {
      let s = 0, o = e - 2;
      for (; o >= 0 && qv(Pd(i, o)); )
        s++, o -= 2;
      if (s % 2 == 0) break;
      e += 2;
    } else
      break;
  }
  return e;
}
function d5(i, e, t) {
  for (; e > 0; ) {
    let n = o$(i, e - 2, t);
    if (n < e) return n;
    e--;
  }
  return 0;
}
function Pd(i, e) {
  let t = i.charCodeAt(e);
  if (!a$(t) || e + 1 == i.length) return t;
  let n = i.charCodeAt(e + 1);
  return l$(n) ? (t - 55296 << 10) + (n - 56320) + 65536 : t;
}
function l$(i) {
  return i >= 56320 && i < 57344;
}
function a$(i) {
  return i >= 55296 && i < 56320;
}
function Dv(i) {
  return i < 65536 ? 1 : 2;
}
let Tt = class c$ {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, t, n) {
    [e, t] = na(this, e, t);
    let r = [];
    return this.decompose(
      0,
      e,
      r,
      2
      /* Open.To */
    ), n.length && n.decompose(
      0,
      n.length,
      r,
      3
      /* Open.To */
    ), this.decompose(
      t,
      this.length,
      r,
      1
      /* Open.From */
    ), ns.from(r, this.length - (t - e) + n.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, t = this.length) {
    [e, t] = na(this, e, t);
    let n = [];
    return this.decompose(e, t, n, 0), ns.from(n, t - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let t = this.scanIdentical(e, 1), n = this.length - this.scanIdentical(e, -1), r = new pc(this), s = new pc(e);
    for (let o = t, a = t; ; ) {
      if (r.next(o), s.next(o), o = 0, r.lineBreak != s.lineBreak || r.done != s.done || r.value != s.value)
        return !1;
      if (a += r.value.length, r.done || a >= n)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new pc(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, t = this.length) {
    return new f$(this, e, t);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, t) {
    let n;
    if (e == null)
      n = this.iter();
    else {
      t == null && (t = this.lines + 1);
      let r = this.line(e).from;
      n = this.iterRange(r, Math.max(r, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
    }
    return new u$(n);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? c$.empty : e.length <= 32 ? new pi(e) : ns.from(pi.split(e, []));
  }
};
class pi extends Tt {
  constructor(e, t = p5(e)) {
    super(), this.text = e, this.length = t;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, t, n, r) {
    for (let s = 0; ; s++) {
      let o = this.text[s], a = r + o.length;
      if ((t ? n : a) >= e)
        return new g5(r, a, n, o);
      r = a + 1, n++;
    }
  }
  decompose(e, t, n, r) {
    let s = e <= 0 && t >= this.length ? this : new pi(Vv(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
    if (r & 1) {
      let o = n.pop(), a = Du(s.text, o.text.slice(), 0, s.length);
      if (a.length <= 32)
        n.push(new pi(a, o.length + s.length));
      else {
        let c = a.length >> 1;
        n.push(new pi(a.slice(0, c)), new pi(a.slice(c)));
      }
    } else
      n.push(s);
  }
  replace(e, t, n) {
    if (!(n instanceof pi))
      return super.replace(e, t, n);
    [e, t] = na(this, e, t);
    let r = Du(this.text, Du(n.text, Vv(this.text, 0, e)), t), s = this.length + n.length - (t - e);
    return r.length <= 32 ? new pi(r, s) : ns.from(pi.split(r, []), s);
  }
  sliceString(e, t = this.length, n = `
`) {
    [e, t] = na(this, e, t);
    let r = "";
    for (let s = 0, o = 0; s <= t && o < this.text.length; o++) {
      let a = this.text[o], c = s + a.length;
      s > e && o && (r += n), e < c && t > s && (r += a.slice(Math.max(0, e - s), t - s)), s = c + 1;
    }
    return r;
  }
  flatten(e) {
    for (let t of this.text)
      e.push(t);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, t) {
    let n = [], r = -1;
    for (let s of e)
      n.push(s), r += s.length + 1, n.length == 32 && (t.push(new pi(n, r)), n = [], r = -1);
    return r > -1 && t.push(new pi(n, r)), t;
  }
}
class ns extends Tt {
  constructor(e, t) {
    super(), this.children = e, this.length = t, this.lines = 0;
    for (let n of e)
      this.lines += n.lines;
  }
  lineInner(e, t, n, r) {
    for (let s = 0; ; s++) {
      let o = this.children[s], a = r + o.length, c = n + o.lines - 1;
      if ((t ? c : a) >= e)
        return o.lineInner(e, t, n, r);
      r = a + 1, n = c + 1;
    }
  }
  decompose(e, t, n, r) {
    for (let s = 0, o = 0; o <= t && s < this.children.length; s++) {
      let a = this.children[s], c = o + a.length;
      if (e <= c && t >= o) {
        let u = r & ((o <= e ? 1 : 0) | (c >= t ? 2 : 0));
        o >= e && c <= t && !u ? n.push(a) : a.decompose(e - o, t - o, n, u);
      }
      o = c + 1;
    }
  }
  replace(e, t, n) {
    if ([e, t] = na(this, e, t), n.lines < this.lines)
      for (let r = 0, s = 0; r < this.children.length; r++) {
        let o = this.children[r], a = s + o.length;
        if (e >= s && t <= a) {
          let c = o.replace(e - s, t - s, n), u = this.lines - o.lines + c.lines;
          if (c.lines < u >> 4 && c.lines > u >> 6) {
            let h = this.children.slice();
            return h[r] = c, new ns(h, this.length - (t - e) + n.length);
          }
          return super.replace(s, a, c);
        }
        s = a + 1;
      }
    return super.replace(e, t, n);
  }
  sliceString(e, t = this.length, n = `
`) {
    [e, t] = na(this, e, t);
    let r = "";
    for (let s = 0, o = 0; s < this.children.length && o <= t; s++) {
      let a = this.children[s], c = o + a.length;
      o > e && s && (r += n), e < c && t > o && (r += a.sliceString(e - o, t - o, n)), o = c + 1;
    }
    return r;
  }
  flatten(e) {
    for (let t of this.children)
      t.flatten(e);
  }
  scanIdentical(e, t) {
    if (!(e instanceof ns))
      return 0;
    let n = 0, [r, s, o, a] = t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; r += t, s += t) {
      if (r == o || s == a)
        return n;
      let c = this.children[r], u = e.children[s];
      if (c != u)
        return n + c.scanIdentical(u, t);
      n += c.length + 1;
    }
  }
  static from(e, t = e.reduce((n, r) => n + r.length + 1, -1)) {
    let n = 0;
    for (let m of e)
      n += m.lines;
    if (n < 32) {
      let m = [];
      for (let b of e)
        b.flatten(m);
      return new pi(m, t);
    }
    let r = Math.max(
      32,
      n >> 5
      /* Tree.BranchShift */
    ), s = r << 1, o = r >> 1, a = [], c = 0, u = -1, h = [];
    function d(m) {
      let b;
      if (m.lines > s && m instanceof ns)
        for (let y of m.children)
          d(y);
      else m.lines > o && (c > o || !c) ? (p(), a.push(m)) : m instanceof pi && c && (b = h[h.length - 1]) instanceof pi && m.lines + b.lines <= 32 ? (c += m.lines, u += m.length + 1, h[h.length - 1] = new pi(b.text.concat(m.text), b.length + 1 + m.length)) : (c + m.lines > r && p(), c += m.lines, u += m.length + 1, h.push(m));
    }
    function p() {
      c != 0 && (a.push(h.length == 1 ? h[0] : ns.from(h, u)), u = -1, c = h.length = 0);
    }
    for (let m of e)
      d(m);
    return p(), a.length == 1 ? a[0] : new ns(a, t);
  }
}
Tt.empty = /* @__PURE__ */ new pi([""], 0);
function p5(i) {
  let e = -1;
  for (let t of i)
    e += t.length + 1;
  return e;
}
function Du(i, e, t = 0, n = 1e9) {
  for (let r = 0, s = 0, o = !0; s < i.length && r <= n; s++) {
    let a = i[s], c = r + a.length;
    c >= t && (c > n && (a = a.slice(0, n - r)), r < t && (a = a.slice(t - r)), o ? (e[e.length - 1] += a, o = !1) : e.push(a)), r = c + 1;
  }
  return e;
}
function Vv(i, e, t) {
  return Du(i, [""], e, t);
}
class pc {
  constructor(e, t = 1) {
    this.dir = t, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [t > 0 ? 1 : (e instanceof pi ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, t) {
    for (this.done = this.lineBreak = !1; ; ) {
      let n = this.nodes.length - 1, r = this.nodes[n], s = this.offsets[n], o = s >> 1, a = r instanceof pi ? r.text.length : r.children.length;
      if (o == (t > 0 ? a : 0)) {
        if (n == 0)
          return this.done = !0, this.value = "", this;
        t > 0 && this.offsets[n - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((s & 1) == (t > 0 ? 0 : 1)) {
        if (this.offsets[n] += t, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (r instanceof pi) {
        let c = r.text[o + (t < 0 ? -1 : 0)];
        if (this.offsets[n] += t, c.length > Math.max(0, e))
          return this.value = e == 0 ? c : t > 0 ? c.slice(e) : c.slice(0, c.length - e), this;
        e -= c.length;
      } else {
        let c = r.children[o + (t < 0 ? -1 : 0)];
        e > c.length ? (e -= c.length, this.offsets[n] += t) : (t < 0 && this.offsets[n]--, this.nodes.push(c), this.offsets.push(t > 0 ? 1 : (c instanceof pi ? c.text.length : c.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class f$ {
  constructor(e, t, n) {
    this.value = "", this.done = !1, this.cursor = new pc(e, t > n ? -1 : 1), this.pos = t > n ? e.length : 0, this.from = Math.min(t, n), this.to = Math.max(t, n);
  }
  nextInner(e, t) {
    if (t < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
    let n = t < 0 ? this.pos - this.from : this.to - this.pos;
    e > n && (e = n), n -= e;
    let { value: r } = this.cursor.next(e);
    return this.pos += (r.length + e) * t, this.value = r.length <= n ? r : t < 0 ? r.slice(r.length - n) : r.slice(0, n), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class u$ {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: t, lineBreak: n, value: r } = this.inner.next(e);
    return t && this.afterBreak ? (this.value = "", this.afterBreak = !1) : t ? (this.done = !0, this.value = "") : n ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = r, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (Tt.prototype[Symbol.iterator] = function() {
  return this.iter();
}, pc.prototype[Symbol.iterator] = f$.prototype[Symbol.iterator] = u$.prototype[Symbol.iterator] = function() {
  return this;
});
class g5 {
  /**
  @internal
  */
  constructor(e, t, n, r) {
    this.from = e, this.to = t, this.number = n, this.text = r;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function na(i, e, t) {
  return e = Math.max(0, Math.min(i.length, e)), [e, Math.max(e, Math.min(i.length, t))];
}
function Yi(i, e, t = !0, n = !0) {
  return O5(i, e, t, n);
}
function m5(i) {
  return i >= 56320 && i < 57344;
}
function v5(i) {
  return i >= 55296 && i < 56320;
}
function Cn(i, e) {
  let t = i.charCodeAt(e);
  if (!v5(t) || e + 1 == i.length)
    return t;
  let n = i.charCodeAt(e + 1);
  return m5(n) ? (t - 55296 << 10) + (n - 56320) + 65536 : t;
}
function Ag(i) {
  return i <= 65535 ? String.fromCharCode(i) : (i -= 65536, String.fromCharCode((i >> 10) + 55296, (i & 1023) + 56320));
}
function rs(i) {
  return i < 65536 ? 1 : 2;
}
const Sp = /\r\n?|\n/;
var Ui = /* @__PURE__ */ function(i) {
  return i[i.Simple = 0] = "Simple", i[i.TrackDel = 1] = "TrackDel", i[i.TrackBefore = 2] = "TrackBefore", i[i.TrackAfter = 3] = "TrackAfter", i;
}(Ui || (Ui = {}));
class us {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2)
      e += this.sections[t];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2) {
      let n = this.sections[t + 1];
      e += n < 0 ? this.sections[t] : n;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let t = 0, n = 0, r = 0; t < this.sections.length; ) {
      let s = this.sections[t++], o = this.sections[t++];
      o < 0 ? (e(n, r, s), r += s) : r += o, n += s;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, t = !1) {
    bp(this, e, t);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let t = 0; t < this.sections.length; ) {
      let n = this.sections[t++], r = this.sections[t++];
      r < 0 ? e.push(n, r) : e.push(r, n);
    }
    return new us(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : h$(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `this` happened before the ones in `other`.
  */
  mapDesc(e, t = !1) {
    return e.empty ? this : $p(this, e, t);
  }
  mapPos(e, t = -1, n = Ui.Simple) {
    let r = 0, s = 0;
    for (let o = 0; o < this.sections.length; ) {
      let a = this.sections[o++], c = this.sections[o++], u = r + a;
      if (c < 0) {
        if (u > e)
          return s + (e - r);
        s += a;
      } else {
        if (n != Ui.Simple && u >= e && (n == Ui.TrackDel && r < e && u > e || n == Ui.TrackBefore && r < e || n == Ui.TrackAfter && u > e))
          return null;
        if (u > e || u == e && t < 0 && !a)
          return e == r || t < 0 ? s : s + c;
        s += c;
      }
      r = u;
    }
    if (e > r)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${r}`);
    return s;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, t = e) {
    for (let n = 0, r = 0; n < this.sections.length && r <= t; ) {
      let s = this.sections[n++], o = this.sections[n++], a = r + s;
      if (o >= 0 && r <= t && a >= e)
        return r < e && a > t ? "cover" : !0;
      r = a;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let t = 0; t < this.sections.length; ) {
      let n = this.sections[t++], r = this.sections[t++];
      e += (e ? " " : "") + n + (r >= 0 ? ":" + r : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new us(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new us(e);
  }
}
class ki extends us {
  constructor(e, t) {
    super(e), this.inserted = t;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return bp(this, (t, n, r, s, o) => e = e.replace(r, r + (n - t), o), !1), e;
  }
  mapDesc(e, t = !1) {
    return $p(this, e, t, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let t = this.sections.slice(), n = [];
    for (let r = 0, s = 0; r < t.length; r += 2) {
      let o = t[r], a = t[r + 1];
      if (a >= 0) {
        t[r] = a, t[r + 1] = o;
        let c = r >> 1;
        for (; n.length < c; )
          n.push(Tt.empty);
        n.push(o ? e.slice(s, s + o) : Tt.empty);
      }
      s += o;
    }
    return new ki(t, n);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : h$(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, t = !1) {
    return e.empty ? this : $p(this, e, t, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, t = !1) {
    bp(this, e, t);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return us.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let t = [], n = [], r = [], s = new Pc(this);
    e: for (let o = 0, a = 0; ; ) {
      let c = o == e.length ? 1e9 : e[o++];
      for (; a < c || a == c && s.len == 0; ) {
        if (s.done)
          break e;
        let h = Math.min(s.len, c - a);
        tn(r, h, -1);
        let d = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;
        tn(t, h, d), d > 0 && yo(n, t, s.text), s.forward(h), a += h;
      }
      let u = e[o++];
      for (; a < u; ) {
        if (s.done)
          break e;
        let h = Math.min(s.len, u - a);
        tn(t, h, -1), tn(r, h, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(h), a += h;
      }
    }
    return {
      changes: new ki(t, n),
      filtered: us.create(r)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let t = 0; t < this.sections.length; t += 2) {
      let n = this.sections[t], r = this.sections[t + 1];
      r < 0 ? e.push(n) : r == 0 ? e.push([n]) : e.push([n].concat(this.inserted[t >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, t, n) {
    let r = [], s = [], o = 0, a = null;
    function c(h = !1) {
      if (!h && !r.length)
        return;
      o < t && tn(r, t - o, -1);
      let d = new ki(r, s);
      a = a ? a.compose(d.map(a)) : d, r = [], s = [], o = 0;
    }
    function u(h) {
      if (Array.isArray(h))
        for (let d of h)
          u(d);
      else if (h instanceof ki) {
        if (h.length != t)
          throw new RangeError(`Mismatched change set length (got ${h.length}, expected ${t})`);
        c(), a = a ? a.compose(h.map(a)) : h;
      } else {
        let { from: d, to: p = d, insert: m } = h;
        if (d > p || d < 0 || p > t)
          throw new RangeError(`Invalid change range ${d} to ${p} (in doc of length ${t})`);
        let b = m ? typeof m == "string" ? Tt.of(m.split(n || Sp)) : m : Tt.empty, y = b.length;
        if (d == p && y == 0)
          return;
        d < o && c(), d > o && tn(r, d - o, -1), tn(r, p - d, y), yo(s, r, b), o = p;
      }
    }
    return u(e), c(!a), a;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new ki(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let t = [], n = [];
    for (let r = 0; r < e.length; r++) {
      let s = e[r];
      if (typeof s == "number")
        t.push(s, -1);
      else {
        if (!Array.isArray(s) || typeof s[0] != "number" || s.some((o, a) => a && typeof o != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (s.length == 1)
          t.push(s[0], 0);
        else {
          for (; n.length < r; )
            n.push(Tt.empty);
          n[r] = Tt.of(s.slice(1)), t.push(s[0], n[r].length);
        }
      }
    }
    return new ki(t, n);
  }
  /**
  @internal
  */
  static createSet(e, t) {
    return new ki(e, t);
  }
}
function tn(i, e, t, n = !1) {
  if (e == 0 && t <= 0)
    return;
  let r = i.length - 2;
  r >= 0 && t <= 0 && t == i[r + 1] ? i[r] += e : r >= 0 && e == 0 && i[r] == 0 ? i[r + 1] += t : n ? (i[r] += e, i[r + 1] += t) : i.push(e, t);
}
function yo(i, e, t) {
  if (t.length == 0)
    return;
  let n = e.length - 2 >> 1;
  if (n < i.length)
    i[i.length - 1] = i[i.length - 1].append(t);
  else {
    for (; i.length < n; )
      i.push(Tt.empty);
    i.push(t);
  }
}
function bp(i, e, t) {
  let n = i.inserted;
  for (let r = 0, s = 0, o = 0; o < i.sections.length; ) {
    let a = i.sections[o++], c = i.sections[o++];
    if (c < 0)
      r += a, s += a;
    else {
      let u = r, h = s, d = Tt.empty;
      for (; u += a, h += c, c && n && (d = d.append(n[o - 2 >> 1])), !(t || o == i.sections.length || i.sections[o + 1] < 0); )
        a = i.sections[o++], c = i.sections[o++];
      e(r, u, s, h, d), r = u, s = h;
    }
  }
}
function $p(i, e, t, n = !1) {
  let r = [], s = n ? [] : null, o = new Pc(i), a = new Pc(e);
  for (let c = -1; ; ) {
    if (o.done && a.len || a.done && o.len)
      throw new Error("Mismatched change set lengths");
    if (o.ins == -1 && a.ins == -1) {
      let u = Math.min(o.len, a.len);
      tn(r, u, -1), o.forward(u), a.forward(u);
    } else if (a.ins >= 0 && (o.ins < 0 || c == o.i || o.off == 0 && (a.len < o.len || a.len == o.len && !t))) {
      let u = a.len;
      for (tn(r, a.ins, -1); u; ) {
        let h = Math.min(o.len, u);
        o.ins >= 0 && c < o.i && o.len <= h && (tn(r, 0, o.ins), s && yo(s, r, o.text), c = o.i), o.forward(h), u -= h;
      }
      a.next();
    } else if (o.ins >= 0) {
      let u = 0, h = o.len;
      for (; h; )
        if (a.ins == -1) {
          let d = Math.min(h, a.len);
          u += d, h -= d, a.forward(d);
        } else if (a.ins == 0 && a.len < h)
          h -= a.len, a.next();
        else
          break;
      tn(r, u, c < o.i ? o.ins : 0), s && c < o.i && yo(s, r, o.text), c = o.i, o.forward(o.len - h);
    } else {
      if (o.done && a.done)
        return s ? ki.createSet(r, s) : us.create(r);
      throw new Error("Mismatched change set lengths");
    }
  }
}
function h$(i, e, t = !1) {
  let n = [], r = t ? [] : null, s = new Pc(i), o = new Pc(e);
  for (let a = !1; ; ) {
    if (s.done && o.done)
      return r ? ki.createSet(n, r) : us.create(n);
    if (s.ins == 0)
      tn(n, s.len, 0, a), s.next();
    else if (o.len == 0 && !o.done)
      tn(n, 0, o.ins, a), r && yo(r, n, o.text), o.next();
    else {
      if (s.done || o.done)
        throw new Error("Mismatched change set lengths");
      {
        let c = Math.min(s.len2, o.len), u = n.length;
        if (s.ins == -1) {
          let h = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
          tn(n, c, h, a), r && h && yo(r, n, o.text);
        } else o.ins == -1 ? (tn(n, s.off ? 0 : s.len, c, a), r && yo(r, n, s.textBit(c))) : (tn(n, s.off ? 0 : s.len, o.off ? 0 : o.ins, a), r && !o.off && yo(r, n, o.text));
        a = (s.ins > c || o.ins >= 0 && o.len > c) && (a || n.length > u), s.forward2(c), o.forward(c);
      }
    }
  }
}
class Pc {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, t = this.i - 2 >> 1;
    return t >= e.length ? Tt.empty : e[t];
  }
  textBit(e) {
    let { inserted: t } = this.set, n = this.i - 2 >> 1;
    return n >= t.length && !e ? Tt.empty : t[n].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class el {
  constructor(e, t, n) {
    this.from = e, this.to = t, this.flags = n;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, t = -1) {
    let n, r;
    return this.empty ? n = r = e.mapPos(this.from, t) : (n = e.mapPos(this.from, 1), r = e.mapPos(this.to, -1)), n == this.from && r == this.to ? this : new el(n, r, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, t = e) {
    if (e <= this.anchor && t >= this.anchor)
      return J.range(e, t);
    let n = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
    return J.range(this.anchor, n);
  }
  /**
  Compare this range to another range.
  */
  eq(e, t = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!t || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return J.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, t, n) {
    return new el(e, t, n);
  }
}
class J {
  constructor(e, t) {
    this.ranges = e, this.mainIndex = t;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, t = -1) {
    return e.empty ? this : J.create(this.ranges.map((n) => n.map(e, t)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, t = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let n = 0; n < this.ranges.length; n++)
      if (!this.ranges[n].eq(e.ranges[n], t))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new J([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, t = !0) {
    return J.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, t = this.mainIndex) {
    let n = this.ranges.slice();
    return n[t] = e, J.create(n, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new J(e.ranges.map((t) => el.fromJSON(t)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, t = e) {
    return new J([J.range(e, t)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, t = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let n = 0, r = 0; r < e.length; r++) {
      let s = e[r];
      if (s.empty ? s.from <= n : s.from < n)
        return J.normalized(e.slice(), t);
      n = s.to;
    }
    return new J(e, t);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, t = 0, n, r) {
    return el.create(e, e, (t == 0 ? 0 : t < 0 ? 8 : 16) | (n == null ? 7 : Math.min(6, n)) | (r ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, t, n, r) {
    let s = (n ?? 16777215) << 6 | (r == null ? 7 : Math.min(6, r));
    return t < e ? el.create(t, e, 48 | s) : el.create(e, t, (t > e ? 8 : 0) | s);
  }
  /**
  @internal
  */
  static normalized(e, t = 0) {
    let n = e[t];
    e.sort((r, s) => r.from - s.from), t = e.indexOf(n);
    for (let r = 1; r < e.length; r++) {
      let s = e[r], o = e[r - 1];
      if (s.empty ? s.from <= o.to : s.from < o.to) {
        let a = o.from, c = Math.max(s.to, o.to);
        r <= t && t--, e.splice(--r, 2, s.anchor > s.head ? J.range(c, a) : J.range(a, c));
      }
    }
    return new J(e, t);
  }
}
function O$(i, e) {
  for (let t of i.ranges)
    if (t.to > e)
      throw new RangeError("Selection points outside of document");
}
let Xg = 0;
class _e {
  constructor(e, t, n, r, s) {
    this.combine = e, this.compareInput = t, this.compare = n, this.isStatic = r, this.id = Xg++, this.default = e([]), this.extensions = typeof s == "function" ? s(this) : s;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new _e(e.combine || ((t) => t), e.compareInput || ((t, n) => t === n), e.compare || (e.combine ? (t, n) => t === n : Mg), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new Vu([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new Vu(e, this, 1, t);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new Vu(e, this, 2, t);
  }
  from(e, t) {
    return t || (t = (n) => n), this.compute([e], (n) => t(n.field(e)));
  }
}
function Mg(i, e) {
  return i == e || i.length == e.length && i.every((t, n) => t === e[n]);
}
class Vu {
  constructor(e, t, n, r) {
    this.dependencies = e, this.facet = t, this.type = n, this.value = r, this.id = Xg++;
  }
  dynamicSlot(e) {
    var t;
    let n = this.value, r = this.facet.compareInput, s = this.id, o = e[s] >> 1, a = this.type == 2, c = !1, u = !1, h = [];
    for (let d of this.dependencies)
      d == "doc" ? c = !0 : d == "selection" ? u = !0 : ((t = e[d.id]) !== null && t !== void 0 ? t : 1) & 1 || h.push(e[d.id]);
    return {
      create(d) {
        return d.values[o] = n(d), 1;
      },
      update(d, p) {
        if (c && p.docChanged || u && (p.docChanged || p.selection) || yp(d, h)) {
          let m = n(d);
          if (a ? !Uv(m, d.values[o], r) : !r(m, d.values[o]))
            return d.values[o] = m, 1;
        }
        return 0;
      },
      reconfigure: (d, p) => {
        let m, b = p.config.address[s];
        if (b != null) {
          let y = uh(p, b);
          if (this.dependencies.every((w) => w instanceof _e ? p.facet(w) === d.facet(w) : w instanceof Wi ? p.field(w, !1) == d.field(w, !1) : !0) || (a ? Uv(m = n(d), y, r) : r(m = n(d), y)))
            return d.values[o] = y, 0;
        } else
          m = n(d);
        return d.values[o] = m, 1;
      }
    };
  }
}
function Uv(i, e, t) {
  if (i.length != e.length)
    return !1;
  for (let n = 0; n < i.length; n++)
    if (!t(i[n], e[n]))
      return !1;
  return !0;
}
function yp(i, e) {
  let t = !1;
  for (let n of e)
    gc(i, n) & 1 && (t = !0);
  return t;
}
function S5(i, e, t) {
  let n = t.map((c) => i[c.id]), r = t.map((c) => c.type), s = n.filter((c) => !(c & 1)), o = i[e.id] >> 1;
  function a(c) {
    let u = [];
    for (let h = 0; h < n.length; h++) {
      let d = uh(c, n[h]);
      if (r[h] == 2)
        for (let p of d)
          u.push(p);
      else
        u.push(d);
    }
    return e.combine(u);
  }
  return {
    create(c) {
      for (let u of n)
        gc(c, u);
      return c.values[o] = a(c), 1;
    },
    update(c, u) {
      if (!yp(c, s))
        return 0;
      let h = a(c);
      return e.compare(h, c.values[o]) ? 0 : (c.values[o] = h, 1);
    },
    reconfigure(c, u) {
      let h = yp(c, n), d = u.config.facets[e.id], p = u.facet(e);
      if (d && !h && Mg(t, d))
        return c.values[o] = p, 0;
      let m = a(c);
      return e.compare(m, p) ? (c.values[o] = p, 0) : (c.values[o] = m, 1);
    }
  };
}
const fu = /* @__PURE__ */ _e.define({ static: !0 });
class Wi {
  constructor(e, t, n, r, s) {
    this.id = e, this.createF = t, this.updateF = n, this.compareF = r, this.spec = s, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let t = new Wi(Xg++, e.create, e.update, e.compare || ((n, r) => n === r), e);
    return e.provide && (t.provides = e.provide(t)), t;
  }
  create(e) {
    let t = e.facet(fu).find((n) => n.field == this);
    return ((t == null ? void 0 : t.create) || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let t = e[this.id] >> 1;
    return {
      create: (n) => (n.values[t] = this.create(n), 1),
      update: (n, r) => {
        let s = n.values[t], o = this.updateF(s, r);
        return this.compareF(s, o) ? 0 : (n.values[t] = o, 1);
      },
      reconfigure: (n, r) => {
        let s = n.facet(fu), o = r.facet(fu), a;
        return (a = s.find((c) => c.field == this)) && a != o.find((c) => c.field == this) ? (n.values[t] = a.create(n), 1) : r.config.address[this.id] != null ? (n.values[t] = r.field(this), 0) : (n.values[t] = this.create(n), 1);
      }
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, fu.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const Go = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Ga(i) {
  return (e) => new d$(e, i);
}
const Mo = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Ga(Go.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Ga(Go.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Ga(Go.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Ga(Go.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Ga(Go.lowest)
};
class d$ {
  constructor(e, t) {
    this.inner = e, this.prec = t;
  }
}
class ga {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new Qp(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return ga.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class Qp {
  constructor(e, t) {
    this.compartment = e, this.inner = t;
  }
}
class fh {
  constructor(e, t, n, r, s, o) {
    for (this.base = e, this.compartments = t, this.dynamicSlots = n, this.address = r, this.staticValues = s, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < n.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let t = this.address[e.id];
    return t == null ? e.default : this.staticValues[t >> 1];
  }
  static resolve(e, t, n) {
    let r = [], s = /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ new Map();
    for (let p of b5(e, t, o))
      p instanceof Wi ? r.push(p) : (s[p.facet.id] || (s[p.facet.id] = [])).push(p);
    let a = /* @__PURE__ */ Object.create(null), c = [], u = [];
    for (let p of r)
      a[p.id] = u.length << 1, u.push((m) => p.slot(m));
    let h = n == null ? void 0 : n.config.facets;
    for (let p in s) {
      let m = s[p], b = m[0].facet, y = h && h[p] || [];
      if (m.every(
        (w) => w.type == 0
        /* Provider.Static */
      ))
        if (a[b.id] = c.length << 1 | 1, Mg(y, m))
          c.push(n.facet(b));
        else {
          let w = b.combine(m.map((k) => k.value));
          c.push(n && b.compare(w, n.facet(b)) ? n.facet(b) : w);
        }
      else {
        for (let w of m)
          w.type == 0 ? (a[w.id] = c.length << 1 | 1, c.push(w.value)) : (a[w.id] = u.length << 1, u.push((k) => w.dynamicSlot(k)));
        a[b.id] = u.length << 1, u.push((w) => S5(w, b, m));
      }
    }
    let d = u.map((p) => p(a));
    return new fh(e, o, d, a, c, s);
  }
}
function b5(i, e, t) {
  let n = [[], [], [], [], []], r = /* @__PURE__ */ new Map();
  function s(o, a) {
    let c = r.get(o);
    if (c != null) {
      if (c <= a)
        return;
      let u = n[c].indexOf(o);
      u > -1 && n[c].splice(u, 1), o instanceof Qp && t.delete(o.compartment);
    }
    if (r.set(o, a), Array.isArray(o))
      for (let u of o)
        s(u, a);
    else if (o instanceof Qp) {
      if (t.has(o.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let u = e.get(o.compartment) || o.inner;
      t.set(o.compartment, u), s(u, a);
    } else if (o instanceof d$)
      s(o.inner, o.prec);
    else if (o instanceof Wi)
      n[a].push(o), o.provides && s(o.provides, a);
    else if (o instanceof Vu)
      n[a].push(o), o.facet.extensions && s(o.facet.extensions, Go.default);
    else {
      let u = o.extension;
      if (!u)
        throw new Error(`Unrecognized extension value in extension set (${o}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      s(u, a);
    }
  }
  return s(i, Go.default), n.reduce((o, a) => o.concat(a));
}
function gc(i, e) {
  if (e & 1)
    return 2;
  let t = e >> 1, n = i.status[t];
  if (n == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (n & 2)
    return n;
  i.status[t] = 4;
  let r = i.computeSlot(i, i.config.dynamicSlots[t]);
  return i.status[t] = 2 | r;
}
function uh(i, e) {
  return e & 1 ? i.config.staticValues[e >> 1] : i.values[e >> 1];
}
const p$ = /* @__PURE__ */ _e.define(), wp = /* @__PURE__ */ _e.define({
  combine: (i) => i.some((e) => e),
  static: !0
}), g$ = /* @__PURE__ */ _e.define({
  combine: (i) => i.length ? i[0] : void 0,
  static: !0
}), m$ = /* @__PURE__ */ _e.define(), v$ = /* @__PURE__ */ _e.define(), S$ = /* @__PURE__ */ _e.define(), b$ = /* @__PURE__ */ _e.define({
  combine: (i) => i.length ? i[0] : !1
});
class Js {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new $5();
  }
}
class $5 {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new Js(this, e);
  }
}
class y5 {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new nt(this, e);
  }
}
class nt {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let t = this.type.map(this.value, e);
    return t === void 0 ? void 0 : t == this.value ? this : new nt(this.type, t);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new y5(e.map || ((t) => t));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, t) {
    if (!e.length)
      return e;
    let n = [];
    for (let r of e) {
      let s = r.map(t);
      s && n.push(s);
    }
    return n;
  }
}
nt.reconfigure = /* @__PURE__ */ nt.define();
nt.appendConfig = /* @__PURE__ */ nt.define();
class $i {
  constructor(e, t, n, r, s, o) {
    this.startState = e, this.changes = t, this.selection = n, this.effects = r, this.annotations = s, this.scrollIntoView = o, this._doc = null, this._state = null, n && O$(n, t.newLength), s.some((a) => a.type == $i.time) || (this.annotations = s.concat($i.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, t, n, r, s, o) {
    return new $i(e, t, n, r, s, o);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let t of this.annotations)
      if (t.type == e)
        return t.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let t = this.annotation($i.userEvent);
    return !!(t && (t == e || t.length > e.length && t.slice(0, e.length) == e && t[e.length] == "."));
  }
}
$i.time = /* @__PURE__ */ Js.define();
$i.userEvent = /* @__PURE__ */ Js.define();
$i.addToHistory = /* @__PURE__ */ Js.define();
$i.remote = /* @__PURE__ */ Js.define();
function Q5(i, e) {
  let t = [];
  for (let n = 0, r = 0; ; ) {
    let s, o;
    if (n < i.length && (r == e.length || e[r] >= i[n]))
      s = i[n++], o = i[n++];
    else if (r < e.length)
      s = e[r++], o = e[r++];
    else
      return t;
    !t.length || t[t.length - 1] < s ? t.push(s, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
  }
}
function $$(i, e, t) {
  var n;
  let r, s, o;
  return t ? (r = e.changes, s = ki.empty(e.changes.length), o = i.changes.compose(e.changes)) : (r = e.changes.map(i.changes), s = i.changes.mapDesc(e.changes, !0), o = i.changes.compose(r)), {
    changes: o,
    selection: e.selection ? e.selection.map(s) : (n = i.selection) === null || n === void 0 ? void 0 : n.map(r),
    effects: nt.mapEffects(i.effects, r).concat(nt.mapEffects(e.effects, s)),
    annotations: i.annotations.length ? i.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: i.scrollIntoView || e.scrollIntoView
  };
}
function Pp(i, e, t) {
  let n = e.selection, r = Gl(e.annotations);
  return e.userEvent && (r = r.concat($i.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof ki ? e.changes : ki.of(e.changes || [], t, i.facet(g$)),
    selection: n && (n instanceof J ? n : J.single(n.anchor, n.head)),
    effects: Gl(e.effects),
    annotations: r,
    scrollIntoView: !!e.scrollIntoView
  };
}
function y$(i, e, t) {
  let n = Pp(i, e.length ? e[0] : {}, i.doc.length);
  e.length && e[0].filter === !1 && (t = !1);
  for (let s = 1; s < e.length; s++) {
    e[s].filter === !1 && (t = !1);
    let o = !!e[s].sequential;
    n = $$(n, Pp(i, e[s], o ? n.changes.newLength : i.doc.length), o);
  }
  let r = $i.create(i, n.changes, n.selection, n.effects, n.annotations, n.scrollIntoView);
  return P5(t ? w5(r) : r);
}
function w5(i) {
  let e = i.startState, t = !0;
  for (let r of e.facet(m$)) {
    let s = r(i);
    if (s === !1) {
      t = !1;
      break;
    }
    Array.isArray(s) && (t = t === !0 ? s : Q5(t, s));
  }
  if (t !== !0) {
    let r, s;
    if (t === !1)
      s = i.changes.invertedDesc, r = ki.empty(e.doc.length);
    else {
      let o = i.changes.filter(t);
      r = o.changes, s = o.filtered.mapDesc(o.changes).invertedDesc;
    }
    i = $i.create(e, r, i.selection && i.selection.map(s), nt.mapEffects(i.effects, s), i.annotations, i.scrollIntoView);
  }
  let n = e.facet(v$);
  for (let r = n.length - 1; r >= 0; r--) {
    let s = n[r](i);
    s instanceof $i ? i = s : Array.isArray(s) && s.length == 1 && s[0] instanceof $i ? i = s[0] : i = y$(e, Gl(s), !1);
  }
  return i;
}
function P5(i) {
  let e = i.startState, t = e.facet(S$), n = i;
  for (let r = t.length - 1; r >= 0; r--) {
    let s = t[r](i);
    s && Object.keys(s).length && (n = $$(n, Pp(e, s, i.changes.newLength), !0));
  }
  return n == i ? i : $i.create(e, i.changes, i.selection, n.effects, n.annotations, n.scrollIntoView);
}
const x5 = [];
function Gl(i) {
  return i == null ? x5 : Array.isArray(i) ? i : [i];
}
var ri = /* @__PURE__ */ function(i) {
  return i[i.Word = 0] = "Word", i[i.Space = 1] = "Space", i[i.Other = 2] = "Other", i;
}(ri || (ri = {}));
const k5 = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let xp;
try {
  xp = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function _5(i) {
  if (xp)
    return xp.test(i);
  for (let e = 0; e < i.length; e++) {
    let t = i[e];
    if (/\w/.test(t) || t > "" && (t.toUpperCase() != t.toLowerCase() || k5.test(t)))
      return !0;
  }
  return !1;
}
function W5(i) {
  return (e) => {
    if (!/\S/.test(e))
      return ri.Space;
    if (_5(e))
      return ri.Word;
    for (let t = 0; t < i.length; t++)
      if (e.indexOf(i[t]) > -1)
        return ri.Word;
    return ri.Other;
  };
}
class St {
  constructor(e, t, n, r, s, o) {
    this.config = e, this.doc = t, this.selection = n, this.values = r, this.status = e.statusTemplate.slice(), this.computeSlot = s, o && (o._state = this);
    for (let a = 0; a < this.config.dynamicSlots.length; a++)
      gc(this, a << 1);
    this.computeSlot = null;
  }
  field(e, t = !0) {
    let n = this.config.address[e.id];
    if (n == null) {
      if (t)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return gc(this, n), uh(this, n);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return y$(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let t = this.config, { base: n, compartments: r } = t;
    for (let a of e.effects)
      a.is(ga.reconfigure) ? (t && (r = /* @__PURE__ */ new Map(), t.compartments.forEach((c, u) => r.set(u, c)), t = null), r.set(a.value.compartment, a.value.extension)) : a.is(nt.reconfigure) ? (t = null, n = a.value) : a.is(nt.appendConfig) && (t = null, n = Gl(n).concat(a.value));
    let s;
    t ? s = e.startState.values.slice() : (t = fh.resolve(n, r, this), s = new St(t, this.doc, this.selection, t.dynamicSlots.map(() => null), (c, u) => u.reconfigure(c, this), null).values);
    let o = e.startState.facet(wp) ? e.newSelection : e.newSelection.asSingle();
    new St(t, e.newDoc, o, s, (a, c) => c.update(a, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({
      changes: { from: t.from, to: t.to, insert: e },
      range: J.cursor(t.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let t = this.selection, n = e(t.ranges[0]), r = this.changes(n.changes), s = [n.range], o = Gl(n.effects);
    for (let a = 1; a < t.ranges.length; a++) {
      let c = e(t.ranges[a]), u = this.changes(c.changes), h = u.map(r);
      for (let p = 0; p < a; p++)
        s[p] = s[p].map(h);
      let d = r.mapDesc(u, !0);
      s.push(c.range.map(d)), r = r.compose(h), o = nt.mapEffects(o, h).concat(nt.mapEffects(Gl(c.effects), d));
    }
    return {
      changes: r,
      selection: J.create(s, t.mainIndex),
      effects: o
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof ki ? e : ki.of(e, this.doc.length, this.facet(St.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return Tt.of(e.split(this.facet(St.lineSeparator) || Sp));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, t = this.doc.length) {
    return this.doc.sliceString(e, t, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let t = this.config.address[e.id];
    return t == null ? e.default : (gc(this, t), uh(this, t));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let t = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let n in e) {
        let r = e[n];
        r instanceof Wi && this.config.address[r.id] != null && (t[n] = r.spec.toJSON(this.field(e[n]), this));
      }
    return t;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, t = {}, n) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let r = [];
    if (n) {
      for (let s in n)
        if (Object.prototype.hasOwnProperty.call(e, s)) {
          let o = n[s], a = e[s];
          r.push(o.init((c) => o.spec.fromJSON(a, c)));
        }
    }
    return St.create({
      doc: e.doc,
      selection: J.fromJSON(e.selection),
      extensions: t.extensions ? r.concat([t.extensions]) : r
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let t = fh.resolve(e.extensions || [], /* @__PURE__ */ new Map()), n = e.doc instanceof Tt ? e.doc : Tt.of((e.doc || "").split(t.staticFacet(St.lineSeparator) || Sp)), r = e.selection ? e.selection instanceof J ? e.selection : J.single(e.selection.anchor, e.selection.head) : J.single(0);
    return O$(r, n.length), t.staticFacet(wp) || (r = r.asSingle()), new St(t, n, r, t.dynamicSlots.map(() => null), (s, o) => o.create(s), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(St.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(St.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(b$);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...t) {
    for (let n of this.facet(St.phrases))
      if (Object.prototype.hasOwnProperty.call(n, e)) {
        e = n[e];
        break;
      }
    return t.length && (e = e.replace(/\$(\$|\d*)/g, (n, r) => {
      if (r == "$")
        return "$";
      let s = +(r || 1);
      return !s || s > t.length ? n : t[s - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, t, n = -1) {
    let r = [];
    for (let s of this.facet(p$))
      for (let o of s(this, t, n))
        Object.prototype.hasOwnProperty.call(o, e) && r.push(o[e]);
    return r;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return W5(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: t, from: n, length: r } = this.doc.lineAt(e), s = this.charCategorizer(e), o = e - n, a = e - n;
    for (; o > 0; ) {
      let c = Yi(t, o, !1);
      if (s(t.slice(c, o)) != ri.Word)
        break;
      o = c;
    }
    for (; a < r; ) {
      let c = Yi(t, a);
      if (s(t.slice(a, c)) != ri.Word)
        break;
      a = c;
    }
    return o == a ? null : J.range(o + n, a + n);
  }
}
St.allowMultipleSelections = wp;
St.tabSize = /* @__PURE__ */ _e.define({
  combine: (i) => i.length ? i[0] : 4
});
St.lineSeparator = g$;
St.readOnly = b$;
St.phrases = /* @__PURE__ */ _e.define({
  compare(i, e) {
    let t = Object.keys(i), n = Object.keys(e);
    return t.length == n.length && t.every((r) => i[r] == e[r]);
  }
});
St.languageData = p$;
St.changeFilter = m$;
St.transactionFilter = v$;
St.transactionExtender = S$;
ga.reconfigure = /* @__PURE__ */ nt.define();
function gs(i, e, t = {}) {
  let n = {};
  for (let r of i)
    for (let s of Object.keys(r)) {
      let o = r[s], a = n[s];
      if (a === void 0)
        n[s] = o;
      else if (!(a === o || o === void 0)) if (Object.hasOwnProperty.call(t, s))
        n[s] = t[s](a, o);
      else
        throw new Error("Config merge conflict for field " + s);
    }
  for (let r in e)
    n[r] === void 0 && (n[r] = e[r]);
  return n;
}
class ol {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, t = e) {
    return kp.create(e, t, this);
  }
}
ol.prototype.startSide = ol.prototype.endSide = 0;
ol.prototype.point = !1;
ol.prototype.mapMode = Ui.TrackDel;
let kp = class Q$ {
  constructor(e, t, n) {
    this.from = e, this.to = t, this.value = n;
  }
  /**
  @internal
  */
  static create(e, t, n) {
    return new Q$(e, t, n);
  }
};
function _p(i, e) {
  return i.from - e.from || i.value.startSide - e.value.startSide;
}
class Eg {
  constructor(e, t, n, r) {
    this.from = e, this.to = t, this.value = n, this.maxPoint = r;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, t, n, r = 0) {
    let s = n ? this.to : this.from;
    for (let o = r, a = s.length; ; ) {
      if (o == a)
        return o;
      let c = o + a >> 1, u = s[c] - e || (n ? this.value[c].endSide : this.value[c].startSide) - t;
      if (c == o)
        return u >= 0 ? o : a;
      u >= 0 ? a = c : o = c + 1;
    }
  }
  between(e, t, n, r) {
    for (let s = this.findIndex(t, -1e9, !0), o = this.findIndex(n, 1e9, !1, s); s < o; s++)
      if (r(this.from[s] + e, this.to[s] + e, this.value[s]) === !1)
        return !1;
  }
  map(e, t) {
    let n = [], r = [], s = [], o = -1, a = -1;
    for (let c = 0; c < this.value.length; c++) {
      let u = this.value[c], h = this.from[c] + e, d = this.to[c] + e, p, m;
      if (h == d) {
        let b = t.mapPos(h, u.startSide, u.mapMode);
        if (b == null || (p = m = b, u.startSide != u.endSide && (m = t.mapPos(h, u.endSide), m < p)))
          continue;
      } else if (p = t.mapPos(h, u.startSide), m = t.mapPos(d, u.endSide), p > m || p == m && u.startSide > 0 && u.endSide <= 0)
        continue;
      (m - p || u.endSide - u.startSide) < 0 || (o < 0 && (o = p), u.point && (a = Math.max(a, m - p)), n.push(u), r.push(p - o), s.push(m - o));
    }
    return { mapped: n.length ? new Eg(r, s, n, a) : null, pos: o };
  }
}
class xt {
  constructor(e, t, n, r) {
    this.chunkPos = e, this.chunk = t, this.nextLayer = n, this.maxPoint = r;
  }
  /**
  @internal
  */
  static create(e, t, n, r) {
    return new xt(e, t, n, r);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let t of this.chunk)
      e += t.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: t = [], sort: n = !1, filterFrom: r = 0, filterTo: s = this.length } = e, o = e.filter;
    if (t.length == 0 && !o)
      return this;
    if (n && (t = t.slice().sort(_p)), this.isEmpty)
      return t.length ? xt.of(t) : this;
    let a = new w$(this, null, -1).goto(0), c = 0, u = [], h = new Is();
    for (; a.value || c < t.length; )
      if (c < t.length && (a.from - t[c].from || a.startSide - t[c].value.startSide) >= 0) {
        let d = t[c++];
        h.addInner(d.from, d.to, d.value) || u.push(d);
      } else a.rangeIndex == 1 && a.chunkIndex < this.chunk.length && (c == t.length || this.chunkEnd(a.chunkIndex) < t[c].from) && (!o || r > this.chunkEnd(a.chunkIndex) || s < this.chunkPos[a.chunkIndex]) && h.addChunk(this.chunkPos[a.chunkIndex], this.chunk[a.chunkIndex]) ? a.nextChunk() : ((!o || r > a.to || s < a.from || o(a.from, a.to, a.value)) && (h.addInner(a.from, a.to, a.value) || u.push(kp.create(a.from, a.to, a.value))), a.next());
    return h.finishInner(this.nextLayer.isEmpty && !u.length ? xt.empty : this.nextLayer.update({ add: u, filter: o, filterFrom: r, filterTo: s }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let t = [], n = [], r = -1;
    for (let o = 0; o < this.chunk.length; o++) {
      let a = this.chunkPos[o], c = this.chunk[o], u = e.touchesRange(a, a + c.length);
      if (u === !1)
        r = Math.max(r, c.maxPoint), t.push(c), n.push(e.mapPos(a));
      else if (u === !0) {
        let { mapped: h, pos: d } = c.map(a, e);
        h && (r = Math.max(r, h.maxPoint), t.push(h), n.push(d));
      }
    }
    let s = this.nextLayer.map(e);
    return t.length == 0 ? s : new xt(n, t, s || xt.empty, r);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, t, n) {
    if (!this.isEmpty) {
      for (let r = 0; r < this.chunk.length; r++) {
        let s = this.chunkPos[r], o = this.chunk[r];
        if (t >= s && e <= s + o.length && o.between(s, e - s, t - s, n) === !1)
          return;
      }
      this.nextLayer.between(e, t, n);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return xc.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, t = 0) {
    return xc.from(e).goto(t);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, t, n, r, s = -1) {
    let o = e.filter((d) => d.maxPoint > 0 || !d.isEmpty && d.maxPoint >= s), a = t.filter((d) => d.maxPoint > 0 || !d.isEmpty && d.maxPoint >= s), c = Yv(o, a, n), u = new Ha(o, c, s), h = new Ha(a, c, s);
    n.iterGaps((d, p, m) => zv(u, d, h, p, m, r)), n.empty && n.length == 0 && zv(u, 0, h, 0, 0, r);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, t, n = 0, r) {
    r == null && (r = 999999999);
    let s = e.filter((h) => !h.isEmpty && t.indexOf(h) < 0), o = t.filter((h) => !h.isEmpty && e.indexOf(h) < 0);
    if (s.length != o.length)
      return !1;
    if (!s.length)
      return !0;
    let a = Yv(s, o), c = new Ha(s, a, 0).goto(n), u = new Ha(o, a, 0).goto(n);
    for (; ; ) {
      if (c.to != u.to || !Wp(c.active, u.active) || c.point && (!u.point || !c.point.eq(u.point)))
        return !1;
      if (c.to > r)
        return !0;
      c.next(), u.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, t, n, r, s = -1) {
    let o = new Ha(e, null, s).goto(t), a = t, c = o.openStart;
    for (; ; ) {
      let u = Math.min(o.to, n);
      if (o.point) {
        let h = o.activeForPoint(o.to), d = o.pointFrom < t ? h.length + 1 : o.point.startSide < 0 ? h.length : Math.min(h.length, c);
        r.point(a, u, o.point, h, d, o.pointRank), c = Math.min(o.openEnd(u), h.length);
      } else u > a && (r.span(a, u, o.active, c), c = o.openEnd(u));
      if (o.to > n)
        return c + (o.point && o.to > n ? 1 : 0);
      a = o.to, o.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, t = !1) {
    let n = new Is();
    for (let r of e instanceof kp ? [e] : t ? T5(e) : e)
      n.add(r.from, r.to, r.value);
    return n.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return xt.empty;
    let t = e[e.length - 1];
    for (let n = e.length - 2; n >= 0; n--)
      for (let r = e[n]; r != xt.empty; r = r.nextLayer)
        t = new xt(r.chunkPos, r.chunk, t, Math.max(r.maxPoint, t.maxPoint));
    return t;
  }
}
xt.empty = /* @__PURE__ */ new xt([], [], null, -1);
function T5(i) {
  if (i.length > 1)
    for (let e = i[0], t = 1; t < i.length; t++) {
      let n = i[t];
      if (_p(e, n) > 0)
        return i.slice().sort(_p);
      e = n;
    }
  return i;
}
xt.empty.nextLayer = xt.empty;
class Is {
  finishChunk(e) {
    this.chunks.push(new Eg(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, t, n) {
    this.addInner(e, t, n) || (this.nextLayer || (this.nextLayer = new Is())).add(e, t, n);
  }
  /**
  @internal
  */
  addInner(e, t, n) {
    let r = e - this.lastTo || n.startSide - this.last.endSide;
    if (r <= 0 && (e - this.lastFrom || n.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return r < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), this.last = n, this.lastFrom = e, this.lastTo = t, this.value.push(n), n.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, t) {
    if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint), this.chunks.push(t), this.chunkPos.push(e);
    let n = t.value.length - 1;
    return this.last = t.value[n], this.lastFrom = t.from[n] + e, this.lastTo = t.to[n] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(xt.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let t = xt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, t;
  }
}
function Yv(i, e, t) {
  let n = /* @__PURE__ */ new Map();
  for (let s of i)
    for (let o = 0; o < s.chunk.length; o++)
      s.chunk[o].maxPoint <= 0 && n.set(s.chunk[o], s.chunkPos[o]);
  let r = /* @__PURE__ */ new Set();
  for (let s of e)
    for (let o = 0; o < s.chunk.length; o++) {
      let a = n.get(s.chunk[o]);
      a != null && (t ? t.mapPos(a) : a) == s.chunkPos[o] && !(t != null && t.touchesRange(a, a + s.chunk[o].length)) && r.add(s.chunk[o]);
    }
  return r;
}
class w$ {
  constructor(e, t, n, r = 0) {
    this.layer = e, this.skip = t, this.minPoint = n, this.rank = r;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, t = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, t, !1), this;
  }
  gotoInner(e, t, n) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let r = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(r) || this.layer.chunkEnd(this.chunkIndex) < e || r.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, n = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let r = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
      (!n || this.rangeIndex < r) && this.setRangeIndex(r);
    }
    this.next();
  }
  forward(e, t) {
    (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], t = this.layer.chunk[this.chunkIndex], n = e + t.from[this.rangeIndex];
        if (this.from = n, this.to = e + t.to[this.rangeIndex], this.value = t.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class xc {
  constructor(e) {
    this.heap = e;
  }
  static from(e, t = null, n = -1) {
    let r = [];
    for (let s = 0; s < e.length; s++)
      for (let o = e[s]; !o.isEmpty; o = o.nextLayer)
        o.maxPoint >= n && r.push(new w$(o, t, n, s));
    return r.length == 1 ? r[0] : new xc(r);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, t = -1e9) {
    for (let n of this.heap)
      n.goto(e, t);
    for (let n = this.heap.length >> 1; n >= 0; n--)
      xd(this.heap, n);
    return this.next(), this;
  }
  forward(e, t) {
    for (let n of this.heap)
      n.forward(e, t);
    for (let n = this.heap.length >> 1; n >= 0; n--)
      xd(this.heap, n);
    (this.to - e || this.value.endSide - t) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), xd(this.heap, 0);
    }
  }
}
function xd(i, e) {
  for (let t = i[e]; ; ) {
    let n = (e << 1) + 1;
    if (n >= i.length)
      break;
    let r = i[n];
    if (n + 1 < i.length && r.compare(i[n + 1]) >= 0 && (r = i[n + 1], n++), t.compare(r) < 0)
      break;
    i[n] = t, i[e] = r, e = n;
  }
}
class Ha {
  constructor(e, t, n) {
    this.minPoint = n, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = xc.from(e, t, n);
  }
  goto(e, t = -1e9) {
    return this.cursor.goto(e, t), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = t, this.openStart = -1, this.next(), this;
  }
  forward(e, t) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, t);
  }
  removeActive(e) {
    uu(this.active, e), uu(this.activeTo, e), uu(this.activeRank, e), this.minActive = jv(this.active, this.activeTo);
  }
  addActive(e) {
    let t = 0, { value: n, to: r, rank: s } = this.cursor;
    for (; t < this.activeRank.length && (s - this.activeRank[t] || r - this.activeTo[t]) > 0; )
      t++;
    hu(this.active, t, n), hu(this.activeTo, t, r), hu(this.activeRank, t, s), e && hu(e, t, this.cursor.from), this.minActive = jv(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, t = this.point;
    this.point = null;
    let n = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let r = this.minActive;
      if (r > -1 && (this.activeTo[r] - this.cursor.from || this.active[r].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[r] > e) {
          this.to = this.activeTo[r], this.endSide = this.active[r].endSide;
          break;
        }
        this.removeActive(r), n && uu(n, r);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let s = this.cursor.value;
          if (!s.point)
            this.addActive(n), this.cursor.next();
          else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = s, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = s.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (n) {
      this.openStart = 0;
      for (let r = n.length - 1; r >= 0 && n[r] < e; r--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let t = [];
    for (let n = this.active.length - 1; n >= 0 && !(this.activeRank[n] < this.pointRank); n--)
      (this.activeTo[n] > e || this.activeTo[n] == e && this.active[n].endSide >= this.point.endSide) && t.push(this.active[n]);
    return t.reverse();
  }
  openEnd(e) {
    let t = 0;
    for (let n = this.activeTo.length - 1; n >= 0 && this.activeTo[n] > e; n--)
      t++;
    return t;
  }
}
function zv(i, e, t, n, r, s) {
  i.goto(e), t.goto(n);
  let o = n + r, a = n, c = n - e;
  for (; ; ) {
    let u = i.to + c - t.to, h = u || i.endSide - t.endSide, d = h < 0 ? i.to + c : t.to, p = Math.min(d, o);
    if (i.point || t.point ? i.point && t.point && (i.point == t.point || i.point.eq(t.point)) && Wp(i.activeForPoint(i.to), t.activeForPoint(t.to)) || s.comparePoint(a, p, i.point, t.point) : p > a && !Wp(i.active, t.active) && s.compareRange(a, p, i.active, t.active), d > o)
      break;
    (u || i.openEnd != t.openEnd) && s.boundChange && s.boundChange(d), a = d, h <= 0 && i.next(), h >= 0 && t.next();
  }
}
function Wp(i, e) {
  if (i.length != e.length)
    return !1;
  for (let t = 0; t < i.length; t++)
    if (i[t] != e[t] && !i[t].eq(e[t]))
      return !1;
  return !0;
}
function uu(i, e) {
  for (let t = e, n = i.length - 1; t < n; t++)
    i[t] = i[t + 1];
  i.pop();
}
function hu(i, e, t) {
  for (let n = i.length - 1; n >= e; n--)
    i[n + 1] = i[n];
  i[e] = t;
}
function jv(i, e) {
  let t = -1, n = 1e9;
  for (let r = 0; r < e.length; r++)
    (e[r] - n || i[r].endSide - i[t].endSide) < 0 && (t = r, n = e[r]);
  return t;
}
function ma(i, e, t = i.length) {
  let n = 0;
  for (let r = 0; r < t && r < i.length; )
    i.charCodeAt(r) == 9 ? (n += e - n % e, r++) : (n++, r = Yi(i, r));
  return n;
}
function Tp(i, e, t, n) {
  for (let r = 0, s = 0; ; ) {
    if (s >= e)
      return r;
    if (r == i.length)
      break;
    s += i.charCodeAt(r) == 9 ? t - s % t : 1, r = Yi(i, r);
  }
  return n === !0 ? -1 : i.length;
}
const Zp = "ͼ", Bv = typeof Symbol > "u" ? "__" + Zp : Symbol.for(Zp), Cp = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Iv = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class _o {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, t) {
    this.rules = [];
    let { finish: n } = t || {};
    function r(o) {
      return /^@/.test(o) ? [o] : o.split(/,\s*/);
    }
    function s(o, a, c, u) {
      let h = [], d = /^@(\w+)\b/.exec(o[0]), p = d && d[1] == "keyframes";
      if (d && a == null) return c.push(o[0] + ";");
      for (let m in a) {
        let b = a[m];
        if (/&/.test(m))
          s(
            m.split(/,\s*/).map((y) => o.map((w) => y.replace(/&/, w))).reduce((y, w) => y.concat(w)),
            b,
            c
          );
        else if (b && typeof b == "object") {
          if (!d) throw new RangeError("The value of a property (" + m + ") should be a primitive value.");
          s(r(m), b, h, p);
        } else b != null && h.push(m.replace(/_.*/, "").replace(/[A-Z]/g, (y) => "-" + y.toLowerCase()) + ": " + b + ";");
      }
      (h.length || p) && c.push((n && !d && !u ? o.map(n) : o).join(", ") + " {" + h.join(" ") + "}");
    }
    for (let o in e) s(r(o), e[o], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = Iv[Bv] || 1;
    return Iv[Bv] = e + 1, Zp + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, t, n) {
    let r = e[Cp], s = n && n.nonce;
    r ? s && r.setNonce(s) : r = new Z5(e, s), r.mount(Array.isArray(t) ? t : [t], e);
  }
}
let Nv = /* @__PURE__ */ new Map();
class Z5 {
  constructor(e, t) {
    let n = e.ownerDocument || e, r = n.defaultView;
    if (!e.head && e.adoptedStyleSheets && r.CSSStyleSheet) {
      let s = Nv.get(n);
      if (s) return e[Cp] = s;
      this.sheet = new r.CSSStyleSheet(), Nv.set(n, this);
    } else
      this.styleTag = n.createElement("style"), t && this.styleTag.setAttribute("nonce", t);
    this.modules = [], e[Cp] = this;
  }
  mount(e, t) {
    let n = this.sheet, r = 0, s = 0;
    for (let o = 0; o < e.length; o++) {
      let a = e[o], c = this.modules.indexOf(a);
      if (c < s && c > -1 && (this.modules.splice(c, 1), s--, c = -1), c == -1) {
        if (this.modules.splice(s++, 0, a), n) for (let u = 0; u < a.rules.length; u++)
          n.insertRule(a.rules[u], r++);
      } else {
        for (; s < c; ) r += this.modules[s++].rules.length;
        r += a.rules.length, s++;
      }
    }
    if (n)
      t.adoptedStyleSheets.indexOf(this.sheet) < 0 && (t.adoptedStyleSheets = [this.sheet, ...t.adoptedStyleSheets]);
    else {
      let o = "";
      for (let c = 0; c < this.modules.length; c++)
        o += this.modules[c].getRules() + `
`;
      this.styleTag.textContent = o;
      let a = t.head || t;
      this.styleTag.parentNode != a && a.insertBefore(this.styleTag, a.firstChild);
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var Wo = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, kc = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, C5 = typeof navigator < "u" && /Mac/.test(navigator.platform), R5 = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var Vi = 0; Vi < 10; Vi++) Wo[48 + Vi] = Wo[96 + Vi] = String(Vi);
for (var Vi = 1; Vi <= 24; Vi++) Wo[Vi + 111] = "F" + Vi;
for (var Vi = 65; Vi <= 90; Vi++)
  Wo[Vi] = String.fromCharCode(Vi + 32), kc[Vi] = String.fromCharCode(Vi);
for (var kd in Wo) kc.hasOwnProperty(kd) || (kc[kd] = Wo[kd]);
function A5(i) {
  var e = C5 && i.metaKey && i.shiftKey && !i.ctrlKey && !i.altKey || R5 && i.shiftKey && i.key && i.key.length == 1 || i.key == "Unidentified", t = !e && i.key || (i.shiftKey ? kc : Wo)[i.keyCode] || i.key || "Unidentified";
  return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
}
function _c(i) {
  let e;
  return i.nodeType == 11 ? e = i.getSelection ? i : i.ownerDocument : e = i, e.getSelection();
}
function Rp(i, e) {
  return e ? i == e || i.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function Uu(i, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return Rp(i, e.anchorNode);
  } catch {
    return !1;
  }
}
function Wc(i) {
  return i.nodeType == 3 ? al(i, 0, i.nodeValue.length).getClientRects() : i.nodeType == 1 ? i.getClientRects() : [];
}
function mc(i, e, t, n) {
  return t ? Fv(i, e, t, n, -1) || Fv(i, e, t, n, 1) : !1;
}
function ll(i) {
  for (var e = 0; ; e++)
    if (i = i.previousSibling, !i)
      return e;
}
function hh(i) {
  return i.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(i.nodeName);
}
function Fv(i, e, t, n, r) {
  for (; ; ) {
    if (i == t && e == n)
      return !0;
    if (e == (r < 0 ? 0 : ps(i))) {
      if (i.nodeName == "DIV")
        return !1;
      let s = i.parentNode;
      if (!s || s.nodeType != 1)
        return !1;
      e = ll(i) + (r < 0 ? 0 : 1), i = s;
    } else if (i.nodeType == 1) {
      if (i = i.childNodes[e + (r < 0 ? -1 : 0)], i.nodeType == 1 && i.contentEditable == "false")
        return !1;
      e = r < 0 ? ps(i) : 0;
    } else
      return !1;
  }
}
function ps(i) {
  return i.nodeType == 3 ? i.nodeValue.length : i.childNodes.length;
}
function Hh(i, e) {
  let t = e ? i.left : i.right;
  return { left: t, right: t, top: i.top, bottom: i.bottom };
}
function X5(i) {
  let e = i.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: i.innerWidth,
    top: 0,
    bottom: i.innerHeight
  };
}
function P$(i, e) {
  let t = e.width / i.offsetWidth, n = e.height / i.offsetHeight;
  return (t > 0.995 && t < 1.005 || !isFinite(t) || Math.abs(e.width - i.offsetWidth) < 1) && (t = 1), (n > 0.995 && n < 1.005 || !isFinite(n) || Math.abs(e.height - i.offsetHeight) < 1) && (n = 1), { scaleX: t, scaleY: n };
}
function M5(i, e, t, n, r, s, o, a) {
  let c = i.ownerDocument, u = c.defaultView || window;
  for (let h = i, d = !1; h && !d; )
    if (h.nodeType == 1) {
      let p, m = h == c.body, b = 1, y = 1;
      if (m)
        p = X5(u);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(h).position) && (d = !0), h.scrollHeight <= h.clientHeight && h.scrollWidth <= h.clientWidth) {
          h = h.assignedSlot || h.parentNode;
          continue;
        }
        let A = h.getBoundingClientRect();
        ({ scaleX: b, scaleY: y } = P$(h, A)), p = {
          left: A.left,
          right: A.left + h.clientWidth * b,
          top: A.top,
          bottom: A.top + h.clientHeight * y
        };
      }
      let w = 0, k = 0;
      if (r == "nearest")
        e.top < p.top ? (k = -(p.top - e.top + o), t > 0 && e.bottom > p.bottom + k && (k = e.bottom - p.bottom + k + o)) : e.bottom > p.bottom && (k = e.bottom - p.bottom + o, t < 0 && e.top - k < p.top && (k = -(p.top + k - e.top + o)));
      else {
        let A = e.bottom - e.top, x = p.bottom - p.top;
        k = (r == "center" && A <= x ? e.top + A / 2 - x / 2 : r == "start" || r == "center" && t < 0 ? e.top - o : e.bottom - x + o) - p.top;
      }
      if (n == "nearest" ? e.left < p.left ? (w = -(p.left - e.left + s), t > 0 && e.right > p.right + w && (w = e.right - p.right + w + s)) : e.right > p.right && (w = e.right - p.right + s, t < 0 && e.left < p.left + w && (w = -(p.left + w - e.left + s))) : w = (n == "center" ? e.left + (e.right - e.left) / 2 - (p.right - p.left) / 2 : n == "start" == a ? e.left - s : e.right - (p.right - p.left) + s) - p.left, w || k)
        if (m)
          u.scrollBy(w, k);
        else {
          let A = 0, x = 0;
          if (k) {
            let _ = h.scrollTop;
            h.scrollTop += k / y, x = (h.scrollTop - _) * y;
          }
          if (w) {
            let _ = h.scrollLeft;
            h.scrollLeft += w / b, A = (h.scrollLeft - _) * b;
          }
          e = {
            left: e.left - A,
            top: e.top - x,
            right: e.right - A,
            bottom: e.bottom - x
          }, A && Math.abs(A - w) < 1 && (n = "nearest"), x && Math.abs(x - k) < 1 && (r = "nearest");
        }
      if (m)
        break;
      h = h.assignedSlot || h.parentNode;
    } else if (h.nodeType == 11)
      h = h.host;
    else
      break;
}
function E5(i) {
  let e = i.ownerDocument, t, n;
  for (let r = i.parentNode; r && !(r == e.body || t && n); )
    if (r.nodeType == 1)
      !n && r.scrollHeight > r.clientHeight && (n = r), !t && r.scrollWidth > r.clientWidth && (t = r), r = r.assignedSlot || r.parentNode;
    else if (r.nodeType == 11)
      r = r.host;
    else
      break;
  return { x: t, y: n };
}
class q5 {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: t, focusNode: n } = e;
    this.set(t, Math.min(e.anchorOffset, t ? ps(t) : 0), n, Math.min(e.focusOffset, n ? ps(n) : 0));
  }
  set(e, t, n, r) {
    this.anchorNode = e, this.anchorOffset = t, this.focusNode = n, this.focusOffset = r;
  }
}
let Dl = null;
function x$(i) {
  if (i.setActive)
    return i.setActive();
  if (Dl)
    return i.focus(Dl);
  let e = [];
  for (let t = i; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode)
    ;
  if (i.focus(Dl == null ? {
    get preventScroll() {
      return Dl = { preventScroll: !0 }, !0;
    }
  } : void 0), !Dl) {
    Dl = !1;
    for (let t = 0; t < e.length; ) {
      let n = e[t++], r = e[t++], s = e[t++];
      n.scrollTop != r && (n.scrollTop = r), n.scrollLeft != s && (n.scrollLeft = s);
    }
  }
}
let Gv;
function al(i, e, t = e) {
  let n = Gv || (Gv = document.createRange());
  return n.setEnd(i, t), n.setStart(i, e), n;
}
function Hl(i, e, t, n) {
  let r = { key: e, code: e, keyCode: t, which: t, cancelable: !0 };
  n && ({ altKey: r.altKey, ctrlKey: r.ctrlKey, shiftKey: r.shiftKey, metaKey: r.metaKey } = n);
  let s = new KeyboardEvent("keydown", r);
  s.synthetic = !0, i.dispatchEvent(s);
  let o = new KeyboardEvent("keyup", r);
  return o.synthetic = !0, i.dispatchEvent(o), s.defaultPrevented || o.defaultPrevented;
}
function L5(i) {
  for (; i; ) {
    if (i && (i.nodeType == 9 || i.nodeType == 11 && i.host))
      return i;
    i = i.assignedSlot || i.parentNode;
  }
  return null;
}
function k$(i) {
  for (; i.attributes.length; )
    i.removeAttributeNode(i.attributes[0]);
}
function D5(i, e) {
  let t = e.focusNode, n = e.focusOffset;
  if (!t || e.anchorNode != t || e.anchorOffset != n)
    return !1;
  for (n = Math.min(n, ps(t)); ; )
    if (n) {
      if (t.nodeType != 1)
        return !1;
      let r = t.childNodes[n - 1];
      r.contentEditable == "false" ? n-- : (t = r, n = ps(t));
    } else {
      if (t == i)
        return !0;
      n = ll(t), t = t.parentNode;
    }
}
function _$(i) {
  return i.scrollTop > Math.max(1, i.scrollHeight - i.clientHeight - 4);
}
function W$(i, e) {
  for (let t = i, n = e; ; ) {
    if (t.nodeType == 3 && n > 0)
      return { node: t, offset: n };
    if (t.nodeType == 1 && n > 0) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[n - 1], n = ps(t);
    } else if (t.parentNode && !hh(t))
      n = ll(t), t = t.parentNode;
    else
      return null;
  }
}
function T$(i, e) {
  for (let t = i, n = e; ; ) {
    if (t.nodeType == 3 && n < t.nodeValue.length)
      return { node: t, offset: n };
    if (t.nodeType == 1 && n < t.childNodes.length) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[n], n = 0;
    } else if (t.parentNode && !hh(t))
      n = ll(t) + 1, t = t.parentNode;
    else
      return null;
  }
}
class nn {
  constructor(e, t, n = !0) {
    this.node = e, this.offset = t, this.precise = n;
  }
  static before(e, t) {
    return new nn(e.parentNode, ll(e), t);
  }
  static after(e, t) {
    return new nn(e.parentNode, ll(e) + 1, t);
  }
}
const qg = [];
class Ft {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let t = this.posAtStart;
    for (let n of this.children) {
      if (n == e)
        return t;
      t += n.length + n.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, t) {
    if (this.flags & 2) {
      let n = this.dom, r = null, s;
      for (let o of this.children) {
        if (o.flags & 7) {
          if (!o.dom && (s = r ? r.nextSibling : n.firstChild)) {
            let a = Ft.get(s);
            (!a || !a.parent && a.canReuseDOM(o)) && o.reuseDOM(s);
          }
          o.sync(e, t), o.flags &= -8;
        }
        if (s = r ? r.nextSibling : n.firstChild, t && !t.written && t.node == n && s != o.dom && (t.written = !0), o.dom.parentNode == n)
          for (; s && s != o.dom; )
            s = Hv(s);
        else
          n.insertBefore(o.dom, s);
        r = o.dom;
      }
      for (s = r ? r.nextSibling : n.firstChild, s && t && t.node == n && (t.written = !0); s; )
        s = Hv(s);
    } else if (this.flags & 1)
      for (let n of this.children)
        n.flags & 7 && (n.sync(e, t), n.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, t) {
    let n;
    if (e == this.dom)
      n = this.dom.childNodes[t];
    else {
      let r = ps(e) == 0 ? 0 : t == 0 ? -1 : 1;
      for (; ; ) {
        let s = e.parentNode;
        if (s == this.dom)
          break;
        r == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? r = -1 : r = 1), e = s;
      }
      r < 0 ? n = e : n = e.nextSibling;
    }
    if (n == this.dom.firstChild)
      return 0;
    for (; n && !Ft.get(n); )
      n = n.nextSibling;
    if (!n)
      return this.length;
    for (let r = 0, s = 0; ; r++) {
      let o = this.children[r];
      if (o.dom == n)
        return s;
      s += o.length + o.breakAfter;
    }
  }
  domBoundsAround(e, t, n = 0) {
    let r = -1, s = -1, o = -1, a = -1;
    for (let c = 0, u = n, h = n; c < this.children.length; c++) {
      let d = this.children[c], p = u + d.length;
      if (u < e && p > t)
        return d.domBoundsAround(e, t, u);
      if (p >= e && r == -1 && (r = c, s = u), u > t && d.dom.parentNode == this.dom) {
        o = c, a = h;
        break;
      }
      h = p, u = p + d.breakAfter;
    }
    return {
      from: s,
      to: a < 0 ? n + this.length : a,
      startDOM: (r ? this.children[r - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let t = this.parent; t; t = t.parent) {
      if (e && (t.flags |= 2), t.flags & 1)
        return;
      t.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let t = e.parent;
      if (!t)
        return e;
      e = t;
    }
  }
  replaceChildren(e, t, n = qg) {
    this.markDirty();
    for (let r = e; r < t; r++) {
      let s = this.children[r];
      s.parent == this && n.indexOf(s) < 0 && s.destroy();
    }
    n.length < 250 ? this.children.splice(e, t - e, ...n) : this.children = [].concat(this.children.slice(0, e), n, this.children.slice(t));
    for (let r = 0; r < n.length; r++)
      n[r].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new Z$(this.children, e, this.children.length);
  }
  childPos(e, t = 1) {
    return this.childCursor().findPos(e, t);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, t, n, r, s, o) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
Ft.prototype.breakAfter = 0;
function Hv(i) {
  let e = i.nextSibling;
  return i.parentNode.removeChild(i), e;
}
class Z$ {
  constructor(e, t, n) {
    this.children = e, this.pos = t, this.i = n, this.off = 0;
  }
  findPos(e, t = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let n = this.children[--this.i];
      this.pos -= n.length + n.breakAfter;
    }
  }
}
function C$(i, e, t, n, r, s, o, a, c) {
  let { children: u } = i, h = u.length ? u[e] : null, d = s.length ? s[s.length - 1] : null, p = d ? d.breakAfter : o;
  if (!(e == n && h && !o && !p && s.length < 2 && h.merge(t, r, s.length ? d : null, t == 0, a, c))) {
    if (n < u.length) {
      let m = u[n];
      m && (r < m.length || m.breakAfter && (d != null && d.breakAfter)) ? (e == n && (m = m.split(r), r = 0), !p && d && m.merge(0, r, d, !0, 0, c) ? s[s.length - 1] = m : ((r || m.children.length && !m.children[0].length) && m.merge(0, r, null, !1, 0, c), s.push(m))) : m != null && m.breakAfter && (d ? d.breakAfter = 1 : o = 1), n++;
    }
    for (h && (h.breakAfter = o, t > 0 && (!o && s.length && h.merge(t, h.length, s[0], !1, a, 0) ? h.breakAfter = s.shift().breakAfter : (t < h.length || h.children.length && h.children[h.children.length - 1].length == 0) && h.merge(t, h.length, null, !1, a, 0), e++)); e < n && s.length; )
      if (u[n - 1].become(s[s.length - 1]))
        n--, s.pop(), c = s.length ? 0 : a;
      else if (u[e].become(s[0]))
        e++, s.shift(), a = s.length ? 0 : c;
      else
        break;
    !s.length && e && n < u.length && !u[e - 1].breakAfter && u[n].merge(0, 0, u[e - 1], !1, a, c) && e--, (e < n || s.length) && i.replaceChildren(e, n, s);
  }
}
function R$(i, e, t, n, r, s) {
  let o = i.childCursor(), { i: a, off: c } = o.findPos(t, 1), { i: u, off: h } = o.findPos(e, -1), d = e - t;
  for (let p of n)
    d += p.length;
  i.length += d, C$(i, u, h, a, c, n, 0, r, s);
}
let Rn = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, Ap = typeof document < "u" ? document : { documentElement: { style: {} } };
const Xp = /* @__PURE__ */ /Edge\/(\d+)/.exec(Rn.userAgent), A$ = /* @__PURE__ */ /MSIE \d/.test(Rn.userAgent), Mp = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Rn.userAgent), Kh = !!(A$ || Mp || Xp), Kv = !Kh && /* @__PURE__ */ /gecko\/(\d+)/i.test(Rn.userAgent), _d = !Kh && /* @__PURE__ */ /Chrome\/(\d+)/.exec(Rn.userAgent), Jv = "webkitFontSmoothing" in Ap.documentElement.style, X$ = !Kh && /* @__PURE__ */ /Apple Computer/.test(Rn.vendor), e1 = X$ && (/* @__PURE__ */ /Mobile\/\w+/.test(Rn.userAgent) || Rn.maxTouchPoints > 2);
var ke = {
  mac: e1 || /* @__PURE__ */ /Mac/.test(Rn.platform),
  windows: /* @__PURE__ */ /Win/.test(Rn.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(Rn.platform),
  ie: Kh,
  ie_version: A$ ? Ap.documentMode || 6 : Mp ? +Mp[1] : Xp ? +Xp[1] : 0,
  gecko: Kv,
  gecko_version: Kv ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(Rn.userAgent) || [0, 0])[1] : 0,
  chrome: !!_d,
  chrome_version: _d ? +_d[1] : 0,
  ios: e1,
  android: /* @__PURE__ */ /Android\b/.test(Rn.userAgent),
  webkit: Jv,
  safari: X$,
  webkit_version: Jv ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(Rn.userAgent) || [0, 0])[1] : 0,
  tabSize: Ap.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const V5 = 256;
class zr extends Ft {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, t) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, t, n) {
    return this.flags & 8 || n && (!(n instanceof zr) || this.length - (t - e) + n.length > V5 || n.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (n ? n.text : "") + this.text.slice(t), this.markDirty(), !0);
  }
  split(e) {
    let t = new zr(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), t.flags |= this.flags & 8, t;
  }
  localPosFromDOM(e, t) {
    return e == this.dom ? t : t ? this.text.length : 0;
  }
  domAtPos(e) {
    return new nn(this.dom, e);
  }
  domBoundsAround(e, t, n) {
    return { from: n, to: n + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, t) {
    return U5(this.dom, e, t);
  }
}
class Ns extends Ft {
  constructor(e, t = [], n = 0) {
    super(), this.mark = e, this.children = t, this.length = n;
    for (let r of t)
      r.setParent(this);
  }
  setAttrs(e) {
    if (k$(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let t in this.mark.attrs)
        e.setAttribute(t, this.mark.attrs[t]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
  }
  merge(e, t, n, r, s, o) {
    return n && (!(n instanceof Ns && n.mark.eq(this.mark)) || e && s <= 0 || t < this.length && o <= 0) ? !1 : (R$(this, e, t, n ? n.children.slice() : [], s - 1, o - 1), this.markDirty(), !0);
  }
  split(e) {
    let t = [], n = 0, r = -1, s = 0;
    for (let a of this.children) {
      let c = n + a.length;
      c > e && t.push(n < e ? a.split(e - n) : a), r < 0 && n >= e && (r = s), n = c, s++;
    }
    let o = this.length - e;
    return this.length = e, r > -1 && (this.children.length = r, this.markDirty()), new Ns(this.mark, t, o);
  }
  domAtPos(e) {
    return M$(this, e);
  }
  coordsAt(e, t) {
    return q$(this, e, t);
  }
}
function U5(i, e, t) {
  let n = i.nodeValue.length;
  e > n && (e = n);
  let r = e, s = e, o = 0;
  e == 0 && t < 0 || e == n && t >= 0 ? ke.chrome || ke.gecko || (e ? (r--, o = 1) : s < n && (s++, o = -1)) : t < 0 ? r-- : s < n && s++;
  let a = al(i, r, s).getClientRects();
  if (!a.length)
    return null;
  let c = a[(o ? o < 0 : t >= 0) ? 0 : a.length - 1];
  return ke.safari && !o && c.width == 0 && (c = Array.prototype.find.call(a, (u) => u.width) || c), o ? Hh(c, o < 0) : c || null;
}
class Qo extends Ft {
  static create(e, t, n) {
    return new Qo(e, t, n);
  }
  constructor(e, t, n) {
    super(), this.widget = e, this.length = t, this.side = n, this.prevWidget = null;
  }
  split(e) {
    let t = Qo.create(this.widget, this.length - e, this.side);
    return this.length -= e, t;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, t, n, r, s, o) {
    return n && (!(n instanceof Qo) || !this.widget.compare(n.widget) || e > 0 && s <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (n ? n.length : 0) + (this.length - t), !0);
  }
  become(e) {
    return e instanceof Qo && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return Tt.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: t } = e, n = t && t.state.doc, r = this.posAtStart;
    return n ? n.slice(r, r + this.length) : Tt.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? nn.before(this.dom) : nn.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, t) {
    let n = this.widget.coordsAt(this.dom, e, t);
    if (n)
      return n;
    let r = this.dom.getClientRects(), s = null;
    if (!r.length)
      return null;
    let o = this.side ? this.side < 0 : e > 0;
    for (let a = o ? r.length - 1 : 0; s = r[a], !(e > 0 ? a == 0 : a == r.length - 1 || s.top < s.bottom); a += o ? -1 : 1)
      ;
    return Hh(s, !o);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class ra extends Ft {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof ra && e.side == this.side;
  }
  split() {
    return new ra(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? nn.before(this.dom) : nn.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return Tt.empty;
  }
  get isHidden() {
    return !0;
  }
}
zr.prototype.children = Qo.prototype.children = ra.prototype.children = qg;
function M$(i, e) {
  let t = i.dom, { children: n } = i, r = 0;
  for (let s = 0; r < n.length; r++) {
    let o = n[r], a = s + o.length;
    if (!(a == s && o.getSide() <= 0)) {
      if (e > s && e < a && o.dom.parentNode == t)
        return o.domAtPos(e - s);
      if (e <= s)
        break;
      s = a;
    }
  }
  for (let s = r; s > 0; s--) {
    let o = n[s - 1];
    if (o.dom.parentNode == t)
      return o.domAtPos(o.length);
  }
  for (let s = r; s < n.length; s++) {
    let o = n[s];
    if (o.dom.parentNode == t)
      return o.domAtPos(0);
  }
  return new nn(t, 0);
}
function E$(i, e, t) {
  let n, { children: r } = i;
  t > 0 && e instanceof Ns && r.length && (n = r[r.length - 1]) instanceof Ns && n.mark.eq(e.mark) ? E$(n, e.children[0], t - 1) : (r.push(e), e.setParent(i)), i.length += e.length;
}
function q$(i, e, t) {
  let n = null, r = -1, s = null, o = -1;
  function a(u, h) {
    for (let d = 0, p = 0; d < u.children.length && p <= h; d++) {
      let m = u.children[d], b = p + m.length;
      b >= h && (m.children.length ? a(m, h - p) : (!s || s.isHidden && t > 0) && (b > h || p == b && m.getSide() > 0) ? (s = m, o = h - p) : (p < h || p == b && m.getSide() < 0 && !m.isHidden) && (n = m, r = h - p)), p = b;
    }
  }
  a(i, e);
  let c = (t < 0 ? n : s) || n || s;
  return c ? c.coordsAt(Math.max(0, c == n ? r : o), t) : Y5(i);
}
function Y5(i) {
  let e = i.dom.lastChild;
  if (!e)
    return i.dom.getBoundingClientRect();
  let t = Wc(e);
  return t[t.length - 1] || null;
}
function Ep(i, e) {
  for (let t in i)
    t == "class" && e.class ? e.class += " " + i.class : t == "style" && e.style ? e.style += ";" + i.style : e[t] = i[t];
  return e;
}
const t1 = /* @__PURE__ */ Object.create(null);
function Oh(i, e, t) {
  if (i == e)
    return !0;
  i || (i = t1), e || (e = t1);
  let n = Object.keys(i), r = Object.keys(e);
  if (n.length - (t && n.indexOf(t) > -1 ? 1 : 0) != r.length - (t && r.indexOf(t) > -1 ? 1 : 0))
    return !1;
  for (let s of n)
    if (s != t && (r.indexOf(s) == -1 || i[s] !== e[s]))
      return !1;
  return !0;
}
function qp(i, e, t) {
  let n = !1;
  if (e)
    for (let r in e)
      t && r in t || (n = !0, r == "style" ? i.style.cssText = "" : i.removeAttribute(r));
  if (t)
    for (let r in t)
      e && e[r] == t[r] || (n = !0, r == "style" ? i.style.cssText = t[r] : i.setAttribute(r, t[r]));
  return n;
}
function z5(i) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t = 0; t < i.attributes.length; t++) {
    let n = i.attributes[t];
    e[n.name] = n.value;
  }
  return e;
}
class eo {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, t) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, t, n) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var vn = /* @__PURE__ */ function(i) {
  return i[i.Text = 0] = "Text", i[i.WidgetBefore = 1] = "WidgetBefore", i[i.WidgetAfter = 2] = "WidgetAfter", i[i.WidgetRange = 3] = "WidgetRange", i;
}(vn || (vn = {}));
class Ue extends ol {
  constructor(e, t, n, r) {
    super(), this.startSide = e, this.endSide = t, this.widget = n, this.spec = r;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new Gc(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let t = Math.max(-1e4, Math.min(1e4, e.side || 0)), n = !!e.block;
    return t += n && !e.inlineOrder ? t > 0 ? 3e8 : -4e8 : t > 0 ? 1e8 : -1e8, new To(e, t, t, n, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let t = !!e.block, n, r;
    if (e.isBlockGap)
      n = -5e8, r = 4e8;
    else {
      let { start: s, end: o } = L$(e, t);
      n = (s ? t ? -3e8 : -1 : 5e8) - 1, r = (o ? t ? 2e8 : 1 : -6e8) + 1;
    }
    return new To(e, n, r, t, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new Hc(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, t = !1) {
    return xt.of(e, t);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
Ue.none = xt.empty;
class Gc extends Ue {
  constructor(e) {
    let { start: t, end: n } = L$(e);
    super(t ? -1 : 5e8, n ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var t, n;
    return this == e || e instanceof Gc && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((n = e.attrs) === null || n === void 0 ? void 0 : n.class)) && Oh(this.attrs, e.attrs, "class");
  }
  range(e, t = e) {
    if (e >= t)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, t);
  }
}
Gc.prototype.point = !1;
class Hc extends Ue {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof Hc && this.spec.class == e.spec.class && Oh(this.spec.attributes, e.spec.attributes);
  }
  range(e, t = e) {
    if (t != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, t);
  }
}
Hc.prototype.mapMode = Ui.TrackBefore;
Hc.prototype.point = !0;
class To extends Ue {
  constructor(e, t, n, r, s, o) {
    super(t, n, s, e), this.block = r, this.isReplace = o, this.mapMode = r ? t <= 0 ? Ui.TrackBefore : Ui.TrackAfter : Ui.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? vn.WidgetRange : this.startSide <= 0 ? vn.WidgetBefore : vn.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof To && j5(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, t = e) {
    if (this.isReplace && (e > t || e == t && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && t != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, t);
  }
}
To.prototype.point = !0;
function L$(i, e = !1) {
  let { inclusiveStart: t, inclusiveEnd: n } = i;
  return t == null && (t = i.inclusive), n == null && (n = i.inclusive), { start: t ?? e, end: n ?? e };
}
function j5(i, e) {
  return i == e || !!(i && e && i.compare(e));
}
function Yu(i, e, t, n = 0) {
  let r = t.length - 1;
  r >= 0 && t[r] + n >= i ? t[r] = Math.max(t[r], e) : t.push(i, e);
}
class Si extends Ft {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, t, n, r, s, o) {
    if (n) {
      if (!(n instanceof Si))
        return !1;
      this.dom || n.transferDOM(this);
    }
    return r && this.setDeco(n ? n.attrs : null), R$(this, e, t, n ? n.children.slice() : [], s, o), !0;
  }
  split(e) {
    let t = new Si();
    if (t.breakAfter = this.breakAfter, this.length == 0)
      return t;
    let { i: n, off: r } = this.childPos(e);
    r && (t.append(this.children[n].split(r), 0), this.children[n].merge(r, this.children[n].length, null, !1, 0, 0), n++);
    for (let s = n; s < this.children.length; s++)
      t.append(this.children[s], 0);
    for (; n > 0 && this.children[n - 1].length == 0; )
      this.children[--n].destroy();
    return this.children.length = n, this.markDirty(), this.length = e, t;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    Oh(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, t) {
    E$(this, e, t);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let t = e.spec.attributes, n = e.spec.class;
    t && (this.attrs = Ep(t, this.attrs || {})), n && (this.attrs = Ep({ class: n }, this.attrs || {}));
  }
  domAtPos(e) {
    return M$(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    var n;
    this.dom ? this.flags & 4 && (k$(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (qp(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, t);
    let r = this.dom.lastChild;
    for (; r && Ft.get(r) instanceof Ns; )
      r = r.lastChild;
    if (!r || !this.length || r.nodeName != "BR" && ((n = Ft.get(r)) === null || n === void 0 ? void 0 : n.isEditable) == !1 && (!ke.ios || !this.children.some((s) => s instanceof zr))) {
      let s = document.createElement("BR");
      s.cmIgnore = !0, this.dom.appendChild(s);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, t;
    for (let n of this.children) {
      if (!(n instanceof zr) || /[^ -~]/.test(n.text))
        return null;
      let r = Wc(n.dom);
      if (r.length != 1)
        return null;
      e += r[0].width, t = r[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: t
    } : null;
  }
  coordsAt(e, t) {
    let n = q$(this, e, t);
    if (!this.children.length && n && this.parent) {
      let { heightOracle: r } = this.parent.view.viewState, s = n.bottom - n.top;
      if (Math.abs(s - r.lineHeight) < 2 && r.textHeight < s) {
        let o = (s - r.textHeight) / 2;
        return { top: n.top + o, bottom: n.bottom - o, left: n.left, right: n.left };
      }
    }
    return n;
  }
  become(e) {
    return e instanceof Si && this.children.length == 0 && e.children.length == 0 && Oh(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;
  }
  covers() {
    return !0;
  }
  static find(e, t) {
    for (let n = 0, r = 0; n < e.children.length; n++) {
      let s = e.children[n], o = r + s.length;
      if (o >= t) {
        if (s instanceof Si)
          return s;
        if (o > t)
          break;
      }
      r = o + s.breakAfter;
    }
    return null;
  }
}
class js extends Ft {
  constructor(e, t, n) {
    super(), this.widget = e, this.length = t, this.deco = n, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, t, n, r, s, o) {
    return n && (!(n instanceof js) || !this.widget.compare(n.widget) || e > 0 && s <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (n ? n.length : 0) + (this.length - t), !0);
  }
  domAtPos(e) {
    return e == 0 ? nn.before(this.dom) : nn.after(this.dom, e == this.length);
  }
  split(e) {
    let t = this.length - e;
    this.length = e;
    let n = new js(this.widget, t, this.deco);
    return n.breakAfter = this.breakAfter, n;
  }
  get children() {
    return qg;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Tt.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof js && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, t) {
    let n = this.widget.coordsAt(this.dom, e, t);
    return n || (this.widget instanceof Lp ? null : Hh(this.dom.getBoundingClientRect(), this.length ? e == 0 : t <= 0));
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: t, endSide: n } = this.deco;
    return t == n ? !1 : e < 0 ? t < 0 : n > 0;
  }
}
class Lp extends eo {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
class vc {
  constructor(e, t, n, r) {
    this.doc = e, this.pos = t, this.end = n, this.disallowBlockEffectsFor = r, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = t;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof js && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new Si()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(Ou(new ra(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof js) && this.getLine();
  }
  buildText(e, t, n) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: s, lineBreak: o, done: a } = this.cursor.next(this.skip);
        if (this.skip = 0, a)
          throw new Error("Ran out of text content when drawing inline views");
        if (o) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = s, this.textOff = 0;
      }
      let r = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(t.slice(t.length - n)), this.getLine().append(Ou(new zr(this.text.slice(this.textOff, this.textOff + r)), t), n), this.atCursorPos = !0, this.textOff += r, e -= r, n = 0;
    }
  }
  span(e, t, n, r) {
    this.buildText(t - e, n, r), this.pos = t, this.openStart < 0 && (this.openStart = r);
  }
  point(e, t, n, r, s, o) {
    if (this.disallowBlockEffectsFor[o] && n instanceof To) {
      if (n.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (t > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let a = t - e;
    if (n instanceof To)
      if (n.block)
        n.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new js(n.widget || sa.block, a, n));
      else {
        let c = Qo.create(n.widget || sa.inline, a, a ? 0 : n.startSide), u = this.atCursorPos && !c.isEditable && s <= r.length && (e < t || n.startSide > 0), h = !c.isEditable && (e < t || s > r.length || n.startSide <= 0), d = this.getLine();
        this.pendingBuffer == 2 && !u && !c.isEditable && (this.pendingBuffer = 0), this.flushBuffer(r), u && (d.append(Ou(new ra(1), r), s), s = r.length + Math.max(0, s - r.length)), d.append(Ou(c, r), s), this.atCursorPos = h, this.pendingBuffer = h ? e < t || s > r.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = r.slice());
      }
    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(n);
    a && (this.textOff + a <= this.text.length ? this.textOff += a : (this.skip += a - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = t), this.openStart < 0 && (this.openStart = s);
  }
  static build(e, t, n, r, s) {
    let o = new vc(e, t, n, s);
    return o.openEnd = xt.spans(r, t, n, o), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
  }
}
function Ou(i, e) {
  for (let t of e)
    i = new Ns(t, [i], i.length);
  return i;
}
class sa extends eo {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
sa.inline = /* @__PURE__ */ new sa("span");
sa.block = /* @__PURE__ */ new sa("div");
var ii = /* @__PURE__ */ function(i) {
  return i[i.LTR = 0] = "LTR", i[i.RTL = 1] = "RTL", i;
}(ii || (ii = {}));
const cl = ii.LTR, Lg = ii.RTL;
function D$(i) {
  let e = [];
  for (let t = 0; t < i.length; t++)
    e.push(1 << +i[t]);
  return e;
}
const B5 = /* @__PURE__ */ D$("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), I5 = /* @__PURE__ */ D$("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), Dp = /* @__PURE__ */ Object.create(null), Kr = [];
for (let i of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ i.charCodeAt(0), t = /* @__PURE__ */ i.charCodeAt(1);
  Dp[e] = t, Dp[t] = -e;
}
function V$(i) {
  return i <= 247 ? B5[i] : 1424 <= i && i <= 1524 ? 2 : 1536 <= i && i <= 1785 ? I5[i - 1536] : 1774 <= i && i <= 2220 ? 4 : 8192 <= i && i <= 8204 ? 256 : 64336 <= i && i <= 65023 ? 4 : 1;
}
const N5 = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class wo {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? Lg : cl;
  }
  /**
  @internal
  */
  constructor(e, t, n) {
    this.from = e, this.to = t, this.level = n;
  }
  /**
  @internal
  */
  side(e, t) {
    return this.dir == t == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, t) {
    return e == (this.dir == t);
  }
  /**
  @internal
  */
  static find(e, t, n, r) {
    let s = -1;
    for (let o = 0; o < e.length; o++) {
      let a = e[o];
      if (a.from <= t && a.to >= t) {
        if (a.level == n)
          return o;
        (s < 0 || (r != 0 ? r < 0 ? a.from < t : a.to > t : e[s].level > a.level)) && (s = o);
      }
    }
    if (s < 0)
      throw new RangeError("Index out of range");
    return s;
  }
}
function U$(i, e) {
  if (i.length != e.length)
    return !1;
  for (let t = 0; t < i.length; t++) {
    let n = i[t], r = e[t];
    if (n.from != r.from || n.to != r.to || n.direction != r.direction || !U$(n.inner, r.inner))
      return !1;
  }
  return !0;
}
const Nt = [];
function F5(i, e, t, n, r) {
  for (let s = 0; s <= n.length; s++) {
    let o = s ? n[s - 1].to : e, a = s < n.length ? n[s].from : t, c = s ? 256 : r;
    for (let u = o, h = c, d = c; u < a; u++) {
      let p = V$(i.charCodeAt(u));
      p == 512 ? p = h : p == 8 && d == 4 && (p = 16), Nt[u] = p == 4 ? 2 : p, p & 7 && (d = p), h = p;
    }
    for (let u = o, h = c, d = c; u < a; u++) {
      let p = Nt[u];
      if (p == 128)
        u < a - 1 && h == Nt[u + 1] && h & 24 ? p = Nt[u] = h : Nt[u] = 256;
      else if (p == 64) {
        let m = u + 1;
        for (; m < a && Nt[m] == 64; )
          m++;
        let b = u && h == 8 || m < t && Nt[m] == 8 ? d == 1 ? 1 : 8 : 256;
        for (let y = u; y < m; y++)
          Nt[y] = b;
        u = m - 1;
      } else p == 8 && d == 1 && (Nt[u] = 1);
      h = p, p & 7 && (d = p);
    }
  }
}
function G5(i, e, t, n, r) {
  let s = r == 1 ? 2 : 1;
  for (let o = 0, a = 0, c = 0; o <= n.length; o++) {
    let u = o ? n[o - 1].to : e, h = o < n.length ? n[o].from : t;
    for (let d = u, p, m, b; d < h; d++)
      if (m = Dp[p = i.charCodeAt(d)])
        if (m < 0) {
          for (let y = a - 3; y >= 0; y -= 3)
            if (Kr[y + 1] == -m) {
              let w = Kr[y + 2], k = w & 2 ? r : w & 4 ? w & 1 ? s : r : 0;
              k && (Nt[d] = Nt[Kr[y]] = k), a = y;
              break;
            }
        } else {
          if (Kr.length == 189)
            break;
          Kr[a++] = d, Kr[a++] = p, Kr[a++] = c;
        }
      else if ((b = Nt[d]) == 2 || b == 1) {
        let y = b == r;
        c = y ? 0 : 1;
        for (let w = a - 3; w >= 0; w -= 3) {
          let k = Kr[w + 2];
          if (k & 2)
            break;
          if (y)
            Kr[w + 2] |= 2;
          else {
            if (k & 4)
              break;
            Kr[w + 2] |= 4;
          }
        }
      }
  }
}
function H5(i, e, t, n) {
  for (let r = 0, s = n; r <= t.length; r++) {
    let o = r ? t[r - 1].to : i, a = r < t.length ? t[r].from : e;
    for (let c = o; c < a; ) {
      let u = Nt[c];
      if (u == 256) {
        let h = c + 1;
        for (; ; )
          if (h == a) {
            if (r == t.length)
              break;
            h = t[r++].to, a = r < t.length ? t[r].from : e;
          } else if (Nt[h] == 256)
            h++;
          else
            break;
        let d = s == 1, p = (h < e ? Nt[h] : n) == 1, m = d == p ? d ? 1 : 2 : n;
        for (let b = h, y = r, w = y ? t[y - 1].to : i; b > c; )
          b == w && (b = t[--y].from, w = y ? t[y - 1].to : i), Nt[--b] = m;
        c = h;
      } else
        s = u, c++;
    }
  }
}
function Vp(i, e, t, n, r, s, o) {
  let a = n % 2 ? 2 : 1;
  if (n % 2 == r % 2)
    for (let c = e, u = 0; c < t; ) {
      let h = !0, d = !1;
      if (u == s.length || c < s[u].from) {
        let y = Nt[c];
        y != a && (h = !1, d = y == 16);
      }
      let p = !h && a == 1 ? [] : null, m = h ? n : n + 1, b = c;
      e: for (; ; )
        if (u < s.length && b == s[u].from) {
          if (d)
            break e;
          let y = s[u];
          if (!h)
            for (let w = y.to, k = u + 1; ; ) {
              if (w == t)
                break e;
              if (k < s.length && s[k].from == w)
                w = s[k++].to;
              else {
                if (Nt[w] == a)
                  break e;
                break;
              }
            }
          if (u++, p)
            p.push(y);
          else {
            y.from > c && o.push(new wo(c, y.from, m));
            let w = y.direction == cl != !(m % 2);
            Up(i, w ? n + 1 : n, r, y.inner, y.from, y.to, o), c = y.to;
          }
          b = y.to;
        } else {
          if (b == t || (h ? Nt[b] != a : Nt[b] == a))
            break;
          b++;
        }
      p ? Vp(i, c, b, n + 1, r, p, o) : c < b && o.push(new wo(c, b, m)), c = b;
    }
  else
    for (let c = t, u = s.length; c > e; ) {
      let h = !0, d = !1;
      if (!u || c > s[u - 1].to) {
        let y = Nt[c - 1];
        y != a && (h = !1, d = y == 16);
      }
      let p = !h && a == 1 ? [] : null, m = h ? n : n + 1, b = c;
      e: for (; ; )
        if (u && b == s[u - 1].to) {
          if (d)
            break e;
          let y = s[--u];
          if (!h)
            for (let w = y.from, k = u; ; ) {
              if (w == e)
                break e;
              if (k && s[k - 1].to == w)
                w = s[--k].from;
              else {
                if (Nt[w - 1] == a)
                  break e;
                break;
              }
            }
          if (p)
            p.push(y);
          else {
            y.to < c && o.push(new wo(y.to, c, m));
            let w = y.direction == cl != !(m % 2);
            Up(i, w ? n + 1 : n, r, y.inner, y.from, y.to, o), c = y.from;
          }
          b = y.from;
        } else {
          if (b == e || (h ? Nt[b - 1] != a : Nt[b - 1] == a))
            break;
          b--;
        }
      p ? Vp(i, b, c, n + 1, r, p, o) : b < c && o.push(new wo(b, c, m)), c = b;
    }
}
function Up(i, e, t, n, r, s, o) {
  let a = e % 2 ? 2 : 1;
  F5(i, r, s, n, a), G5(i, r, s, n, a), H5(r, s, n, a), Vp(i, r, s, e, t, n, o);
}
function K5(i, e, t) {
  if (!i)
    return [new wo(0, 0, e == Lg ? 1 : 0)];
  if (e == cl && !t.length && !N5.test(i))
    return Y$(i.length);
  if (t.length)
    for (; i.length > Nt.length; )
      Nt[Nt.length] = 256;
  let n = [], r = e == cl ? 0 : 1;
  return Up(i, r, r, t, 0, i.length, n), n;
}
function Y$(i) {
  return [new wo(0, i, 0)];
}
let z$ = "";
function J5(i, e, t, n, r) {
  var s;
  let o = n.head - i.from, a = wo.find(e, o, (s = n.bidiLevel) !== null && s !== void 0 ? s : -1, n.assoc), c = e[a], u = c.side(r, t);
  if (o == u) {
    let p = a += r ? 1 : -1;
    if (p < 0 || p >= e.length)
      return null;
    c = e[a = p], o = c.side(!r, t), u = c.side(r, t);
  }
  let h = Yi(i.text, o, c.forward(r, t));
  (h < c.from || h > c.to) && (h = u), z$ = i.text.slice(Math.min(o, h), Math.max(o, h));
  let d = a == (r ? e.length - 1 : 0) ? null : e[a + (r ? 1 : -1)];
  return d && h == u && d.level + (r ? 0 : 1) < c.level ? J.cursor(d.side(!r, t) + i.from, d.forward(r, t) ? 1 : -1, d.level) : J.cursor(h + i.from, c.forward(r, t) ? -1 : 1, c.level);
}
function eC(i, e, t) {
  for (let n = e; n < t; n++) {
    let r = V$(i.charCodeAt(n));
    if (r == 1)
      return cl;
    if (r == 2 || r == 4)
      return Lg;
  }
  return cl;
}
const j$ = /* @__PURE__ */ _e.define(), B$ = /* @__PURE__ */ _e.define(), I$ = /* @__PURE__ */ _e.define(), N$ = /* @__PURE__ */ _e.define(), Yp = /* @__PURE__ */ _e.define(), F$ = /* @__PURE__ */ _e.define(), G$ = /* @__PURE__ */ _e.define(), Dg = /* @__PURE__ */ _e.define(), Vg = /* @__PURE__ */ _e.define(), H$ = /* @__PURE__ */ _e.define({
  combine: (i) => i.some((e) => e)
}), K$ = /* @__PURE__ */ _e.define({
  combine: (i) => i.some((e) => e)
}), J$ = /* @__PURE__ */ _e.define();
class Kl {
  constructor(e, t = "nearest", n = "nearest", r = 5, s = 5, o = !1) {
    this.range = e, this.y = t, this.x = n, this.yMargin = r, this.xMargin = s, this.isSnapshot = o;
  }
  map(e) {
    return e.empty ? this : new Kl(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new Kl(J.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const du = /* @__PURE__ */ nt.define({ map: (i, e) => i.map(e) }), ey = /* @__PURE__ */ nt.define();
function Xn(i, e, t) {
  let n = i.facet(N$);
  n.length ? n[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
}
const Vs = /* @__PURE__ */ _e.define({ combine: (i) => i.length ? i[0] : !0 });
let tC = 0;
const oc = /* @__PURE__ */ _e.define();
class yi {
  constructor(e, t, n, r, s) {
    this.id = e, this.create = t, this.domEventHandlers = n, this.domEventObservers = r, this.extension = s(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, t) {
    const { eventHandlers: n, eventObservers: r, provide: s, decorations: o } = t || {};
    return new yi(tC++, e, n, r, (a) => {
      let c = [oc.of(a)];
      return o && c.push(Tc.of((u) => {
        let h = u.plugin(a);
        return h ? o(h) : Ue.none;
      })), s && c.push(s(a)), c;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, t) {
    return yi.define((n) => new e(n), t);
  }
}
class Wd {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let t = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(t);
          } catch (n) {
            if (Xn(t.state, n, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (t) {
        Xn(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var t;
    if (!((t = this.value) === null || t === void 0) && t.destroy)
      try {
        this.value.destroy();
      } catch (n) {
        Xn(e.state, n, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const ty = /* @__PURE__ */ _e.define(), Ug = /* @__PURE__ */ _e.define(), Tc = /* @__PURE__ */ _e.define(), iy = /* @__PURE__ */ _e.define(), Yg = /* @__PURE__ */ _e.define(), ny = /* @__PURE__ */ _e.define();
function i1(i, e) {
  let t = i.state.facet(ny);
  if (!t.length)
    return t;
  let n = t.map((s) => s instanceof Function ? s(i) : s), r = [];
  return xt.spans(n, e.from, e.to, {
    point() {
    },
    span(s, o, a, c) {
      let u = s - e.from, h = o - e.from, d = r;
      for (let p = a.length - 1; p >= 0; p--, c--) {
        let m = a[p].spec.bidiIsolate, b;
        if (m == null && (m = eC(e.text, u, h)), c > 0 && d.length && (b = d[d.length - 1]).to == u && b.direction == m)
          b.to = h, d = b.inner;
        else {
          let y = { from: u, to: h, direction: m, inner: [] };
          d.push(y), d = y.inner;
        }
      }
    }
  }), r;
}
const ry = /* @__PURE__ */ _e.define();
function zg(i) {
  let e = 0, t = 0, n = 0, r = 0;
  for (let s of i.state.facet(ry)) {
    let o = s(i);
    o && (o.left != null && (e = Math.max(e, o.left)), o.right != null && (t = Math.max(t, o.right)), o.top != null && (n = Math.max(n, o.top)), o.bottom != null && (r = Math.max(r, o.bottom)));
  }
  return { left: e, right: t, top: n, bottom: r };
}
const lc = /* @__PURE__ */ _e.define();
class Sr {
  constructor(e, t, n, r) {
    this.fromA = e, this.toA = t, this.fromB = n, this.toB = r;
  }
  join(e) {
    return new Sr(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let t = e.length, n = this;
    for (; t > 0; t--) {
      let r = e[t - 1];
      if (!(r.fromA > n.toA)) {
        if (r.toA < n.fromA)
          break;
        n = n.join(r), e.splice(t - 1, 1);
      }
    }
    return e.splice(t, 0, n), e;
  }
  static extendWithRanges(e, t) {
    if (t.length == 0)
      return e;
    let n = [];
    for (let r = 0, s = 0, o = 0, a = 0; ; r++) {
      let c = r == e.length ? null : e[r], u = o - a, h = c ? c.fromB : 1e9;
      for (; s < t.length && t[s] < h; ) {
        let d = t[s], p = t[s + 1], m = Math.max(a, d), b = Math.min(h, p);
        if (m <= b && new Sr(m + u, b + u, m, b).addToSet(n), p > h)
          break;
        s += 2;
      }
      if (!c)
        return n;
      new Sr(c.fromA, c.toA, c.fromB, c.toB).addToSet(n), o = c.toA, a = c.toB;
    }
  }
}
class dh {
  constructor(e, t, n) {
    this.view = e, this.state = t, this.transactions = n, this.flags = 0, this.startState = e.state, this.changes = ki.empty(this.startState.doc.length);
    for (let s of n)
      this.changes = this.changes.compose(s.changes);
    let r = [];
    this.changes.iterChangedRanges((s, o, a, c) => r.push(new Sr(s, o, a, c))), this.changedRanges = r;
  }
  /**
  @internal
  */
  static create(e, t, n) {
    return new dh(e, t, n);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Returns true when
  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true
  and the viewport change is not just the result of mapping it in
  response to document changes.
  */
  get viewportMoved() {
    return (this.flags & 8) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 18) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class n1 extends Ft {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = Ue.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new Si()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new Sr(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var t;
    let n = e.changedRanges;
    this.minWidth > 0 && n.length && (n.every(({ fromA: u, toA: h }) => h < this.minWidthFrom || u > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);
    let r = -1;
    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((t = this.domChanged) === null || t === void 0) && t.newSel ? r = this.domChanged.newSel.head : !aC(e.changes, this.hasComposition) && !e.selectionSet && (r = e.state.selection.main.head));
    let s = r > -1 ? nC(this.view, e.changes, r) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: u, to: h } = this.hasComposition;
      n = new Sr(u, h, e.changes.mapPos(u, -1), e.changes.mapPos(h, 1)).addToSet(n.slice());
    }
    this.hasComposition = s ? { from: s.range.fromB, to: s.range.toB } : null, (ke.ie || ke.chrome) && !s && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let o = this.decorations, a = this.updateDeco(), c = oC(o, a, e.changes);
    return n = Sr.extendWithRanges(n, c), !(this.flags & 7) && n.length == 0 ? !1 : (this.updateInner(n, e.startState.doc.length, s), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, t, n) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, t, n);
    let { observer: r } = this.view;
    r.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let o = ke.chrome || ke.ios ? { node: r.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, o), this.flags &= -8, o && (o.written || r.selectionRange.focusNode != o.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (o) => o.flags &= -9
      /* ViewFlag.Composition */
    );
    let s = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let o of this.children)
        o instanceof js && o.widget instanceof Lp && s.push(o.dom);
    r.updateGaps(s);
  }
  updateChildren(e, t, n) {
    let r = n ? n.range.addToSet(e.slice()) : e, s = this.childCursor(t);
    for (let o = r.length - 1; ; o--) {
      let a = o >= 0 ? r[o] : null;
      if (!a)
        break;
      let { fromA: c, toA: u, fromB: h, toB: d } = a, p, m, b, y;
      if (n && n.range.fromB < d && n.range.toB > h) {
        let _ = vc.build(this.view.state.doc, h, n.range.fromB, this.decorations, this.dynamicDecorationMap), W = vc.build(this.view.state.doc, n.range.toB, d, this.decorations, this.dynamicDecorationMap);
        m = _.breakAtStart, b = _.openStart, y = W.openEnd;
        let D = this.compositionView(n);
        W.breakAtStart ? D.breakAfter = 1 : W.content.length && D.merge(D.length, D.length, W.content[0], !1, W.openStart, 0) && (D.breakAfter = W.content[0].breakAfter, W.content.shift()), _.content.length && D.merge(0, 0, _.content[_.content.length - 1], !0, 0, _.openEnd) && _.content.pop(), p = _.content.concat(D).concat(W.content);
      } else
        ({ content: p, breakAtStart: m, openStart: b, openEnd: y } = vc.build(this.view.state.doc, h, d, this.decorations, this.dynamicDecorationMap));
      let { i: w, off: k } = s.findPos(u, 1), { i: A, off: x } = s.findPos(c, -1);
      C$(this, A, x, w, k, p, m, b, y);
    }
    n && this.fixCompositionDOM(n);
  }
  updateEditContextFormatting(e) {
    this.editContextFormatting = this.editContextFormatting.map(e.changes);
    for (let t of e.transactions)
      for (let n of t.effects)
        n.is(ey) && (this.editContextFormatting = n.value);
  }
  compositionView(e) {
    let t = new zr(e.text.nodeValue);
    t.flags |= 8;
    for (let { deco: r } of e.marks)
      t = new Ns(r, [t], t.length);
    let n = new Si();
    return n.append(t, 0), n;
  }
  fixCompositionDOM(e) {
    let t = (s, o) => {
      o.flags |= 8 | (o.children.some(
        (c) => c.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(o);
      let a = Ft.get(s);
      a && a != o && (a.dom = null), o.setDOM(s);
    }, n = this.childPos(e.range.fromB, 1), r = this.children[n.i];
    t(e.line, r);
    for (let s = e.marks.length - 1; s >= -1; s--)
      n = r.childPos(n.off, 1), r = r.children[n.i], t(s >= 0 ? e.marks[s].node : e.text, r);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, t = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let n = this.view.root.activeElement, r = n == this.dom, s = !r && !(this.view.state.facet(Vs) || this.dom.tabIndex > -1) && Uu(this.dom, this.view.observer.selectionRange) && !(n && this.dom.contains(n));
    if (!(r || t || s))
      return;
    let o = this.forceSelection;
    this.forceSelection = !1;
    let a = this.view.state.selection.main, c = this.moveToLine(this.domAtPos(a.anchor)), u = a.empty ? c : this.moveToLine(this.domAtPos(a.head));
    if (ke.gecko && a.empty && !this.hasComposition && iC(c)) {
      let d = document.createTextNode("");
      this.view.observer.ignore(() => c.node.insertBefore(d, c.node.childNodes[c.offset] || null)), c = u = new nn(d, 0), o = !0;
    }
    let h = this.view.observer.selectionRange;
    (o || !h.focusNode || (!mc(c.node, c.offset, h.anchorNode, h.anchorOffset) || !mc(u.node, u.offset, h.focusNode, h.focusOffset)) && !this.suppressWidgetCursorChange(h, a)) && (this.view.observer.ignore(() => {
      ke.android && ke.chrome && this.dom.contains(h.focusNode) && lC(h.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let d = _c(this.view.root);
      if (d) if (a.empty) {
        if (ke.gecko) {
          let p = rC(c.node, c.offset);
          if (p && p != 3) {
            let m = (p == 1 ? W$ : T$)(c.node, c.offset);
            m && (c = new nn(m.node, m.offset));
          }
        }
        d.collapse(c.node, c.offset), a.bidiLevel != null && d.caretBidiLevel !== void 0 && (d.caretBidiLevel = a.bidiLevel);
      } else if (d.extend) {
        d.collapse(c.node, c.offset);
        try {
          d.extend(u.node, u.offset);
        } catch {
        }
      } else {
        let p = document.createRange();
        a.anchor > a.head && ([c, u] = [u, c]), p.setEnd(u.node, u.offset), p.setStart(c.node, c.offset), d.removeAllRanges(), d.addRange(p);
      }
      s && this.view.root.activeElement == this.dom && (this.dom.blur(), n && n.focus());
    }), this.view.observer.setSelectionRange(c, u)), this.impreciseAnchor = c.precise ? null : new nn(h.anchorNode, h.anchorOffset), this.impreciseHead = u.precise ? null : new nn(h.focusNode, h.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, t) {
    return this.hasComposition && t.empty && mc(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == t.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, t = e.state.selection.main, n = _c(e.root), { anchorNode: r, anchorOffset: s } = e.observer.selectionRange;
    if (!n || !t.empty || !t.assoc || !n.modify)
      return;
    let o = Si.find(this, t.head);
    if (!o)
      return;
    let a = o.posAtStart;
    if (t.head == a || t.head == a + o.length)
      return;
    let c = this.coordsAt(t.head, -1), u = this.coordsAt(t.head, 1);
    if (!c || !u || c.bottom > u.top)
      return;
    let h = this.domAtPos(t.head + t.assoc);
    n.collapse(h.node, h.offset), n.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let d = e.observer.selectionRange;
    e.docView.posFromDOM(d.anchorNode, d.anchorOffset) != t.from && n.collapse(r, s);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let t = this.dom, n;
    if (e.node != t)
      return e;
    for (let r = e.offset; !n && r < t.childNodes.length; r++) {
      let s = Ft.get(t.childNodes[r]);
      s instanceof Si && (n = s.domAtPos(0));
    }
    for (let r = e.offset - 1; !n && r >= 0; r--) {
      let s = Ft.get(t.childNodes[r]);
      s instanceof Si && (n = s.domAtPos(s.length));
    }
    return n ? new nn(n.node, n.offset, !0) : e;
  }
  nearest(e) {
    for (let t = e; t; ) {
      let n = Ft.get(t);
      if (n && n.rootView == this)
        return n;
      t = t.parentNode;
    }
    return null;
  }
  posFromDOM(e, t) {
    let n = this.nearest(e);
    if (!n)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return n.localPosFromDOM(e, t) + n.posAtStart;
  }
  domAtPos(e) {
    let { i: t, off: n } = this.childCursor().findPos(e, -1);
    for (; t < this.children.length - 1; ) {
      let r = this.children[t];
      if (n < r.length || r instanceof Si)
        break;
      t++, n = 0;
    }
    return this.children[t].domAtPos(n);
  }
  coordsAt(e, t) {
    let n = null, r = 0;
    for (let s = this.length, o = this.children.length - 1; o >= 0; o--) {
      let a = this.children[o], c = s - a.breakAfter, u = c - a.length;
      if (c < e)
        break;
      if (u <= e && (u < e || a.covers(-1)) && (c > e || a.covers(1)) && (!n || a instanceof Si && !(n instanceof Si && t >= 0)))
        n = a, r = u;
      else if (n && u == e && c == e && a instanceof js && Math.abs(t) < 2) {
        if (a.deco.startSide < 0)
          break;
        o && (n = null);
      }
      s = u;
    }
    return n ? n.coordsAt(e - r, t) : null;
  }
  coordsForChar(e) {
    let { i: t, off: n } = this.childPos(e, 1), r = this.children[t];
    if (!(r instanceof Si))
      return null;
    for (; r.children.length; ) {
      let { i: a, off: c } = r.childPos(n, 1);
      for (; ; a++) {
        if (a == r.children.length)
          return null;
        if ((r = r.children[a]).length)
          break;
      }
      n = c;
    }
    if (!(r instanceof zr))
      return null;
    let s = Yi(r.text, n);
    if (s == n)
      return null;
    let o = al(r.dom, n, s).getClientRects();
    for (let a = 0; a < o.length; a++) {
      let c = o[a];
      if (a == o.length - 1 || c.top < c.bottom && c.left < c.right)
        return c;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let t = [], { from: n, to: r } = e, s = this.view.contentDOM.clientWidth, o = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, a = -1, c = this.view.textDirection == ii.LTR;
    for (let u = 0, h = 0; h < this.children.length; h++) {
      let d = this.children[h], p = u + d.length;
      if (p > r)
        break;
      if (u >= n) {
        let m = d.dom.getBoundingClientRect();
        if (t.push(m.height), o) {
          let b = d.dom.lastChild, y = b ? Wc(b) : [];
          if (y.length) {
            let w = y[y.length - 1], k = c ? w.right - m.left : m.right - w.left;
            k > a && (a = k, this.minWidth = s, this.minWidthFrom = u, this.minWidthTo = p);
          }
        }
      }
      u = p + d.breakAfter;
    }
    return t;
  }
  textDirectionAt(e) {
    let { i: t } = this.childPos(e, 1);
    return getComputedStyle(this.children[t].dom).direction == "rtl" ? ii.RTL : ii.LTR;
  }
  measureTextSize() {
    for (let s of this.children)
      if (s instanceof Si) {
        let o = s.measureTextSize();
        if (o)
          return o;
      }
    let e = document.createElement("div"), t, n, r;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let s = Wc(e.firstChild)[0];
      t = e.getBoundingClientRect().height, n = s ? s.width / 27 : 7, r = s ? s.height : t, e.remove();
    }), { lineHeight: t, charWidth: n, textHeight: r };
  }
  childCursor(e = this.length) {
    let t = this.children.length;
    return t && (e -= this.children[--t].length), new Z$(this.children, e, t);
  }
  computeBlockGapDeco() {
    let e = [], t = this.view.viewState;
    for (let n = 0, r = 0; ; r++) {
      let s = r == t.viewports.length ? null : t.viewports[r], o = s ? s.from - 1 : this.length;
      if (o > n) {
        let a = (t.lineBlockAt(o).bottom - t.lineBlockAt(n).top) / this.view.scaleY;
        e.push(Ue.replace({
          widget: new Lp(a),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(n, o));
      }
      if (!s)
        break;
      n = s.to + 1;
    }
    return Ue.set(e);
  }
  updateDeco() {
    let e = 1, t = this.view.state.facet(Tc).map((s) => (this.dynamicDecorationMap[e++] = typeof s == "function") ? s(this.view) : s), n = !1, r = this.view.state.facet(iy).map((s, o) => {
      let a = typeof s == "function";
      return a && (n = !0), a ? s(this.view) : s;
    });
    for (r.length && (this.dynamicDecorationMap[e++] = n, t.push(xt.join(r))), this.decorations = [
      this.editContextFormatting,
      ...t,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ]; e < this.decorations.length; )
      this.dynamicDecorationMap[e++] = !1;
    return this.decorations;
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let u = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = u.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    for (let u of this.view.state.facet(J$))
      try {
        if (u(this.view, e.range, e))
          return !0;
      } catch (h) {
        Xn(this.view.state, h, "scroll handler");
      }
    let { range: t } = e, n = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1), r;
    if (!n)
      return;
    !t.empty && (r = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (n = {
      left: Math.min(n.left, r.left),
      top: Math.min(n.top, r.top),
      right: Math.max(n.right, r.right),
      bottom: Math.max(n.bottom, r.bottom)
    });
    let s = zg(this.view), o = {
      left: n.left - s.left,
      top: n.top - s.top,
      right: n.right + s.right,
      bottom: n.bottom + s.bottom
    }, { offsetWidth: a, offsetHeight: c } = this.view.scrollDOM;
    M5(this.view.scrollDOM, o, t.head < t.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, a), -a), Math.max(Math.min(e.yMargin, c), -c), this.view.textDirection == ii.LTR);
  }
}
function iC(i) {
  return i.node.nodeType == 1 && i.node.firstChild && (i.offset == 0 || i.node.childNodes[i.offset - 1].contentEditable == "false") && (i.offset == i.node.childNodes.length || i.node.childNodes[i.offset].contentEditable == "false");
}
function sy(i, e) {
  let t = i.observer.selectionRange;
  if (!t.focusNode)
    return null;
  let n = W$(t.focusNode, t.focusOffset), r = T$(t.focusNode, t.focusOffset), s = n || r;
  if (r && n && r.node != n.node) {
    let a = Ft.get(r.node);
    if (!a || a instanceof zr && a.text != r.node.nodeValue)
      s = r;
    else if (i.docView.lastCompositionAfterCursor) {
      let c = Ft.get(n.node);
      !c || c instanceof zr && c.text != n.node.nodeValue || (s = r);
    }
  }
  if (i.docView.lastCompositionAfterCursor = s != n, !s)
    return null;
  let o = e - s.offset;
  return { from: o, to: o + s.node.nodeValue.length, node: s.node };
}
function nC(i, e, t) {
  let n = sy(i, t);
  if (!n)
    return null;
  let { node: r, from: s, to: o } = n, a = r.nodeValue;
  if (/[\n\r]/.test(a) || i.state.doc.sliceString(n.from, n.to) != a)
    return null;
  let c = e.invertedDesc, u = new Sr(c.mapPos(s), c.mapPos(o), s, o), h = [];
  for (let d = r.parentNode; ; d = d.parentNode) {
    let p = Ft.get(d);
    if (p instanceof Ns)
      h.push({ node: d, deco: p.mark });
    else {
      if (p instanceof Si || d.nodeName == "DIV" && d.parentNode == i.contentDOM)
        return { range: u, text: r, marks: h, line: d };
      if (d != i.contentDOM)
        h.push({ node: d, deco: new Gc({
          inclusive: !0,
          attributes: z5(d),
          tagName: d.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function rC(i, e) {
  return i.nodeType != 1 ? 0 : (e && i.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < i.childNodes.length && i.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let sC = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, t) {
    Yu(e, t, this.changes);
  }
  comparePoint(e, t) {
    Yu(e, t, this.changes);
  }
  boundChange(e) {
    Yu(e, e, this.changes);
  }
};
function oC(i, e, t) {
  let n = new sC();
  return xt.compare(i, e, t, n), n.changes;
}
function lC(i, e) {
  for (let t = i; t && t != e; t = t.assignedSlot || t.parentNode)
    if (t.nodeType == 1 && t.contentEditable == "false")
      return !0;
  return !1;
}
function aC(i, e) {
  let t = !1;
  return e && i.iterChangedRanges((n, r) => {
    n < e.to && r > e.from && (t = !0);
  }), t;
}
function cC(i, e, t = 1) {
  let n = i.charCategorizer(e), r = i.doc.lineAt(e), s = e - r.from;
  if (r.length == 0)
    return J.cursor(e);
  s == 0 ? t = 1 : s == r.length && (t = -1);
  let o = s, a = s;
  t < 0 ? o = Yi(r.text, s, !1) : a = Yi(r.text, s);
  let c = n(r.text.slice(o, a));
  for (; o > 0; ) {
    let u = Yi(r.text, o, !1);
    if (n(r.text.slice(u, o)) != c)
      break;
    o = u;
  }
  for (; a < r.length; ) {
    let u = Yi(r.text, a);
    if (n(r.text.slice(a, u)) != c)
      break;
    a = u;
  }
  return J.range(o + r.from, a + r.from);
}
function fC(i, e) {
  return e.left > i ? e.left - i : Math.max(0, i - e.right);
}
function uC(i, e) {
  return e.top > i ? e.top - i : Math.max(0, i - e.bottom);
}
function Td(i, e) {
  return i.top < e.bottom - 1 && i.bottom > e.top + 1;
}
function r1(i, e) {
  return e < i.top ? { top: e, left: i.left, right: i.right, bottom: i.bottom } : i;
}
function s1(i, e) {
  return e > i.bottom ? { top: i.top, left: i.left, right: i.right, bottom: e } : i;
}
function zp(i, e, t) {
  let n, r, s, o, a = !1, c, u, h, d;
  for (let b = i.firstChild; b; b = b.nextSibling) {
    let y = Wc(b);
    for (let w = 0; w < y.length; w++) {
      let k = y[w];
      r && Td(r, k) && (k = r1(s1(k, r.bottom), r.top));
      let A = fC(e, k), x = uC(t, k);
      if (A == 0 && x == 0)
        return b.nodeType == 3 ? o1(b, e, t) : zp(b, e, t);
      if (!n || o > x || o == x && s > A) {
        n = b, r = k, s = A, o = x;
        let _ = x ? t < k.top ? -1 : 1 : A ? e < k.left ? -1 : 1 : 0;
        a = !_ || (_ > 0 ? w < y.length - 1 : w > 0);
      }
      A == 0 ? t > k.bottom && (!h || h.bottom < k.bottom) ? (c = b, h = k) : t < k.top && (!d || d.top > k.top) && (u = b, d = k) : h && Td(h, k) ? h = s1(h, k.bottom) : d && Td(d, k) && (d = r1(d, k.top));
    }
  }
  if (h && h.bottom >= t ? (n = c, r = h) : d && d.top <= t && (n = u, r = d), !n)
    return { node: i, offset: 0 };
  let p = Math.max(r.left, Math.min(r.right, e));
  if (n.nodeType == 3)
    return o1(n, p, t);
  if (a && n.contentEditable != "false")
    return zp(n, p, t);
  let m = Array.prototype.indexOf.call(i.childNodes, n) + (e >= (r.left + r.right) / 2 ? 1 : 0);
  return { node: i, offset: m };
}
function o1(i, e, t) {
  let n = i.nodeValue.length, r = -1, s = 1e9, o = 0;
  for (let a = 0; a < n; a++) {
    let c = al(i, a, a + 1).getClientRects();
    for (let u = 0; u < c.length; u++) {
      let h = c[u];
      if (h.top == h.bottom)
        continue;
      o || (o = e - h.left);
      let d = (h.top > t ? h.top - t : t - h.bottom) - 1;
      if (h.left - 1 <= e && h.right + 1 >= e && d < s) {
        let p = e >= (h.left + h.right) / 2, m = p;
        if ((ke.chrome || ke.gecko) && al(i, a).getBoundingClientRect().left == h.right && (m = !p), d <= 0)
          return { node: i, offset: a + (m ? 1 : 0) };
        r = a + (m ? 1 : 0), s = d;
      }
    }
  }
  return { node: i, offset: r > -1 ? r : o > 0 ? i.nodeValue.length : 0 };
}
function oy(i, e, t, n = -1) {
  var r, s;
  let o = i.contentDOM.getBoundingClientRect(), a = o.top + i.viewState.paddingTop, c, { docHeight: u } = i.viewState, { x: h, y: d } = e, p = d - a;
  if (p < 0)
    return 0;
  if (p > u)
    return i.state.doc.length;
  for (let _ = i.viewState.heightOracle.textHeight / 2, W = !1; c = i.elementAtHeight(p), c.type != vn.Text; )
    for (; p = n > 0 ? c.bottom + _ : c.top - _, !(p >= 0 && p <= u); ) {
      if (W)
        return t ? null : 0;
      W = !0, n = -n;
    }
  d = a + p;
  let m = c.from;
  if (m < i.viewport.from)
    return i.viewport.from == 0 ? 0 : t ? null : l1(i, o, c, h, d);
  if (m > i.viewport.to)
    return i.viewport.to == i.state.doc.length ? i.state.doc.length : t ? null : l1(i, o, c, h, d);
  let b = i.dom.ownerDocument, y = i.root.elementFromPoint ? i.root : b, w = y.elementFromPoint(h, d);
  w && !i.contentDOM.contains(w) && (w = null), w || (h = Math.max(o.left + 1, Math.min(o.right - 1, h)), w = y.elementFromPoint(h, d), w && !i.contentDOM.contains(w) && (w = null));
  let k, A = -1;
  if (w && ((r = i.docView.nearest(w)) === null || r === void 0 ? void 0 : r.isEditable) != !1) {
    if (b.caretPositionFromPoint) {
      let _ = b.caretPositionFromPoint(h, d);
      _ && ({ offsetNode: k, offset: A } = _);
    } else if (b.caretRangeFromPoint) {
      let _ = b.caretRangeFromPoint(h, d);
      _ && ({ startContainer: k, startOffset: A } = _, (!i.contentDOM.contains(k) || ke.safari && hC(k, A, h) || ke.chrome && OC(k, A, h)) && (k = void 0));
    }
    k && (A = Math.min(ps(k), A));
  }
  if (!k || !i.docView.dom.contains(k)) {
    let _ = Si.find(i.docView, m);
    if (!_)
      return p > c.top + c.height / 2 ? c.to : c.from;
    ({ node: k, offset: A } = zp(_.dom, h, d));
  }
  let x = i.docView.nearest(k);
  if (!x)
    return null;
  if (x.isWidget && ((s = x.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {
    let _ = x.dom.getBoundingClientRect();
    return e.y < _.top || e.y <= _.bottom && e.x <= (_.left + _.right) / 2 ? x.posAtStart : x.posAtEnd;
  } else
    return x.localPosFromDOM(k, A) + x.posAtStart;
}
function l1(i, e, t, n, r) {
  let s = Math.round((n - e.left) * i.defaultCharacterWidth);
  if (i.lineWrapping && t.height > i.defaultLineHeight * 1.5) {
    let a = i.viewState.heightOracle.textHeight, c = Math.floor((r - t.top - (i.defaultLineHeight - a) * 0.5) / a);
    s += c * i.viewState.heightOracle.lineLength;
  }
  let o = i.state.sliceDoc(t.from, t.to);
  return t.from + Tp(o, s, i.state.tabSize);
}
function hC(i, e, t) {
  let n;
  if (i.nodeType != 3 || e != (n = i.nodeValue.length))
    return !1;
  for (let r = i.nextSibling; r; r = r.nextSibling)
    if (r.nodeType != 1 || r.nodeName != "BR")
      return !1;
  return al(i, n - 1, n).getBoundingClientRect().left > t;
}
function OC(i, e, t) {
  if (e != 0)
    return !1;
  for (let r = i; ; ) {
    let s = r.parentNode;
    if (!s || s.nodeType != 1 || s.firstChild != r)
      return !1;
    if (s.classList.contains("cm-line"))
      break;
    r = s;
  }
  let n = i.nodeType == 1 ? i.getBoundingClientRect() : al(i, 0, Math.max(i.nodeValue.length, 1)).getBoundingClientRect();
  return t - n.left > 5;
}
function jp(i, e) {
  let t = i.lineBlockAt(e);
  if (Array.isArray(t.type)) {
    for (let n of t.type)
      if (n.to > e || n.to == e && (n.to == t.to || n.type == vn.Text))
        return n;
  }
  return t;
}
function dC(i, e, t, n) {
  let r = jp(i, e.head), s = !n || r.type != vn.Text || !(i.lineWrapping || r.widgetLineBreaks) ? null : i.coordsAtPos(e.assoc < 0 && e.head > r.from ? e.head - 1 : e.head);
  if (s) {
    let o = i.dom.getBoundingClientRect(), a = i.textDirectionAt(r.from), c = i.posAtCoords({
      x: t == (a == ii.LTR) ? o.right - 1 : o.left + 1,
      y: (s.top + s.bottom) / 2
    });
    if (c != null)
      return J.cursor(c, t ? -1 : 1);
  }
  return J.cursor(t ? r.to : r.from, t ? -1 : 1);
}
function a1(i, e, t, n) {
  let r = i.state.doc.lineAt(e.head), s = i.bidiSpans(r), o = i.textDirectionAt(r.from);
  for (let a = e, c = null; ; ) {
    let u = J5(r, s, o, a, t), h = z$;
    if (!u) {
      if (r.number == (t ? i.state.doc.lines : 1))
        return a;
      h = `
`, r = i.state.doc.line(r.number + (t ? 1 : -1)), s = i.bidiSpans(r), u = i.visualLineSide(r, !t);
    }
    if (c) {
      if (!c(h))
        return a;
    } else {
      if (!n)
        return u;
      c = n(h);
    }
    a = u;
  }
}
function pC(i, e, t) {
  let n = i.state.charCategorizer(e), r = n(t);
  return (s) => {
    let o = n(s);
    return r == ri.Space && (r = o), r == o;
  };
}
function gC(i, e, t, n) {
  let r = e.head, s = t ? 1 : -1;
  if (r == (t ? i.state.doc.length : 0))
    return J.cursor(r, e.assoc);
  let o = e.goalColumn, a, c = i.contentDOM.getBoundingClientRect(), u = i.coordsAtPos(r, e.assoc || -1), h = i.documentTop;
  if (u)
    o == null && (o = u.left - c.left), a = s < 0 ? u.top : u.bottom;
  else {
    let m = i.viewState.lineBlockAt(r);
    o == null && (o = Math.min(c.right - c.left, i.defaultCharacterWidth * (r - m.from))), a = (s < 0 ? m.top : m.bottom) + h;
  }
  let d = c.left + o, p = n ?? i.viewState.heightOracle.textHeight >> 1;
  for (let m = 0; ; m += 10) {
    let b = a + (p + m) * s, y = oy(i, { x: d, y: b }, !1, s);
    if (b < c.top || b > c.bottom || (s < 0 ? y < r : y > r)) {
      let w = i.docView.coordsForChar(y), k = !w || b < w.top ? -1 : 1;
      return J.cursor(y, k, void 0, o);
    }
  }
}
function zu(i, e, t) {
  for (; ; ) {
    let n = 0;
    for (let r of i)
      r.between(e - 1, e + 1, (s, o, a) => {
        if (e > s && e < o) {
          let c = n || t || (e - s < o - e ? -1 : 1);
          e = c < 0 ? s : o, n = c;
        }
      });
    if (!n)
      return e;
  }
}
function Zd(i, e, t) {
  let n = zu(i.state.facet(Yg).map((r) => r(i)), t.from, e.head > t.from ? -1 : 1);
  return n == t.from ? t : J.cursor(n, n < t.from ? 1 : -1);
}
const ac = "￿";
class mC {
  constructor(e, t) {
    this.points = e, this.text = "", this.lineSeparator = t.facet(St.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += ac;
  }
  readRange(e, t) {
    if (!e)
      return this;
    let n = e.parentNode;
    for (let r = e; ; ) {
      this.findPointBefore(n, r);
      let s = this.text.length;
      this.readNode(r);
      let o = r.nextSibling;
      if (o == t)
        break;
      let a = Ft.get(r), c = Ft.get(o);
      (a && c ? a.breakAfter : (a ? a.breakAfter : hh(r)) || hh(o) && (r.nodeName != "BR" || r.cmIgnore) && this.text.length > s) && this.lineBreak(), r = o;
    }
    return this.findPointBefore(n, t), this;
  }
  readTextNode(e) {
    let t = e.nodeValue;
    for (let n of this.points)
      n.node == e && (n.pos = this.text.length + Math.min(n.offset, t.length));
    for (let n = 0, r = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let s = -1, o = 1, a;
      if (this.lineSeparator ? (s = t.indexOf(this.lineSeparator, n), o = this.lineSeparator.length) : (a = r.exec(t)) && (s = a.index, o = a[0].length), this.append(t.slice(n, s < 0 ? t.length : s)), s < 0)
        break;
      if (this.lineBreak(), o > 1)
        for (let c of this.points)
          c.node == e && c.pos > this.text.length && (c.pos -= o - 1);
      n = s + o;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let t = Ft.get(e), n = t && t.overrideDOMText;
    if (n != null) {
      this.findPointInside(e, n.length);
      for (let r = n.iter(); !r.next().done; )
        r.lineBreak ? this.lineBreak() : this.append(r.value);
    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, t) {
    for (let n of this.points)
      n.node == e && e.childNodes[n.offset] == t && (n.pos = this.text.length);
  }
  findPointInside(e, t) {
    for (let n of this.points)
      (e.nodeType == 3 ? n.node == e : e.contains(n.node)) && (n.pos = this.text.length + (vC(e, n.node, n.offset) ? t : 0));
  }
}
function vC(i, e, t) {
  for (; ; ) {
    if (!e || t < ps(e))
      return !1;
    if (e == i)
      return !0;
    t = ll(e) + 1, e = e.parentNode;
  }
}
class c1 {
  constructor(e, t) {
    this.node = e, this.offset = t, this.pos = -1;
  }
}
class SC {
  constructor(e, t, n, r) {
    this.typeOver = r, this.bounds = null, this.text = "", this.domChanged = t > -1;
    let { impreciseHead: s, impreciseAnchor: o } = e.docView;
    if (e.state.readOnly && t > -1)
      this.newSel = null;
    else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, n, 0))) {
      let a = s || o ? [] : yC(e), c = new mC(a, e.state);
      c.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = c.text, this.newSel = QC(a, this.bounds.from);
    } else {
      let a = e.observer.selectionRange, c = s && s.node == a.focusNode && s.offset == a.focusOffset || !Rp(e.contentDOM, a.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(a.focusNode, a.focusOffset), u = o && o.node == a.anchorNode && o.offset == a.anchorOffset || !Rp(e.contentDOM, a.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(a.anchorNode, a.anchorOffset), h = e.viewport;
      if ((ke.ios || ke.chrome) && e.state.selection.main.empty && c != u && (h.from > 0 || h.to < e.state.doc.length)) {
        let d = Math.min(c, u), p = Math.max(c, u), m = h.from - d, b = h.to - p;
        (m == 0 || m == 1 || d == 0) && (b == 0 || b == -1 || p == e.state.doc.length) && (c = 0, u = e.state.doc.length);
      }
      this.newSel = J.single(u, c);
    }
  }
}
function ly(i, e) {
  let t, { newSel: n } = e, r = i.state.selection.main, s = i.inputState.lastKeyTime > Date.now() - 100 ? i.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: o, to: a } = e.bounds, c = r.from, u = null;
    (s === 8 || ke.android && e.text.length < a - o) && (c = r.to, u = "end");
    let h = $C(i.state.doc.sliceString(o, a, ac), e.text, c - o, u);
    h && (ke.chrome && s == 13 && h.toB == h.from + 2 && e.text.slice(h.from, h.toB) == ac + ac && h.toB--, t = {
      from: o + h.from,
      to: o + h.toA,
      insert: Tt.of(e.text.slice(h.from, h.toB).split(ac))
    });
  } else n && (!i.hasFocus && i.state.facet(Vs) || n.main.eq(r)) && (n = null);
  if (!t && !n)
    return !1;
  if (!t && e.typeOver && !r.empty && n && n.main.empty ? t = { from: r.from, to: r.to, insert: i.state.doc.slice(r.from, r.to) } : (ke.mac || ke.android) && t && t.from == t.to && t.from == r.head - 1 && /^\. ?$/.test(t.insert.toString()) && i.contentDOM.getAttribute("autocorrect") == "off" ? (n && t.insert.length == 2 && (n = J.single(n.main.anchor - 1, n.main.head - 1)), t = { from: t.from, to: t.to, insert: Tt.of([t.insert.toString().replace(".", " ")]) }) : t && t.from >= r.from && t.to <= r.to && (t.from != r.from || t.to != r.to) && r.to - r.from - (t.to - t.from) <= 4 ? t = {
    from: r.from,
    to: r.to,
    insert: i.state.doc.slice(r.from, t.from).append(t.insert).append(i.state.doc.slice(t.to, r.to))
  } : ke.chrome && t && t.from == t.to && t.from == r.head && t.insert.toString() == `
 ` && i.lineWrapping && (n && (n = J.single(n.main.anchor - 1, n.main.head - 1)), t = { from: r.from, to: r.to, insert: Tt.of([" "]) }), t)
    return jg(i, t, n, s);
  if (n && !n.main.eq(r)) {
    let o = !1, a = "select";
    return i.inputState.lastSelectionTime > Date.now() - 50 && (i.inputState.lastSelectionOrigin == "select" && (o = !0), a = i.inputState.lastSelectionOrigin), i.dispatch({ selection: n, scrollIntoView: o, userEvent: a }), !0;
  } else
    return !1;
}
function jg(i, e, t, n = -1) {
  if (ke.ios && i.inputState.flushIOSKey(e))
    return !0;
  let r = i.state.selection.main;
  if (ke.android && (e.to == r.to && // GBoard will sometimes remove a space it just inserted
  // after a completion when you press enter
  (e.from == r.from || e.from == r.from - 1 && i.state.sliceDoc(e.from, r.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && Hl(i.contentDOM, "Enter", 13) || (e.from == r.from - 1 && e.to == r.to && e.insert.length == 0 || n == 8 && e.insert.length < e.to - e.from && e.to > r.head) && Hl(i.contentDOM, "Backspace", 8) || e.from == r.from && e.to == r.to + 1 && e.insert.length == 0 && Hl(i.contentDOM, "Delete", 46)))
    return !0;
  let s = e.insert.toString();
  i.inputState.composing >= 0 && i.inputState.composing++;
  let o, a = () => o || (o = bC(i, e, t));
  return i.state.facet(F$).some((c) => c(i, e.from, e.to, s, a)) || i.dispatch(a()), !0;
}
function bC(i, e, t) {
  let n, r = i.state, s = r.selection.main;
  if (e.from >= s.from && e.to <= s.to && e.to - e.from >= (s.to - s.from) / 3 && (!t || t.main.empty && t.main.from == e.from + e.insert.length) && i.inputState.composing < 0) {
    let a = s.from < e.from ? r.sliceDoc(s.from, e.from) : "", c = s.to > e.to ? r.sliceDoc(e.to, s.to) : "";
    n = r.replaceSelection(i.state.toText(a + e.insert.sliceString(0, void 0, i.state.lineBreak) + c));
  } else {
    let a = r.changes(e), c = t && t.main.to <= a.newLength ? t.main : void 0;
    if (r.selection.ranges.length > 1 && i.inputState.composing >= 0 && e.to <= s.to && e.to >= s.to - 10) {
      let u = i.state.sliceDoc(e.from, e.to), h, d = t && sy(i, t.main.head);
      if (d) {
        let b = e.insert.length - (e.to - e.from);
        h = { from: d.from, to: d.to - b };
      } else
        h = i.state.doc.lineAt(s.head);
      let p = s.to - e.to, m = s.to - s.from;
      n = r.changeByRange((b) => {
        if (b.from == s.from && b.to == s.to)
          return { changes: a, range: c || b.map(a) };
        let y = b.to - p, w = y - u.length;
        if (b.to - b.from != m || i.state.sliceDoc(w, y) != u || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        b.to >= h.from && b.from <= h.to)
          return { range: b };
        let k = r.changes({ from: w, to: y, insert: e.insert }), A = b.to - s.to;
        return {
          changes: k,
          range: c ? J.range(Math.max(0, c.anchor + A), Math.max(0, c.head + A)) : b.map(k)
        };
      });
    } else
      n = {
        changes: a,
        selection: c && r.selection.replaceRange(c)
      };
  }
  let o = "input.type";
  return (i.composing || i.inputState.compositionPendingChange && i.inputState.compositionEndedAt > Date.now() - 50) && (i.inputState.compositionPendingChange = !1, o += ".compose", i.inputState.compositionFirstChange && (o += ".start", i.inputState.compositionFirstChange = !1)), r.update(n, { userEvent: o, scrollIntoView: !0 });
}
function $C(i, e, t, n) {
  let r = Math.min(i.length, e.length), s = 0;
  for (; s < r && i.charCodeAt(s) == e.charCodeAt(s); )
    s++;
  if (s == r && i.length == e.length)
    return null;
  let o = i.length, a = e.length;
  for (; o > 0 && a > 0 && i.charCodeAt(o - 1) == e.charCodeAt(a - 1); )
    o--, a--;
  if (n == "end") {
    let c = Math.max(0, s - Math.min(o, a));
    t -= o + c - s;
  }
  if (o < s && i.length < e.length) {
    let c = t <= s && t >= o ? s - t : 0;
    s -= c, a = s + (a - o), o = s;
  } else if (a < s) {
    let c = t <= s && t >= a ? s - t : 0;
    s -= c, o = s + (o - a), a = s;
  }
  return { from: s, toA: o, toB: a };
}
function yC(i) {
  let e = [];
  if (i.root.activeElement != i.contentDOM)
    return e;
  let { anchorNode: t, anchorOffset: n, focusNode: r, focusOffset: s } = i.observer.selectionRange;
  return t && (e.push(new c1(t, n)), (r != t || s != n) && e.push(new c1(r, s))), e;
}
function QC(i, e) {
  if (i.length == 0)
    return null;
  let t = i[0].pos, n = i.length == 2 ? i[1].pos : t;
  return t > -1 && n > -1 ? J.single(t + e, n + e) : null;
}
class wC {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, ke.safari && e.contentDOM.addEventListener("input", () => null), ke.gecko && DC(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !CC(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, t) {
    let n = this.handlers[e];
    if (n) {
      for (let r of n.observers)
        r(this.view, t);
      for (let r of n.handlers) {
        if (t.defaultPrevented)
          break;
        if (r(this.view, t)) {
          t.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let t = PC(e), n = this.handlers, r = this.view.contentDOM;
    for (let s in t)
      if (s != "scroll") {
        let o = !t[s].handlers.length, a = n[s];
        a && o != !a.handlers.length && (r.removeEventListener(s, this.handleEvent), a = null), a || r.addEventListener(s, this.handleEvent, { passive: o });
      }
    for (let s in n)
      s != "scroll" && !t[s] && r.removeEventListener(s, this.handleEvent);
    this.handlers = t;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))
      return !0;
    if (this.tabFocusMode > 0 && e.keyCode != 27 && cy.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), ke.android && ke.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let t;
    return ke.ios && !e.synthetic && !e.altKey && !e.metaKey && ((t = ay.find((n) => n.keyCode == e.keyCode)) && !e.ctrlKey || xC.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = t || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey(e) {
    let t = this.pendingIOSKey;
    return !t || t.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, Hl(this.view.contentDOM, t.key, t.keyCode, t instanceof KeyboardEvent ? t : void 0));
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : ke.safari && !ke.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function f1(i, e) {
  return (t, n) => {
    try {
      return e.call(i, n, t);
    } catch (r) {
      Xn(t.state, r);
    }
  };
}
function PC(i) {
  let e = /* @__PURE__ */ Object.create(null);
  function t(n) {
    return e[n] || (e[n] = { observers: [], handlers: [] });
  }
  for (let n of i) {
    let r = n.spec;
    if (r && r.domEventHandlers)
      for (let s in r.domEventHandlers) {
        let o = r.domEventHandlers[s];
        o && t(s).handlers.push(f1(n.value, o));
      }
    if (r && r.domEventObservers)
      for (let s in r.domEventObservers) {
        let o = r.domEventObservers[s];
        o && t(s).observers.push(f1(n.value, o));
      }
  }
  for (let n in jr)
    t(n).handlers.push(jr[n]);
  for (let n in $r)
    t(n).observers.push($r[n]);
  return e;
}
const ay = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], xC = "dthko", cy = [16, 17, 18, 20, 91, 92, 224, 225], pu = 6;
function gu(i) {
  return Math.max(0, i) * 0.7 + 8;
}
function kC(i, e) {
  return Math.max(Math.abs(i.clientX - e.clientX), Math.abs(i.clientY - e.clientY));
}
class _C {
  constructor(e, t, n, r) {
    this.view = e, this.startEvent = t, this.style = n, this.mustSelect = r, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = t, this.scrollParents = E5(e.contentDOM), this.atoms = e.state.facet(Yg).map((o) => o(e));
    let s = e.contentDOM.ownerDocument;
    s.addEventListener("mousemove", this.move = this.move.bind(this)), s.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = t.shiftKey, this.multiple = e.state.facet(St.allowMultipleSelections) && WC(e, t), this.dragging = ZC(e, t) && hy(t) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && kC(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let t = 0, n = 0, r = 0, s = 0, o = this.view.win.innerWidth, a = this.view.win.innerHeight;
    this.scrollParents.x && ({ left: r, right: o } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: s, bottom: a } = this.scrollParents.y.getBoundingClientRect());
    let c = zg(this.view);
    e.clientX - c.left <= r + pu ? t = -gu(r - e.clientX) : e.clientX + c.right >= o - pu && (t = gu(e.clientX - o)), e.clientY - c.top <= s + pu ? n = -gu(s - e.clientY) : e.clientY + c.bottom >= a - pu && (n = gu(e.clientY - a)), this.setScrollSpeed(t, n);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, t) {
    this.scrollSpeed = { x: e, y: t }, e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    let { x: e, y: t } = this.scrollSpeed;
    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), t && this.scrollParents.y && (this.scrollParents.y.scrollTop += t, t = 0), (e || t) && this.view.win.scrollBy(e, t), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let t = null;
    for (let n = 0; n < e.ranges.length; n++) {
      let r = e.ranges[n], s = null;
      if (r.empty) {
        let o = zu(this.atoms, r.from, 0);
        o != r.from && (s = J.cursor(o, -1));
      } else {
        let o = zu(this.atoms, r.from, -1), a = zu(this.atoms, r.to, 1);
        (o != r.from || a != r.to) && (s = J.range(r.from == r.anchor ? o : a, r.from == r.head ? o : a));
      }
      s && (t || (t = e.ranges.slice()), t[n] = s);
    }
    return t ? J.create(t, e.mainIndex) : e;
  }
  select(e) {
    let { view: t } = this, n = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !n.eq(t.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: n,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    e.transactions.some((t) => t.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function WC(i, e) {
  let t = i.state.facet(j$);
  return t.length ? t[0](e) : ke.mac ? e.metaKey : e.ctrlKey;
}
function TC(i, e) {
  let t = i.state.facet(B$);
  return t.length ? t[0](e) : ke.mac ? !e.altKey : !e.ctrlKey;
}
function ZC(i, e) {
  let { main: t } = i.state.selection;
  if (t.empty)
    return !1;
  let n = _c(i.root);
  if (!n || n.rangeCount == 0)
    return !0;
  let r = n.getRangeAt(0).getClientRects();
  for (let s = 0; s < r.length; s++) {
    let o = r[s];
    if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function CC(i, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let t = e.target, n; t != i.contentDOM; t = t.parentNode)
    if (!t || t.nodeType == 11 || (n = Ft.get(t)) && n.ignoreEvent(e))
      return !1;
  return !0;
}
const jr = /* @__PURE__ */ Object.create(null), $r = /* @__PURE__ */ Object.create(null), fy = ke.ie && ke.ie_version < 15 || ke.ios && ke.webkit_version < 604;
function RC(i) {
  let e = i.dom.parentNode;
  if (!e)
    return;
  let t = e.appendChild(document.createElement("textarea"));
  t.style.cssText = "position: fixed; left: -10000px; top: 10px", t.focus(), setTimeout(() => {
    i.focus(), t.remove(), uy(i, t.value);
  }, 50);
}
function Jh(i, e, t) {
  for (let n of i.facet(e))
    t = n(t, i);
  return t;
}
function uy(i, e) {
  e = Jh(i.state, Dg, e);
  let { state: t } = i, n, r = 1, s = t.toText(e), o = s.lines == t.selection.ranges.length;
  if (Bp != null && t.selection.ranges.every((c) => c.empty) && Bp == s.toString()) {
    let c = -1;
    n = t.changeByRange((u) => {
      let h = t.doc.lineAt(u.from);
      if (h.from == c)
        return { range: u };
      c = h.from;
      let d = t.toText((o ? s.line(r++).text : e) + t.lineBreak);
      return {
        changes: { from: h.from, insert: d },
        range: J.cursor(u.from + d.length)
      };
    });
  } else o ? n = t.changeByRange((c) => {
    let u = s.line(r++);
    return {
      changes: { from: c.from, to: c.to, insert: u.text },
      range: J.cursor(c.from + u.length)
    };
  }) : n = t.replaceSelection(s);
  i.dispatch(n, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
$r.scroll = (i) => {
  i.inputState.lastScrollTop = i.scrollDOM.scrollTop, i.inputState.lastScrollLeft = i.scrollDOM.scrollLeft;
};
jr.keydown = (i, e) => (i.inputState.setSelectionOrigin("select"), e.keyCode == 27 && i.inputState.tabFocusMode != 0 && (i.inputState.tabFocusMode = Date.now() + 2e3), !1);
$r.touchstart = (i, e) => {
  i.inputState.lastTouchTime = Date.now(), i.inputState.setSelectionOrigin("select.pointer");
};
$r.touchmove = (i) => {
  i.inputState.setSelectionOrigin("select.pointer");
};
jr.mousedown = (i, e) => {
  if (i.observer.flush(), i.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let t = null;
  for (let n of i.state.facet(I$))
    if (t = n(i, e), t)
      break;
  if (!t && e.button == 0 && (t = MC(i, e)), t) {
    let n = !i.hasFocus;
    i.inputState.startMouseSelection(new _C(i, e, t, n)), n && i.observer.ignore(() => {
      x$(i.contentDOM);
      let s = i.root.activeElement;
      s && !s.contains(i.contentDOM) && s.blur();
    });
    let r = i.inputState.mouseSelection;
    if (r)
      return r.start(e), r.dragging === !1;
  }
  return !1;
};
function u1(i, e, t, n) {
  if (n == 1)
    return J.cursor(e, t);
  if (n == 2)
    return cC(i.state, e, t);
  {
    let r = Si.find(i.docView, e), s = i.state.doc.lineAt(r ? r.posAtEnd : e), o = r ? r.posAtStart : s.from, a = r ? r.posAtEnd : s.to;
    return a < i.state.doc.length && a == s.to && a++, J.range(o, a);
  }
}
let h1 = (i, e, t) => e >= t.top && e <= t.bottom && i >= t.left && i <= t.right;
function AC(i, e, t, n) {
  let r = Si.find(i.docView, e);
  if (!r)
    return 1;
  let s = e - r.posAtStart;
  if (s == 0)
    return 1;
  if (s == r.length)
    return -1;
  let o = r.coordsAt(s, -1);
  if (o && h1(t, n, o))
    return -1;
  let a = r.coordsAt(s, 1);
  return a && h1(t, n, a) ? 1 : o && o.bottom >= n ? -1 : 1;
}
function O1(i, e) {
  let t = i.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: t, bias: AC(i, t, e.clientX, e.clientY) };
}
const XC = ke.ie && ke.ie_version <= 11;
let d1 = null, p1 = 0, g1 = 0;
function hy(i) {
  if (!XC)
    return i.detail;
  let e = d1, t = g1;
  return d1 = i, g1 = Date.now(), p1 = !e || t > Date.now() - 400 && Math.abs(e.clientX - i.clientX) < 2 && Math.abs(e.clientY - i.clientY) < 2 ? (p1 + 1) % 3 : 1;
}
function MC(i, e) {
  let t = O1(i, e), n = hy(e), r = i.state.selection;
  return {
    update(s) {
      s.docChanged && (t.pos = s.changes.mapPos(t.pos), r = r.map(s.changes));
    },
    get(s, o, a) {
      let c = O1(i, s), u, h = u1(i, c.pos, c.bias, n);
      if (t.pos != c.pos && !o) {
        let d = u1(i, t.pos, t.bias, n), p = Math.min(d.from, h.from), m = Math.max(d.to, h.to);
        h = p < h.from ? J.range(p, m) : J.range(m, p);
      }
      return o ? r.replaceRange(r.main.extend(h.from, h.to)) : a && n == 1 && r.ranges.length > 1 && (u = EC(r, c.pos)) ? u : a ? r.addRange(h) : J.create([h]);
    }
  };
}
function EC(i, e) {
  for (let t = 0; t < i.ranges.length; t++) {
    let { from: n, to: r } = i.ranges[t];
    if (n <= e && r >= e)
      return J.create(i.ranges.slice(0, t).concat(i.ranges.slice(t + 1)), i.mainIndex == t ? 0 : i.mainIndex - (i.mainIndex > t ? 1 : 0));
  }
  return null;
}
jr.dragstart = (i, e) => {
  let { selection: { main: t } } = i.state;
  if (e.target.draggable) {
    let r = i.docView.nearest(e.target);
    if (r && r.isWidget) {
      let s = r.posAtStart, o = s + r.length;
      (s >= t.to || o <= t.from) && (t = J.range(s, o));
    }
  }
  let { inputState: n } = i;
  return n.mouseSelection && (n.mouseSelection.dragging = !0), n.draggedContent = t, e.dataTransfer && (e.dataTransfer.setData("Text", Jh(i.state, Vg, i.state.sliceDoc(t.from, t.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
jr.dragend = (i) => (i.inputState.draggedContent = null, !1);
function m1(i, e, t, n) {
  if (t = Jh(i.state, Dg, t), !t)
    return;
  let r = i.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: s } = i.inputState, o = n && s && TC(i, e) ? { from: s.from, to: s.to } : null, a = { from: r, insert: t }, c = i.state.changes(o ? [o, a] : a);
  i.focus(), i.dispatch({
    changes: c,
    selection: { anchor: c.mapPos(r, -1), head: c.mapPos(r, 1) },
    userEvent: o ? "move.drop" : "input.drop"
  }), i.inputState.draggedContent = null;
}
jr.drop = (i, e) => {
  if (!e.dataTransfer)
    return !1;
  if (i.state.readOnly)
    return !0;
  let t = e.dataTransfer.files;
  if (t && t.length) {
    let n = Array(t.length), r = 0, s = () => {
      ++r == t.length && m1(i, e, n.filter((o) => o != null).join(i.state.lineBreak), !1);
    };
    for (let o = 0; o < t.length; o++) {
      let a = new FileReader();
      a.onerror = s, a.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(a.result) || (n[o] = a.result), s();
      }, a.readAsText(t[o]);
    }
    return !0;
  } else {
    let n = e.dataTransfer.getData("Text");
    if (n)
      return m1(i, e, n, !0), !0;
  }
  return !1;
};
jr.paste = (i, e) => {
  if (i.state.readOnly)
    return !0;
  i.observer.flush();
  let t = fy ? null : e.clipboardData;
  return t ? (uy(i, t.getData("text/plain") || t.getData("text/uri-list")), !0) : (RC(i), !1);
};
function qC(i, e) {
  let t = i.dom.parentNode;
  if (!t)
    return;
  let n = t.appendChild(document.createElement("textarea"));
  n.style.cssText = "position: fixed; left: -10000px; top: 10px", n.value = e, n.focus(), n.selectionEnd = e.length, n.selectionStart = 0, setTimeout(() => {
    n.remove(), i.focus();
  }, 50);
}
function LC(i) {
  let e = [], t = [], n = !1;
  for (let r of i.selection.ranges)
    r.empty || (e.push(i.sliceDoc(r.from, r.to)), t.push(r));
  if (!e.length) {
    let r = -1;
    for (let { from: s } of i.selection.ranges) {
      let o = i.doc.lineAt(s);
      o.number > r && (e.push(o.text), t.push({ from: o.from, to: Math.min(i.doc.length, o.to + 1) })), r = o.number;
    }
    n = !0;
  }
  return { text: Jh(i, Vg, e.join(i.lineBreak)), ranges: t, linewise: n };
}
let Bp = null;
jr.copy = jr.cut = (i, e) => {
  let { text: t, ranges: n, linewise: r } = LC(i.state);
  if (!t && !r)
    return !1;
  Bp = r ? t : null, e.type == "cut" && !i.state.readOnly && i.dispatch({
    changes: n,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let s = fy ? null : e.clipboardData;
  return s ? (s.clearData(), s.setData("text/plain", t), !0) : (qC(i, t), !1);
};
const Oy = /* @__PURE__ */ Js.define();
function dy(i, e) {
  let t = [];
  for (let n of i.facet(G$)) {
    let r = n(i, e);
    r && t.push(r);
  }
  return t ? i.update({ effects: t, annotations: Oy.of(!0) }) : null;
}
function py(i) {
  setTimeout(() => {
    let e = i.hasFocus;
    if (e != i.inputState.notifiedFocused) {
      let t = dy(i.state, e);
      t ? i.dispatch(t) : i.update([]);
    }
  }, 10);
}
$r.focus = (i) => {
  i.inputState.lastFocusTime = Date.now(), !i.scrollDOM.scrollTop && (i.inputState.lastScrollTop || i.inputState.lastScrollLeft) && (i.scrollDOM.scrollTop = i.inputState.lastScrollTop, i.scrollDOM.scrollLeft = i.inputState.lastScrollLeft), py(i);
};
$r.blur = (i) => {
  i.observer.clearSelectionRange(), py(i);
};
$r.compositionstart = $r.compositionupdate = (i) => {
  i.observer.editContext || (i.inputState.compositionFirstChange == null && (i.inputState.compositionFirstChange = !0), i.inputState.composing < 0 && (i.inputState.composing = 0));
};
$r.compositionend = (i) => {
  i.observer.editContext || (i.inputState.composing = -1, i.inputState.compositionEndedAt = Date.now(), i.inputState.compositionPendingKey = !0, i.inputState.compositionPendingChange = i.observer.pendingRecords().length > 0, i.inputState.compositionFirstChange = null, ke.chrome && ke.android ? i.observer.flushSoon() : i.inputState.compositionPendingChange ? Promise.resolve().then(() => i.observer.flush()) : setTimeout(() => {
    i.inputState.composing < 0 && i.docView.hasComposition && i.update([]);
  }, 50));
};
$r.contextmenu = (i) => {
  i.inputState.lastContextMenu = Date.now();
};
jr.beforeinput = (i, e) => {
  var t, n;
  if (e.inputType == "insertReplacementText" && i.observer.editContext) {
    let s = (t = e.dataTransfer) === null || t === void 0 ? void 0 : t.getData("text/plain"), o = e.getTargetRanges();
    if (s && o.length) {
      let a = o[0], c = i.posAtDOM(a.startContainer, a.startOffset), u = i.posAtDOM(a.endContainer, a.endOffset);
      return jg(i, { from: c, to: u, insert: i.state.toText(s) }, null), !0;
    }
  }
  let r;
  if (ke.chrome && ke.android && (r = ay.find((s) => s.inputType == e.inputType)) && (i.observer.delayAndroidKey(r.key, r.keyCode), r.key == "Backspace" || r.key == "Delete")) {
    let s = ((n = window.visualViewport) === null || n === void 0 ? void 0 : n.height) || 0;
    setTimeout(() => {
      var o;
      (((o = window.visualViewport) === null || o === void 0 ? void 0 : o.height) || 0) > s + 10 && i.hasFocus && (i.contentDOM.blur(), i.focus());
    }, 100);
  }
  return ke.ios && e.inputType == "deleteContentForward" && i.observer.flushSoon(), ke.safari && e.inputType == "insertText" && i.inputState.composing >= 0 && setTimeout(() => $r.compositionend(i, e), 20), !1;
};
const v1 = /* @__PURE__ */ new Set();
function DC(i) {
  v1.has(i) || (v1.add(i), i.addEventListener("copy", () => {
  }), i.addEventListener("cut", () => {
  }));
}
const S1 = ["pre-wrap", "normal", "pre-line", "break-spaces"];
let oa = !1;
function b1() {
  oa = !1;
}
class VC {
  constructor(e) {
    this.lineWrapping = e, this.doc = Tt.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;
  }
  heightForGap(e, t) {
    let n = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (n += Math.max(0, Math.ceil((t - e - n * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * n;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return S1.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let t = !1;
    for (let n = 0; n < e.length; n++) {
      let r = e[n];
      r < 0 ? n++ : this.heightSamples[Math.floor(r * 10)] || (t = !0, this.heightSamples[Math.floor(r * 10)] = !0);
    }
    return t;
  }
  refresh(e, t, n, r, s, o) {
    let a = S1.indexOf(e) > -1, c = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != a;
    if (this.lineWrapping = a, this.lineHeight = t, this.charWidth = n, this.textHeight = r, this.lineLength = s, c) {
      this.heightSamples = {};
      for (let u = 0; u < o.length; u++) {
        let h = o[u];
        h < 0 ? u++ : this.heightSamples[Math.floor(h * 10)] = !0;
      }
    }
    return c;
  }
}
class UC {
  constructor(e, t) {
    this.from = e, this.heights = t, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class ss {
  /**
  @internal
  */
  constructor(e, t, n, r, s) {
    this.from = e, this.length = t, this.top = n, this.height = r, this._content = s;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? vn.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof To ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new ss(this.from, this.length + e.length, this.top, this.height + e.height, t);
  }
}
var ti = /* @__PURE__ */ function(i) {
  return i[i.ByPos = 0] = "ByPos", i[i.ByHeight = 1] = "ByHeight", i[i.ByPosNoHeight = 2] = "ByPosNoHeight", i;
}(ti || (ti = {}));
const ju = 1e-3;
class Sn {
  constructor(e, t, n = 2) {
    this.length = e, this.height = t, this.flags = n;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e) {
    this.height != e && (Math.abs(this.height - e) > ju && (oa = !0), this.height = e);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, t, n) {
    return Sn.of(n);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, t) {
    t.push(this);
  }
  decomposeRight(e, t) {
    t.push(this);
  }
  applyChanges(e, t, n, r) {
    let s = this, o = n.doc;
    for (let a = r.length - 1; a >= 0; a--) {
      let { fromA: c, toA: u, fromB: h, toB: d } = r[a], p = s.lineAt(c, ti.ByPosNoHeight, n.setDoc(t), 0, 0), m = p.to >= u ? p : s.lineAt(u, ti.ByPosNoHeight, n, 0, 0);
      for (d += m.to - u, u = m.to; a > 0 && p.from <= r[a - 1].toA; )
        c = r[a - 1].fromA, h = r[a - 1].fromB, a--, c < p.from && (p = s.lineAt(c, ti.ByPosNoHeight, n, 0, 0));
      h += p.from - c, c = p.from;
      let b = Bg.build(n.setDoc(o), e, h, d);
      s = ph(s, s.replace(c, u, b));
    }
    return s.updateHeight(n, 0);
  }
  static empty() {
    return new Gn(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let t = 0, n = e.length, r = 0, s = 0;
    for (; ; )
      if (t == n)
        if (r > s * 2) {
          let a = e[t - 1];
          a.break ? e.splice(--t, 1, a.left, null, a.right) : e.splice(--t, 1, a.left, a.right), n += 1 + a.break, r -= a.size;
        } else if (s > r * 2) {
          let a = e[n];
          a.break ? e.splice(n, 1, a.left, null, a.right) : e.splice(n, 1, a.left, a.right), n += 2 + a.break, s -= a.size;
        } else
          break;
      else if (r < s) {
        let a = e[t++];
        a && (r += a.size);
      } else {
        let a = e[--n];
        a && (s += a.size);
      }
    let o = 0;
    return e[t - 1] == null ? (o = 1, t--) : e[t] == null && (o = 1, n++), new YC(Sn.of(e.slice(0, t)), o, Sn.of(e.slice(n)));
  }
}
function ph(i, e) {
  return i == e ? i : (i.constructor != e.constructor && (oa = !0), e);
}
Sn.prototype.size = 1;
class gy extends Sn {
  constructor(e, t, n) {
    super(e, t), this.deco = n;
  }
  blockAt(e, t, n, r) {
    return new ss(r, this.length, n, this.height, this.deco || 0);
  }
  lineAt(e, t, n, r, s) {
    return this.blockAt(0, n, r, s);
  }
  forEachLine(e, t, n, r, s, o) {
    e <= s + this.length && t >= s && o(this.blockAt(0, n, r, s));
  }
  updateHeight(e, t = 0, n = !1, r) {
    return r && r.from <= t && r.more && this.setHeight(r.heights[r.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class Gn extends gy {
  constructor(e, t) {
    super(e, t, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, t, n, r) {
    return new ss(r, this.length, n, this.height, this.breaks);
  }
  replace(e, t, n) {
    let r = n[0];
    return n.length == 1 && (r instanceof Gn || r instanceof Di && r.flags & 4) && Math.abs(this.length - r.length) < 10 ? (r instanceof Di ? r = new Gn(r.length, this.height) : r.height = this.height, this.outdated || (r.outdated = !1), r) : Sn.of(n);
  }
  updateHeight(e, t = 0, n = !1, r) {
    return r && r.from <= t && r.more ? this.setHeight(r.heights[r.index++]) : (n || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class Di extends Sn {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, t) {
    let n = e.doc.lineAt(t).number, r = e.doc.lineAt(t + this.length).number, s = r - n + 1, o, a = 0;
    if (e.lineWrapping) {
      let c = Math.min(this.height, e.lineHeight * s);
      o = c / s, this.length > s + 1 && (a = (this.height - c) / (this.length - s - 1));
    } else
      o = this.height / s;
    return { firstLine: n, lastLine: r, perLine: o, perChar: a };
  }
  blockAt(e, t, n, r) {
    let { firstLine: s, lastLine: o, perLine: a, perChar: c } = this.heightMetrics(t, r);
    if (t.lineWrapping) {
      let u = r + (e < t.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - n) / this.height)) * this.length)), h = t.doc.lineAt(u), d = a + h.length * c, p = Math.max(n, e - d / 2);
      return new ss(h.from, h.length, p, d, 0);
    } else {
      let u = Math.max(0, Math.min(o - s, Math.floor((e - n) / a))), { from: h, length: d } = t.doc.line(s + u);
      return new ss(h, d, n + a * u, a, 0);
    }
  }
  lineAt(e, t, n, r, s) {
    if (t == ti.ByHeight)
      return this.blockAt(e, n, r, s);
    if (t == ti.ByPosNoHeight) {
      let { from: m, to: b } = n.doc.lineAt(e);
      return new ss(m, b - m, 0, 0, 0);
    }
    let { firstLine: o, perLine: a, perChar: c } = this.heightMetrics(n, s), u = n.doc.lineAt(e), h = a + u.length * c, d = u.number - o, p = r + a * d + c * (u.from - s - d);
    return new ss(u.from, u.length, Math.max(r, Math.min(p, r + this.height - h)), h, 0);
  }
  forEachLine(e, t, n, r, s, o) {
    e = Math.max(e, s), t = Math.min(t, s + this.length);
    let { firstLine: a, perLine: c, perChar: u } = this.heightMetrics(n, s);
    for (let h = e, d = r; h <= t; ) {
      let p = n.doc.lineAt(h);
      if (h == e) {
        let b = p.number - a;
        d += c * b + u * (e - s - b);
      }
      let m = c + u * p.length;
      o(new ss(p.from, p.length, d, m, 0)), d += m, h = p.to + 1;
    }
  }
  replace(e, t, n) {
    let r = this.length - t;
    if (r > 0) {
      let s = n[n.length - 1];
      s instanceof Di ? n[n.length - 1] = new Di(s.length + r) : n.push(null, new Di(r - 1));
    }
    if (e > 0) {
      let s = n[0];
      s instanceof Di ? n[0] = new Di(e + s.length) : n.unshift(new Di(e - 1), null);
    }
    return Sn.of(n);
  }
  decomposeLeft(e, t) {
    t.push(new Di(e - 1), null);
  }
  decomposeRight(e, t) {
    t.push(null, new Di(this.length - e - 1));
  }
  updateHeight(e, t = 0, n = !1, r) {
    let s = t + this.length;
    if (r && r.from <= t + this.length && r.more) {
      let o = [], a = Math.max(t, r.from), c = -1;
      for (r.from > t && o.push(new Di(r.from - t - 1).updateHeight(e, t)); a <= s && r.more; ) {
        let h = e.doc.lineAt(a).length;
        o.length && o.push(null);
        let d = r.heights[r.index++];
        c == -1 ? c = d : Math.abs(d - c) >= ju && (c = -2);
        let p = new Gn(h, d);
        p.outdated = !1, o.push(p), a += h + 1;
      }
      a <= s && o.push(null, new Di(s - a).updateHeight(e, a));
      let u = Sn.of(o);
      return (c < 0 || Math.abs(u.height - this.height) >= ju || Math.abs(c - this.heightMetrics(e, t).perLine) >= ju) && (oa = !0), ph(this, u);
    } else (n || this.outdated) && (this.setHeight(e.heightForGap(t, t + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class YC extends Sn {
  constructor(e, t, n) {
    super(e.length + t + n.length, e.height + n.height, t | (e.outdated || n.outdated ? 2 : 0)), this.left = e, this.right = n, this.size = e.size + n.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, t, n, r) {
    let s = n + this.left.height;
    return e < s ? this.left.blockAt(e, t, n, r) : this.right.blockAt(e, t, s, r + this.left.length + this.break);
  }
  lineAt(e, t, n, r, s) {
    let o = r + this.left.height, a = s + this.left.length + this.break, c = t == ti.ByHeight ? e < o : e < a, u = c ? this.left.lineAt(e, t, n, r, s) : this.right.lineAt(e, t, n, o, a);
    if (this.break || (c ? u.to < a : u.from > a))
      return u;
    let h = t == ti.ByPosNoHeight ? ti.ByPosNoHeight : ti.ByPos;
    return c ? u.join(this.right.lineAt(a, h, n, o, a)) : this.left.lineAt(a, h, n, r, s).join(u);
  }
  forEachLine(e, t, n, r, s, o) {
    let a = r + this.left.height, c = s + this.left.length + this.break;
    if (this.break)
      e < c && this.left.forEachLine(e, t, n, r, s, o), t >= c && this.right.forEachLine(e, t, n, a, c, o);
    else {
      let u = this.lineAt(c, ti.ByPos, n, r, s);
      e < u.from && this.left.forEachLine(e, u.from - 1, n, r, s, o), u.to >= e && u.from <= t && o(u), t > u.to && this.right.forEachLine(u.to + 1, t, n, a, c, o);
    }
  }
  replace(e, t, n) {
    let r = this.left.length + this.break;
    if (t < r)
      return this.balanced(this.left.replace(e, t, n), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - r, t - r, n));
    let s = [];
    e > 0 && this.decomposeLeft(e, s);
    let o = s.length;
    for (let a of n)
      s.push(a);
    if (e > 0 && $1(s, o - 1), t < this.length) {
      let a = s.length;
      this.decomposeRight(t, s), $1(s, a);
    }
    return Sn.of(s);
  }
  decomposeLeft(e, t) {
    let n = this.left.length;
    if (e <= n)
      return this.left.decomposeLeft(e, t);
    t.push(this.left), this.break && (n++, e >= n && t.push(null)), e > n && this.right.decomposeLeft(e - n, t);
  }
  decomposeRight(e, t) {
    let n = this.left.length, r = n + this.break;
    if (e >= r)
      return this.right.decomposeRight(e - r, t);
    e < n && this.left.decomposeRight(e, t), this.break && e < r && t.push(null), t.push(this.right);
  }
  balanced(e, t) {
    return e.size > 2 * t.size || t.size > 2 * e.size ? Sn.of(this.break ? [e, null, t] : [e, t]) : (this.left = ph(this.left, e), this.right = ph(this.right, t), this.setHeight(e.height + t.height), this.outdated = e.outdated || t.outdated, this.size = e.size + t.size, this.length = e.length + this.break + t.length, this);
  }
  updateHeight(e, t = 0, n = !1, r) {
    let { left: s, right: o } = this, a = t + s.length + this.break, c = null;
    return r && r.from <= t + s.length && r.more ? c = s = s.updateHeight(e, t, n, r) : s.updateHeight(e, t, n), r && r.from <= a + o.length && r.more ? c = o = o.updateHeight(e, a, n, r) : o.updateHeight(e, a, n), c ? this.balanced(s, o) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function $1(i, e) {
  let t, n;
  i[e] == null && (t = i[e - 1]) instanceof Di && (n = i[e + 1]) instanceof Di && i.splice(e - 1, 3, new Di(t.length + 1 + n.length));
}
const zC = 5;
class Bg {
  constructor(e, t) {
    this.pos = e, this.oracle = t, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, t) {
    if (this.lineStart > -1) {
      let n = Math.min(t, this.lineEnd), r = this.nodes[this.nodes.length - 1];
      r instanceof Gn ? r.length += n - this.pos : (n > this.pos || !this.isCovered) && this.nodes.push(new Gn(n - this.pos, -1)), this.writtenTo = n, t > n && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = t;
  }
  point(e, t, n) {
    if (e < t || n.heightRelevant) {
      let r = n.widget ? n.widget.estimatedHeight : 0, s = n.widget ? n.widget.lineBreaks : 0;
      r < 0 && (r = this.oracle.lineHeight);
      let o = t - e;
      n.block ? this.addBlock(new gy(o, r, n)) : (o || s || r >= zC) && this.addLineDeco(r, s, o);
    } else t > e && this.span(e, t);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: t } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = t, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new Gn(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, t) {
    let n = new Di(t - e);
    return this.oracle.doc.lineAt(e).to == t && (n.flags |= 4), n;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof Gn)
      return e;
    let t = new Gn(0, -1);
    return this.nodes.push(t), t;
  }
  addBlock(e) {
    this.enterLine();
    let t = e.deco;
    t && t.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, t && t.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, t, n) {
    let r = this.ensureLine();
    r.length += n, r.collapsed += n, r.widgetHeight = Math.max(r.widgetHeight, e), r.breaks += t, this.writtenTo = this.pos = this.pos + n;
  }
  finish(e) {
    let t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(t instanceof Gn) && !this.isCovered ? this.nodes.push(new Gn(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let n = e;
    for (let r of this.nodes)
      r instanceof Gn && r.updateHeight(this.oracle, n), n += r ? r.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, t, n, r) {
    let s = new Bg(n, e);
    return xt.spans(t, n, r, s, 0), s.finish(n);
  }
}
function jC(i, e, t) {
  let n = new BC();
  return xt.compare(i, e, t, n, 0), n.changes;
}
class BC {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, t, n, r) {
    (e < t || n && n.heightRelevant || r && r.heightRelevant) && Yu(e, t, this.changes, 5);
  }
}
function IC(i, e) {
  let t = i.getBoundingClientRect(), n = i.ownerDocument, r = n.defaultView || window, s = Math.max(0, t.left), o = Math.min(r.innerWidth, t.right), a = Math.max(0, t.top), c = Math.min(r.innerHeight, t.bottom);
  for (let u = i.parentNode; u && u != n.body; )
    if (u.nodeType == 1) {
      let h = u, d = window.getComputedStyle(h);
      if ((h.scrollHeight > h.clientHeight || h.scrollWidth > h.clientWidth) && d.overflow != "visible") {
        let p = h.getBoundingClientRect();
        s = Math.max(s, p.left), o = Math.min(o, p.right), a = Math.max(a, p.top), c = Math.min(u == i.parentNode ? r.innerHeight : c, p.bottom);
      }
      u = d.position == "absolute" || d.position == "fixed" ? h.offsetParent : h.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
  return {
    left: s - t.left,
    right: Math.max(s, o) - t.left,
    top: a - (t.top + e),
    bottom: Math.max(a, c) - (t.top + e)
  };
}
function NC(i) {
  let e = i.getBoundingClientRect(), t = i.ownerDocument.defaultView || window;
  return e.left < t.innerWidth && e.right > 0 && e.top < t.innerHeight && e.bottom > 0;
}
function FC(i, e) {
  let t = i.getBoundingClientRect();
  return {
    left: 0,
    right: t.right - t.left,
    top: e,
    bottom: t.bottom - (t.top + e)
  };
}
class Cd {
  constructor(e, t, n, r) {
    this.from = e, this.to = t, this.size = n, this.displaySize = r;
  }
  static same(e, t) {
    if (e.length != t.length)
      return !1;
    for (let n = 0; n < e.length; n++) {
      let r = e[n], s = t[n];
      if (r.from != s.from || r.to != s.to || r.size != s.size)
        return !1;
    }
    return !0;
  }
  draw(e, t) {
    return Ue.replace({
      widget: new GC(this.displaySize * (t ? e.scaleY : e.scaleX), t)
    }).range(this.from, this.to);
  }
}
class GC extends eo {
  constructor(e, t) {
    super(), this.size = e, this.vertical = t;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class y1 {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = Q1, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = ii.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let t = e.facet(Ug).some((n) => typeof n != "function" && n.class == "cm-lineWrapping");
    this.heightOracle = new VC(t), this.stateDeco = e.facet(Tc).filter((n) => typeof n != "function"), this.heightMap = Sn.empty().applyChanges(this.stateDeco, Tt.empty, this.heightOracle.setDoc(e.doc), [new Sr(0, 0, 0, e.doc.length)]);
    for (let n = 0; n < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); n++)
      ;
    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = Ue.set(this.lineGaps.map((n) => n.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: t } = this.state.selection;
    for (let n = 0; n <= 1; n++) {
      let r = n ? t.head : t.anchor;
      if (!e.some(({ from: s, to: o }) => r >= s && r <= o)) {
        let { from: s, to: o } = this.lineBlockAt(r);
        e.push(new mu(s, o));
      }
    }
    return this.viewports = e.sort((n, r) => n.from - r.from), this.updateScaler();
  }
  updateScaler() {
    let e = this.scaler;
    return this.scaler = this.heightMap.height <= 7e6 ? Q1 : new Ig(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(cc(e, this.scaler));
    });
  }
  update(e, t = null) {
    this.state = e.state;
    let n = this.stateDeco;
    this.stateDeco = this.state.facet(Tc).filter((h) => typeof h != "function");
    let r = e.changedRanges, s = Sr.extendWithRanges(r, jC(n, this.stateDeco, e ? e.changes : ki.empty(this.state.doc.length))), o = this.heightMap.height, a = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    b1(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s), (this.heightMap.height != o || oa) && (e.flags |= 2), a ? (this.scrollAnchorPos = e.changes.mapPos(a.from, -1), this.scrollAnchorHeight = a.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let c = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (t && (t.range.head < c.from || t.range.head > c.to) || !this.viewportIsAppropriate(c)) && (c = this.getViewport(0, t));
    let u = c.from != this.viewport.from || c.to != this.viewport.to;
    this.viewport = c, e.flags |= this.updateForViewport(), (u || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), t && (this.scrollTarget = t), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(K$) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let t = e.contentDOM, n = window.getComputedStyle(t), r = this.heightOracle, s = n.whiteSpace;
    this.defaultTextDirection = n.direction == "rtl" ? ii.RTL : ii.LTR;
    let o = this.heightOracle.mustRefreshForWrapping(s), a = t.getBoundingClientRect(), c = o || this.mustMeasureContent || this.contentDOMHeight != a.height;
    this.contentDOMHeight = a.height, this.mustMeasureContent = !1;
    let u = 0, h = 0;
    if (a.width && a.height) {
      let { scaleX: _, scaleY: W } = P$(t, a);
      (_ > 5e-3 && Math.abs(this.scaleX - _) > 5e-3 || W > 5e-3 && Math.abs(this.scaleY - W) > 5e-3) && (this.scaleX = _, this.scaleY = W, u |= 16, o = c = !0);
    }
    let d = (parseInt(n.paddingTop) || 0) * this.scaleY, p = (parseInt(n.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != d || this.paddingBottom != p) && (this.paddingTop = d, this.paddingBottom = p, u |= 18), this.editorWidth != e.scrollDOM.clientWidth && (r.lineWrapping && (c = !0), this.editorWidth = e.scrollDOM.clientWidth, u |= 16);
    let m = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != m && (this.scrollAnchorHeight = -1, this.scrollTop = m), this.scrolledToBottom = _$(e.scrollDOM);
    let b = (this.printing ? FC : IC)(t, this.paddingTop), y = b.top - this.pixelViewport.top, w = b.bottom - this.pixelViewport.bottom;
    this.pixelViewport = b;
    let k = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (k != this.inView && (this.inView = k, k && (c = !0)), !this.inView && !this.scrollTarget && !NC(e.dom))
      return 0;
    let A = a.width;
    if ((this.contentDOMWidth != A || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = a.width, this.editorHeight = e.scrollDOM.clientHeight, u |= 16), c) {
      let _ = e.docView.measureVisibleLineHeights(this.viewport);
      if (r.mustRefreshForHeights(_) && (o = !0), o || r.lineWrapping && Math.abs(A - this.contentDOMWidth) > r.charWidth) {
        let { lineHeight: W, charWidth: D, textHeight: q } = e.docView.measureTextSize();
        o = W > 0 && r.refresh(s, W, D, q, A / D, _), o && (e.docView.minWidth = 0, u |= 16);
      }
      y > 0 && w > 0 ? h = Math.max(y, w) : y < 0 && w < 0 && (h = Math.min(y, w)), b1();
      for (let W of this.viewports) {
        let D = W.from == this.viewport.from ? _ : e.docView.measureVisibleLineHeights(W);
        this.heightMap = (o ? Sn.empty().applyChanges(this.stateDeco, Tt.empty, this.heightOracle, [new Sr(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(r, 0, o, new UC(W.from, D));
      }
      oa && (u |= 2);
    }
    let x = !this.viewportIsAppropriate(this.viewport, h) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return x && (u & 2 && (u |= this.updateScaler()), this.viewport = this.getViewport(h, this.scrollTarget), u |= this.updateForViewport()), (u & 2 || x) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)), u |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), u;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, t) {
    let n = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), r = this.heightMap, s = this.heightOracle, { visibleTop: o, visibleBottom: a } = this, c = new mu(r.lineAt(o - n * 1e3, ti.ByHeight, s, 0, 0).from, r.lineAt(a + (1 - n) * 1e3, ti.ByHeight, s, 0, 0).to);
    if (t) {
      let { head: u } = t.range;
      if (u < c.from || u > c.to) {
        let h = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), d = r.lineAt(u, ti.ByPos, s, 0, 0), p;
        t.y == "center" ? p = (d.top + d.bottom) / 2 - h / 2 : t.y == "start" || t.y == "nearest" && u < c.from ? p = d.top : p = d.bottom - h, c = new mu(r.lineAt(p - 1e3 / 2, ti.ByHeight, s, 0, 0).from, r.lineAt(p + h + 1e3 / 2, ti.ByHeight, s, 0, 0).to);
      }
    }
    return c;
  }
  mapViewport(e, t) {
    let n = t.mapPos(e.from, -1), r = t.mapPos(e.to, 1);
    return new mu(this.heightMap.lineAt(n, ti.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(r, ti.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: t }, n = 0) {
    if (!this.inView)
      return !0;
    let { top: r } = this.heightMap.lineAt(e, ti.ByPos, this.heightOracle, 0, 0), { bottom: s } = this.heightMap.lineAt(t, ti.ByPos, this.heightOracle, 0, 0), { visibleTop: o, visibleBottom: a } = this;
    return (e == 0 || r <= o - Math.max(10, Math.min(
      -n,
      250
      /* VP.MaxCoverMargin */
    ))) && (t == this.state.doc.length || s >= a + Math.max(10, Math.min(
      n,
      250
      /* VP.MaxCoverMargin */
    ))) && r > o - 2 * 1e3 && s < a + 2 * 1e3;
  }
  mapLineGaps(e, t) {
    if (!e.length || t.empty)
      return e;
    let n = [];
    for (let r of e)
      t.touchesRange(r.from, r.to) || n.push(new Cd(t.mapPos(r.from), t.mapPos(r.to), r.size, r.displaySize));
    return n;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, t) {
    let n = this.heightOracle.lineWrapping, r = n ? 1e4 : 2e3, s = r >> 1, o = r << 1;
    if (this.defaultTextDirection != ii.LTR && !n)
      return [];
    let a = [], c = (h, d, p, m) => {
      if (d - h < s)
        return;
      let b = this.state.selection.main, y = [b.from];
      b.empty || y.push(b.to);
      for (let k of y)
        if (k > h && k < d) {
          c(h, k - 10, p, m), c(k + 10, d, p, m);
          return;
        }
      let w = KC(e, (k) => k.from >= p.from && k.to <= p.to && Math.abs(k.from - h) < s && Math.abs(k.to - d) < s && !y.some((A) => k.from < A && k.to > A));
      if (!w) {
        if (d < p.to && t && n && t.visibleRanges.some((x) => x.from <= d && x.to >= d)) {
          let x = t.moveToLineBoundary(J.cursor(d), !1, !0).head;
          x > h && (d = x);
        }
        let k = this.gapSize(p, h, d, m), A = n || k < 2e6 ? k : 2e6;
        w = new Cd(h, d, k, A);
      }
      a.push(w);
    }, u = (h) => {
      if (h.length < o || h.type != vn.Text)
        return;
      let d = HC(h.from, h.to, this.stateDeco);
      if (d.total < o)
        return;
      let p = this.scrollTarget ? this.scrollTarget.range.head : null, m, b;
      if (n) {
        let y = r / this.heightOracle.lineLength * this.heightOracle.lineHeight, w, k;
        if (p != null) {
          let A = Su(d, p), x = ((this.visibleBottom - this.visibleTop) / 2 + y) / h.height;
          w = A - x, k = A + x;
        } else
          w = (this.visibleTop - h.top - y) / h.height, k = (this.visibleBottom - h.top + y) / h.height;
        m = vu(d, w), b = vu(d, k);
      } else {
        let y = d.total * this.heightOracle.charWidth, w = r * this.heightOracle.charWidth, k = 0;
        if (y > 2e6)
          for (let D of e)
            D.from >= h.from && D.from < h.to && D.size != D.displaySize && D.from * this.heightOracle.charWidth + k < this.pixelViewport.left && (k = D.size - D.displaySize);
        let A = this.pixelViewport.left + k, x = this.pixelViewport.right + k, _, W;
        if (p != null) {
          let D = Su(d, p), q = ((x - A) / 2 + w) / y;
          _ = D - q, W = D + q;
        } else
          _ = (A - w) / y, W = (x + w) / y;
        m = vu(d, _), b = vu(d, W);
      }
      m > h.from && c(h.from, m, h, d), b < h.to && c(b, h.to, h, d);
    };
    for (let h of this.viewportLines)
      Array.isArray(h.type) ? h.type.forEach(u) : u(h);
    return a;
  }
  gapSize(e, t, n, r) {
    let s = Su(r, n) - Su(r, t);
    return this.heightOracle.lineWrapping ? e.height * s : r.total * this.heightOracle.charWidth * s;
  }
  updateLineGaps(e) {
    Cd.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = Ue.set(e.map((t) => t.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges(e) {
    let t = this.stateDeco;
    this.lineGaps.length && (t = t.concat(this.lineGapDeco));
    let n = [];
    xt.spans(t, this.viewport.from, this.viewport.to, {
      span(s, o) {
        n.push({ from: s, to: o });
      },
      point() {
      }
    }, 20);
    let r = 0;
    if (n.length != this.visibleRanges.length)
      r = 12;
    else
      for (let s = 0; s < n.length && !(r & 8); s++) {
        let o = this.visibleRanges[s], a = n[s];
        (o.from != a.from || o.to != a.to) && (r |= 4, e && e.mapPos(o.from, -1) == a.from && e.mapPos(o.to, 1) == a.to || (r |= 8));
      }
    return this.visibleRanges = n, r;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e) || cc(this.heightMap.lineAt(e, ti.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((t) => t.top <= e && t.bottom >= e) || cc(this.heightMap.lineAt(this.scaler.fromDOM(e), ti.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let t = this.lineBlockAtHeight(e + 8);
    return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return cc(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class mu {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
function HC(i, e, t) {
  let n = [], r = i, s = 0;
  return xt.spans(t, i, e, {
    span() {
    },
    point(o, a) {
      o > r && (n.push({ from: r, to: o }), s += o - r), r = a;
    }
  }, 20), r < e && (n.push({ from: r, to: e }), s += e - r), { total: s, ranges: n };
}
function vu({ total: i, ranges: e }, t) {
  if (t <= 0)
    return e[0].from;
  if (t >= 1)
    return e[e.length - 1].to;
  let n = Math.floor(i * t);
  for (let r = 0; ; r++) {
    let { from: s, to: o } = e[r], a = o - s;
    if (n <= a)
      return s + n;
    n -= a;
  }
}
function Su(i, e) {
  let t = 0;
  for (let { from: n, to: r } of i.ranges) {
    if (e <= r) {
      t += e - n;
      break;
    }
    t += r - n;
  }
  return t / i.total;
}
function KC(i, e) {
  for (let t of i)
    if (e(t))
      return t;
}
const Q1 = {
  toDOM(i) {
    return i;
  },
  fromDOM(i) {
    return i;
  },
  scale: 1,
  eq(i) {
    return i == this;
  }
};
class Ig {
  constructor(e, t, n) {
    let r = 0, s = 0, o = 0;
    this.viewports = n.map(({ from: a, to: c }) => {
      let u = t.lineAt(a, ti.ByPos, e, 0, 0).top, h = t.lineAt(c, ti.ByPos, e, 0, 0).bottom;
      return r += h - u, { from: a, to: c, top: u, bottom: h, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - r) / (t.height - r);
    for (let a of this.viewports)
      a.domTop = o + (a.top - s) * this.scale, o = a.domBottom = a.domTop + (a.bottom - a.top), s = a.bottom;
  }
  toDOM(e) {
    for (let t = 0, n = 0, r = 0; ; t++) {
      let s = t < this.viewports.length ? this.viewports[t] : null;
      if (!s || e < s.top)
        return r + (e - n) * this.scale;
      if (e <= s.bottom)
        return s.domTop + (e - s.top);
      n = s.bottom, r = s.domBottom;
    }
  }
  fromDOM(e) {
    for (let t = 0, n = 0, r = 0; ; t++) {
      let s = t < this.viewports.length ? this.viewports[t] : null;
      if (!s || e < s.domTop)
        return n + (e - r) / this.scale;
      if (e <= s.domBottom)
        return s.top + (e - s.domTop);
      n = s.bottom, r = s.domBottom;
    }
  }
  eq(e) {
    return e instanceof Ig ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((t, n) => t.from == e.viewports[n].from && t.to == e.viewports[n].to) : !1;
  }
}
function cc(i, e) {
  if (e.scale == 1)
    return i;
  let t = e.toDOM(i.top), n = e.toDOM(i.bottom);
  return new ss(i.from, i.length, t, n - t, Array.isArray(i._content) ? i._content.map((r) => cc(r, e)) : i._content);
}
const bu = /* @__PURE__ */ _e.define({ combine: (i) => i.join(" ") }), Ip = /* @__PURE__ */ _e.define({ combine: (i) => i.indexOf(!0) > -1 }), Np = /* @__PURE__ */ _o.newName(), my = /* @__PURE__ */ _o.newName(), vy = /* @__PURE__ */ _o.newName(), Sy = { "&light": "." + my, "&dark": "." + vy };
function Fp(i, e, t) {
  return new _o(e, {
    finish(n) {
      return /&/.test(n) ? n.replace(/&\w*/, (r) => {
        if (r == "&")
          return i;
        if (!t || !t[r])
          throw new RangeError(`Unsupported selector: ${r}`);
        return t[r];
      }) : i + " " + n;
    }
  });
}
const JC = /* @__PURE__ */ Fp("." + Np, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0,
    overflowAnchor: "none"
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#ddd"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0,
    zIndex: 300
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace": {
    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",
    backgroundPosition: "center"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, Sy), eR = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, Rd = ke.ie && ke.ie_version <= 11;
class tR {
  constructor(e) {
    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new q5(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((t) => {
      for (let n of t)
        this.queue.push(n);
      (ke.ie && ke.ie_version <= 11 || ke.ios && e.composing) && t.some((n) => n.type == "childList" && n.removedNodes.length || n.type == "characterData" && n.oldValue.length > n.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), window.EditContext && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn't support inverted selections in edit context (#1392)
    !(ke.chrome && ke.chrome_version < 126) && (this.editContext = new nR(e), e.state.facet(Vs) && (e.contentDOM.editContext = this.editContext.editContext)), Rd && (this.onCharData = (t) => {
      this.queue.push({
        target: t.target,
        type: "characterData",
        oldValue: t.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var t;
      ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((t) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((t) => {
      t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint(e) {
    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500));
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, n) => t != e[n]))) {
      this.gapIntersection.disconnect();
      for (let t of e)
        this.gapIntersection.observe(t);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let t = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: n } = this, r = this.selectionRange;
    if (n.state.facet(Vs) ? n.root.activeElement != this.dom : !Uu(this.dom, r))
      return;
    let s = r.anchorNode && n.docView.nearest(r.anchorNode);
    if (s && s.ignoreEvent(e)) {
      t || (this.selectionChanged = !1);
      return;
    }
    (ke.ie && ke.ie_version <= 11 || ke.android && ke.chrome) && !n.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    r.focusNode && mc(r.focusNode, r.focusOffset, r.anchorNode, r.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, t = _c(e.root);
    if (!t)
      return !1;
    let n = ke.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && iR(this.view, t) || t;
    if (!n || this.selectionRange.eq(n))
      return !1;
    let r = Uu(this.dom, n);
    return r && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && D5(this.dom, n) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(n), r && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, t) {
    this.selectionRange.set(e.node, e.offset, t.node, t.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, t = null;
    for (let n = this.dom; n; )
      if (n.nodeType == 1)
        !t && e < this.scrollTargets.length && this.scrollTargets[e] == n ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(n), n = n.assignedSlot || n.parentNode;
      else if (n.nodeType == 11)
        n = n.host;
      else
        break;
    if (e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t) {
      for (let n of this.scrollTargets)
        n.removeEventListener("scroll", this.onScroll);
      for (let n of this.scrollTargets = t)
        n.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, eR), Rd && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), Rd && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, t) {
    var n;
    if (!this.delayedAndroidKey) {
      let r = () => {
        let s = this.delayedAndroidKey;
        s && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = s.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && s.force && Hl(this.dom, s.key, s.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(r);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: t,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((n = this.delayedAndroidKey) === null || n === void 0) && n.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let t = -1, n = -1, r = !1;
    for (let s of e) {
      let o = this.readMutation(s);
      o && (o.typeOver && (r = !0), t == -1 ? { from: t, to: n } = o : (t = Math.min(o.from, t), n = Math.max(o.to, n)));
    }
    return { from: t, to: n, typeOver: r };
  }
  readChange() {
    let { from: e, to: t, typeOver: n } = this.processRecords(), r = this.selectionChanged && Uu(this.dom, this.selectionRange);
    if (e < 0 && !r)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let s = new SC(this.view, e, t, n);
    return this.view.docView.domChanged = { newSel: s.newSel ? s.newSel.main : null }, s;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let t = this.readChange();
    if (!t)
      return this.view.requestMeasure(), !1;
    let n = this.view.state, r = ly(this.view, t);
    return this.view.state == n && (t.domChanged || t.newSel && !t.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), r;
  }
  readMutation(e) {
    let t = this.view.docView.nearest(e.target);
    if (!t || t.ignoreMutation(e))
      return null;
    if (t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList") {
      let n = w1(t, e.previousSibling || e.target.previousSibling, -1), r = w1(t, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: n ? t.posAfter(n) : t.posAtStart,
        to: r ? t.posBefore(r) : t.posAtEnd,
        typeOver: !1
      };
    } else return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  update(e) {
    this.editContext && (this.editContext.update(e), e.startState.facet(Vs) != e.state.facet(Vs) && (e.view.contentDOM.editContext = e.state.facet(Vs) ? this.editContext.editContext : null));
  }
  destroy() {
    var e, t, n;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (n = this.resizeScroll) === null || n === void 0 || n.disconnect();
    for (let r of this.scrollTargets)
      r.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());
  }
}
function w1(i, e, t) {
  for (; e; ) {
    let n = Ft.get(e);
    if (n && n.parent == i)
      return n;
    let r = e.parentNode;
    e = r != i.dom ? r : t > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function P1(i, e) {
  let t = e.startContainer, n = e.startOffset, r = e.endContainer, s = e.endOffset, o = i.docView.domAtPos(i.state.selection.main.anchor);
  return mc(o.node, o.offset, r, s) && ([t, n, r, s] = [r, s, t, n]), { anchorNode: t, anchorOffset: n, focusNode: r, focusOffset: s };
}
function iR(i, e) {
  if (e.getComposedRanges) {
    let r = e.getComposedRanges(i.root)[0];
    if (r)
      return P1(i, r);
  }
  let t = null;
  function n(r) {
    r.preventDefault(), r.stopImmediatePropagation(), t = r.getTargetRanges()[0];
  }
  return i.contentDOM.addEventListener("beforeinput", n, !0), i.dom.ownerDocument.execCommand("indent"), i.contentDOM.removeEventListener("beforeinput", n, !0), t ? P1(i, t) : null;
}
class nR {
  constructor(e) {
    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);
    let t = this.editContext = new window.EditContext({
      text: e.state.doc.sliceString(this.from, this.to),
      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),
      selectionEnd: this.toContextPos(e.state.selection.main.head)
    });
    this.handlers.textupdate = (n) => {
      let r = e.state.selection.main, { anchor: s, head: o } = r, a = this.toEditorPos(n.updateRangeStart), c = this.toEditorPos(n.updateRangeEnd);
      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: n.updateRangeStart, editorBase: a, drifted: !1 });
      let u = { from: a, to: c, insert: Tt.of(n.text.split(`
`)) };
      if (u.from == this.from && s < this.from ? u.from = s : u.to == this.to && s > this.to && (u.to = s), u.from == u.to && !u.insert.length) {
        let h = J.single(this.toEditorPos(n.selectionStart), this.toEditorPos(n.selectionEnd));
        h.main.eq(r) || e.dispatch({ selection: h, userEvent: "select" });
        return;
      }
      if ((ke.mac || ke.android) && u.from == o - 1 && /^\. ?$/.test(n.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (u = { from: a, to: c, insert: Tt.of([n.text.replace(".", " ")]) }), this.pendingContextChange = u, !e.state.readOnly) {
        let h = this.to - this.from + (u.to - u.from + u.insert.length);
        jg(e, u, J.single(this.toEditorPos(n.selectionStart, h), this.toEditorPos(n.selectionEnd, h)));
      }
      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));
    }, this.handlers.characterboundsupdate = (n) => {
      let r = [], s = null;
      for (let o = this.toEditorPos(n.rangeStart), a = this.toEditorPos(n.rangeEnd); o < a; o++) {
        let c = e.coordsForChar(o);
        s = c && new DOMRect(c.left, c.top, c.right - c.left, c.bottom - c.top) || s || new DOMRect(), r.push(s);
      }
      t.updateCharacterBounds(n.rangeStart, r);
    }, this.handlers.textformatupdate = (n) => {
      let r = [];
      for (let s of n.getTextFormats()) {
        let o = s.underlineStyle, a = s.underlineThickness;
        if (o != "None" && a != "None") {
          let c = this.toEditorPos(s.rangeStart), u = this.toEditorPos(s.rangeEnd);
          if (c < u) {
            let h = `text-decoration: underline ${o == "Dashed" ? "dashed " : o == "Squiggle" ? "wavy " : ""}${a == "Thin" ? 1 : 2}px`;
            r.push(Ue.mark({ attributes: { style: h } }).range(c, u));
          }
        }
      }
      e.dispatch({ effects: ey.of(Ue.set(r)) });
    }, this.handlers.compositionstart = () => {
      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);
    }, this.handlers.compositionend = () => {
      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {
        let { drifted: n } = this.composing;
        this.composing = null, n && this.reset(e.state);
      }
    };
    for (let n in this.handlers)
      t.addEventListener(n, this.handlers[n]);
    this.measureReq = { read: (n) => {
      this.editContext.updateControlBounds(n.contentDOM.getBoundingClientRect());
      let r = _c(n.root);
      r && r.rangeCount && this.editContext.updateSelectionBounds(r.getRangeAt(0).getBoundingClientRect());
    } };
  }
  applyEdits(e) {
    let t = 0, n = !1, r = this.pendingContextChange;
    return e.changes.iterChanges((s, o, a, c, u) => {
      if (n)
        return;
      let h = u.length - (o - s);
      if (r && o >= r.to)
        if (r.from == s && r.to == o && r.insert.eq(u)) {
          r = this.pendingContextChange = null, t += h, this.to += h;
          return;
        } else
          r = null, this.revertPending(e.state);
      if (s += t, o += t, o <= this.from)
        this.from += h, this.to += h;
      else if (s < this.to) {
        if (s < this.from || o > this.to || this.to - this.from + u.length > 3e4) {
          n = !0;
          return;
        }
        this.editContext.updateText(this.toContextPos(s), this.toContextPos(o), u.toString()), this.to += h;
      }
      t += h;
    }), r && !n && this.revertPending(e.state), !n;
  }
  update(e) {
    let t = this.pendingContextChange;
    this.composing && (this.composing.drifted || e.transactions.some((n) => !n.isUserEvent("input.type") && n.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || t) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);
  }
  resetRange(e) {
    let { head: t } = e.selection.main;
    this.from = Math.max(
      0,
      t - 1e4
      /* CxVp.Margin */
    ), this.to = Math.min(
      e.doc.length,
      t + 1e4
      /* CxVp.Margin */
    );
  }
  reset(e) {
    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);
  }
  revertPending(e) {
    let t = this.pendingContextChange;
    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(t.from), this.toContextPos(t.from + t.insert.length), e.doc.sliceString(t.from, t.to));
  }
  setSelection(e) {
    let { main: t } = e.selection, n = this.toContextPos(Math.max(this.from, Math.min(this.to, t.anchor))), r = this.toContextPos(t.head);
    (this.editContext.selectionStart != n || this.editContext.selectionEnd != r) && this.editContext.updateSelection(n, r);
  }
  rangeIsValid(e) {
    let { head: t } = e.selection.main;
    return !(this.from > 0 && t - this.from < 500 || this.to < e.doc.length && this.to - t < 500 || this.to - this.from > 1e4 * 3);
  }
  toEditorPos(e, t = this.to - this.from) {
    e = Math.min(e, t);
    let n = this.composing;
    return n && n.drifted ? n.editorBase + (e - n.contextBase) : e + this.from;
  }
  toContextPos(e) {
    let t = this.composing;
    return t && t.drifted ? t.contextBase + (e - t.editorBase) : e - this.from;
  }
  destroy() {
    for (let e in this.handlers)
      this.editContext.removeEventListener(e, this.handlers[e]);
  }
}
class me {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    var t;
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: n } = e;
    this.dispatchTransactions = e.dispatchTransactions || n && ((r) => r.forEach((s) => n(s, this))) || ((r) => this.update(r)), this.dispatch = this.dispatch.bind(this), this._root = e.root || L5(e.parent) || document, this.viewState = new y1(e.state || St.create(e)), e.scrollTo && e.scrollTo.is(du) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(oc).map((r) => new Wd(r));
    for (let r of this.plugins)
      r.update(this);
    this.observer = new tR(this), this.inputState = new wC(this), this.inputState.ensureHandlers(this.plugins), this.docView = new n1(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((t = document.fonts) === null || t === void 0) && t.ready && document.fonts.ready.then(() => this.requestMeasure());
  }
  dispatch(...e) {
    let t = e.length == 1 && e[0] instanceof $i ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(t, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let t = !1, n = !1, r, s = this.state;
    for (let p of e) {
      if (p.startState != s)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      s = p.state;
    }
    if (this.destroyed) {
      this.viewState.state = s;
      return;
    }
    let o = this.hasFocus, a = 0, c = null;
    e.some((p) => p.annotation(Oy)) ? (this.inputState.notifiedFocused = o, a = 1) : o != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = o, c = dy(s, o), c || (a = 1));
    let u = this.observer.delayedAndroidKey, h = null;
    if (u ? (this.observer.clearDelayedAndroidKey(), h = this.observer.readChange(), (h && !this.state.doc.eq(s.doc) || !this.state.selection.eq(s.selection)) && (h = null)) : this.observer.clear(), s.facet(St.phrases) != this.state.facet(St.phrases))
      return this.setState(s);
    r = dh.create(this, s, e), r.flags |= a;
    let d = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let p of e) {
        if (d && (d = d.map(p.changes)), p.scrollIntoView) {
          let { main: m } = p.state.selection;
          d = new Kl(m.empty ? m : J.cursor(m.head, m.head > m.anchor ? -1 : 1));
        }
        for (let m of p.effects)
          m.is(du) && (d = m.value.clip(this.state));
      }
      this.viewState.update(r, d), this.bidiCache = gh.update(this.bidiCache, r.changes), r.empty || (this.updatePlugins(r), this.inputState.update(r)), t = this.docView.update(r), this.state.facet(lc) != this.styleModules && this.mountStyles(), n = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(t, e.some((p) => p.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (r.startState.facet(bu) != r.state.facet(bu) && (this.viewState.mustMeasureContent = !0), (t || n || d || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), t && this.docViewUpdate(), !r.empty)
      for (let p of this.state.facet(Yp))
        try {
          p(r);
        } catch (m) {
          Xn(this.state, m, "update listener");
        }
    (c || h) && Promise.resolve().then(() => {
      c && this.state == c.startState && this.dispatch(c), h && !ly(this, h) && u.force && Hl(this.contentDOM, u.key, u.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let t = this.hasFocus;
    try {
      for (let n of this.plugins)
        n.destroy(this);
      this.viewState = new y1(e), this.plugins = e.facet(oc).map((n) => new Wd(n)), this.pluginMap.clear();
      for (let n of this.plugins)
        n.update(this);
      this.docView.destroy(), this.docView = new n1(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    t && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let t = e.startState.facet(oc), n = e.state.facet(oc);
    if (t != n) {
      let r = [];
      for (let s of n) {
        let o = t.indexOf(s);
        if (o < 0)
          r.push(new Wd(s));
        else {
          let a = this.plugins[o];
          a.mustUpdate = e, r.push(a);
        }
      }
      for (let s of this.plugins)
        s.mustUpdate != e && s.destroy(this);
      this.plugins = r, this.pluginMap.clear();
    } else
      for (let r of this.plugins)
        r.mustUpdate = e;
    for (let r = 0; r < this.plugins.length; r++)
      this.plugins[r].update(this);
    t != n && this.inputState.ensureHandlers(this.plugins);
  }
  docViewUpdate() {
    for (let e of this.plugins) {
      let t = e.value;
      if (t && t.docViewUpdate)
        try {
          t.docViewUpdate(this);
        } catch (n) {
          Xn(this.state, n, "doc view update listener");
        }
    }
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let t = null, n = this.scrollDOM, r = n.scrollTop * this.scaleY, { scrollAnchorPos: s, scrollAnchorHeight: o } = this.viewState;
    Math.abs(r - this.viewState.scrollTop) > 1 && (o = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let a = 0; ; a++) {
        if (o < 0)
          if (_$(n))
            s = -1, o = this.viewState.heightMap.height;
          else {
            let m = this.viewState.scrollAnchorAt(r);
            s = m.from, o = m.top;
          }
        this.updateState = 1;
        let c = this.viewState.measure(this);
        if (!c && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (a > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let u = [];
        c & 4 || ([this.measureRequests, u] = [u, this.measureRequests]);
        let h = u.map((m) => {
          try {
            return m.read(this);
          } catch (b) {
            return Xn(this.state, b), x1;
          }
        }), d = dh.create(this, this.state, []), p = !1;
        d.flags |= c, t ? t.flags |= c : t = d, this.updateState = 2, d.empty || (this.updatePlugins(d), this.inputState.update(d), this.updateAttrs(), p = this.docView.update(d), p && this.docViewUpdate());
        for (let m = 0; m < u.length; m++)
          if (h[m] != x1)
            try {
              let b = u[m];
              b.write && b.write(h[m], this);
            } catch (b) {
              Xn(this.state, b);
            }
        if (p && this.docView.updateSelection(!0), !d.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, o = -1;
              continue;
            } else {
              let b = (s < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(s).top) - o;
              if (b > 1 || b < -1) {
                r = r + b, n.scrollTop = r / this.scaleY, o = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (t && !t.empty)
      for (let a of this.state.facet(Yp))
        a(t);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return Np + " " + (this.state.facet(Ip) ? vy : my) + " " + this.state.facet(bu);
  }
  updateAttrs() {
    let e = k1(this, ty, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), t = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      writingsuggestions: "false",
      translate: "no",
      contenteditable: this.state.facet(Vs) ? "true" : "false",
      class: "cm-content",
      style: `${ke.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (t["aria-readonly"] = "true"), k1(this, Ug, t);
    let n = this.observer.ignore(() => {
      let r = qp(this.contentDOM, this.contentAttrs, t), s = qp(this.dom, this.editorAttrs, e);
      return r || s;
    });
    return this.editorAttrs = e, this.contentAttrs = t, n;
  }
  showAnnouncements(e) {
    let t = !0;
    for (let n of e)
      for (let r of n.effects)
        if (r.is(me.announce)) {
          t && (this.announceDOM.textContent = ""), t = !1;
          let s = this.announceDOM.appendChild(document.createElement("div"));
          s.textContent = r.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(lc);
    let e = this.state.facet(me.cspNonce);
    _o.mount(this.root, this.styleModules.concat(JC).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let t = 0; t < this.measureRequests.length; t++)
          if (this.measureRequests[t].key === e.key) {
            this.measureRequests[t] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let t = this.pluginMap.get(e);
    return (t === void 0 || t && t.spec != e) && this.pluginMap.set(e, t = this.plugins.find((n) => n.spec == e) || null), t && t.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, t, n) {
    return Zd(this, e, a1(this, e, t, n));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, t) {
    return Zd(this, e, a1(this, e, t, (n) => pC(this, e.head, n)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, t) {
    let n = this.bidiSpans(e), r = this.textDirectionAt(e.from), s = n[t ? n.length - 1 : 0];
    return J.cursor(s.side(t, r) + e.from, s.forward(!t, r) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, t, n = !0) {
    return dC(this, e, t, n);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, t, n) {
    return Zd(this, e, gC(this, e, t, n));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, t = 0) {
    return this.docView.posFromDOM(e, t);
  }
  posAtCoords(e, t = !0) {
    return this.readMeasured(), oy(this, e, t);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, t = 1) {
    this.readMeasured();
    let n = this.docView.coordsAt(e, t);
    if (!n || n.left == n.right)
      return n;
    let r = this.state.doc.lineAt(e), s = this.bidiSpans(r), o = s[wo.find(s, e - r.from, -1, t)];
    return Hh(n, o.dir == ii.LTR == t > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(H$) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > rR)
      return Y$(e.length);
    let t = this.textDirectionAt(e.from), n;
    for (let s of this.bidiCache)
      if (s.from == e.from && s.dir == t && (s.fresh || U$(s.isolates, n = i1(this, e))))
        return s.order;
    n || (n = i1(this, e));
    let r = K5(e.text, t, n);
    return this.bidiCache.push(new gh(e.from, e.to, t, n, !0, r)), r;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || ke.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      x$(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    this.root.activeElement == this.contentDOM && this.contentDOM.blur();
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, t = {}) {
    return du.of(new Kl(typeof e == "number" ? J.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: t } = this.scrollDOM, n = this.viewState.scrollAnchorAt(e);
    return du.of(new Kl(J.cursor(n.from), "start", "start", n.top - e, t, !0));
  }
  /**
  Enable or disable tab-focus mode, which disables key bindings
  for Tab and Shift-Tab, letting the browser's default
  focus-changing behavior go through instead. This is useful to
  prevent trapping keyboard users in your editor.
  
  Without argument, this toggles the mode. With a boolean, it
  enables (true) or disables it (false). Given a number, it
  temporarily enables the mode until that number of milliseconds
  have passed or another non-Tab key is pressed.
  */
  setTabFocusMode(e) {
    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return yi.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return yi.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, t) {
    let n = _o.newName(), r = [bu.of(n), lc.of(Fp(`.${n}`, e))];
    return t && t.dark && r.push(Ip.of(!0)), r;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return Mo.lowest(lc.of(Fp("." + Np, e, Sy)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var t;
    let n = e.querySelector(".cm-content"), r = n && Ft.get(n) || Ft.get(e);
    return ((t = r == null ? void 0 : r.rootView) === null || t === void 0 ? void 0 : t.view) || null;
  }
}
me.styleModule = lc;
me.inputHandler = F$;
me.clipboardInputFilter = Dg;
me.clipboardOutputFilter = Vg;
me.scrollHandler = J$;
me.focusChangeEffect = G$;
me.perLineTextDirection = H$;
me.exceptionSink = N$;
me.updateListener = Yp;
me.editable = Vs;
me.mouseSelectionStyle = I$;
me.dragMovesSelection = B$;
me.clickAddsSelectionRange = j$;
me.decorations = Tc;
me.outerDecorations = iy;
me.atomicRanges = Yg;
me.bidiIsolatedRanges = ny;
me.scrollMargins = ry;
me.darkTheme = Ip;
me.cspNonce = /* @__PURE__ */ _e.define({ combine: (i) => i.length ? i[0] : "" });
me.contentAttributes = Ug;
me.editorAttributes = ty;
me.lineWrapping = /* @__PURE__ */ me.contentAttributes.of({ class: "cm-lineWrapping" });
me.announce = /* @__PURE__ */ nt.define();
const rR = 4096, x1 = {};
class gh {
  constructor(e, t, n, r, s, o) {
    this.from = e, this.to = t, this.dir = n, this.isolates = r, this.fresh = s, this.order = o;
  }
  static update(e, t) {
    if (t.empty && !e.some((s) => s.fresh))
      return e;
    let n = [], r = e.length ? e[e.length - 1].dir : ii.LTR;
    for (let s = Math.max(0, e.length - 10); s < e.length; s++) {
      let o = e[s];
      o.dir == r && !t.touchesRange(o.from, o.to) && n.push(new gh(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.isolates, !1, o.order));
    }
    return n;
  }
}
function k1(i, e, t) {
  for (let n = i.state.facet(e), r = n.length - 1; r >= 0; r--) {
    let s = n[r], o = typeof s == "function" ? s(i) : s;
    o && Ep(o, t);
  }
  return t;
}
const sR = ke.mac ? "mac" : ke.windows ? "win" : ke.linux ? "linux" : "key";
function oR(i, e) {
  const t = i.split(/-(?!$)/);
  let n = t[t.length - 1];
  n == "Space" && (n = " ");
  let r, s, o, a;
  for (let c = 0; c < t.length - 1; ++c) {
    const u = t[c];
    if (/^(cmd|meta|m)$/i.test(u))
      a = !0;
    else if (/^a(lt)?$/i.test(u))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(u))
      s = !0;
    else if (/^s(hift)?$/i.test(u))
      o = !0;
    else if (/^mod$/i.test(u))
      e == "mac" ? a = !0 : s = !0;
    else
      throw new Error("Unrecognized modifier name: " + u);
  }
  return r && (n = "Alt-" + n), s && (n = "Ctrl-" + n), a && (n = "Meta-" + n), o && (n = "Shift-" + n), n;
}
function $u(i, e, t) {
  return e.altKey && (i = "Alt-" + i), e.ctrlKey && (i = "Ctrl-" + i), e.metaKey && (i = "Meta-" + i), t !== !1 && e.shiftKey && (i = "Shift-" + i), i;
}
const lR = /* @__PURE__ */ Mo.default(/* @__PURE__ */ me.domEventHandlers({
  keydown(i, e) {
    return $y(by(e.state), i, e, "editor");
  }
})), Kc = /* @__PURE__ */ _e.define({ enables: lR }), _1 = /* @__PURE__ */ new WeakMap();
function by(i) {
  let e = i.facet(Kc), t = _1.get(e);
  return t || _1.set(e, t = fR(e.reduce((n, r) => n.concat(r), []))), t;
}
function aR(i, e, t) {
  return $y(by(i.state), e, i, t);
}
let bo = null;
const cR = 4e3;
function fR(i, e = sR) {
  let t = /* @__PURE__ */ Object.create(null), n = /* @__PURE__ */ Object.create(null), r = (o, a) => {
    let c = n[o];
    if (c == null)
      n[o] = a;
    else if (c != a)
      throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
  }, s = (o, a, c, u, h) => {
    var d, p;
    let m = t[o] || (t[o] = /* @__PURE__ */ Object.create(null)), b = a.split(/ (?!$)/).map((k) => oR(k, e));
    for (let k = 1; k < b.length; k++) {
      let A = b.slice(0, k).join(" ");
      r(A, !0), m[A] || (m[A] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(x) => {
          let _ = bo = { view: x, prefix: A, scope: o };
          return setTimeout(() => {
            bo == _ && (bo = null);
          }, cR), !0;
        }]
      });
    }
    let y = b.join(" ");
    r(y, !1);
    let w = m[y] || (m[y] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((p = (d = m._any) === null || d === void 0 ? void 0 : d.run) === null || p === void 0 ? void 0 : p.slice()) || []
    });
    c && w.run.push(c), u && (w.preventDefault = !0), h && (w.stopPropagation = !0);
  };
  for (let o of i) {
    let a = o.scope ? o.scope.split(" ") : ["editor"];
    if (o.any)
      for (let u of a) {
        let h = t[u] || (t[u] = /* @__PURE__ */ Object.create(null));
        h._any || (h._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        let { any: d } = o;
        for (let p in h)
          h[p].run.push((m) => d(m, Gp));
      }
    let c = o[e] || o.key;
    if (c)
      for (let u of a)
        s(u, c, o.run, o.preventDefault, o.stopPropagation), o.shift && s(u, "Shift-" + c, o.shift, o.preventDefault, o.stopPropagation);
  }
  return t;
}
let Gp = null;
function $y(i, e, t, n) {
  Gp = e;
  let r = A5(e), s = Cn(r, 0), o = rs(s) == r.length && r != " ", a = "", c = !1, u = !1, h = !1;
  bo && bo.view == t && bo.scope == n && (a = bo.prefix + " ", cy.indexOf(e.keyCode) < 0 && (u = !0, bo = null));
  let d = /* @__PURE__ */ new Set(), p = (w) => {
    if (w) {
      for (let k of w.run)
        if (!d.has(k) && (d.add(k), k(t)))
          return w.stopPropagation && (h = !0), !0;
      w.preventDefault && (w.stopPropagation && (h = !0), u = !0);
    }
    return !1;
  }, m = i[n], b, y;
  return m && (p(m[a + $u(r, e, !o)]) ? c = !0 : o && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(ke.windows && e.ctrlKey && e.altKey) && (b = Wo[e.keyCode]) && b != r ? (p(m[a + $u(b, e, !0)]) || e.shiftKey && (y = kc[e.keyCode]) != r && y != b && p(m[a + $u(y, e, !1)])) && (c = !0) : o && e.shiftKey && p(m[a + $u(r, e, !0)]) && (c = !0), !c && p(m._any) && (c = !0)), u && (c = !0), c && h && e.stopPropagation(), Gp = null, c;
}
class Jc {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, t, n, r, s) {
    this.className = e, this.left = t, this.top = n, this.width = r, this.height = s;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, t) {
    return t.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, t, n) {
    if (n.empty) {
      let r = e.coordsAtPos(n.head, n.assoc || 1);
      if (!r)
        return [];
      let s = yy(e);
      return [new Jc(t, r.left - s.left, r.top - s.top, null, r.bottom - r.top)];
    } else
      return uR(e, t, n);
  }
}
function yy(i) {
  let e = i.scrollDOM.getBoundingClientRect();
  return { left: (i.textDirection == ii.LTR ? e.left : e.right - i.scrollDOM.clientWidth * i.scaleX) - i.scrollDOM.scrollLeft * i.scaleX, top: e.top - i.scrollDOM.scrollTop * i.scaleY };
}
function W1(i, e, t, n) {
  let r = i.coordsAtPos(e, t * 2);
  if (!r)
    return n;
  let s = i.dom.getBoundingClientRect(), o = (r.top + r.bottom) / 2, a = i.posAtCoords({ x: s.left + 1, y: o }), c = i.posAtCoords({ x: s.right - 1, y: o });
  return a == null || c == null ? n : { from: Math.max(n.from, Math.min(a, c)), to: Math.min(n.to, Math.max(a, c)) };
}
function uR(i, e, t) {
  if (t.to <= i.viewport.from || t.from >= i.viewport.to)
    return [];
  let n = Math.max(t.from, i.viewport.from), r = Math.min(t.to, i.viewport.to), s = i.textDirection == ii.LTR, o = i.contentDOM, a = o.getBoundingClientRect(), c = yy(i), u = o.querySelector(".cm-line"), h = u && window.getComputedStyle(u), d = a.left + (h ? parseInt(h.paddingLeft) + Math.min(0, parseInt(h.textIndent)) : 0), p = a.right - (h ? parseInt(h.paddingRight) : 0), m = jp(i, n), b = jp(i, r), y = m.type == vn.Text ? m : null, w = b.type == vn.Text ? b : null;
  if (y && (i.lineWrapping || m.widgetLineBreaks) && (y = W1(i, n, 1, y)), w && (i.lineWrapping || b.widgetLineBreaks) && (w = W1(i, r, -1, w)), y && w && y.from == w.from && y.to == w.to)
    return A(x(t.from, t.to, y));
  {
    let W = y ? x(t.from, null, y) : _(m, !1), D = w ? x(null, t.to, w) : _(b, !0), q = [];
    return (y || m).to < (w || b).from - (y && w ? 1 : 0) || m.widgetLineBreaks > 1 && W.bottom + i.defaultLineHeight / 2 < D.top ? q.push(k(d, W.bottom, p, D.top)) : W.bottom < D.top && i.elementAtHeight((W.bottom + D.top) / 2).type == vn.Text && (W.bottom = D.top = (W.bottom + D.top) / 2), A(W).concat(q).concat(A(D));
  }
  function k(W, D, q, V) {
    return new Jc(e, W - c.left, D - c.top, q - W, V - D);
  }
  function A({ top: W, bottom: D, horizontal: q }) {
    let V = [];
    for (let U = 0; U < q.length; U += 2)
      V.push(k(q[U], W, q[U + 1], D));
    return V;
  }
  function x(W, D, q) {
    let V = 1e9, U = -1e9, N = [];
    function j(se, be, ze, Ve, Xe) {
      let Ee = i.coordsAtPos(se, se == q.to ? -2 : 2), We = i.coordsAtPos(ze, ze == q.from ? 2 : -2);
      !Ee || !We || (V = Math.min(Ee.top, We.top, V), U = Math.max(Ee.bottom, We.bottom, U), Xe == ii.LTR ? N.push(s && be ? d : Ee.left, s && Ve ? p : We.right) : N.push(!s && Ve ? d : We.left, !s && be ? p : Ee.right));
    }
    let I = W ?? q.from, Y = D ?? q.to;
    for (let se of i.visibleRanges)
      if (se.to > I && se.from < Y)
        for (let be = Math.max(se.from, I), ze = Math.min(se.to, Y); ; ) {
          let Ve = i.state.doc.lineAt(be);
          for (let Xe of i.bidiSpans(Ve)) {
            let Ee = Xe.from + Ve.from, We = Xe.to + Ve.from;
            if (Ee >= ze)
              break;
            We > be && j(Math.max(Ee, be), W == null && Ee <= I, Math.min(We, ze), D == null && We >= Y, Xe.dir);
          }
          if (be = Ve.to + 1, be >= ze)
            break;
        }
    return N.length == 0 && j(I, W == null, Y, D == null, i.textDirection), { top: V, bottom: U, horizontal: N };
  }
  function _(W, D) {
    let q = a.top + (D ? W.top : W.bottom);
    return { top: q, bottom: q, horizontal: [] };
  }
}
function hR(i, e) {
  return i.constructor == e.constructor && i.eq(e);
}
class OR {
  constructor(e, t) {
    this.view = e, this.layer = t, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), t.above && this.dom.classList.add("cm-layer-above"), t.class && this.dom.classList.add(t.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), t.mount && t.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(Bu) != e.state.facet(Bu) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  docViewUpdate(e) {
    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
  }
  setOrder(e) {
    let t = 0, n = e.facet(Bu);
    for (; t < n.length && n[t] != this.layer; )
      t++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: t } = this.view;
    (e != this.scaleX || t != this.scaleY) && (this.scaleX = e, this.scaleY = t, this.dom.style.transform = `scale(${1 / e}, ${1 / t})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((t, n) => !hR(t, this.drawn[n]))) {
      let t = this.dom.firstChild, n = 0;
      for (let r of e)
        r.update && t && r.constructor && this.drawn[n].constructor && r.update(t, this.drawn[n]) ? (t = t.nextSibling, n++) : this.dom.insertBefore(r.draw(), t);
      for (; t; ) {
        let r = t.nextSibling;
        t.remove(), t = r;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const Bu = /* @__PURE__ */ _e.define();
function Qy(i) {
  return [
    yi.define((e) => new OR(e, i)),
    Bu.of(i)
  ];
}
const wy = !(ke.ios && ke.webkit && ke.webkit_version < 534), Zc = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, t) => Math.min(e, t),
      drawRangeCursor: (e, t) => e || t
    });
  }
});
function dR(i = {}) {
  return [
    Zc.of(i),
    pR,
    gR,
    mR,
    K$.of(!0)
  ];
}
function Py(i) {
  return i.startState.facet(Zc) != i.state.facet(Zc);
}
const pR = /* @__PURE__ */ Qy({
  above: !0,
  markers(i) {
    let { state: e } = i, t = e.facet(Zc), n = [];
    for (let r of e.selection.ranges) {
      let s = r == e.selection.main;
      if (r.empty ? !s || wy : t.drawRangeCursor) {
        let o = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", a = r.empty ? r : J.cursor(r.head, r.head > r.anchor ? -1 : 1);
        for (let c of Jc.forRange(i, o, a))
          n.push(c);
      }
    }
    return n;
  },
  update(i, e) {
    i.transactions.some((n) => n.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let t = Py(i);
    return t && T1(i.state, e), i.docChanged || i.selectionSet || t;
  },
  mount(i, e) {
    T1(e.state, i);
  },
  class: "cm-cursorLayer"
});
function T1(i, e) {
  e.style.animationDuration = i.facet(Zc).cursorBlinkRate + "ms";
}
const gR = /* @__PURE__ */ Qy({
  above: !1,
  markers(i) {
    return i.state.selection.ranges.map((e) => e.empty ? [] : Jc.forRange(i, "cm-selectionBackground", e)).reduce((e, t) => e.concat(t));
  },
  update(i, e) {
    return i.docChanged || i.selectionSet || i.viewportChanged || Py(i);
  },
  class: "cm-selectionLayer"
}), Hp = {
  ".cm-line": {
    "& ::selection, &::selection": { backgroundColor: "transparent !important" }
  },
  ".cm-content": {
    "& :focus": {
      caretColor: "initial !important",
      "&::selection, & ::selection": {
        backgroundColor: "Highlight !important"
      }
    }
  }
};
wy && (Hp[".cm-line"].caretColor = Hp[".cm-content"].caretColor = "transparent !important");
const mR = /* @__PURE__ */ Mo.highest(/* @__PURE__ */ me.theme(Hp)), xy = /* @__PURE__ */ nt.define({
  map(i, e) {
    return i == null ? null : e.mapPos(i);
  }
}), fc = /* @__PURE__ */ Wi.define({
  create() {
    return null;
  },
  update(i, e) {
    return i != null && (i = e.changes.mapPos(i)), e.effects.reduce((t, n) => n.is(xy) ? n.value : t, i);
  }
}), vR = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.view = i, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(i) {
    var e;
    let t = i.state.field(fc);
    t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (i.startState.field(fc) != t || i.docChanged || i.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: i } = this, e = i.state.field(fc), t = e != null && i.coordsAtPos(e);
    if (!t)
      return null;
    let n = i.scrollDOM.getBoundingClientRect();
    return {
      left: t.left - n.left + i.scrollDOM.scrollLeft * i.scaleX,
      top: t.top - n.top + i.scrollDOM.scrollTop * i.scaleY,
      height: t.bottom - t.top
    };
  }
  drawCursor(i) {
    if (this.cursor) {
      let { scaleX: e, scaleY: t } = this.view;
      i ? (this.cursor.style.left = i.left / e + "px", this.cursor.style.top = i.top / t + "px", this.cursor.style.height = i.height / t + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(i) {
    this.view.state.field(fc) != i && this.view.dispatch({ effects: xy.of(i) });
  }
}, {
  eventObservers: {
    dragover(i) {
      this.setDropPos(this.view.posAtCoords({ x: i.clientX, y: i.clientY }));
    },
    dragleave(i) {
      (i.target == this.view.contentDOM || !this.view.contentDOM.contains(i.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function SR() {
  return [fc, vR];
}
function Z1(i, e, t, n, r) {
  e.lastIndex = 0;
  for (let s = i.iterRange(t, n), o = t, a; !s.next().done; o += s.value.length)
    if (!s.lineBreak)
      for (; a = e.exec(s.value); )
        r(o + a.index, a);
}
function bR(i, e) {
  let t = i.visibleRanges;
  if (t.length == 1 && t[0].from == i.viewport.from && t[0].to == i.viewport.to)
    return t;
  let n = [];
  for (let { from: r, to: s } of t)
    r = Math.max(i.state.doc.lineAt(r).from, r - e), s = Math.min(i.state.doc.lineAt(s).to, s + e), n.length && n[n.length - 1].to >= r ? n[n.length - 1].to = s : n.push({ from: r, to: s });
  return n;
}
class $R {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: t, decoration: n, decorate: r, boundary: s, maxLength: o = 1e3 } = e;
    if (!t.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = t, r)
      this.addMatch = (a, c, u, h) => r(h, u, u + a[0].length, a, c);
    else if (typeof n == "function")
      this.addMatch = (a, c, u, h) => {
        let d = n(a, c, u);
        d && h(u, u + a[0].length, d);
      };
    else if (n)
      this.addMatch = (a, c, u, h) => h(u, u + a[0].length, n);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = s, this.maxLength = o;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let t = new Is(), n = t.add.bind(t);
    for (let { from: r, to: s } of bR(e, this.maxLength))
      Z1(e.state.doc, this.regexp, r, s, (o, a) => this.addMatch(a, e, o, n));
    return t.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, t) {
    let n = 1e9, r = -1;
    return e.docChanged && e.changes.iterChanges((s, o, a, c) => {
      c >= e.view.viewport.from && a <= e.view.viewport.to && (n = Math.min(a, n), r = Math.max(c, r));
    }), e.viewportMoved || r - n > 1e3 ? this.createDeco(e.view) : r > -1 ? this.updateRange(e.view, t.map(e.changes), n, r) : t;
  }
  updateRange(e, t, n, r) {
    for (let s of e.visibleRanges) {
      let o = Math.max(s.from, n), a = Math.min(s.to, r);
      if (a > o) {
        let c = e.state.doc.lineAt(o), u = c.to < a ? e.state.doc.lineAt(a) : c, h = Math.max(s.from, c.from), d = Math.min(s.to, u.to);
        if (this.boundary) {
          for (; o > c.from; o--)
            if (this.boundary.test(c.text[o - 1 - c.from])) {
              h = o;
              break;
            }
          for (; a < u.to; a++)
            if (this.boundary.test(u.text[a - u.from])) {
              d = a;
              break;
            }
        }
        let p = [], m, b = (y, w, k) => p.push(k.range(y, w));
        if (c == u)
          for (this.regexp.lastIndex = h - c.from; (m = this.regexp.exec(c.text)) && m.index < d - c.from; )
            this.addMatch(m, e, m.index + c.from, b);
        else
          Z1(e.state.doc, this.regexp, h, d, (y, w) => this.addMatch(w, e, y, b));
        t = t.update({ filterFrom: h, filterTo: d, filter: (y, w) => y < h || w > d, add: p });
      }
    }
    return t;
  }
}
const Kp = /x/.unicode != null ? "gu" : "g", yR = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, Kp), QR = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let Ad = null;
function wR() {
  var i;
  if (Ad == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    Ad = ((i = e.tabSize) !== null && i !== void 0 ? i : e.MozTabSize) != null;
  }
  return Ad || !1;
}
const Iu = /* @__PURE__ */ _e.define({
  combine(i) {
    let e = gs(i, {
      render: null,
      specialChars: yR,
      addSpecialChars: null
    });
    return (e.replaceTabs = !wR()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, Kp)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, Kp)), e;
  }
});
function PR(i = {}) {
  return [Iu.of(i), xR()];
}
let C1 = null;
function xR() {
  return C1 || (C1 = yi.fromClass(class {
    constructor(i) {
      this.view = i, this.decorations = Ue.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(i.state.facet(Iu)), this.decorations = this.decorator.createDeco(i);
    }
    makeDecorator(i) {
      return new $R({
        regexp: i.specialChars,
        decoration: (e, t, n) => {
          let { doc: r } = t.state, s = Cn(e[0], 0);
          if (s == 9) {
            let o = r.lineAt(n), a = t.state.tabSize, c = ma(o.text, a, n - o.from);
            return Ue.replace({
              widget: new TR((a - c % a) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[s] || (this.decorationCache[s] = Ue.replace({ widget: new WR(i, s) }));
        },
        boundary: i.replaceTabs ? void 0 : /[^]/
      });
    }
    update(i) {
      let e = i.state.facet(Iu);
      i.startState.facet(Iu) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(i.view)) : this.decorations = this.decorator.updateDeco(i, this.decorations);
    }
  }, {
    decorations: (i) => i.decorations
  }));
}
const kR = "•";
function _R(i) {
  return i >= 32 ? kR : i == 10 ? "␤" : String.fromCharCode(9216 + i);
}
class WR extends eo {
  constructor(e, t) {
    super(), this.options = e, this.code = t;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let t = _R(this.code), n = e.state.phrase("Control character") + " " + (QR[this.code] || "0x" + this.code.toString(16)), r = this.options.render && this.options.render(this.code, n, t);
    if (r)
      return r;
    let s = document.createElement("span");
    return s.textContent = t, s.title = n, s.setAttribute("aria-label", n), s.className = "cm-specialChar", s;
  }
  ignoreEvent() {
    return !1;
  }
}
class TR extends eo {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function ZR() {
  return RR;
}
const CR = /* @__PURE__ */ Ue.line({ class: "cm-activeLine" }), RR = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.decorations = this.getDeco(i);
  }
  update(i) {
    (i.docChanged || i.selectionSet) && (this.decorations = this.getDeco(i.view));
  }
  getDeco(i) {
    let e = -1, t = [];
    for (let n of i.state.selection.ranges) {
      let r = i.lineBlockAt(n.head);
      r.from > e && (t.push(CR.range(r.from)), e = r.from);
    }
    return Ue.set(t);
  }
}, {
  decorations: (i) => i.decorations
}), Jp = 2e3;
function AR(i, e, t) {
  let n = Math.min(e.line, t.line), r = Math.max(e.line, t.line), s = [];
  if (e.off > Jp || t.off > Jp || e.col < 0 || t.col < 0) {
    let o = Math.min(e.off, t.off), a = Math.max(e.off, t.off);
    for (let c = n; c <= r; c++) {
      let u = i.doc.line(c);
      u.length <= a && s.push(J.range(u.from + o, u.to + a));
    }
  } else {
    let o = Math.min(e.col, t.col), a = Math.max(e.col, t.col);
    for (let c = n; c <= r; c++) {
      let u = i.doc.line(c), h = Tp(u.text, o, i.tabSize, !0);
      if (h < 0)
        s.push(J.cursor(u.to));
      else {
        let d = Tp(u.text, a, i.tabSize);
        s.push(J.range(u.from + h, u.from + d));
      }
    }
  }
  return s;
}
function XR(i, e) {
  let t = i.coordsAtPos(i.viewport.from);
  return t ? Math.round(Math.abs((t.left - e) / i.defaultCharacterWidth)) : -1;
}
function R1(i, e) {
  let t = i.posAtCoords({ x: e.clientX, y: e.clientY }, !1), n = i.state.doc.lineAt(t), r = t - n.from, s = r > Jp ? -1 : r == n.length ? XR(i, e.clientX) : ma(n.text, i.state.tabSize, t - n.from);
  return { line: n.number, col: s, off: r };
}
function MR(i, e) {
  let t = R1(i, e), n = i.state.selection;
  return t ? {
    update(r) {
      if (r.docChanged) {
        let s = r.changes.mapPos(r.startState.doc.line(t.line).from), o = r.state.doc.lineAt(s);
        t = { line: o.number, col: t.col, off: Math.min(t.off, o.length) }, n = n.map(r.changes);
      }
    },
    get(r, s, o) {
      let a = R1(i, r);
      if (!a)
        return n;
      let c = AR(i.state, t, a);
      return c.length ? o ? J.create(c.concat(n.ranges)) : J.create(c) : n;
    }
  } : null;
}
function ER(i) {
  let e = (t) => t.altKey && t.button == 0;
  return me.mouseSelectionStyle.of((t, n) => e(n) ? MR(t, n) : null);
}
const qR = {
  Alt: [18, (i) => !!i.altKey],
  Control: [17, (i) => !!i.ctrlKey],
  Shift: [16, (i) => !!i.shiftKey],
  Meta: [91, (i) => !!i.metaKey]
}, LR = { style: "cursor: crosshair" };
function DR(i = {}) {
  let [e, t] = qR[i.key || "Alt"], n = yi.fromClass(class {
    constructor(r) {
      this.view = r, this.isDown = !1;
    }
    set(r) {
      this.isDown != r && (this.isDown = r, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(r) {
        this.set(r.keyCode == e || t(r));
      },
      keyup(r) {
        (r.keyCode == e || !t(r)) && this.set(!1);
      },
      mousemove(r) {
        this.set(t(r));
      }
    }
  });
  return [
    n,
    me.contentAttributes.of((r) => {
      var s;
      return !((s = r.plugin(n)) === null || s === void 0) && s.isDown ? LR : null;
    })
  ];
}
const Ka = "-10000px";
class ky {
  constructor(e, t, n, r) {
    this.facet = t, this.createTooltipView = n, this.removeTooltipView = r, this.input = e.state.facet(t), this.tooltips = this.input.filter((o) => o);
    let s = null;
    this.tooltipViews = this.tooltips.map((o) => s = n(o, s));
  }
  update(e, t) {
    var n;
    let r = e.state.facet(this.facet), s = r.filter((c) => c);
    if (r === this.input) {
      for (let c of this.tooltipViews)
        c.update && c.update(e);
      return !1;
    }
    let o = [], a = t ? [] : null;
    for (let c = 0; c < s.length; c++) {
      let u = s[c], h = -1;
      if (u) {
        for (let d = 0; d < this.tooltips.length; d++) {
          let p = this.tooltips[d];
          p && p.create == u.create && (h = d);
        }
        if (h < 0)
          o[c] = this.createTooltipView(u, c ? o[c - 1] : null), a && (a[c] = !!u.above);
        else {
          let d = o[c] = this.tooltipViews[h];
          a && (a[c] = t[h]), d.update && d.update(e);
        }
      }
    }
    for (let c of this.tooltipViews)
      o.indexOf(c) < 0 && (this.removeTooltipView(c), (n = c.destroy) === null || n === void 0 || n.call(c));
    return t && (a.forEach((c, u) => t[u] = c), t.length = a.length), this.input = r, this.tooltips = s, this.tooltipViews = o, !0;
  }
}
function VR(i) {
  let { win: e } = i;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const Xd = /* @__PURE__ */ _e.define({
  combine: (i) => {
    var e, t, n;
    return {
      position: ke.ios ? "absolute" : ((e = i.find((r) => r.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((t = i.find((r) => r.parent)) === null || t === void 0 ? void 0 : t.parent) || null,
      tooltipSpace: ((n = i.find((r) => r.tooltipSpace)) === null || n === void 0 ? void 0 : n.tooltipSpace) || VR
    };
  }
}), A1 = /* @__PURE__ */ new WeakMap(), Ng = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.view = i, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = i.state.facet(Xd);
    this.position = e.position, this.parent = e.parent, this.classes = i.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new ky(i, Fg, (t, n) => this.createTooltip(t, n), (t) => {
      this.resizeObserver && this.resizeObserver.unobserve(t.dom), t.dom.remove();
    }), this.above = this.manager.tooltips.map((t) => !!t.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((t) => {
      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), i.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let i of this.manager.tooltipViews)
        this.intersectionObserver.observe(i.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(i) {
    i.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(i, this.above);
    e && this.observeIntersection();
    let t = e || i.geometryChanged, n = i.state.facet(Xd);
    if (n.position != this.position && !this.madeAbsolute) {
      this.position = n.position;
      for (let r of this.manager.tooltipViews)
        r.dom.style.position = this.position;
      t = !0;
    }
    if (n.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = n.parent, this.createContainer();
      for (let r of this.manager.tooltipViews)
        this.container.appendChild(r.dom);
      t = !0;
    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    t && this.maybeMeasure();
  }
  createTooltip(i, e) {
    let t = i.create(this.view), n = e ? e.dom : null;
    if (t.dom.classList.add("cm-tooltip"), i.arrow && !t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let r = document.createElement("div");
      r.className = "cm-tooltip-arrow", t.dom.appendChild(r);
    }
    return t.dom.style.position = this.position, t.dom.style.top = Ka, t.dom.style.left = "0px", this.container.insertBefore(t.dom, n), t.mount && t.mount(this.view), this.resizeObserver && this.resizeObserver.observe(t.dom), t;
  }
  destroy() {
    var i, e, t;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let n of this.manager.tooltipViews)
      n.dom.remove(), (i = n.destroy) === null || i === void 0 || i.call(n);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (t = this.intersectionObserver) === null || t === void 0 || t.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let i = 1, e = 1, t = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: s } = this.manager.tooltipViews[0];
      if (ke.gecko)
        t = s.offsetParent != this.container.ownerDocument.body;
      else if (s.style.top == Ka && s.style.left == "0px") {
        let o = s.getBoundingClientRect();
        t = Math.abs(o.top + 1e4) > 1 || Math.abs(o.left) > 1;
      }
    }
    if (t || this.position == "absolute")
      if (this.parent) {
        let s = this.parent.getBoundingClientRect();
        s.width && s.height && (i = s.width / this.parent.offsetWidth, e = s.height / this.parent.offsetHeight);
      } else
        ({ scaleX: i, scaleY: e } = this.view.viewState);
    let n = this.view.scrollDOM.getBoundingClientRect(), r = zg(this.view);
    return {
      visible: {
        left: n.left + r.left,
        top: n.top + r.top,
        right: n.right - r.right,
        bottom: n.bottom - r.bottom
      },
      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),
      pos: this.manager.tooltips.map((s, o) => {
        let a = this.manager.tooltipViews[o];
        return a.getCoords ? a.getCoords(s.pos) : this.view.coordsAtPos(s.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: s }) => s.getBoundingClientRect()),
      space: this.view.state.facet(Xd).tooltipSpace(this.view),
      scaleX: i,
      scaleY: e,
      makeAbsolute: t
    };
  }
  writeMeasure(i) {
    var e;
    if (i.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let a of this.manager.tooltipViews)
        a.dom.style.position = "absolute";
    }
    let { visible: t, space: n, scaleX: r, scaleY: s } = i, o = [];
    for (let a = 0; a < this.manager.tooltips.length; a++) {
      let c = this.manager.tooltips[a], u = this.manager.tooltipViews[a], { dom: h } = u, d = i.pos[a], p = i.size[a];
      if (!d || c.clip !== !1 && (d.bottom <= Math.max(t.top, n.top) || d.top >= Math.min(t.bottom, n.bottom) || d.right < Math.max(t.left, n.left) - 0.1 || d.left > Math.min(t.right, n.right) + 0.1)) {
        h.style.top = Ka;
        continue;
      }
      let m = c.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null, b = m ? 7 : 0, y = p.right - p.left, w = (e = A1.get(u)) !== null && e !== void 0 ? e : p.bottom - p.top, k = u.offset || YR, A = this.view.textDirection == ii.LTR, x = p.width > n.right - n.left ? A ? n.left : n.right - p.width : A ? Math.max(n.left, Math.min(d.left - (m ? 14 : 0) + k.x, n.right - y)) : Math.min(Math.max(n.left, d.left - y + (m ? 14 : 0) - k.x), n.right - y), _ = this.above[a];
      !c.strictSide && (_ ? d.top - w - b - k.y < n.top : d.bottom + w + b + k.y > n.bottom) && _ == n.bottom - d.bottom > d.top - n.top && (_ = this.above[a] = !_);
      let W = (_ ? d.top - n.top : n.bottom - d.bottom) - b;
      if (W < w && u.resize !== !1) {
        if (W < this.view.defaultLineHeight) {
          h.style.top = Ka;
          continue;
        }
        A1.set(u, w), h.style.height = (w = W) / s + "px";
      } else h.style.height && (h.style.height = "");
      let D = _ ? d.top - w - b - k.y : d.bottom + b + k.y, q = x + y;
      if (u.overlap !== !0)
        for (let V of o)
          V.left < q && V.right > x && V.top < D + w && V.bottom > D && (D = _ ? V.top - w - 2 - b : V.bottom + b + 2);
      if (this.position == "absolute" ? (h.style.top = (D - i.parent.top) / s + "px", X1(h, (x - i.parent.left) / r)) : (h.style.top = D / s + "px", X1(h, x / r)), m) {
        let V = d.left + (A ? k.x : -k.x) - (x + 14 - 7);
        m.style.left = V / r + "px";
      }
      u.overlap !== !0 && o.push({ left: x, top: D, right: q, bottom: D + w }), h.classList.toggle("cm-tooltip-above", _), h.classList.toggle("cm-tooltip-below", !_), u.positioned && u.positioned(i.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let i of this.manager.tooltipViews)
        i.dom.style.top = Ka;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
});
function X1(i, e) {
  let t = parseInt(i.style.left, 10);
  (isNaN(t) || Math.abs(e - t) > 1) && (i.style.left = e + "px");
}
const UR = /* @__PURE__ */ me.baseTheme({
  ".cm-tooltip": {
    zIndex: 500,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), YR = { x: 0, y: 0 }, Fg = /* @__PURE__ */ _e.define({
  enables: [Ng, UR]
}), mh = /* @__PURE__ */ _e.define({
  combine: (i) => i.reduce((e, t) => e.concat(t), [])
});
class eO {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new eO(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new ky(e, mh, (t, n) => this.createHostedView(t, n), (t) => t.dom.remove());
  }
  createHostedView(e, t) {
    let n = e.create(this.view);
    return n.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(n.dom, t ? t.dom.nextSibling : this.dom.firstChild), this.mounted && n.mount && n.mount(this.view), n;
  }
  mount(e) {
    for (let t of this.manager.tooltipViews)
      t.mount && t.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let t of this.manager.tooltipViews)
      t.positioned && t.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let t of this.manager.tooltipViews)
      (e = t.destroy) === null || e === void 0 || e.call(t);
  }
  passProp(e) {
    let t;
    for (let n of this.manager.tooltipViews) {
      let r = n[e];
      if (r !== void 0) {
        if (t === void 0)
          t = r;
        else if (t !== r)
          return;
      }
    }
    return t;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const zR = /* @__PURE__ */ Fg.compute([mh], (i) => {
  let e = i.facet(mh);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((t) => t.pos)),
    end: Math.max(...e.map((t) => {
      var n;
      return (n = t.end) !== null && n !== void 0 ? n : t.pos;
    })),
    create: eO.create,
    above: e[0].above,
    arrow: e.some((t) => t.arrow)
  };
});
class jR {
  constructor(e, t, n, r, s) {
    this.view = e, this.source = t, this.field = n, this.setHover = r, this.hoverTime = s, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: t } = this, n = e.docView.nearest(t.target);
    if (!n)
      return;
    let r, s = 1;
    if (n instanceof Qo)
      r = n.posAtStart;
    else {
      if (r = e.posAtCoords(t), r == null)
        return;
      let a = e.coordsAtPos(r);
      if (!a || t.y < a.top || t.y > a.bottom || t.x < a.left - e.defaultCharacterWidth || t.x > a.right + e.defaultCharacterWidth)
        return;
      let c = e.bidiSpans(e.state.doc.lineAt(r)).find((h) => h.from <= r && h.to >= r), u = c && c.dir == ii.RTL ? -1 : 1;
      s = t.x < a.left ? -u : u;
    }
    let o = this.source(e, r, s);
    if (o != null && o.then) {
      let a = this.pending = { pos: r };
      o.then((c) => {
        this.pending == a && (this.pending = null, c && !(Array.isArray(c) && !c.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(c) ? c : [c]) }));
      }, (c) => Xn(e.state, c, "hover tooltip"));
    } else o && !(Array.isArray(o) && !o.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(o) ? o : [o]) });
  }
  get tooltip() {
    let e = this.view.plugin(Ng), t = e ? e.manager.tooltips.findIndex((n) => n.create == eO.create) : -1;
    return t > -1 ? e.manager.tooltipViews[t] : null;
  }
  mousemove(e) {
    var t, n;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: r, tooltip: s } = this;
    if (r.length && s && !BR(s.dom, e) || this.pending) {
      let { pos: o } = r[0] || this.pending, a = (n = (t = r[0]) === null || t === void 0 ? void 0 : t.end) !== null && n !== void 0 ? n : o;
      (o == a ? this.view.posAtCoords(this.lastMove) != o : !IR(this.view, o, a, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: t } = this;
    if (t.length) {
      let { tooltip: n } = this;
      n && n.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(n.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let t = (n) => {
      e.removeEventListener("mouseleave", t), this.active.length && !this.view.dom.contains(n.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", t);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const yu = 4;
function BR(i, e) {
  let { left: t, right: n, top: r, bottom: s } = i.getBoundingClientRect(), o;
  if (o = i.querySelector(".cm-tooltip-arrow")) {
    let a = o.getBoundingClientRect();
    r = Math.min(a.top, r), s = Math.max(a.bottom, s);
  }
  return e.clientX >= t - yu && e.clientX <= n + yu && e.clientY >= r - yu && e.clientY <= s + yu;
}
function IR(i, e, t, n, r, s) {
  let o = i.scrollDOM.getBoundingClientRect(), a = i.documentTop + i.documentPadding.top + i.contentHeight;
  if (o.left > n || o.right < n || o.top > r || Math.min(o.bottom, a) < r)
    return !1;
  let c = i.posAtCoords({ x: n, y: r }, !1);
  return c >= e && c <= t;
}
function NR(i, e = {}) {
  let t = nt.define(), n = Wi.define({
    create() {
      return [];
    },
    update(r, s) {
      if (r.length && (e.hideOnChange && (s.docChanged || s.selection) ? r = [] : e.hideOn && (r = r.filter((o) => !e.hideOn(s, o))), s.docChanged)) {
        let o = [];
        for (let a of r) {
          let c = s.changes.mapPos(a.pos, -1, Ui.TrackDel);
          if (c != null) {
            let u = Object.assign(/* @__PURE__ */ Object.create(null), a);
            u.pos = c, u.end != null && (u.end = s.changes.mapPos(u.end)), o.push(u);
          }
        }
        r = o;
      }
      for (let o of s.effects)
        o.is(t) && (r = o.value), o.is(FR) && (r = []);
      return r;
    },
    provide: (r) => mh.from(r)
  });
  return {
    active: n,
    extension: [
      n,
      yi.define((r) => new jR(
        r,
        i,
        n,
        t,
        e.hoverTime || 300
        /* Hover.Time */
      )),
      zR
    ]
  };
}
function _y(i, e) {
  let t = i.plugin(Ng);
  if (!t)
    return null;
  let n = t.manager.tooltips.indexOf(e);
  return n < 0 ? null : t.manager.tooltipViews[n];
}
const FR = /* @__PURE__ */ nt.define(), M1 = /* @__PURE__ */ _e.define({
  combine(i) {
    let e, t;
    for (let n of i)
      e = e || n.topContainer, t = t || n.bottomContainer;
    return { topContainer: e, bottomContainer: t };
  }
});
function Cc(i, e) {
  let t = i.plugin(Wy), n = t ? t.specs.indexOf(e) : -1;
  return n > -1 ? t.panels[n] : null;
}
const Wy = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.input = i.state.facet(Rc), this.specs = this.input.filter((t) => t), this.panels = this.specs.map((t) => t(i));
    let e = i.state.facet(M1);
    this.top = new Qu(i, !0, e.topContainer), this.bottom = new Qu(i, !1, e.bottomContainer), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
    for (let t of this.panels)
      t.dom.classList.add("cm-panel"), t.mount && t.mount();
  }
  update(i) {
    let e = i.state.facet(M1);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new Qu(i.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new Qu(i.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let t = i.state.facet(Rc);
    if (t != this.input) {
      let n = t.filter((c) => c), r = [], s = [], o = [], a = [];
      for (let c of n) {
        let u = this.specs.indexOf(c), h;
        u < 0 ? (h = c(i.view), a.push(h)) : (h = this.panels[u], h.update && h.update(i)), r.push(h), (h.top ? s : o).push(h);
      }
      this.specs = n, this.panels = r, this.top.sync(s), this.bottom.sync(o);
      for (let c of a)
        c.dom.classList.add("cm-panel"), c.mount && c.mount();
    } else
      for (let n of this.panels)
        n.update && n.update(i);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (i) => me.scrollMargins.of((e) => {
    let t = e.plugin(i);
    return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
  })
});
class Qu {
  constructor(e, t, n) {
    this.view = e, this.top = t, this.container = n, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let t of this.panels)
      t.destroy && e.indexOf(t) < 0 && t.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let t = this.container || this.view.dom;
      t.insertBefore(this.dom, this.top ? t.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let t of this.panels)
      if (t.dom.parentNode == this.dom) {
        for (; e != t.dom; )
          e = E1(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(t.dom, e);
    for (; e; )
      e = E1(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function E1(i) {
  let e = i.nextSibling;
  return i.remove(), e;
}
const Rc = /* @__PURE__ */ _e.define({
  enables: Wy
});
class Fs extends ol {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
Fs.prototype.elementClass = "";
Fs.prototype.toDOM = void 0;
Fs.prototype.mapMode = Ui.TrackBefore;
Fs.prototype.startSide = Fs.prototype.endSide = -1;
Fs.prototype.point = !0;
const Nu = /* @__PURE__ */ _e.define(), GR = /* @__PURE__ */ _e.define(), HR = {
  class: "",
  renderEmptyElements: !1,
  elementStyle: "",
  markers: () => xt.empty,
  lineMarker: () => null,
  widgetMarker: () => null,
  lineMarkerChange: null,
  initialSpacer: null,
  updateSpacer: null,
  domEventHandlers: {}
}, Sc = /* @__PURE__ */ _e.define();
function KR(i) {
  return [Ty(), Sc.of(Object.assign(Object.assign({}, HR), i))];
}
const q1 = /* @__PURE__ */ _e.define({
  combine: (i) => i.some((e) => e)
});
function Ty(i) {
  return [
    JR
  ];
}
const JR = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.view = i, this.prevViewport = i.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = i.state.facet(Sc).map((e) => new D1(i, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !i.state.facet(q1), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), i.scrollDOM.insertBefore(this.dom, i.contentDOM);
  }
  update(i) {
    if (this.updateGutters(i)) {
      let e = this.prevViewport, t = i.view.viewport, n = Math.min(e.to, t.to) - Math.max(e.from, t.from);
      this.syncGutters(n < (t.to - t.from) * 0.8);
    }
    i.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(q1) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = i.view.viewport;
  }
  syncGutters(i) {
    let e = this.dom.nextSibling;
    i && this.dom.remove();
    let t = xt.iter(this.view.state.facet(Nu), this.view.viewport.from), n = [], r = this.gutters.map((s) => new e3(s, this.view.viewport, -this.view.documentPadding.top));
    for (let s of this.view.viewportLineBlocks)
      if (n.length && (n = []), Array.isArray(s.type)) {
        let o = !0;
        for (let a of s.type)
          if (a.type == vn.Text && o) {
            eg(t, n, a.from);
            for (let c of r)
              c.line(this.view, a, n);
            o = !1;
          } else if (a.widget)
            for (let c of r)
              c.widget(this.view, a);
      } else if (s.type == vn.Text) {
        eg(t, n, s.from);
        for (let o of r)
          o.line(this.view, s, n);
      } else if (s.widget)
        for (let o of r)
          o.widget(this.view, s);
    for (let s of r)
      s.finish();
    i && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(i) {
    let e = i.startState.facet(Sc), t = i.state.facet(Sc), n = i.docChanged || i.heightChanged || i.viewportChanged || !xt.eq(i.startState.facet(Nu), i.state.facet(Nu), i.view.viewport.from, i.view.viewport.to);
    if (e == t)
      for (let r of this.gutters)
        r.update(i) && (n = !0);
    else {
      n = !0;
      let r = [];
      for (let s of t) {
        let o = e.indexOf(s);
        o < 0 ? r.push(new D1(this.view, s)) : (this.gutters[o].update(i), r.push(this.gutters[o]));
      }
      for (let s of this.gutters)
        s.dom.remove(), r.indexOf(s) < 0 && s.destroy();
      for (let s of r)
        this.dom.appendChild(s.dom);
      this.gutters = r;
    }
    return n;
  }
  destroy() {
    for (let i of this.gutters)
      i.destroy();
    this.dom.remove();
  }
}, {
  provide: (i) => me.scrollMargins.of((e) => {
    let t = e.plugin(i);
    return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == ii.LTR ? { left: t.dom.offsetWidth * e.scaleX } : { right: t.dom.offsetWidth * e.scaleX };
  })
});
function L1(i) {
  return Array.isArray(i) ? i : [i];
}
function eg(i, e, t) {
  for (; i.value && i.from <= t; )
    i.from == t && e.push(i.value), i.next();
}
class e3 {
  constructor(e, t, n) {
    this.gutter = e, this.height = n, this.i = 0, this.cursor = xt.iter(e.markers, t.from);
  }
  addElement(e, t, n) {
    let { gutter: r } = this, s = (t.top - this.height) / e.scaleY, o = t.height / e.scaleY;
    if (this.i == r.elements.length) {
      let a = new Zy(e, o, s, n);
      r.elements.push(a), r.dom.appendChild(a.dom);
    } else
      r.elements[this.i].update(e, o, s, n);
    this.height = t.bottom, this.i++;
  }
  line(e, t, n) {
    let r = [];
    eg(this.cursor, r, t.from), n.length && (r = r.concat(n));
    let s = this.gutter.config.lineMarker(e, t, r);
    s && r.unshift(s);
    let o = this.gutter;
    r.length == 0 && !o.config.renderEmptyElements || this.addElement(e, t, r);
  }
  widget(e, t) {
    let n = this.gutter.config.widgetMarker(e, t.widget, t), r = n ? [n] : null;
    for (let s of e.state.facet(GR)) {
      let o = s(e, t.widget, t);
      o && (r || (r = [])).push(o);
    }
    r && this.addElement(e, t, r);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let t = e.elements.pop();
      e.dom.removeChild(t.dom), t.destroy();
    }
  }
}
class D1 {
  constructor(e, t) {
    this.view = e, this.config = t, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let n in t.domEventHandlers)
      this.dom.addEventListener(n, (r) => {
        let s = r.target, o;
        if (s != this.dom && this.dom.contains(s)) {
          for (; s.parentNode != this.dom; )
            s = s.parentNode;
          let c = s.getBoundingClientRect();
          o = (c.top + c.bottom) / 2;
        } else
          o = r.clientY;
        let a = e.lineBlockAtHeight(o - e.documentTop);
        t.domEventHandlers[n](e, a, r) && r.preventDefault();
      });
    this.markers = L1(t.markers(e)), t.initialSpacer && (this.spacer = new Zy(e, 0, 0, [t.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let t = this.markers;
    if (this.markers = L1(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let r = this.config.updateSpacer(this.spacer.markers[0], e);
      r != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [r]);
    }
    let n = e.view.viewport;
    return !xt.eq(this.markers, t, n.from, n.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class Zy {
  constructor(e, t, n, r) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, t, n, r);
  }
  update(e, t, n, r) {
    this.height != t && (this.height = t, this.dom.style.height = t + "px"), this.above != n && (this.dom.style.marginTop = (this.above = n) ? n + "px" : ""), t3(this.markers, r) || this.setMarkers(e, r);
  }
  setMarkers(e, t) {
    let n = "cm-gutterElement", r = this.dom.firstChild;
    for (let s = 0, o = 0; ; ) {
      let a = o, c = s < t.length ? t[s++] : null, u = !1;
      if (c) {
        let h = c.elementClass;
        h && (n += " " + h);
        for (let d = o; d < this.markers.length; d++)
          if (this.markers[d].compare(c)) {
            a = d, u = !0;
            break;
          }
      } else
        a = this.markers.length;
      for (; o < a; ) {
        let h = this.markers[o++];
        if (h.toDOM) {
          h.destroy(r);
          let d = r.nextSibling;
          r.remove(), r = d;
        }
      }
      if (!c)
        break;
      c.toDOM && (u ? r = r.nextSibling : this.dom.insertBefore(c.toDOM(e), r)), u && o++;
    }
    this.dom.className = n, this.markers = t;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function t3(i, e) {
  if (i.length != e.length)
    return !1;
  for (let t = 0; t < i.length; t++)
    if (!i[t].compare(e[t]))
      return !1;
  return !0;
}
const i3 = /* @__PURE__ */ _e.define(), n3 = /* @__PURE__ */ _e.define(), jl = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, t) {
        let n = Object.assign({}, e);
        for (let r in t) {
          let s = n[r], o = t[r];
          n[r] = s ? (a, c, u) => s(a, c, u) || o(a, c, u) : o;
        }
        return n;
      }
    });
  }
});
class Md extends Fs {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function Ed(i, e) {
  return i.state.facet(jl).formatNumber(e, i.state);
}
const r3 = /* @__PURE__ */ Sc.compute([jl], (i) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(i3);
  },
  lineMarker(e, t, n) {
    return n.some((r) => r.toDOM) ? null : new Md(Ed(e, e.state.doc.lineAt(t.from).number));
  },
  widgetMarker: (e, t, n) => {
    for (let r of e.state.facet(n3)) {
      let s = r(e, t, n);
      if (s)
        return s;
    }
    return null;
  },
  lineMarkerChange: (e) => e.startState.facet(jl) != e.state.facet(jl),
  initialSpacer(e) {
    return new Md(Ed(e, V1(e.state.doc.lines)));
  },
  updateSpacer(e, t) {
    let n = Ed(t.view, V1(t.view.state.doc.lines));
    return n == e.number ? e : new Md(n);
  },
  domEventHandlers: i.facet(jl).domEventHandlers
}));
function s3(i = {}) {
  return [
    jl.of(i),
    Ty(),
    r3
  ];
}
function V1(i) {
  let e = 9;
  for (; e < i; )
    e = e * 10 + 9;
  return e;
}
const o3 = /* @__PURE__ */ new class extends Fs {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), l3 = /* @__PURE__ */ Nu.compute(["selection"], (i) => {
  let e = [], t = -1;
  for (let n of i.selection.ranges) {
    let r = i.doc.lineAt(n.head).from;
    r > t && (t = r, e.push(o3.range(r)));
  }
  return xt.of(e);
});
function a3() {
  return l3;
}
var c3 = /* @__PURE__ */ ne('<div class="mzn-editor svelte-1fycn7h"></div>');
function Cy(i, e) {
  if (new.target) return on({ component: Cy, ...i });
  zi(e, !1);
  let t = ve(e, "state", 12), n = fe(), r = fe();
  Rg(() => {
    M(r, new me({ parent: g(n) }));
  });
  function s() {
    return g(r) ? g(r) : null;
  }
  function o() {
    return g(r) ? g(r).state : null;
  }
  async function a(h) {
    g(r) && (await Dr(), g(r).dispatch({ selection: { anchor: h } }));
  }
  function c() {
    g(r).focus();
  }
  Be(
    () => (g(r), Rt(t())),
    () => {
      g(r) && t() && g(r).state !== t() && g(r).setState(t());
    }
  ), En(), ln();
  var u = c3();
  return Xi(u, (h) => M(n, h), () => g(n)), z(i, u), bi(e, "getView", s), bi(e, "getState", o), bi(e, "setCursor", a), bi(e, "focus", c), ji({
    getView: s,
    getState: o,
    setCursor: a,
    focus: c,
    get state() {
      return t();
    },
    set state(h) {
      t(h), pe();
    },
    $set: cn,
    $on: (h, d) => an(e, h, d)
  });
}
var cr = typeof window < "u" ? window : null, Gg = cr === null, Ac = Gg ? void 0 : cr.document, Xr = "addEventListener", Mr = "removeEventListener", qd = "getBoundingClientRect", Ja = "_a", Er = "_b", Xs = "_c", wu = "horizontal", qr = function() {
  return !1;
}, f3 = Gg ? "calc" : ["", "-webkit-", "-moz-", "-o-"].filter(function(i) {
  var e = Ac.createElement("div");
  return e.style.cssText = "width:" + i + "calc(9px)", !!e.style.length;
}).shift() + "calc", Ry = function(i) {
  return typeof i == "string" || i instanceof String;
}, U1 = function(i) {
  if (Ry(i)) {
    var e = Ac.querySelector(i);
    if (!e)
      throw new Error("Selector " + i + " did not match a DOM element");
    return e;
  }
  return i;
}, Ki = function(i, e, t) {
  var n = i[e];
  return n !== void 0 ? n : t;
}, Pu = function(i, e, t, n) {
  if (e) {
    if (n === "end")
      return 0;
    if (n === "center")
      return i / 2;
  } else if (t) {
    if (n === "start")
      return 0;
    if (n === "center")
      return i / 2;
  }
  return i;
}, u3 = function(i, e) {
  var t = Ac.createElement("div");
  return t.className = "gutter gutter-" + e, t;
}, h3 = function(i, e, t) {
  var n = {};
  return Ry(e) ? n[i] = e : n[i] = f3 + "(" + e + "% - " + t + "px)", n;
}, O3 = function(i, e) {
  var t;
  return t = {}, t[i] = e + "px", t;
}, d3 = function(i, e) {
  if (e === void 0 && (e = {}), Gg)
    return {};
  var t = i, n, r, s, o, a, c;
  Array.from && (t = Array.from(t));
  var u = U1(t[0]), h = u.parentNode, d = getComputedStyle ? getComputedStyle(h) : null, p = d ? d.flexDirection : null, m = Ki(e, "sizes") || t.map(function() {
    return 100 / t.length;
  }), b = Ki(e, "minSize", 100), y = Array.isArray(b) ? b : t.map(function() {
    return b;
  }), w = Ki(e, "maxSize", 1 / 0), k = Array.isArray(w) ? w : t.map(function() {
    return w;
  }), A = Ki(e, "expandToMin", !1), x = Ki(e, "gutterSize", 10), _ = Ki(e, "gutterAlign", "center"), W = Ki(e, "snapOffset", 30), D = Array.isArray(W) ? W : t.map(function() {
    return W;
  }), q = Ki(e, "dragInterval", 1), V = Ki(e, "direction", wu), U = Ki(
    e,
    "cursor",
    V === wu ? "col-resize" : "row-resize"
  ), N = Ki(e, "gutter", u3), j = Ki(
    e,
    "elementStyle",
    h3
  ), I = Ki(e, "gutterStyle", O3);
  V === wu ? (n = "width", r = "clientX", s = "left", o = "right", a = "clientWidth") : V === "vertical" && (n = "height", r = "clientY", s = "top", o = "bottom", a = "clientHeight");
  function Y(ue, H, ce, oe) {
    var $e = j(n, H, ce, oe);
    Object.keys($e).forEach(function(Ae) {
      ue.style[Ae] = $e[Ae];
    });
  }
  function se(ue, H, ce) {
    var oe = I(n, H, ce);
    Object.keys(oe).forEach(function($e) {
      ue.style[$e] = oe[$e];
    });
  }
  function be() {
    return c.map(function(ue) {
      return ue.size;
    });
  }
  function ze(ue) {
    return "touches" in ue ? ue.touches[0][r] : ue[r];
  }
  function Ve(ue) {
    var H = c[this.a], ce = c[this.b], oe = H.size + ce.size;
    H.size = ue / this.size * oe, ce.size = oe - ue / this.size * oe, Y(H.element, H.size, this[Er], H.i), Y(ce.element, ce.size, this[Xs], ce.i);
  }
  function Xe(ue) {
    var H, ce = c[this.a], oe = c[this.b];
    this.dragging && (H = ze(ue) - this.start + (this[Er] - this.dragOffset), q > 1 && (H = Math.round(H / q) * q), H <= ce.minSize + ce.snapOffset + this[Er] ? H = ce.minSize + this[Er] : H >= this.size - (oe.minSize + oe.snapOffset + this[Xs]) && (H = this.size - (oe.minSize + this[Xs])), H >= ce.maxSize - ce.snapOffset + this[Er] ? H = ce.maxSize + this[Er] : H <= this.size - (oe.maxSize - oe.snapOffset + this[Xs]) && (H = this.size - (oe.maxSize + this[Xs])), Ve.call(this, H), Ki(e, "onDrag", qr)(be()));
  }
  function Ee() {
    var ue = c[this.a].element, H = c[this.b].element, ce = ue[qd](), oe = H[qd]();
    this.size = ce[n] + oe[n] + this[Er] + this[Xs], this.start = ce[s], this.end = ce[o];
  }
  function We(ue) {
    if (!getComputedStyle)
      return null;
    var H = getComputedStyle(ue);
    if (!H)
      return null;
    var ce = ue[a];
    return ce === 0 ? null : (V === wu ? ce -= parseFloat(H.paddingLeft) + parseFloat(H.paddingRight) : ce -= parseFloat(H.paddingTop) + parseFloat(H.paddingBottom), ce);
  }
  function xe(ue) {
    var H = We(h);
    if (H === null || y.reduce(function(Ae, Ze) {
      return Ae + Ze;
    }, 0) > H)
      return ue;
    var ce = 0, oe = [], $e = ue.map(function(Ae, Ze) {
      var Ie = H * Ae / 100, yt = Pu(
        x,
        Ze === 0,
        Ze === ue.length - 1,
        _
      ), pt = y[Ze] + yt;
      return Ie < pt ? (ce += pt - Ie, oe.push(0), pt) : (oe.push(Ie - pt), Ie);
    });
    return ce === 0 ? ue : $e.map(function(Ae, Ze) {
      var Ie = Ae;
      if (ce > 0 && oe[Ze] - ce > 0) {
        var yt = Math.min(
          ce,
          oe[Ze] - ce
        );
        ce -= yt, Ie = Ae - yt;
      }
      return Ie / H * 100;
    });
  }
  function re() {
    var ue = this, H = c[ue.a].element, ce = c[ue.b].element;
    ue.dragging && Ki(e, "onDragEnd", qr)(be()), ue.dragging = !1, cr[Mr]("mouseup", ue.stop), cr[Mr]("touchend", ue.stop), cr[Mr]("touchcancel", ue.stop), cr[Mr]("mousemove", ue.move), cr[Mr]("touchmove", ue.move), ue.stop = null, ue.move = null, H[Mr]("selectstart", qr), H[Mr]("dragstart", qr), ce[Mr]("selectstart", qr), ce[Mr]("dragstart", qr), H.style.userSelect = "", H.style.webkitUserSelect = "", H.style.MozUserSelect = "", H.style.pointerEvents = "", ce.style.userSelect = "", ce.style.webkitUserSelect = "", ce.style.MozUserSelect = "", ce.style.pointerEvents = "", ue.gutter.style.cursor = "", ue.parent.style.cursor = "", Ac.body.style.cursor = "";
  }
  function Oe(ue) {
    if (!("button" in ue && ue.button !== 0)) {
      var H = this, ce = c[H.a].element, oe = c[H.b].element;
      H.dragging || Ki(e, "onDragStart", qr)(be()), ue.preventDefault(), H.dragging = !0, H.move = Xe.bind(H), H.stop = re.bind(H), cr[Xr]("mouseup", H.stop), cr[Xr]("touchend", H.stop), cr[Xr]("touchcancel", H.stop), cr[Xr]("mousemove", H.move), cr[Xr]("touchmove", H.move), ce[Xr]("selectstart", qr), ce[Xr]("dragstart", qr), oe[Xr]("selectstart", qr), oe[Xr]("dragstart", qr), ce.style.userSelect = "none", ce.style.webkitUserSelect = "none", ce.style.MozUserSelect = "none", ce.style.pointerEvents = "none", oe.style.userSelect = "none", oe.style.webkitUserSelect = "none", oe.style.MozUserSelect = "none", oe.style.pointerEvents = "none", H.gutter.style.cursor = U, H.parent.style.cursor = U, Ac.body.style.cursor = U, Ee.call(H), H.dragOffset = ze(ue) - H.end;
    }
  }
  m = xe(m);
  var Re = [];
  c = t.map(function(ue, H) {
    var ce = {
      element: U1(ue),
      size: m[H],
      minSize: y[H],
      maxSize: k[H],
      snapOffset: D[H],
      i: H
    }, oe;
    if (H > 0 && (oe = {
      a: H - 1,
      b: H,
      dragging: !1,
      direction: V,
      parent: h
    }, oe[Er] = Pu(
      x,
      H - 1 === 0,
      !1,
      _
    ), oe[Xs] = Pu(
      x,
      !1,
      H === t.length - 1,
      _
    ), p === "row-reverse" || p === "column-reverse")) {
      var $e = oe.a;
      oe.a = oe.b, oe.b = $e;
    }
    if (H > 0) {
      var Ae = N(H, V, ce.element);
      se(Ae, x, H), oe[Ja] = Oe.bind(oe), Ae[Xr](
        "mousedown",
        oe[Ja]
      ), Ae[Xr](
        "touchstart",
        oe[Ja]
      ), h.insertBefore(Ae, ce.element), oe.gutter = Ae;
    }
    return Y(
      ce.element,
      ce.size,
      Pu(
        x,
        H === 0,
        H === t.length - 1,
        _
      ),
      H
    ), H > 0 && Re.push(oe), ce;
  });
  function Ye(ue) {
    var H = ue.i === Re.length, ce = H ? Re[ue.i - 1] : Re[ue.i];
    Ee.call(ce);
    var oe = H ? ce.size - ue.minSize - ce[Xs] : ue.minSize + ce[Er];
    Ve.call(ce, oe);
  }
  c.forEach(function(ue) {
    var H = ue.element[qd]()[n];
    H < ue.minSize && (A ? Ye(ue) : ue.minSize = H);
  });
  function Ne(ue) {
    var H = xe(ue);
    H.forEach(function(ce, oe) {
      if (oe > 0) {
        var $e = Re[oe - 1], Ae = c[$e.a], Ze = c[$e.b];
        Ae.size = H[oe - 1], Ze.size = ce, Y(Ae.element, Ae.size, $e[Er], Ae.i), Y(Ze.element, Ze.size, $e[Xs], Ze.i);
      }
    });
  }
  function He(ue, H) {
    Re.forEach(function(ce) {
      if (H !== !0 ? ce.parent.removeChild(ce.gutter) : (ce.gutter[Mr](
        "mousedown",
        ce[Ja]
      ), ce.gutter[Mr](
        "touchstart",
        ce[Ja]
      )), ue !== !0) {
        var oe = j(
          n,
          ce.a.size,
          ce[Er]
        );
        Object.keys(oe).forEach(function($e) {
          c[ce.a].element.style[$e] = "", c[ce.b].element.style[$e] = "";
        });
      }
    });
  }
  return {
    setSizes: Ne,
    getSizes: be,
    collapse: function(H) {
      Ye(c[H]);
    },
    destroy: He,
    parent: h,
    pairs: Re
  };
}, p3 = /* @__PURE__ */ ne('<div class="split svelte-1k68mj4"><div class="split-panel svelte-1k68mj4"><!></div> <div class="split-panel svelte-1k68mj4"><!></div></div>');
function Ay(i, e) {
  if (new.target) return on({ component: Ay, ...i });
  zi(e, !1);
  let t = ve(e, "direction", 12, "horizontal"), n = ve(e, "split", 12, 50), r = ve(e, "showPanels", 12, "all"), s = fe(), o = fe(), a = null;
  function c(k, A) {
    u(), A === "all" && g(s) && g(o) && (a = d3([g(s), g(o)], {
      direction: k,
      minSize: 0,
      sizes: [n(), 100 - n()],
      onDragEnd(x) {
        n(x[0]);
      }
    }));
  }
  function u() {
    a && (a.destroy(), a = null);
  }
  function h(k) {
    a && a.getSizes()[0] !== k && a.setSizes([k, 100 - k]);
  }
  function d(k, A) {
    return A === "all" || A === k;
  }
  Rg(() => (c(t(), r()), u)), Be(
    () => (Rt(t()), Rt(r())),
    () => {
      c(t(), r());
    }
  ), Be(() => Rt(n()), () => {
    h(n());
  }), En(), ln();
  var p = p3(), m = R(p), b = R(m);
  Ji(b, e, "panelA", {}, null), C(m), Xi(m, (k) => M(s, k), () => g(s));
  var y = ie(m, 2), w = R(y);
  return Ji(w, e, "panelB", {}, null), C(y), Xi(y, (k) => M(o, k), () => g(o)), C(p), we(
    (k, A) => {
      Ge(p, "horizontal", t() === "horizontal"), Ge(m, "no-splitter", r() !== "all"), Ge(m, "is-hidden", k), Ge(y, "no-splitter", r() !== "all"), Ge(y, "is-hidden", A);
    },
    [
      () => !d("a", r()),
      () => !d("b", r())
    ],
    gi
  ), z(i, p), ji({
    get direction() {
      return t();
    },
    set direction(k) {
      t(k), pe();
    },
    get split() {
      return n();
    },
    set split(k) {
      n(k), pe();
    },
    get showPanels() {
      return r();
    },
    set showPanels(k) {
      r(k), pe();
    },
    $set: cn,
    $on: (k, A) => an(e, k, A)
  });
}
function Y1(i, e) {
  e && e !== "lg" && e !== "sm" && e !== "xs" ? i.style.fontSize = e.replace("x", "em") : i.style.fontSize = "";
}
function g3(i, e, t, n, r, s = 1, o = "", a = "") {
  let c = 1, u = 1;
  r && (r == "horizontal" ? c = -1 : r == "vertical" ? u = -1 : c = u = -1), typeof i == "string" && (i = parseFloat(i)), typeof e == "string" && (e = parseFloat(e)), typeof t == "string" && (t = parseFloat(t));
  const h = `${e * s}${o}`, d = `${t * s}${o}`;
  let p = `translate(${h},${d}) scale(${c * i},${u * i})`;
  return n && (p += ` rotate(${n}${a})`), p;
}
var m3 = /* @__PURE__ */ Gh('<title class="svelte-bvo74f"> </title>'), v3 = /* @__PURE__ */ Gh('<path class="svelte-bvo74f"></path>'), S3 = /* @__PURE__ */ Gh('<path class="svelte-bvo74f"></path><path class="svelte-bvo74f"></path>', 1), b3 = /* @__PURE__ */ Gh('<svg aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><!><g class="svelte-bvo74f"><g class="svelte-bvo74f"><!></g></g></svg>');
function zt(i, e) {
  if (new.target) return on({ component: zt, ...i });
  zi(e, !1);
  const t = fe(), n = fe();
  let r = ve(e, "class", 28, () => {
  }), s = ve(e, "id", 28, () => {
  }), o = ve(e, "style", 28, () => {
  }), a = ve(e, "icon", 12), c = ve(e, "title", 28, () => {
  }), u = ve(e, "size", 28, () => {
  }), h = ve(e, "color", 28, () => {
  }), d = ve(e, "fw", 12, !1), p = ve(e, "pull", 28, () => {
  }), m = ve(e, "scale", 12, 1), b = ve(e, "translateX", 12, 0), y = ve(e, "translateY", 12, 0), w = ve(e, "rotate", 28, () => {
  }), k = ve(e, "flip", 28, () => {
  }), A = ve(e, "spin", 12, !1), x = ve(e, "pulse", 12, !1), _ = ve(e, "primaryColor", 12, ""), W = ve(e, "secondaryColor", 12, ""), D = ve(e, "primaryOpacity", 12, 1), q = ve(e, "secondaryOpacity", 12, 0.4), V = ve(e, "swapOpacity", 12, !1), U = fe();
  Be(
    () => (g(U), Rt(u()), Y1),
    () => {
      g(U) && u() && Y1(g(U), u());
    }
  ), Be(() => Rt(a()), () => {
    M(t, a() && a().icon || [0, 0, "", [], ""]);
  }), Be(
    () => (Rt(m()), Rt(b()), Rt(y()), Rt(w()), Rt(k())),
    () => {
      M(n, g3(m(), b(), y(), w(), k(), 512));
    }
  ), En(), ln();
  var N = Wt(), j = Le(N);
  {
    var I = (Y) => {
      var se = b3(), be = R(se);
      {
        var ze = (re) => {
          var Oe = m3(), Re = R(Oe, !0);
          C(Oe), we(() => dt(Re, c())), z(re, Oe);
        };
        ge(be, (re) => {
          c() && re(ze);
        });
      }
      var Ve = ie(be), Xe = R(Ve), Ee = R(Xe);
      {
        var We = (re) => {
          var Oe = v3();
          we(() => {
            ct(Oe, "d", g(t)[4]), ct(Oe, "fill", h() || _() || "currentColor"), ct(Oe, "transform", `translate(${g(t)[0] / -2} ${g(t)[1] / -2})`);
          }), z(re, Oe);
        }, xe = (re) => {
          var Oe = S3(), Re = Le(Oe), Ye = ie(Re);
          we(() => {
            ct(Re, "d", g(t)[4][0]), ct(Re, "fill", W() || h() || "currentColor"), ct(Re, "fill-opacity", V() != !1 ? D() : q()), ct(Re, "transform", `translate(${g(t)[0] / -2} ${g(t)[1] / -2})`), ct(Ye, "d", g(t)[4][1]), ct(Ye, "fill", _() || h() || "currentColor"), ct(Ye, "fill-opacity", V() != !1 ? q() : D()), ct(Ye, "transform", `translate(${g(t)[0] / -2} ${g(t)[1] / -2})`);
          }), z(re, Oe);
        };
        ge(Ee, (re) => {
          typeof g(t)[4] == "string" ? re(We) : re(xe, !1);
        });
      }
      C(Xe), C(Ve), C(se), Xi(se, (re) => M(U, re), () => g(U)), we(() => {
        ct(se, "id", s()), GZ(se, `svelte-fa svelte-fa-base ${r() ?? ""} svelte-bvo74f`), ct(se, "style", o()), ct(se, "viewBox", `0 0 ${g(t)[0] ?? ""} ${g(t)[1] ?? ""}`), Ge(se, "pulse", x()), Ge(se, "svelte-fa-size-lg", u() === "lg"), Ge(se, "svelte-fa-size-sm", u() === "sm"), Ge(se, "svelte-fa-size-xs", u() === "xs"), Ge(se, "svelte-fa-fw", d()), Ge(se, "svelte-fa-pull-left", p() === "left"), Ge(se, "svelte-fa-pull-right", p() === "right"), Ge(se, "spin", A()), ct(Ve, "transform", `translate(${g(t)[0] / 2} ${g(t)[1] / 2})`), ct(Ve, "transform-origin", `${g(t)[0] / 4} 0`), ct(Xe, "transform", g(n));
      }), z(Y, se);
    };
    ge(j, (Y) => {
      g(t)[4] && Y(I);
    });
  }
  return z(i, N), ji({
    get class() {
      return r();
    },
    set class(Y) {
      r(Y), pe();
    },
    get id() {
      return s();
    },
    set id(Y) {
      s(Y), pe();
    },
    get style() {
      return o();
    },
    set style(Y) {
      o(Y), pe();
    },
    get icon() {
      return a();
    },
    set icon(Y) {
      a(Y), pe();
    },
    get title() {
      return c();
    },
    set title(Y) {
      c(Y), pe();
    },
    get size() {
      return u();
    },
    set size(Y) {
      u(Y), pe();
    },
    get color() {
      return h();
    },
    set color(Y) {
      h(Y), pe();
    },
    get fw() {
      return d();
    },
    set fw(Y) {
      d(Y), pe();
    },
    get pull() {
      return p();
    },
    set pull(Y) {
      p(Y), pe();
    },
    get scale() {
      return m();
    },
    set scale(Y) {
      m(Y), pe();
    },
    get translateX() {
      return b();
    },
    set translateX(Y) {
      b(Y), pe();
    },
    get translateY() {
      return y();
    },
    set translateY(Y) {
      y(Y), pe();
    },
    get rotate() {
      return w();
    },
    set rotate(Y) {
      w(Y), pe();
    },
    get flip() {
      return k();
    },
    set flip(Y) {
      k(Y), pe();
    },
    get spin() {
      return A();
    },
    set spin(Y) {
      A(Y), pe();
    },
    get pulse() {
      return x();
    },
    set pulse(Y) {
      x(Y), pe();
    },
    get primaryColor() {
      return _();
    },
    set primaryColor(Y) {
      _(Y), pe();
    },
    get secondaryColor() {
      return W();
    },
    set secondaryColor(Y) {
      W(Y), pe();
    },
    get primaryOpacity() {
      return D();
    },
    set primaryOpacity(Y) {
      D(Y), pe();
    },
    get secondaryOpacity() {
      return q();
    },
    set secondaryOpacity(Y) {
      q(Y), pe();
    },
    get swapOpacity() {
      return V();
    },
    set swapOpacity(Y) {
      V(Y), pe();
    },
    $set: cn,
    $on: (Y, se) => an(e, Y, se)
  });
}
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
const z1 = {
  prefix: "fas",
  iconName: "lock",
  icon: [448, 512, [128274], "f023", "M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z"]
}, j1 = {
  prefix: "fas",
  iconName: "share-nodes",
  icon: [448, 512, ["share-alt"], "f1e0", "M352 224c53 0 96-43 96-96s-43-96-96-96s-96 43-96 96c0 4 .2 8 .7 11.9l-94.1 47C145.4 170.2 121.9 160 96 160c-53 0-96 43-96 96s43 96 96 96c25.9 0 49.4-10.2 66.6-26.9l94.1 47c-.5 3.9-.7 7.8-.7 11.9c0 53 43 96 96 96s96-43 96-96s-43-96-96-96c-25.9 0-49.4 10.2-66.6 26.9l-94.1-47c.5-3.9 .7-7.8 .7-11.9s-.2-8-.7-11.9l94.1-47C302.6 213.8 326.1 224 352 224z"]
}, $3 = {
  prefix: "fas",
  iconName: "eye-slash",
  icon: [640, 512, [], "f070", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zM223.1 149.5C248.6 126.2 282.7 112 320 112c79.5 0 144 64.5 144 144c0 24.9-6.3 48.3-17.4 68.7L408 294.5c8.4-19.3 10.6-41.4 4.8-63.3c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3c0 10.2-2.4 19.8-6.6 28.3l-90.3-70.8zM373 389.9c-16.4 6.5-34.3 10.1-53 10.1c-79.5 0-144-64.5-144-144c0-6.9 .5-13.6 1.4-20.2L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5L373 389.9z"]
}, y3 = {
  prefix: "fas",
  iconName: "shuffle",
  icon: [512, 512, [128256, "random"], "f074", "M403.8 34.4c12-5 25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6l0-32-32 0c-10.1 0-19.6 4.7-25.6 12.8L284 229.3 244 176l31.2-41.6C293.3 110.2 321.8 96 352 96l32 0 0-32c0-12.9 7.8-24.6 19.8-29.6zM164 282.7L204 336l-31.2 41.6C154.7 401.8 126.2 416 96 416l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64 0c10.1 0 19.6-4.7 25.6-12.8L164 282.7zm274.6 188c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6l0-32-32 0c-30.2 0-58.7-14.2-76.8-38.4L121.6 172.8c-6-8.1-15.5-12.8-25.6-12.8l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64 0c30.2 0 58.7 14.2 76.8 38.4L326.4 339.2c6 8.1 15.5 12.8 25.6 12.8l32 0 0-32c0-12.9 7.8-24.6 19.8-29.6s25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64z"]
}, Q3 = {
  prefix: "fas",
  iconName: "clipboard",
  icon: [384, 512, [128203], "f328", "M192 0c-41.8 0-77.4 26.7-90.5 64L64 64C28.7 64 0 92.7 0 128L0 448c0 35.3 28.7 64 64 64l256 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64l-37.5 0C269.4 26.7 233.8 0 192 0zm0 64a32 32 0 1 1 0 64 32 32 0 1 1 0-64zM112 192l160 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-160 0c-8.8 0-16-7.2-16-16s7.2-16 16-16z"]
}, B1 = {
  prefix: "fas",
  iconName: "arrow-up-right-from-square",
  icon: [512, 512, ["external-link"], "f08e", "M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l82.7 0L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3l0 82.7c0 17.7 14.3 32 32 32s32-14.3 32-32l0-160c0-17.7-14.3-32-32-32L320 0zM80 32C35.8 32 0 67.8 0 112L0 432c0 44.2 35.8 80 80 80l320 0c44.2 0 80-35.8 80-80l0-112c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 112c0 8.8-7.2 16-16 16L80 448c-8.8 0-16-7.2-16-16l0-320c0-8.8 7.2-16 16-16l112 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L80 32z"]
}, w3 = {
  prefix: "fas",
  iconName: "lock-open",
  icon: [576, 512, [], "f3c1", "M352 144c0-44.2 35.8-80 80-80s80 35.8 80 80l0 48c0 17.7 14.3 32 32 32s32-14.3 32-32l0-48C576 64.5 511.5 0 432 0S288 64.5 288 144l0 48L64 192c-35.3 0-64 28.7-64 64L0 448c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-192c0-35.3-28.7-64-64-64l-32 0 0-48z"]
}, P3 = {
  prefix: "fas",
  iconName: "forward-fast",
  icon: [512, 512, [9197, "fast-forward"], "f050", "M18.4 445c11.2 5.3 24.5 3.6 34.1-4.4L224 297.7 224 416c0 12.4 7.2 23.7 18.4 29s24.5 3.6 34.1-4.4L448 297.7 448 416c0 17.7 14.3 32 32 32s32-14.3 32-32l0-320c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 118.3L276.5 71.4c-9.5-7.9-22.8-9.7-34.1-4.4S224 83.6 224 96l0 118.3L52.5 71.4c-9.5-7.9-22.8-9.7-34.1-4.4S0 83.6 0 96L0 416c0 12.4 7.2 23.7 18.4 29z"]
}, x3 = {
  prefix: "fas",
  iconName: "eye",
  icon: [576, 512, [128065], "f06e", "M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"]
}, Xy = {
  prefix: "fas",
  iconName: "trash",
  icon: [448, 512, [], "f1f8", "M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z"]
}, k3 = {
  prefix: "fas",
  iconName: "gear",
  icon: [512, 512, [9881, "cog"], "f013", "M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"]
}, I1 = k3, _3 = {
  prefix: "fas",
  iconName: "folder-tree",
  icon: [576, 512, [], "f802", "M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32l0 96L0 384c0 35.3 28.7 64 64 64l192 0 0-64L64 384l0-224 192 0 0-64L64 96l0-64zM288 192c0 17.7 14.3 32 32 32l224 0c17.7 0 32-14.3 32-32l0-128c0-17.7-14.3-32-32-32l-98.7 0c-8.5 0-16.6-3.4-22.6-9.4L409.4 9.4c-6-6-14.1-9.4-22.6-9.4L320 0c-17.7 0-32 14.3-32 32l0 160zm0 288c0 17.7 14.3 32 32 32l224 0c17.7 0 32-14.3 32-32l0-128c0-17.7-14.3-32-32-32l-98.7 0c-8.5 0-16.6-3.4-22.6-9.4l-13.3-13.3c-6-6-14.1-9.4-22.6-9.4L320 288c-17.7 0-32 14.3-32 32l0 160z"]
}, W3 = {
  prefix: "fas",
  iconName: "download",
  icon: [512, 512, [], "f019", "M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 242.7-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7 288 32zM64 352c-35.3 0-64 28.7-64 64l0 32c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-32c0-35.3-28.7-64-64-64l-101.5 0-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352 64 352zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"]
}, T3 = {
  prefix: "fas",
  iconName: "stop",
  icon: [384, 512, [9209], "f04d", "M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z"]
}, Z3 = {
  prefix: "fas",
  iconName: "angle-down",
  icon: [448, 512, [8964], "f107", "M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
}, C3 = {
  prefix: "fas",
  iconName: "eraser",
  icon: [576, 512, [], "f12d", "M290.7 57.4L57.4 290.7c-25 25-25 65.5 0 90.5l80 80c12 12 28.3 18.7 45.3 18.7L288 480l9.4 0L512 480c17.7 0 32-14.3 32-32s-14.3-32-32-32l-124.1 0L518.6 285.3c25-25 25-65.5 0-90.5L381.3 57.4c-25-25-65.5-25-90.5 0zM297.4 416l-9.4 0-105.4 0-80-80L227.3 211.3 364.7 348.7 297.4 416z"]
}, R3 = {
  prefix: "fas",
  iconName: "play",
  icon: [384, 512, [9654], "f04b", "M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80L0 432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"]
}, My = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"]
}, Ey = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
}, A3 = {
  prefix: "fas",
  iconName: "hammer",
  icon: [576, 512, [128296], "f6e3", "M413.5 237.5c-28.2 4.8-58.2-3.6-80-25.4l-38.1-38.1C280.4 159 272 138.8 272 117.6l0-12.1L192.3 62c-5.3-2.9-8.6-8.6-8.3-14.7s3.9-11.5 9.5-14l47.2-21C259.1 4.2 279 0 299.2 0l18.1 0c36.7 0 72 14 98.7 39.1l44.6 42c24.2 22.8 33.2 55.7 26.6 86L503 183l8-8c9.4-9.4 24.6-9.4 33.9 0l24 24c9.4 9.4 9.4 24.6 0 33.9l-88 88c-9.4 9.4-24.6 9.4-33.9 0l-24-24c-9.4-9.4-9.4-24.6 0-33.9l8-8-17.5-17.5zM27.4 377.1L260.9 182.6c3.5 4.9 7.5 9.6 11.8 14l38.1 38.1c6 6 12.4 11.2 19.2 15.7L134.9 484.6c-14.5 17.4-36 27.4-58.6 27.4C34.1 512 0 477.8 0 435.7c0-22.6 10.1-44.1 27.4-58.6z"]
}, N1 = {
  prefix: "fas",
  iconName: "rotate",
  icon: [512, 512, [128260, "sync-alt"], "f2f1", "M142.9 142.9c-17.5 17.5-30.1 38-37.8 59.8c-5.9 16.7-24.2 25.4-40.8 19.5s-25.4-24.2-19.5-40.8C55.6 150.7 73.2 122 97.6 97.6c87.2-87.2 228.3-87.5 315.8-1L455 55c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2l0 128c0 13.3-10.7 24-24 24l-8.4 0c0 0 0 0 0 0L344 224c-9.7 0-18.5-5.8-22.2-14.8s-1.7-19.3 5.2-26.2l41.1-41.1c-62.6-61.5-163.1-61.2-225.3 1zM16 312c0-13.3 10.7-24 24-24l7.6 0 .7 0L168 288c9.7 0 18.5 5.8 22.2 14.8s1.7 19.3-5.2 26.2l-41.1 41.1c62.6 61.5 163.1 61.2 225.3-1c17.5-17.5 30.1-38 37.8-59.8c5.9-16.7 24.2-25.4 40.8-19.5s25.4 24.2 19.5 40.8c-10.8 30.6-28.4 59.3-52.9 83.8c-87.2 87.2-228.3 87.5-315.8 1L57 457c-6.9 6.9-17.2 8.9-26.2 5.2S16 449.7 16 440l0-119.6 0-.7 0-7.6z"]
};
var X3 = /* @__PURE__ */ ne("<input> ", 1), M3 = /* @__PURE__ */ ne('<span class="close-tab svelte-1ul6ap"><!></span>'), E3 = /* @__PURE__ */ ne('<span class="filename svelte-1ul6ap"> </span> <!>', 1), q3 = /* @__PURE__ */ ne('<a class="filename-link svelte-1ul6ap"><!></a>');
function qy(i, e) {
  if (new.target) return on({ component: qy, ...i });
  zi(e, !1);
  let t = ve(e, "active", 12, !1), n = ve(e, "name", 12, "Untitled"), r = ve(e, "suffix", 12, ".mzn"), s = ve(e, "readonly", 12, !1);
  const o = Jn();
  let a = fe(!1), c = fe(), u = fe("");
  async function h() {
    !t() || s() || (M(a, !0), M(u, n()), await Dr(), g(c).focus());
  }
  function d(k) {
    k.key === "Enter" ? (k.preventDefault(), p()) : k.key === "Escape" && M(a, !1);
  }
  function p() {
    M(a, !1), g(u).length > 0 && o("rename", {
      name: g(u),
      suffix: r()
    });
  }
  Be(() => g(u), () => {
    /[\/\\\.]/.test(g(u)) && M(u, g(u).replaceAll(/[\/\\\.]/g, ""));
  }), En(), ln();
  var m = q3(), b = R(m);
  {
    var y = (k) => {
      var A = X3(), x = Le(A);
      en(x), Xi(x, (W) => M(c, W), () => g(c));
      var _ = ie(x, 1, !0);
      we(() => {
        ct(x, "size", g(u).length || n().length), ct(x, "placeholder", n()), dt(_, r());
      }), sl(x, () => g(u), (W) => M(u, W)), Pe("blur", x, p), Pe("keyup", x, d), z(k, A);
    }, w = (k) => {
      var A = E3(), x = Le(A), _ = R(x);
      C(x);
      var W = ie(x, 2);
      {
        var D = (q) => {
          var V = M3(), U = R(V);
          zt(U, { icon: Ey }), C(V), Pe("click", V, () => o("close")), z(q, V);
        };
        ge(W, (q) => {
          t() && !s() && q(D);
        });
      }
      we(() => dt(_, `${n() ?? ""}${r() ?? ""}`)), Pe("click", x, h), z(k, A);
    };
    ge(b, (k) => {
      g(a) ? k(y) : k(w, !1);
    });
  }
  return C(m), we(() => {
    Ge(m, "active", t()), Ge(m, "readonly", s());
  }), Pe("click", m, () => {
    g(a) || o("click");
  }), z(i, m), ji({
    get active() {
      return t();
    },
    set active(k) {
      t(k), pe();
    },
    get name() {
      return n();
    },
    set name(k) {
      n(k), pe();
    },
    get suffix() {
      return r();
    },
    set suffix(k) {
      r(k), pe();
    },
    get readonly() {
      return s();
    },
    set readonly(k) {
      s(k), pe();
    },
    $set: cn,
    $on: (k, A) => an(e, k, A)
  });
}
function L3(i) {
  const e = i - 1;
  return e * e * e + 1;
}
function D3(i, { from: e, to: t }, n = {}) {
  var { delay: r = 0, duration: s = (D) => Math.sqrt(D) * 120, easing: o = L3 } = n, a = getComputedStyle(i), c = a.transform === "none" ? "" : a.transform, [u, h] = a.transformOrigin.split(" ").map(parseFloat);
  u /= i.clientWidth, h /= i.clientHeight;
  var d = V3(i), p = i.clientWidth / t.width / d, m = i.clientHeight / t.height / d, b = e.left + e.width * u, y = e.top + e.height * h, w = t.left + t.width * u, k = t.top + t.height * h, A = (b - w) * p, x = (y - k) * m, _ = e.width / t.width, W = e.height / t.height;
  return {
    delay: r,
    duration: typeof s == "function" ? s(Math.sqrt(A * A + x * x)) : s,
    easing: o,
    css: (D, q) => {
      var V = q * A, U = q * x, N = D + q * _, j = D + q * W;
      return `transform: ${c} translate(${V}px, ${U}px) scale(${N}, ${j});`;
    }
  };
}
function V3(i) {
  if ("currentCSSZoom" in i)
    return (
      /** @type {number} */
      i.currentCSSZoom
    );
  for (var e = i, t = 1; e !== null; )
    t *= +getComputedStyle(e).zoom, e = /** @type {Element | null} */
    e.parentElement;
  return t;
}
var U3 = /* @__PURE__ */ ne("<li><!></li>"), Y3 = /* @__PURE__ */ ne('<li><a title="Add new file"><span class="icon add-icon svelte-7ub6h4"><!></span></a></li> <li class="right svelte-7ub6h4"><button class="button is-small" title="Manage files"><span class="icon"><!></span></button></li>', 1), z3 = /* @__PURE__ */ ne('<div class="tabs is-boxed svelte-7ub6h4"><ul><!> <!></ul></div>');
function Ly(i, e) {
  if (new.target) return on({ component: Ly, ...i });
  zi(e, !1);
  const t = fe();
  let n = ve(e, "files", 28, () => []), r = ve(e, "currentIndex", 12, 0), s = ve(e, "readonly", 12, !1);
  const o = Jn();
  function a(x) {
    o("selectTab", { index: x });
  }
  function c(x, _) {
    o("rename", { index: _, ...x.detail });
  }
  let u = null;
  function h(x, _) {
    x.dataTransfer.effectAllowed = "move", x.dataTransfer.dropEffect = "move", u = _;
  }
  function d(x) {
    u !== null && x.preventDefault();
  }
  function p(x, _) {
    u !== null && (x.preventDefault(), x.dataTransfer.dropEffect = "move", u !== _ && o("reorder", { src: u, dest: _ }), u = null);
  }
  function m(x) {
    o("close", { index: x });
  }
  Be(() => Rt(n()), () => {
    M(t, n().map((x, _) => {
      const W = x.name.endsWith(".mzc.mzn") ? x.name.length - 8 : x.name.lastIndexOf(".");
      return {
        ...x,
        stem: x.name.substring(0, W),
        suffix: x.name.substring(W),
        index: _
      };
    }).filter((x) => !x.hidden));
  }), En(), ln();
  var b = z3(), y = R(b), w = R(y);
  _i(w, 9, () => g(t), (x) => x.name, (x, _) => {
    var W = U3();
    ct(W, "draggable", !0);
    var D = R(W);
    const q = /* @__PURE__ */ gi(() => r() === g(_).index), V = /* @__PURE__ */ gi(() => s() || g(_).readonlyTab);
    qy(D, {
      get name() {
        return g(_).stem;
      },
      get suffix() {
        return g(_).suffix;
      },
      get active() {
        return g(q);
      },
      get readonly() {
        return g(V);
      },
      $$events: {
        click: () => a(g(_).index),
        rename: (U) => c(U, g(_).index),
        close: (U) => m(g(_).index)
      }
    }), C(W), we(() => Ge(W, "is-active", r() === g(_).index)), i5(W, () => D3, () => ({ duration: 200 })), Pe("dragstart", W, (U) => h(U, g(_).index)), Pe("dragover", W, d), Pe("drop", W, (U) => p(U, g(_).index)), z(x, W);
  });
  var k = ie(w, 2);
  {
    var A = (x) => {
      var _ = Y3(), W = Le(_), D = R(W), q = R(D), V = R(q);
      zt(V, { icon: My }), C(q), C(D), C(W);
      var U = ie(W, 2), N = R(U), j = R(N), I = R(j);
      zt(I, { icon: _3 }), C(j), C(N), C(U), Pe("click", D, () => o("newFile")), Pe("click", N, () => o("manageFiles")), z(x, _);
    };
    ge(k, (x) => {
      s() || x(A);
    });
  }
  return C(y), C(b), z(i, b), ji({
    get files() {
      return n();
    },
    set files(x) {
      n(x), pe();
    },
    get currentIndex() {
      return r();
    },
    set currentIndex(x) {
      r(x), pe();
    },
    get readonly() {
      return s();
    },
    set readonly(x) {
      s(x), pe();
    },
    $set: cn,
    $on: (x, _) => an(e, x, _)
  });
}
const j3 = (i) => i;
function B3(i) {
  const e = i - 1;
  return e * e * e + 1;
}
function F1(i) {
  const e = typeof i == "string" && i.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
  return e ? [parseFloat(e[1]), e[2] || "px"] : [
    /** @type {number} */
    i,
    "px"
  ];
}
function I3(i, { delay: e = 0, duration: t = 400, easing: n = j3 } = {}) {
  const r = +getComputedStyle(i).opacity;
  return {
    delay: e,
    duration: t,
    easing: n,
    css: (s) => `opacity: ${s * r}`
  };
}
function Dy(i, { delay: e = 0, duration: t = 400, easing: n = B3, x: r = 0, y: s = 0, opacity: o = 0 } = {}) {
  const a = getComputedStyle(i), c = +a.opacity, u = a.transform === "none" ? "" : a.transform, h = c * (1 - o), [d, p] = F1(r), [m, b] = F1(s);
  return {
    delay: e,
    duration: t,
    easing: n,
    css: (y, w) => `
			transform: ${u} translate(${(1 - y) * d}${p}, ${(1 - y) * m}${b});
			opacity: ${c - h * w}`
  };
}
var N3 = /* @__PURE__ */ ne('<button class="button">Cancel</button>'), F3 = /* @__PURE__ */ ne('<form tabindex="0" class="modal is-active"><div class="modal-background"></div> <div class="modal-card"><header class="modal-card-head"><p class="modal-card-title"> </p> <button type="button" class="delete" aria-label="close"></button></header> <section class="modal-card-body"><!></section> <footer class="modal-card-foot"><!></footer></div></form>');
function Zo(i, e) {
  if (new.target) return on({ component: Zo, ...i });
  zi(e, !1);
  let t = ve(e, "title", 12), n = ve(e, "active", 12, !1);
  const r = Jn();
  let s = fe();
  async function o(d) {
    d && (await Dr(), g(s) && g(s).focus(), r("activate"));
  }
  function a() {
    r("cancel");
  }
  Be(() => Rt(n()), () => {
    o(n());
  }), En(), ln();
  var c = Wt(), u = Le(c);
  {
    var h = (d) => {
      var p = F3(), m = R(p), b = ie(m, 2), y = R(b), w = R(y), k = R(w, !0);
      C(w);
      var A = ie(w, 2);
      C(y);
      var x = ie(y, 2), _ = R(x);
      Ji(_, e, "default", {}, null), C(x);
      var W = ie(x, 2), D = R(W);
      Ji(D, e, "footer", {}, (q) => {
        var V = N3();
        Pe("click", V, a), z(q, V);
      }), C(W), C(b), C(p), Xi(p, (q) => M(s, q), () => g(s)), we(() => dt(k, t())), Pe("click", m, a), Pe("click", A, a), gp(3, b, () => Dy, () => ({ y: -200, duration: 200 })), gp(3, p, () => I3, () => ({ duration: 200 })), Pe("submit", p, Jb(() => r("submit"))), z(d, p);
    };
    ge(u, (d) => {
      n() && d(h);
    });
  }
  return z(i, c), ji({
    get title() {
      return t();
    },
    set title(d) {
      t(d), pe();
    },
    get active() {
      return n();
    },
    set active(d) {
      n(d), pe();
    },
    $set: cn,
    $on: (d, p) => an(e, d, p)
  });
}
const Vy = 1024;
let G3 = 0;
class dr {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
class ft {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = G3++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = bn.match(e)), (t) => {
      let n = e(t);
      return n === void 0 ? null : [this, n];
    };
  }
}
ft.closedBy = new ft({ deserialize: (i) => i.split(" ") });
ft.openedBy = new ft({ deserialize: (i) => i.split(" ") });
ft.group = new ft({ deserialize: (i) => i.split(" ") });
ft.isolate = new ft({ deserialize: (i) => {
  if (i && i != "rtl" && i != "ltr" && i != "auto")
    throw new RangeError("Invalid value for isolate: " + i);
  return i || "auto";
} });
ft.contextHash = new ft({ perNode: !0 });
ft.lookAhead = new ft({ perNode: !0 });
ft.mounted = new ft({ perNode: !0 });
class Xc {
  constructor(e, t, n) {
    this.tree = e, this.overlay = t, this.parser = n;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[ft.mounted.id];
  }
}
const H3 = /* @__PURE__ */ Object.create(null);
class bn {
  /**
  @internal
  */
  constructor(e, t, n, r = 0) {
    this.name = e, this.props = t, this.id = n, this.flags = r;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let t = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : H3, n = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), r = new bn(e.name || "", t, e.id, n);
    if (e.props) {
      for (let s of e.props)
        if (Array.isArray(s) || (s = s(r)), s) {
          if (s[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          t[s[0].id] = s[1];
        }
    }
    return r;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let t = this.prop(ft.group);
      return t ? t.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let n in e)
      for (let r of n.split(" "))
        t[r] = e[n];
    return (n) => {
      for (let r = n.prop(ft.group), s = -1; s < (r ? r.length : 0); s++) {
        let o = t[s < 0 ? n.name : r[s]];
        if (o)
          return o;
      }
    };
  }
}
bn.none = new bn(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class Hg {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let t = 0; t < e.length; t++)
      if (e[t].id != t)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let t = [];
    for (let n of this.types) {
      let r = null;
      for (let s of e) {
        let o = s(n);
        o && (r || (r = Object.assign({}, n.props)), r[o[0].id] = o[1]);
      }
      t.push(r ? new bn(n.name, r, n.id, n.flags) : n);
    }
    return new Hg(t);
  }
}
const xu = /* @__PURE__ */ new WeakMap(), G1 = /* @__PURE__ */ new WeakMap();
var Jt;
(function(i) {
  i[i.ExcludeBuffers = 1] = "ExcludeBuffers", i[i.IncludeAnonymous = 2] = "IncludeAnonymous", i[i.IgnoreMounts = 4] = "IgnoreMounts", i[i.IgnoreOverlays = 8] = "IgnoreOverlays";
})(Jt || (Jt = {}));
class oi {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, t, n, r, s) {
    if (this.type = e, this.children = t, this.positions = n, this.length = r, this.props = null, s && s.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [o, a] of s)
        this.props[typeof o == "number" ? o : o.id] = a;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = Xc.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let t = "";
    for (let n of this.children) {
      let r = n.toString();
      r && (t && (t += ","), t += r);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new vh(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, t = 0, n = 0) {
    let r = xu.get(this) || this.topNode, s = new vh(r);
    return s.moveTo(e, t), xu.set(this, s._tree), s;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new rn(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, t = 0) {
    let n = Mc(xu.get(this) || this.topNode, e, t, !1);
    return xu.set(this, n), n;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, t = 0) {
    let n = Mc(G1.get(this) || this.topNode, e, t, !0);
    return G1.set(this, n), n;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, t = 0) {
    return eA(this, e, t);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: t, leave: n, from: r = 0, to: s = this.length } = e, o = e.mode || 0, a = (o & Jt.IncludeAnonymous) > 0;
    for (let c = this.cursor(o | Jt.IncludeAnonymous); ; ) {
      let u = !1;
      if (c.from <= s && c.to >= r && (!a && c.type.isAnonymous || t(c) !== !1)) {
        if (c.firstChild())
          continue;
        u = !0;
      }
      for (; u && n && (a || !c.type.isAnonymous) && n(c), !c.nextSibling(); ) {
        if (!c.parent())
          return;
        u = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let t in this.props)
        e.push([+t, this.props[t]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : em(bn.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, n, r) => new oi(this.type, t, n, r, this.propValues), e.makeTree || ((t, n, r) => new oi(bn.none, t, n, r)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return tA(e);
  }
}
oi.empty = new oi(bn.none, [], [], 0);
class Kg {
  constructor(e, t) {
    this.buffer = e, this.index = t;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new Kg(this.buffer, this.index);
  }
}
class Co {
  /**
  Create a tree buffer.
  */
  constructor(e, t, n) {
    this.buffer = e, this.length = t, this.set = n;
  }
  /**
  @internal
  */
  get type() {
    return bn.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let t = 0; t < this.buffer.length; )
      e.push(this.childString(t)), t = this.buffer[t + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let t = this.buffer[e], n = this.buffer[e + 3], r = this.set.types[t], s = r.name;
    if (/\W/.test(s) && !r.isError && (s = JSON.stringify(s)), e += 4, n == e)
      return s;
    let o = [];
    for (; e < n; )
      o.push(this.childString(e)), e = this.buffer[e + 3];
    return s + "(" + o.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, t, n, r, s) {
    let { buffer: o } = this, a = -1;
    for (let c = e; c != t && !(Uy(s, r, o[c + 1], o[c + 2]) && (a = c, n > 0)); c = o[c + 3])
      ;
    return a;
  }
  /**
  @internal
  */
  slice(e, t, n) {
    let r = this.buffer, s = new Uint16Array(t - e), o = 0;
    for (let a = e, c = 0; a < t; ) {
      s[c++] = r[a++], s[c++] = r[a++] - n;
      let u = s[c++] = r[a++] - n;
      s[c++] = r[a++] - e, o = Math.max(o, u);
    }
    return new Co(s, o, this.set);
  }
}
function Uy(i, e, t, n) {
  switch (i) {
    case -2:
      return t < e;
    case -1:
      return n >= e && t < e;
    case 0:
      return t < e && n > e;
    case 1:
      return t <= e && n > e;
    case 2:
      return n > e;
    case 4:
      return !0;
  }
}
function Mc(i, e, t, n) {
  for (var r; i.from == i.to || (t < 1 ? i.from >= e : i.from > e) || (t > -1 ? i.to <= e : i.to < e); ) {
    let o = !n && i instanceof rn && i.index < 0 ? null : i.parent;
    if (!o)
      return i;
    i = o;
  }
  let s = n ? 0 : Jt.IgnoreOverlays;
  if (n)
    for (let o = i, a = o.parent; a; o = a, a = o.parent)
      o instanceof rn && o.index < 0 && ((r = a.enter(e, t, s)) === null || r === void 0 ? void 0 : r.from) != o.from && (i = a);
  for (; ; ) {
    let o = i.enter(e, t, s);
    if (!o)
      return i;
    i = o;
  }
}
class Yy {
  cursor(e = 0) {
    return new vh(this, e);
  }
  getChild(e, t = null, n = null) {
    let r = H1(this, e, t, n);
    return r.length ? r[0] : null;
  }
  getChildren(e, t = null, n = null) {
    return H1(this, e, t, n);
  }
  resolve(e, t = 0) {
    return Mc(this, e, t, !1);
  }
  resolveInner(e, t = 0) {
    return Mc(this, e, t, !0);
  }
  matchContext(e) {
    return tg(this.parent, e);
  }
  enterUnfinishedNodesBefore(e) {
    let t = this.childBefore(e), n = this;
    for (; t; ) {
      let r = t.lastChild;
      if (!r || r.to != t.to)
        break;
      r.type.isError && r.from == r.to ? (n = t, t = r.prevSibling) : t = r;
    }
    return n;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class rn extends Yy {
  constructor(e, t, n, r) {
    super(), this._tree = e, this.from = t, this.index = n, this._parent = r;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, t, n, r, s = 0) {
    for (let o = this; ; ) {
      for (let { children: a, positions: c } = o._tree, u = t > 0 ? a.length : -1; e != u; e += t) {
        let h = a[e], d = c[e] + o.from;
        if (Uy(r, n, d, d + h.length)) {
          if (h instanceof Co) {
            if (s & Jt.ExcludeBuffers)
              continue;
            let p = h.findChild(0, h.buffer.length, t, n - d, r);
            if (p > -1)
              return new ls(new K3(o, h, e, d), null, p);
          } else if (s & Jt.IncludeAnonymous || !h.type.isAnonymous || Jg(h)) {
            let p;
            if (!(s & Jt.IgnoreMounts) && (p = Xc.get(h)) && !p.overlay)
              return new rn(p.tree, d, e, o);
            let m = new rn(h, d, e, o);
            return s & Jt.IncludeAnonymous || !m.type.isAnonymous ? m : m.nextChild(t < 0 ? h.children.length - 1 : 0, t, n, r);
          }
        }
      }
      if (s & Jt.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? e = o.index + t : e = t < 0 ? -1 : o._parent._tree.children.length, o = o._parent, !o))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, n = 0) {
    let r;
    if (!(n & Jt.IgnoreOverlays) && (r = Xc.get(this._tree)) && r.overlay) {
      let s = e - this.from;
      for (let { from: o, to: a } of r.overlay)
        if ((t > 0 ? o <= s : o < s) && (t < 0 ? a >= s : a > s))
          return new rn(r.tree, r.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, t, n);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function H1(i, e, t, n) {
  let r = i.cursor(), s = [];
  if (!r.firstChild())
    return s;
  if (t != null) {
    for (let o = !1; !o; )
      if (o = r.type.is(t), !r.nextSibling())
        return s;
  }
  for (; ; ) {
    if (n != null && r.type.is(n))
      return s;
    if (r.type.is(e) && s.push(r.node), !r.nextSibling())
      return n == null ? s : [];
  }
}
function tg(i, e, t = e.length - 1) {
  for (let n = i; t >= 0; n = n.parent) {
    if (!n)
      return !1;
    if (!n.type.isAnonymous) {
      if (e[t] && e[t] != n.name)
        return !1;
      t--;
    }
  }
  return !0;
}
class K3 {
  constructor(e, t, n, r) {
    this.parent = e, this.buffer = t, this.index = n, this.start = r;
  }
}
class ls extends Yy {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, t, n) {
    super(), this.context = e, this._parent = t, this.index = n, this.type = e.buffer.set.types[e.buffer.buffer[n]];
  }
  child(e, t, n) {
    let { buffer: r } = this.context, s = r.findChild(this.index + 4, r.buffer[this.index + 3], e, t - this.context.start, n);
    return s < 0 ? null : new ls(this.context, this, s);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, n = 0) {
    if (n & Jt.ExcludeBuffers)
      return null;
    let { buffer: r } = this.context, s = r.findChild(this.index + 4, r.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
    return s < 0 ? null : new ls(this.context, this, s);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, t = e.buffer[this.index + 3];
    return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new ls(this.context, this._parent, t) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, t = this._parent ? this._parent.index + 4 : 0;
    return this.index == t ? this.externalSibling(-1) : new ls(this.context, this._parent, e.findChild(
      t,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], t = [], { buffer: n } = this.context, r = this.index + 4, s = n.buffer[this.index + 3];
    if (s > r) {
      let o = n.buffer[this.index + 1];
      e.push(n.slice(r, s, o)), t.push(0);
    }
    return new oi(this.type, e, t, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function zy(i) {
  if (!i.length)
    return null;
  let e = 0, t = i[0];
  for (let s = 1; s < i.length; s++) {
    let o = i[s];
    (o.from > t.from || o.to < t.to) && (t = o, e = s);
  }
  let n = t instanceof rn && t.index < 0 ? null : t.parent, r = i.slice();
  return n ? r[e] = n : r.splice(e, 1), new J3(r, t);
}
class J3 {
  constructor(e, t) {
    this.heads = e, this.node = t;
  }
  get next() {
    return zy(this.heads);
  }
}
function eA(i, e, t) {
  let n = i.resolveInner(e, t), r = null;
  for (let s = n instanceof rn ? n : n.context.parent; s; s = s.parent)
    if (s.index < 0) {
      let o = s.parent;
      (r || (r = [n])).push(o.resolve(e, t)), s = o;
    } else {
      let o = Xc.get(s.tree);
      if (o && o.overlay && o.overlay[0].from <= e && o.overlay[o.overlay.length - 1].to >= e) {
        let a = new rn(o.tree, o.overlay[0].from + s.from, -1, s);
        (r || (r = [n])).push(Mc(a, e, t, !1));
      }
    }
  return r ? zy(r) : n;
}
class vh {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, t = 0) {
    if (this.mode = t, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof rn)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let n = e._parent; n; n = n._parent)
        this.stack.unshift(n.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, t) {
    this.index = e;
    let { start: n, buffer: r } = this.buffer;
    return this.type = t || r.set.types[r.buffer[e]], this.from = n + r.buffer[e + 1], this.to = n + r.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof rn ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, t, n) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, n, this.mode));
    let { buffer: r } = this.buffer, s = r.findChild(this.index + 4, r.buffer[this.index + 3], e, t - this.buffer.start, n);
    return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, t, n = this.mode) {
    return this.buffer ? n & Jt.ExcludeBuffers ? !1 : this.enterChild(1, e, t) : this.yield(this._tree.enter(e, t, n));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & Jt.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & Jt.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: t } = this.buffer, n = this.stack.length - 1;
    if (e < 0) {
      let r = n < 0 ? 0 : this.stack[n] + 4;
      if (this.index != r)
        return this.yieldBuf(t.findChild(
          r,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let r = t.buffer[this.index + 3];
      if (r < (n < 0 ? t.buffer.length : t.buffer[this.stack[n] + 3]))
        return this.yieldBuf(r);
    }
    return n < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let t, n, { buffer: r } = this;
    if (r) {
      if (e > 0) {
        if (this.index < r.buffer.buffer.length)
          return !1;
      } else
        for (let s = 0; s < this.index; s++)
          if (r.buffer.buffer[s + 3] < this.index)
            return !1;
      ({ index: t, parent: n } = r);
    } else
      ({ index: t, _parent: n } = this._tree);
    for (; n; { index: t, _parent: n } = n)
      if (t > -1)
        for (let s = t + e, o = e < 0 ? -1 : n._tree.children.length; s != o; s += e) {
          let a = n._tree.children[s];
          if (this.mode & Jt.IncludeAnonymous || a instanceof Co || !a.type.isAnonymous || Jg(a))
            return !1;
        }
    return !0;
  }
  move(e, t) {
    if (t && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traversal. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, t = 0) {
    for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, t); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, t = null, n = 0;
    if (e && e.context == this.buffer)
      e: for (let r = this.index, s = this.stack.length; s >= 0; ) {
        for (let o = e; o; o = o._parent)
          if (o.index == r) {
            if (r == this.index)
              return o;
            t = o, n = s + 1;
            break e;
          }
        r = this.stack[--s];
      }
    for (let r = n; r < this.stack.length; r++)
      t = new ls(this.buffer, t, this.stack[r]);
    return this.bufferNode = new ls(this.buffer, t, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, t) {
    for (let n = 0; ; ) {
      let r = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          n++;
          continue;
        }
        this.type.isAnonymous || (r = !0);
      }
      for (; ; ) {
        if (r && t && t(this), r = this.type.isAnonymous, !n)
          return;
        if (this.nextSibling())
          break;
        this.parent(), n--, r = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return tg(this.node.parent, e);
    let { buffer: t } = this.buffer, { types: n } = t.set;
    for (let r = e.length - 1, s = this.stack.length - 1; r >= 0; s--) {
      if (s < 0)
        return tg(this._tree, e, r);
      let o = n[t.buffer[this.stack[s]]];
      if (!o.isAnonymous) {
        if (e[r] && e[r] != o.name)
          return !1;
        r--;
      }
    }
    return !0;
  }
}
function Jg(i) {
  return i.children.some((e) => e instanceof Co || !e.type.isAnonymous || Jg(e));
}
function tA(i) {
  var e;
  let { buffer: t, nodeSet: n, maxBufferLength: r = Vy, reused: s = [], minRepeatType: o = n.types.length } = i, a = Array.isArray(t) ? new Kg(t, t.length) : t, c = n.types, u = 0, h = 0;
  function d(W, D, q, V, U, N) {
    let { id: j, start: I, end: Y, size: se } = a, be = h, ze = u;
    for (; se < 0; )
      if (a.next(), se == -1) {
        let xe = s[j];
        q.push(xe), V.push(I - W);
        return;
      } else if (se == -3) {
        u = j;
        return;
      } else if (se == -4) {
        h = j;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${se}`);
    let Ve = c[j], Xe, Ee, We = I - W;
    if (Y - I <= r && (Ee = w(a.pos - D, U))) {
      let xe = new Uint16Array(Ee.size - Ee.skip), re = a.pos - Ee.size, Oe = xe.length;
      for (; a.pos > re; )
        Oe = k(Ee.start, xe, Oe);
      Xe = new Co(xe, Y - Ee.start, n), We = Ee.start - W;
    } else {
      let xe = a.pos - se;
      a.next();
      let re = [], Oe = [], Re = j >= o ? j : -1, Ye = 0, Ne = Y;
      for (; a.pos > xe; )
        Re >= 0 && a.id == Re && a.size >= 0 ? (a.end <= Ne - r && (b(re, Oe, I, Ye, a.end, Ne, Re, be, ze), Ye = re.length, Ne = a.end), a.next()) : N > 2500 ? p(I, xe, re, Oe) : d(I, xe, re, Oe, Re, N + 1);
      if (Re >= 0 && Ye > 0 && Ye < re.length && b(re, Oe, I, Ye, I, Ne, Re, be, ze), re.reverse(), Oe.reverse(), Re > -1 && Ye > 0) {
        let He = m(Ve, ze);
        Xe = em(Ve, re, Oe, 0, re.length, 0, Y - I, He, He);
      } else
        Xe = y(Ve, re, Oe, Y - I, be - Y, ze);
    }
    q.push(Xe), V.push(We);
  }
  function p(W, D, q, V) {
    let U = [], N = 0, j = -1;
    for (; a.pos > D; ) {
      let { id: I, start: Y, end: se, size: be } = a;
      if (be > 4)
        a.next();
      else {
        if (j > -1 && Y < j)
          break;
        j < 0 && (j = se - r), U.push(I, Y, se), N++, a.next();
      }
    }
    if (N) {
      let I = new Uint16Array(N * 4), Y = U[U.length - 2];
      for (let se = U.length - 3, be = 0; se >= 0; se -= 3)
        I[be++] = U[se], I[be++] = U[se + 1] - Y, I[be++] = U[se + 2] - Y, I[be++] = be;
      q.push(new Co(I, U[2] - Y, n)), V.push(Y - W);
    }
  }
  function m(W, D) {
    return (q, V, U) => {
      let N = 0, j = q.length - 1, I, Y;
      if (j >= 0 && (I = q[j]) instanceof oi) {
        if (!j && I.type == W && I.length == U)
          return I;
        (Y = I.prop(ft.lookAhead)) && (N = V[j] + I.length + Y);
      }
      return y(W, q, V, U, N, D);
    };
  }
  function b(W, D, q, V, U, N, j, I, Y) {
    let se = [], be = [];
    for (; W.length > V; )
      se.push(W.pop()), be.push(D.pop() + q - U);
    W.push(y(n.types[j], se, be, N - U, I - N, Y)), D.push(U - q);
  }
  function y(W, D, q, V, U, N, j) {
    if (N) {
      let I = [ft.contextHash, N];
      j = j ? [I].concat(j) : [I];
    }
    if (U > 25) {
      let I = [ft.lookAhead, U];
      j = j ? [I].concat(j) : [I];
    }
    return new oi(W, D, q, V, j);
  }
  function w(W, D) {
    let q = a.fork(), V = 0, U = 0, N = 0, j = q.end - r, I = { size: 0, start: 0, skip: 0 };
    e: for (let Y = q.pos - W; q.pos > Y; ) {
      let se = q.size;
      if (q.id == D && se >= 0) {
        I.size = V, I.start = U, I.skip = N, N += 4, V += 4, q.next();
        continue;
      }
      let be = q.pos - se;
      if (se < 0 || be < Y || q.start < j)
        break;
      let ze = q.id >= o ? 4 : 0, Ve = q.start;
      for (q.next(); q.pos > be; ) {
        if (q.size < 0)
          if (q.size == -3)
            ze += 4;
          else
            break e;
        else q.id >= o && (ze += 4);
        q.next();
      }
      U = Ve, V += se, N += ze;
    }
    return (D < 0 || V == W) && (I.size = V, I.start = U, I.skip = N), I.size > 4 ? I : void 0;
  }
  function k(W, D, q) {
    let { id: V, start: U, end: N, size: j } = a;
    if (a.next(), j >= 0 && V < o) {
      let I = q;
      if (j > 4) {
        let Y = a.pos - (j - 4);
        for (; a.pos > Y; )
          q = k(W, D, q);
      }
      D[--q] = I, D[--q] = N - W, D[--q] = U - W, D[--q] = V;
    } else j == -3 ? u = V : j == -4 && (h = V);
    return q;
  }
  let A = [], x = [];
  for (; a.pos > 0; )
    d(i.start || 0, i.bufferStart || 0, A, x, -1, 0);
  let _ = (e = i.length) !== null && e !== void 0 ? e : A.length ? x[0] + A[0].length : 0;
  return new oi(c[i.topID], A.reverse(), x.reverse(), _);
}
const K1 = /* @__PURE__ */ new WeakMap();
function Fu(i, e) {
  if (!i.isAnonymous || e instanceof Co || e.type != i)
    return 1;
  let t = K1.get(e);
  if (t == null) {
    t = 1;
    for (let n of e.children) {
      if (n.type != i || !(n instanceof oi)) {
        t = 1;
        break;
      }
      t += Fu(i, n);
    }
    K1.set(e, t);
  }
  return t;
}
function em(i, e, t, n, r, s, o, a, c) {
  let u = 0;
  for (let b = n; b < r; b++)
    u += Fu(i, e[b]);
  let h = Math.ceil(
    u * 1.5 / 8
    /* Balance.BranchFactor */
  ), d = [], p = [];
  function m(b, y, w, k, A) {
    for (let x = w; x < k; ) {
      let _ = x, W = y[x], D = Fu(i, b[x]);
      for (x++; x < k; x++) {
        let q = Fu(i, b[x]);
        if (D + q >= h)
          break;
        D += q;
      }
      if (x == _ + 1) {
        if (D > h) {
          let q = b[_];
          m(q.children, q.positions, 0, q.children.length, y[_] + A);
          continue;
        }
        d.push(b[_]);
      } else {
        let q = y[x - 1] + b[x - 1].length - W;
        d.push(em(i, b, y, _, x, W, q, null, c));
      }
      p.push(W + A - s);
    }
  }
  return m(e, t, n, r, 0), (a || c)(d, p, o);
}
class jy {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, t, n) {
    let r = this.map.get(e);
    r || this.map.set(e, r = /* @__PURE__ */ new Map()), r.set(t, n);
  }
  getBuffer(e, t) {
    let n = this.map.get(e);
    return n && n.get(t);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, t) {
    e instanceof ls ? this.setBuffer(e.context.buffer, e.index, t) : e instanceof rn && this.map.set(e.tree, t);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof ls ? this.getBuffer(e.context.buffer, e.index) : e instanceof rn ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, t) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, t) : this.map.set(e.tree, t);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class Bs {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, t, n, r, s = !1, o = !1) {
    this.from = e, this.to = t, this.tree = n, this.offset = r, this.open = (s ? 1 : 0) | (o ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, t = [], n = !1) {
    let r = [new Bs(0, e.length, e, 0, !1, n)];
    for (let s of t)
      s.to > e.length && r.push(s);
    return r;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, t, n = 128) {
    if (!t.length)
      return e;
    let r = [], s = 1, o = e.length ? e[0] : null;
    for (let a = 0, c = 0, u = 0; ; a++) {
      let h = a < t.length ? t[a] : null, d = h ? h.fromA : 1e9;
      if (d - c >= n)
        for (; o && o.from < d; ) {
          let p = o;
          if (c >= p.from || d <= p.to || u) {
            let m = Math.max(p.from, c) - u, b = Math.min(p.to, d) - u;
            p = m >= b ? null : new Bs(m, b, p.tree, p.offset + u, a > 0, !!h);
          }
          if (p && r.push(p), o.to > d)
            break;
          o = s < e.length ? e[s++] : null;
        }
      if (!h)
        break;
      c = h.toA, u = h.toA - h.toB;
    }
    return r;
  }
}
class By {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, t, n) {
    return typeof e == "string" && (e = new iA(e)), n = n ? n.length ? n.map((r) => new dr(r.from, r.to)) : [new dr(0, 0)] : [new dr(0, e.length)], this.createParse(e, t || [], n);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, t, n) {
    let r = this.startParse(e, t, n);
    for (; ; ) {
      let s = r.advance();
      if (s)
        return s;
    }
  }
}
class iA {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, t) {
    return this.string.slice(e, t);
  }
}
function nA(i) {
  return (e, t, n, r) => new sA(e, i, t, n, r);
}
class J1 {
  constructor(e, t, n, r, s) {
    this.parser = e, this.parse = t, this.overlay = n, this.target = r, this.from = s;
  }
}
function eS(i) {
  if (!i.length || i.some((e) => e.from >= e.to))
    throw new RangeError("Invalid inner parse ranges given: " + JSON.stringify(i));
}
class rA {
  constructor(e, t, n, r, s, o, a) {
    this.parser = e, this.predicate = t, this.mounts = n, this.index = r, this.start = s, this.target = o, this.prev = a, this.depth = 0, this.ranges = [];
  }
}
const ig = new ft({ perNode: !0 });
class sA {
  constructor(e, t, n, r, s) {
    this.nest = t, this.input = n, this.fragments = r, this.ranges = s, this.inner = [], this.innerDone = 0, this.baseTree = null, this.stoppedAt = null, this.baseParse = e;
  }
  advance() {
    if (this.baseParse) {
      let n = this.baseParse.advance();
      if (!n)
        return null;
      if (this.baseParse = null, this.baseTree = n, this.startInner(), this.stoppedAt != null)
        for (let r of this.inner)
          r.parse.stopAt(this.stoppedAt);
    }
    if (this.innerDone == this.inner.length) {
      let n = this.baseTree;
      return this.stoppedAt != null && (n = new oi(n.type, n.children, n.positions, n.length, n.propValues.concat([[ig, this.stoppedAt]]))), n;
    }
    let e = this.inner[this.innerDone], t = e.parse.advance();
    if (t) {
      this.innerDone++;
      let n = Object.assign(/* @__PURE__ */ Object.create(null), e.target.props);
      n[ft.mounted.id] = new Xc(t, e.overlay, e.parser), e.target.props = n;
    }
    return null;
  }
  get parsedPos() {
    if (this.baseParse)
      return 0;
    let e = this.input.length;
    for (let t = this.innerDone; t < this.inner.length; t++)
      this.inner[t].from < e && (e = Math.min(e, this.inner[t].parse.parsedPos));
    return e;
  }
  stopAt(e) {
    if (this.stoppedAt = e, this.baseParse)
      this.baseParse.stopAt(e);
    else
      for (let t = this.innerDone; t < this.inner.length; t++)
        this.inner[t].parse.stopAt(e);
  }
  startInner() {
    let e = new aA(this.fragments), t = null, n = null, r = new vh(new rn(this.baseTree, this.ranges[0].from, 0, null), Jt.IncludeAnonymous | Jt.IgnoreMounts);
    e: for (let s, o; ; ) {
      let a = !0, c;
      if (this.stoppedAt != null && r.from >= this.stoppedAt)
        a = !1;
      else if (e.hasNode(r)) {
        if (t) {
          let u = t.mounts.find((h) => h.frag.from <= r.from && h.frag.to >= r.to && h.mount.overlay);
          if (u)
            for (let h of u.mount.overlay) {
              let d = h.from + u.pos, p = h.to + u.pos;
              d >= r.from && p <= r.to && !t.ranges.some((m) => m.from < p && m.to > d) && t.ranges.push({ from: d, to: p });
            }
        }
        a = !1;
      } else if (n && (o = oA(n.ranges, r.from, r.to)))
        a = o != 2;
      else if (!r.type.isAnonymous && (s = this.nest(r, this.input)) && (r.from < r.to || !s.overlay)) {
        r.tree || lA(r);
        let u = e.findMounts(r.from, s.parser);
        if (typeof s.overlay == "function")
          t = new rA(s.parser, s.overlay, u, this.inner.length, r.from, r.tree, t);
        else {
          let h = nS(this.ranges, s.overlay || (r.from < r.to ? [new dr(r.from, r.to)] : []));
          h.length && eS(h), (h.length || !s.overlay) && this.inner.push(new J1(s.parser, h.length ? s.parser.startParse(this.input, rS(u, h), h) : s.parser.startParse(""), s.overlay ? s.overlay.map((d) => new dr(d.from - r.from, d.to - r.from)) : null, r.tree, h.length ? h[0].from : r.from)), s.overlay ? h.length && (n = { ranges: h, depth: 0, prev: n }) : a = !1;
        }
      } else if (t && (c = t.predicate(r)) && (c === !0 && (c = new dr(r.from, r.to)), c.from < c.to)) {
        let u = t.ranges.length - 1;
        u >= 0 && t.ranges[u].to == c.from ? t.ranges[u] = { from: t.ranges[u].from, to: c.to } : t.ranges.push(c);
      }
      if (a && r.firstChild())
        t && t.depth++, n && n.depth++;
      else
        for (; !r.nextSibling(); ) {
          if (!r.parent())
            break e;
          if (t && !--t.depth) {
            let u = nS(this.ranges, t.ranges);
            u.length && (eS(u), this.inner.splice(t.index, 0, new J1(t.parser, t.parser.startParse(this.input, rS(t.mounts, u), u), t.ranges.map((h) => new dr(h.from - t.start, h.to - t.start)), t.target, u[0].from))), t = t.prev;
          }
          n && !--n.depth && (n = n.prev);
        }
    }
  }
}
function oA(i, e, t) {
  for (let n of i) {
    if (n.from >= t)
      break;
    if (n.to > e)
      return n.from <= e && n.to >= t ? 2 : 1;
  }
  return 0;
}
function tS(i, e, t, n, r, s) {
  if (e < t) {
    let o = i.buffer[e + 1];
    n.push(i.slice(e, t, o)), r.push(o - s);
  }
}
function lA(i) {
  let { node: e } = i, t = [], n = e.context.buffer;
  do
    t.push(i.index), i.parent();
  while (!i.tree);
  let r = i.tree, s = r.children.indexOf(n), o = r.children[s], a = o.buffer, c = [s];
  function u(h, d, p, m, b, y) {
    let w = t[y], k = [], A = [];
    tS(o, h, w, k, A, m);
    let x = a[w + 1], _ = a[w + 2];
    c.push(k.length);
    let W = y ? u(w + 4, a[w + 3], o.set.types[a[w]], x, _ - x, y - 1) : e.toTree();
    return k.push(W), A.push(x - m), tS(o, a[w + 3], d, k, A, m), new oi(p, k, A, b);
  }
  r.children[s] = u(0, a.length, bn.none, 0, o.length, t.length - 1);
  for (let h of c) {
    let d = i.tree.children[h], p = i.tree.positions[h];
    i.yield(new rn(d, p + i.from, h, i._tree));
  }
}
class iS {
  constructor(e, t) {
    this.offset = t, this.done = !1, this.cursor = e.cursor(Jt.IncludeAnonymous | Jt.IgnoreMounts);
  }
  // Move to the first node (in pre-order) that starts at or after `pos`.
  moveTo(e) {
    let { cursor: t } = this, n = e - this.offset;
    for (; !this.done && t.from < n; )
      t.to >= e && t.enter(n, 1, Jt.IgnoreOverlays | Jt.ExcludeBuffers) || t.next(!1) || (this.done = !0);
  }
  hasNode(e) {
    if (this.moveTo(e.from), !this.done && this.cursor.from + this.offset == e.from && this.cursor.tree)
      for (let t = this.cursor.tree; ; ) {
        if (t == e.tree)
          return !0;
        if (t.children.length && t.positions[0] == 0 && t.children[0] instanceof oi)
          t = t.children[0];
        else
          break;
      }
    return !1;
  }
}
let aA = class {
  constructor(e) {
    var t;
    if (this.fragments = e, this.curTo = 0, this.fragI = 0, e.length) {
      let n = this.curFrag = e[0];
      this.curTo = (t = n.tree.prop(ig)) !== null && t !== void 0 ? t : n.to, this.inner = new iS(n.tree, -n.offset);
    } else
      this.curFrag = this.inner = null;
  }
  hasNode(e) {
    for (; this.curFrag && e.from >= this.curTo; )
      this.nextFrag();
    return this.curFrag && this.curFrag.from <= e.from && this.curTo >= e.to && this.inner.hasNode(e);
  }
  nextFrag() {
    var e;
    if (this.fragI++, this.fragI == this.fragments.length)
      this.curFrag = this.inner = null;
    else {
      let t = this.curFrag = this.fragments[this.fragI];
      this.curTo = (e = t.tree.prop(ig)) !== null && e !== void 0 ? e : t.to, this.inner = new iS(t.tree, -t.offset);
    }
  }
  findMounts(e, t) {
    var n;
    let r = [];
    if (this.inner) {
      this.inner.cursor.moveTo(e, 1);
      for (let s = this.inner.cursor.node; s; s = s.parent) {
        let o = (n = s.tree) === null || n === void 0 ? void 0 : n.prop(ft.mounted);
        if (o && o.parser == t)
          for (let a = this.fragI; a < this.fragments.length; a++) {
            let c = this.fragments[a];
            if (c.from >= s.to)
              break;
            c.tree == this.curFrag.tree && r.push({
              frag: c,
              pos: s.from - c.offset,
              mount: o
            });
          }
      }
    }
    return r;
  }
};
function nS(i, e) {
  let t = null, n = e;
  for (let r = 1, s = 0; r < i.length; r++) {
    let o = i[r - 1].to, a = i[r].from;
    for (; s < n.length; s++) {
      let c = n[s];
      if (c.from >= a)
        break;
      c.to <= o || (t || (n = t = e.slice()), c.from < o ? (t[s] = new dr(c.from, o), c.to > a && t.splice(s + 1, 0, new dr(a, c.to))) : c.to > a ? t[s--] = new dr(a, c.to) : t.splice(s--, 1));
    }
  }
  return n;
}
function cA(i, e, t, n) {
  let r = 0, s = 0, o = !1, a = !1, c = -1e9, u = [];
  for (; ; ) {
    let h = r == i.length ? 1e9 : o ? i[r].to : i[r].from, d = s == e.length ? 1e9 : a ? e[s].to : e[s].from;
    if (o != a) {
      let p = Math.max(c, t), m = Math.min(h, d, n);
      p < m && u.push(new dr(p, m));
    }
    if (c = Math.min(h, d), c == 1e9)
      break;
    h == c && (o ? (o = !1, r++) : o = !0), d == c && (a ? (a = !1, s++) : a = !0);
  }
  return u;
}
function rS(i, e) {
  let t = [];
  for (let { pos: n, mount: r, frag: s } of i) {
    let o = n + (r.overlay ? r.overlay[0].from : 0), a = o + r.tree.length, c = Math.max(s.from, o), u = Math.min(s.to, a);
    if (r.overlay) {
      let h = r.overlay.map((p) => new dr(p.from + n, p.to + n)), d = cA(e, h, c, u);
      for (let p = 0, m = c; ; p++) {
        let b = p == d.length, y = b ? u : d[p].from;
        if (y > m && t.push(new Bs(m, y, r.tree, -o, s.from >= m || s.openStart, s.to <= y || s.openEnd)), b)
          break;
        m = d[p].to;
      }
    } else
      t.push(new Bs(c, u, r.tree, -o, s.from >= o || s.openStart, s.to <= a || s.openEnd));
  }
  return t;
}
class Sh {
  /**
  @internal
  */
  constructor(e, t, n, r, s, o, a, c, u, h = 0, d) {
    this.p = e, this.stack = t, this.state = n, this.reducePos = r, this.pos = s, this.score = o, this.buffer = a, this.bufferBase = c, this.curContext = u, this.lookAhead = h, this.parent = d;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, t) => t % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, t, n = 0) {
    let r = e.parser.context;
    return new Sh(e, [], t, n, n, 0, [], 0, r ? new sS(r, r.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, t) {
    this.stack.push(this.state, t, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var t;
    let n = e >> 19, r = e & 65535, { parser: s } = this.p, o = this.reducePos < this.pos - 25;
    o && this.setLookAhead(this.pos);
    let a = s.dynamicPrecedence(r);
    if (a && (this.score += a), n == 0) {
      this.pushState(s.getGoto(this.state, r, !0), this.reducePos), r < s.minRepeatTerm && this.storeNode(r, this.reducePos, this.reducePos, o ? 8 : 4, !0), this.reduceContext(r, this.reducePos);
      return;
    }
    let c = this.stack.length - (n - 1) * 3 - (e & 262144 ? 6 : 0), u = c ? this.stack[c - 2] : this.p.ranges[0].from, h = this.reducePos - u;
    h >= 2e3 && !(!((t = this.p.parser.nodeSet.types[r]) === null || t === void 0) && t.isAnonymous) && (u == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = h) : this.p.lastBigReductionSize < h && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = u, this.p.lastBigReductionSize = h));
    let d = c ? this.stack[c - 1] : 0, p = this.bufferBase + this.buffer.length - d;
    if (r < s.minRepeatTerm || e & 131072) {
      let m = s.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(r, u, m, p + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[c];
    else {
      let m = this.stack[c - 3];
      this.state = s.getGoto(m, r, !0);
    }
    for (; this.stack.length > c; )
      this.stack.pop();
    this.reduceContext(r, u);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, t, n, r = 4, s = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let o = this, a = this.buffer.length;
      if (a == 0 && o.parent && (a = o.bufferBase - o.parent.bufferBase, o = o.parent), a > 0 && o.buffer[a - 4] == 0 && o.buffer[a - 1] > -1) {
        if (t == n)
          return;
        if (o.buffer[a - 2] >= t) {
          o.buffer[a - 2] = n;
          return;
        }
      }
    }
    if (!s || this.pos == n)
      this.buffer.push(e, t, n, r);
    else {
      let o = this.buffer.length;
      if (o > 0 && this.buffer[o - 4] != 0) {
        let a = !1;
        for (let c = o; c > 0 && this.buffer[c - 2] > n; c -= 4)
          if (this.buffer[c - 1] >= 0) {
            a = !0;
            break;
          }
        if (a)
          for (; o > 0 && this.buffer[o - 2] > n; )
            this.buffer[o] = this.buffer[o - 4], this.buffer[o + 1] = this.buffer[o - 3], this.buffer[o + 2] = this.buffer[o - 2], this.buffer[o + 3] = this.buffer[o - 1], o -= 4, r > 4 && (r -= 4);
      }
      this.buffer[o] = e, this.buffer[o + 1] = t, this.buffer[o + 2] = n, this.buffer[o + 3] = r;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, t, n, r) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = r, this.shiftContext(t, n), t <= this.p.parser.maxNode && this.buffer.push(t, n, r, 4);
    else {
      let s = e, { parser: o } = this.p;
      (r > this.pos || t <= o.maxNode) && (this.pos = r, o.stateFlag(
        s,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = r)), this.pushState(s, n), this.shiftContext(t, n), t <= o.maxNode && this.buffer.push(t, n, r, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, t, n, r) {
    e & 65536 ? this.reduce(e) : this.shift(e, t, n, r);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, t) {
    let n = this.p.reused.length - 1;
    (n < 0 || this.p.reused[n] != e) && (this.p.reused.push(e), n++);
    let r = this.pos;
    this.reducePos = this.pos = r + e.length, this.pushState(t, r), this.buffer.push(
      n,
      r,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, t = e.buffer.length;
    for (; t > 0 && e.buffer[t - 2] > e.reducePos; )
      t -= 4;
    let n = e.buffer.slice(t), r = e.bufferBase + t;
    for (; e && r == e.bufferBase; )
      e = e.parent;
    return new Sh(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, n, r, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, t) {
    let n = e <= this.p.parser.maxNode;
    n && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, n ? 8 : 4), this.pos = this.reducePos = t, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let t = new fA(this); ; ) {
      let n = this.p.parser.stateSlot(
        t.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(t.state, e);
      if (n == 0)
        return !1;
      if (!(n & 65536))
        return !0;
      t.reduce(n);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let t = this.p.parser.nextStates(this.state);
    if (t.length > 8 || this.stack.length >= 120) {
      let r = [];
      for (let s = 0, o; s < t.length; s += 2)
        (o = t[s + 1]) != this.state && this.p.parser.hasAction(o, e) && r.push(t[s], o);
      if (this.stack.length < 120)
        for (let s = 0; r.length < 8 && s < t.length; s += 2) {
          let o = t[s + 1];
          r.some((a, c) => c & 1 && a == o) || r.push(t[s], o);
        }
      t = r;
    }
    let n = [];
    for (let r = 0; r < t.length && n.length < 4; r += 2) {
      let s = t[r + 1];
      if (s == this.state)
        continue;
      let o = this.split();
      o.pushState(s, this.pos), o.storeNode(0, o.pos, o.pos, 4, !0), o.shiftContext(t[r], this.pos), o.reducePos = this.pos, o.score -= 200, n.push(o);
    }
    return n;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, t = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(t & 65536))
      return !1;
    if (!e.validAction(this.state, t)) {
      let n = t >> 19, r = t & 65535, s = this.stack.length - n * 3;
      if (s < 0 || e.getGoto(this.stack[s], r, !1) < 0) {
        let o = this.findForcedReduction();
        if (o == null)
          return !1;
        t = o;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(t), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, t = [], n = (r, s) => {
      if (!t.includes(r))
        return t.push(r), e.allActions(r, (o) => {
          if (!(o & 393216)) if (o & 65536) {
            let a = (o >> 19) - s;
            if (a > 1) {
              let c = o & 65535, u = this.stack.length - a * 3;
              if (u >= 0 && e.getGoto(this.stack[u], c, !1) >= 0)
                return a << 19 | 65536 | c;
            }
          } else {
            let a = n(o, s + 1);
            if (a != null)
              return a;
          }
        });
    };
    return n(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let t = 0; t < this.stack.length; t += 3)
      if (this.stack[t] != e.stack[t])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  reduceContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let t = new sS(this.curContext.tracker, e);
      t.hash != this.curContext.hash && this.emitContext(), this.curContext = t;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
}
class sS {
  constructor(e, t) {
    this.tracker = e, this.context = t, this.hash = e.strict ? e.hash(t) : 0;
  }
}
class fA {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let t = e & 65535, n = e >> 19;
    n == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (n - 1) * 3;
    let r = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
    this.state = r;
  }
}
class bh {
  constructor(e, t, n) {
    this.stack = e, this.pos = t, this.index = n, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, t = e.bufferBase + e.buffer.length) {
    return new bh(e, t, t - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new bh(this.stack, this.pos, this.index);
  }
}
function uc(i, e = Uint16Array) {
  if (typeof i != "string")
    return i;
  let t = null;
  for (let n = 0, r = 0; n < i.length; ) {
    let s = 0;
    for (; ; ) {
      let o = i.charCodeAt(n++), a = !1;
      if (o == 126) {
        s = 65535;
        break;
      }
      o >= 92 && o--, o >= 34 && o--;
      let c = o - 32;
      if (c >= 46 && (c -= 46, a = !0), s += c, a)
        break;
      s *= 46;
    }
    t ? t[r++] = s : t = new e(s);
  }
  return t;
}
class Gu {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const oS = new Gu();
class uA {
  /**
  @internal
  */
  constructor(e, t) {
    this.input = e, this.ranges = t, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = oS, this.rangeIndex = 0, this.pos = this.chunkPos = t[0].from, this.range = t[0], this.end = t[t.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, t) {
    let n = this.range, r = this.rangeIndex, s = this.pos + e;
    for (; s < n.from; ) {
      if (!r)
        return null;
      let o = this.ranges[--r];
      s -= n.from - o.to, n = o;
    }
    for (; t < 0 ? s > n.to : s >= n.to; ) {
      if (r == this.ranges.length - 1)
        return null;
      let o = this.ranges[++r];
      s += o.from - n.to, n = o;
    }
    return s;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let t of this.ranges)
      if (t.to > e)
        return Math.max(e, t.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let t = this.chunkOff + e, n, r;
    if (t >= 0 && t < this.chunk.length)
      n = this.pos + e, r = this.chunk.charCodeAt(t);
    else {
      let s = this.resolveOffset(e, 1);
      if (s == null)
        return -1;
      if (n = s, n >= this.chunk2Pos && n < this.chunk2Pos + this.chunk2.length)
        r = this.chunk2.charCodeAt(n - this.chunk2Pos);
      else {
        let o = this.rangeIndex, a = this.range;
        for (; a.to <= n; )
          a = this.ranges[++o];
        this.chunk2 = this.input.chunk(this.chunk2Pos = n), n + this.chunk2.length > a.to && (this.chunk2 = this.chunk2.slice(0, a.to - n)), r = this.chunk2.charCodeAt(0);
      }
    }
    return n >= this.token.lookAhead && (this.token.lookAhead = n + 1), r;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, t = 0) {
    let n = t ? this.resolveOffset(t, -1) : this.pos;
    if (n == null || n < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = n;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, t) {
    this.token.value = e, this.token.end = t;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: t } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = t, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), t = this.pos + e.length;
      this.chunk = t > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, t) {
    if (t ? (this.token = t, t.start = e, t.lookAhead = e + 1, t.value = t.extended = -1) : this.token = oS, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, t) {
    if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
    if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
    if (e >= this.range.from && t <= this.range.to)
      return this.input.read(e, t);
    let n = "";
    for (let r of this.ranges) {
      if (r.from >= t)
        break;
      r.to > e && (n += this.input.read(Math.max(r.from, e), Math.min(r.to, t)));
    }
    return n;
  }
}
class Jl {
  constructor(e, t) {
    this.data = e, this.id = t;
  }
  token(e, t) {
    let { parser: n } = t.p;
    Iy(this.data, e, t, this.id, n.data, n.tokenPrecTable);
  }
}
Jl.prototype.contextual = Jl.prototype.fallback = Jl.prototype.extend = !1;
class $h {
  constructor(e, t, n) {
    this.precTable = t, this.elseToken = n, this.data = typeof e == "string" ? uc(e) : e;
  }
  token(e, t) {
    let n = e.pos, r = 0;
    for (; ; ) {
      let s = e.next < 0, o = e.resolveOffset(1, 1);
      if (Iy(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (s || r++, o == null)
        break;
      e.reset(o, e.token);
    }
    r && (e.reset(n, e.token), e.acceptToken(this.elseToken, r));
  }
}
$h.prototype.contextual = Jl.prototype.fallback = Jl.prototype.extend = !1;
class yr {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, t = {}) {
    this.token = e, this.contextual = !!t.contextual, this.fallback = !!t.fallback, this.extend = !!t.extend;
  }
}
function Iy(i, e, t, n, r, s) {
  let o = 0, a = 1 << n, { dialect: c } = t.p.parser;
  e: for (; a & i[o]; ) {
    let u = i[o + 1];
    for (let m = o + 3; m < u; m += 2)
      if ((i[m + 1] & a) > 0) {
        let b = i[m];
        if (c.allows(b) && (e.token.value == -1 || e.token.value == b || hA(b, e.token.value, r, s))) {
          e.acceptToken(b);
          break;
        }
      }
    let h = e.next, d = 0, p = i[o + 2];
    if (e.next < 0 && p > d && i[u + p * 3 - 3] == 65535) {
      o = i[u + p * 3 - 1];
      continue e;
    }
    for (; d < p; ) {
      let m = d + p >> 1, b = u + m + (m << 1), y = i[b], w = i[b + 1] || 65536;
      if (h < y)
        p = m;
      else if (h >= w)
        d = m + 1;
      else {
        o = i[b + 2], e.advance();
        continue e;
      }
    }
    break;
  }
}
function lS(i, e, t) {
  for (let n = e, r; (r = i[n]) != 65535; n++)
    if (r == t)
      return n - e;
  return -1;
}
function hA(i, e, t, n) {
  let r = lS(t, n, e);
  return r < 0 || lS(t, n, i) < r;
}
const Bn = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let Ld = null;
function aS(i, e, t) {
  let n = i.cursor(Jt.IncludeAnonymous);
  for (n.moveTo(e); ; )
    if (!(t < 0 ? n.childBefore(e) : n.childAfter(e)))
      for (; ; ) {
        if ((t < 0 ? n.to < e : n.from > e) && !n.type.isError)
          return t < 0 ? Math.max(0, Math.min(
            n.to - 1,
            e - 25
            /* Lookahead.Margin */
          )) : Math.min(i.length, Math.max(
            n.from + 1,
            e + 25
            /* Lookahead.Margin */
          ));
        if (t < 0 ? n.prevSibling() : n.nextSibling())
          break;
        if (!n.parent())
          return t < 0 ? 0 : i.length;
      }
}
class OA {
  constructor(e, t) {
    this.fragments = e, this.nodeSet = t, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? aS(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? aS(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let t = this.trees.length - 1;
      if (t < 0)
        return this.nextFragment(), null;
      let n = this.trees[t], r = this.index[t];
      if (r == n.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let s = n.children[r], o = this.start[t] + n.positions[r];
      if (o > e)
        return this.nextStart = o, null;
      if (s instanceof oi) {
        if (o == e) {
          if (o < this.safeFrom)
            return null;
          let a = o + s.length;
          if (a <= this.safeTo) {
            let c = s.prop(ft.lookAhead);
            if (!c || a + c < this.fragment.to)
              return s;
          }
        }
        this.index[t]++, o + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(o), this.index.push(0));
      } else
        this.index[t]++, this.nextStart = o + s.length;
    }
  }
}
class dA {
  constructor(e, t) {
    this.stream = t, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((n) => new Gu());
  }
  getActions(e) {
    let t = 0, n = null, { parser: r } = e.p, { tokenizers: s } = r, o = r.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), a = e.curContext ? e.curContext.hash : 0, c = 0;
    for (let u = 0; u < s.length; u++) {
      if (!(1 << u & o))
        continue;
      let h = s[u], d = this.tokens[u];
      if (!(n && !h.fallback) && ((h.contextual || d.start != e.pos || d.mask != o || d.context != a) && (this.updateCachedToken(d, h, e), d.mask = o, d.context = a), d.lookAhead > d.end + 25 && (c = Math.max(d.lookAhead, c)), d.value != 0)) {
        let p = t;
        if (d.extended > -1 && (t = this.addActions(e, d.extended, d.end, t)), t = this.addActions(e, d.value, d.end, t), !h.extend && (n = d, t > p))
          break;
      }
    }
    for (; this.actions.length > t; )
      this.actions.pop();
    return c && e.setLookAhead(c), !n && e.pos == this.stream.end && (n = new Gu(), n.value = e.p.parser.eofTerm, n.start = n.end = e.pos, t = this.addActions(e, n.value, n.end, t)), this.mainToken = n, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let t = new Gu(), { pos: n, p: r } = e;
    return t.start = n, t.end = Math.min(n + 1, r.stream.end), t.value = n == r.stream.end ? r.parser.eofTerm : 0, t;
  }
  updateCachedToken(e, t, n) {
    let r = this.stream.clipPos(n.pos);
    if (t.token(this.stream.reset(r, e), n), e.value > -1) {
      let { parser: s } = n.p;
      for (let o = 0; o < s.specialized.length; o++)
        if (s.specialized[o] == e.value) {
          let a = s.specializers[o](this.stream.read(e.start, e.end), n);
          if (a >= 0 && n.p.parser.dialect.allows(a >> 1)) {
            a & 1 ? e.extended = a >> 1 : e.value = a >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(r + 1);
  }
  putAction(e, t, n, r) {
    for (let s = 0; s < r; s += 3)
      if (this.actions[s] == e)
        return r;
    return this.actions[r++] = e, this.actions[r++] = t, this.actions[r++] = n, r;
  }
  addActions(e, t, n, r) {
    let { state: s } = e, { parser: o } = e.p, { data: a } = o;
    for (let c = 0; c < 2; c++)
      for (let u = o.stateSlot(
        s,
        c ? 2 : 1
        /* ParseState.Actions */
      ); ; u += 3) {
        if (a[u] == 65535)
          if (a[u + 1] == 1)
            u = qs(a, u + 2);
          else {
            r == 0 && a[u + 1] == 2 && (r = this.putAction(qs(a, u + 2), t, n, r));
            break;
          }
        a[u] == t && (r = this.putAction(qs(a, u + 1), t, n, r));
      }
    return r;
  }
}
class pA {
  constructor(e, t, n, r) {
    this.parser = e, this.input = t, this.ranges = r, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new uA(t, r), this.tokens = new dA(e, this.stream), this.topTerm = e.top[1];
    let { from: s } = r[0];
    this.stacks = [Sh.start(this, e.top[0], s)], this.fragments = n.length && this.stream.end - s > e.bufferLength * 4 ? new OA(n, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, t = this.minStackPos, n = this.stacks = [], r, s;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [o] = e;
      for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let o = 0; o < e.length; o++) {
      let a = e[o];
      for (; ; ) {
        if (this.tokens.mainToken = null, a.pos > t)
          n.push(a);
        else {
          if (this.advanceStack(a, n, e))
            continue;
          {
            r || (r = [], s = []), r.push(a);
            let c = this.tokens.getMainToken(a);
            s.push(c.value, c.end);
          }
        }
        break;
      }
    }
    if (!n.length) {
      let o = r && mA(r);
      if (o)
        return Bn && console.log("Finish with " + this.stackID(o)), this.stackToTree(o);
      if (this.parser.strict)
        throw Bn && r && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && r) {
      let o = this.stoppedAt != null && r[0].pos > this.stoppedAt ? r[0] : this.runRecovery(r, s, n);
      if (o)
        return Bn && console.log("Force-finish " + this.stackID(o)), this.stackToTree(o.forceAll());
    }
    if (this.recovering) {
      let o = this.recovering == 1 ? 1 : this.recovering * 3;
      if (n.length > o)
        for (n.sort((a, c) => c.score - a.score); n.length > o; )
          n.pop();
      n.some((a) => a.reducePos > t) && this.recovering--;
    } else if (n.length > 1) {
      e: for (let o = 0; o < n.length - 1; o++) {
        let a = n[o];
        for (let c = o + 1; c < n.length; c++) {
          let u = n[c];
          if (a.sameState(u) || a.buffer.length > 500 && u.buffer.length > 500)
            if ((a.score - u.score || a.buffer.length - u.buffer.length) > 0)
              n.splice(c--, 1);
            else {
              n.splice(o--, 1);
              continue e;
            }
        }
      }
      n.length > 12 && n.splice(
        12,
        n.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = n[0].pos;
    for (let o = 1; o < n.length; o++)
      n[o].pos < this.minStackPos && (this.minStackPos = n[o].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, t, n) {
    let r = e.pos, { parser: s } = this, o = Bn ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && r > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let u = e.curContext && e.curContext.tracker.strict, h = u ? e.curContext.hash : 0;
      for (let d = this.fragments.nodeAt(r); d; ) {
        let p = this.parser.nodeSet.types[d.type.id] == d.type ? s.getGoto(e.state, d.type.id) : -1;
        if (p > -1 && d.length && (!u || (d.prop(ft.contextHash) || 0) == h))
          return e.useNode(d, p), Bn && console.log(o + this.stackID(e) + ` (via reuse of ${s.getName(d.type.id)})`), !0;
        if (!(d instanceof oi) || d.children.length == 0 || d.positions[0] > 0)
          break;
        let m = d.children[0];
        if (m instanceof oi && d.positions[0] == 0)
          d = m;
        else
          break;
      }
    }
    let a = s.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (a > 0)
      return e.reduce(a), Bn && console.log(o + this.stackID(e) + ` (via always-reduce ${s.getName(
        a & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let c = this.tokens.getActions(e);
    for (let u = 0; u < c.length; ) {
      let h = c[u++], d = c[u++], p = c[u++], m = u == c.length || !n, b = m ? e : e.split(), y = this.tokens.mainToken;
      if (b.apply(h, d, y ? y.start : b.pos, p), Bn && console.log(o + this.stackID(b) + ` (via ${h & 65536 ? `reduce of ${s.getName(
        h & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${s.getName(d)} @ ${r}${b == e ? "" : ", split"})`), m)
        return !0;
      b.pos > r ? t.push(b) : n.push(b);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, t) {
    let n = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > n)
        return cS(e, t), !0;
    }
  }
  runRecovery(e, t, n) {
    let r = null, s = !1;
    for (let o = 0; o < e.length; o++) {
      let a = e[o], c = t[o << 1], u = t[(o << 1) + 1], h = Bn ? this.stackID(a) + " -> " : "";
      if (a.deadEnd && (s || (s = !0, a.restart(), Bn && console.log(h + this.stackID(a) + " (restarted)"), this.advanceFully(a, n))))
        continue;
      let d = a.split(), p = h;
      for (let m = 0; d.forceReduce() && m < 10 && (Bn && console.log(p + this.stackID(d) + " (via force-reduce)"), !this.advanceFully(d, n)); m++)
        Bn && (p = this.stackID(d) + " -> ");
      for (let m of a.recoverByInsert(c))
        Bn && console.log(h + this.stackID(m) + " (via recover-insert)"), this.advanceFully(m, n);
      this.stream.end > a.pos ? (u == a.pos && (u++, c = 0), a.recoverByDelete(c, u), Bn && console.log(h + this.stackID(a) + ` (via recover-delete ${this.parser.getName(c)})`), cS(a, n)) : (!r || r.score < a.score) && (r = a);
    }
    return r;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), oi.build({
      buffer: bh.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let t = (Ld || (Ld = /* @__PURE__ */ new WeakMap())).get(e);
    return t || Ld.set(e, t = String.fromCodePoint(this.nextStackID++)), t + e;
  }
}
function cS(i, e) {
  for (let t = 0; t < e.length; t++) {
    let n = e[t];
    if (n.pos == i.pos && n.sameState(i)) {
      e[t].score < i.score && (e[t] = i);
      return;
    }
  }
  e.push(i);
}
class gA {
  constructor(e, t, n) {
    this.source = e, this.flags = t, this.disabled = n;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const Dd = (i) => i;
class Ny {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || Dd, this.reduce = e.reduce || Dd, this.reuse = e.reuse || Dd, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class Ro extends By {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let t = e.nodeNames.split(" ");
    this.minRepeatTerm = t.length;
    for (let a = 0; a < e.repeatNodeCount; a++)
      t.push("");
    let n = Object.keys(e.topRules).map((a) => e.topRules[a][1]), r = [];
    for (let a = 0; a < t.length; a++)
      r.push([]);
    function s(a, c, u) {
      r[a].push([c, c.deserialize(String(u))]);
    }
    if (e.nodeProps)
      for (let a of e.nodeProps) {
        let c = a[0];
        typeof c == "string" && (c = ft[c]);
        for (let u = 1; u < a.length; ) {
          let h = a[u++];
          if (h >= 0)
            s(h, c, a[u++]);
          else {
            let d = a[u + -h];
            for (let p = -h; p > 0; p--)
              s(a[u++], c, d);
            u++;
          }
        }
      }
    this.nodeSet = new Hg(t.map((a, c) => bn.define({
      name: c >= this.minRepeatTerm ? void 0 : a,
      id: c,
      props: r[c],
      top: n.indexOf(c) > -1,
      error: c == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(c) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = Vy;
    let o = uc(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let a = 0; a < this.specializerSpecs.length; a++)
      this.specialized[a] = this.specializerSpecs[a].term;
    this.specializers = this.specializerSpecs.map(fS), this.states = uc(e.states, Uint32Array), this.data = uc(e.stateData), this.goto = uc(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((a) => typeof a == "number" ? new Jl(o, a) : a), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, t, n) {
    let r = new pA(this, e, t, n);
    for (let s of this.wrappers)
      r = s(r, e, t, n);
    return r;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, t, n = !1) {
    let r = this.goto;
    if (t >= r[0])
      return -1;
    for (let s = r[t + 1]; ; ) {
      let o = r[s++], a = o & 1, c = r[s++];
      if (a && n)
        return c;
      for (let u = s + (o >> 1); s < u; s++)
        if (r[s] == e)
          return c;
      if (a)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, t) {
    let n = this.data;
    for (let r = 0; r < 2; r++)
      for (let s = this.stateSlot(
        e,
        r ? 2 : 1
        /* ParseState.Actions */
      ), o; ; s += 3) {
        if ((o = n[s]) == 65535)
          if (n[s + 1] == 1)
            o = n[s = qs(n, s + 2)];
          else {
            if (n[s + 1] == 2)
              return qs(n, s + 2);
            break;
          }
        if (o == t || o == 0)
          return qs(n, s + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, t) {
    return this.states[e * 6 + t];
  }
  /**
  @internal
  */
  stateFlag(e, t) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & t) > 0;
  }
  /**
  @internal
  */
  validAction(e, t) {
    return !!this.allActions(e, (n) => n == t ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, t) {
    let n = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), r = n ? t(n) : void 0;
    for (let s = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); r == null; s += 3) {
      if (this.data[s] == 65535)
        if (this.data[s + 1] == 1)
          s = qs(this.data, s + 2);
        else
          break;
      r = t(qs(this.data, s + 1));
    }
    return r;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let t = [];
    for (let n = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; n += 3) {
      if (this.data[n] == 65535)
        if (this.data[n + 1] == 1)
          n = qs(this.data, n + 2);
        else
          break;
      if (!(this.data[n + 2] & 1)) {
        let r = this.data[n + 1];
        t.some((s, o) => o & 1 && s == r) || t.push(this.data[n], r);
      }
    }
    return t;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let t = Object.assign(Object.create(Ro.prototype), this);
    if (e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let n = this.topRules[e.top];
      if (!n)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      t.top = n;
    }
    return e.tokenizers && (t.tokenizers = this.tokenizers.map((n) => {
      let r = e.tokenizers.find((s) => s.from == n);
      return r ? r.to : n;
    })), e.specializers && (t.specializers = this.specializers.slice(), t.specializerSpecs = this.specializerSpecs.map((n, r) => {
      let s = e.specializers.find((a) => a.from == n.external);
      if (!s)
        return n;
      let o = Object.assign(Object.assign({}, n), { external: s.to });
      return t.specializers[r] = fS(o), o;
    })), e.contextTracker && (t.context = e.contextTracker), e.dialect && (t.dialect = this.parseDialect(e.dialect)), e.strict != null && (t.strict = e.strict), e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)), e.bufferLength != null && (t.bufferLength = e.bufferLength), t;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let t = this.dynamicPrecedences;
    return t == null ? 0 : t[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let t = Object.keys(this.dialects), n = t.map(() => !1);
    if (e)
      for (let s of e.split(" ")) {
        let o = t.indexOf(s);
        o >= 0 && (n[o] = !0);
      }
    let r = null;
    for (let s = 0; s < t.length; s++)
      if (!n[s])
        for (let o = this.dialects[t[s]], a; (a = this.data[o++]) != 65535; )
          (r || (r = new Uint8Array(this.maxTerm + 1)))[a] = 1;
    return new gA(e, n, r);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new Ro(e);
  }
}
function qs(i, e) {
  return i[e] | i[e + 1] << 16;
}
function mA(i) {
  let e = null;
  for (let t of i) {
    let n = t.p.stoppedAt;
    (t.pos == t.p.stream.end || n != null && t.pos > n) && t.p.parser.stateFlag(
      t.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < t.score) && (e = t);
  }
  return e;
}
function fS(i) {
  if (i.external) {
    let e = i.extend ? 1 : 0;
    return (t, n) => i.external(t, n) << 1 | e;
  }
  return i.get;
}
const vA = { __proto__: null, annotation: 12, array: 20, var: 24, par: 26, opt: 28, ann: 32, bool: 34, float: 36, int: 38, string: 40, _: 50, true: 62, false: 64, infinity: 68, "∅": 74, in: 92, where: 94, if: 98, then: 100, elseif: 102, else: 104, endif: 106, xor: 110, subset: 112, superset: 114, union: 116, diff: 118, symdiff: 120, intersect: 122, div: 124, mod: 126, default: 128, let: 132, constraint: 140, not: 144, "¬": 146, any: 170, of: 172, set: 176, tuple: 180, record: 184, op: 190, enum: 198, function: 202, solve: 206, satisfy: 208, maximize: 210, minimize: 212, include: 216, output: 220, predicate: 224, test: 226, type: 230 }, SA = Ro.deserialize({
  version: 14,
  states: "!0jQ]QPOOOOQO'#F]'#F]O&XQPO'#CvO&`QPO'#CxOOQO'#C}'#C}O&gQPO'#DSO&nOQO'#DTO$kQPO'#DWOOQO'#Fc'#FcO*}QPO'#CgO+eQPO'#DrO$kQPO'#DuO$kQPO'#DuO/qQPO'#FbOOQO'#Fb'#FbOOQO'#Cg'#CgOOQO'#F`'#F`OOQO'#F['#F[Q/xQPO'#EtQ]QPOOOOQO'#Ck'#CkOOQO'#Ct'#CtOOQO'#Cz'#CzOOQO'#DQ'#DQO$kQPO'#D^O/}QPO'#DsO0UQPO'#DoO0ZQPO'#CgO0wQPO'#CgO1hQPO'#E`O1|QPO'#CeO2RQPO'#EVO2WQPO'#EXO2]QPO'#EZO2bQPO'#E^O2gQPO'#C`O2gQPO'#EbO2oQPO'#EdO3uQPO'#EfO4TQPO'#EkO4YQPO'#EmO2gQPO'#EoO2gQPO'#ErO4aQPO'#CwO4qQPO,59bOOQO,59b,59bO4{QPO,59bO5TQPO'#FbO7`QPO,59tO7pQPO,59dO7xQPO,59dOOQO,59d,59dO8PQPO,59nO8^QPO,59nOOQO,59n,59nO$kQPO'#DUOOOO'#E{'#E{O8eOQO,59oOOQO,59o,59oO8sQPO,5:jO=UQPO'#FbO=`QPO,59rO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OOArQPO,5:dO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OOCzQPO,5:kOEhQSO,5:lO$kQPO,5:OO$kQPO,5:OO2gQPO,5:^OIzQPO,5:aOJ}QPO,5:aOLQQPO'#D{OOQO,5:f,5:fOLXQPO,5:hO$kQPO,5:{OOQO,5;`,5;`OOQO-E8r-E8rOL^QPO,59xOLeQPO,5:_OLuQPO,5:_ONcQPO'#DqO! oQPO,5:ZO! tQPO,59ROOQO,59R,59RO!![QPO,5:qO!!aQPO,59RO!!}QPO,59PO2oQPO,5:qO2oQPO,5:sO2oQPO,5:uO2oQPO,5:xO!#tQPO,58zO!$SQPO,5:|O!$bQPO,5;OOOQO,5;Q,5;QO$kQPO,5;QO$kQPO,5;QOOQO,5;V,5;VO!$gQPO,5;XO4TQPO,5;XO!$qQPO,5;ZO!$vQPO,5;^O!${QPO,5;bO!&[QPO,59cO!&fQPO,59cO!&qQPO'#EvOOQO-E8t-E8tO!&xQPO1G.|O!'PQPO1G.|OOQO1G.|1G.|O$kQPO1G/`O2gQPO1G/`OOQO,5;e,5;eOOQO1G/O1G/OO!'XQPO'#CyO!'fQPO1G/OOOQO-E8w-E8wOOQO,5;f,5;fOOQO1G/Y1G/YO2gQPO1G0PO!'nQPO1G/YOOQO-E8x-E8xO!'xQPO,59pOOOO-E8y-E8yOOQO1G/Z1G/ZO$kQPO1G/]OOQO1G0U1G0UO$kQPO,59sO!(PQPO1G/^O!([QPO1G/^OOQO1G/^1G/^O!-WQPO1G/jO!-nQPO1G/jO!3UQPO1G/jO!3`QPO1G/jO!7hQPO1G/jO!8tQPO1G/jO!?QQPO1G/jO!?[QPO1G/jO!D]QPO1G/jO!ITQPO1G/jO!IzQPO1G/jO# bQPO1G/jO# iQPO1G/jO#&sQPO1G/jO#&zQPO1G0VO#'UQPO1G0VOOQO'#ER'#EROOQO1G0W1G0WOOQO1G0Y1G0YO#'`QPO1G/jO#(oQPO1G/xO#)TQPO,5:gO#)_QPO,5:gOOQO,5:g,5:gO#)fQPO'#FbO#)pQPO,5:iO$kQPO'#EOOOQO1G0S1G0SO#)xQPO1G0gO$kQPO1G/dO#-qQPO1G/yO#/aQPO,5:]O#/lQPO,5:]OOQO,5:],5:]O$kQPO1G/uO2oQPO1G0]O#0xQPO1G.mOOQO1G.m1G.mO#1`QPO1G0]O#1eQPO'#CgO#2OQPO'#CgO#2lQPO'#CgO#2qQPO1G.kOOQO1G0]1G0]O#2yQPO1G0_O#3OQPO'#E]O#3TQPO1G0aO#3]QPO1G0dO#3bQPO'#F^O$kQPO1G.fO#4kQPO1G.fO$kQPO1G0hO$kQPO1G0hO2gQPO1G0jO#4vQPO1G0lO#5QQPO1G0lO$kQPO1G0sO#5_QPO1G0uO2oQPO1G0xO#5mQPO1G.}O#5zQPO,5;cO#6[QPO1G.}OOQO-E8u-E8uOOQO,5;b,5;bO#6fQPO'#CwOOQO,5;d,5;dOOQO7+$h7+$hO#6vQPO7+$hOOQO-E8v-E8vO#6}QPO7+$zO#7[QPO7+$zO#7dQPO'#DZO$kQPO,59eOOQO7+$j7+$jP#7lQPO'#EyO#7qQPO7+%kOOQO7+$t7+$tP#7yQPO'#EzOOOO1G/[1G/[O#8QQPO7+$wO#8[QPO1G/_O#8fQPO'#DXOOQO,5;h,5;hOOQO7+$x7+$xO#8kQPO7+$xOOQO-E8z-E8zO#:dQPO7+%qO#:kQPO7+%qOOQO7+%q7+%qO$kQPO7+%dO$kQPO7+%dOOQO,5;m,5;mOOQO1G0R1G0RO#:sQPO1G0ROOQO-E9P-E9PO#:}QPO,59uO#;YQPO,59uO$kQPO,59uO#;bQPO1G0TO#;mQPO1G0TOOQO1G0T1G0TO8vQPO,5:jO#;uQPO7+%OO#<SQPO,5:kO#<ZQPO7+%eO#<kQPO,5:dOLuQPO,5:OOOQO,5;l,5;lOOQO1G/w1G/wO#AtQPO1G/wOOQO-E9O-E9OO#BPQPO7+%aOOQO7+%w7+%wO2oQPO7+%wO#CYQPO,59RO#CsQPO7+$VO#DmQPO7+$VO#DuQPO7+$VO2oQPO7+%yO2gQPO,5:wO#DzQPO7+%{O#FTQPO7+%{OOQO7+%{7+%{O#F]QPO7+&OO#FbQPO'#CdO#FmQPO,5;xO#FuQPO,5;xOOQO,5;x,5;xO#HOQPO7+$QO$kQPO7+$QO#HYQPO7+&SO#LeQPO7+&SO!$qQPO7+&UOOQO7+&W7+&WO$kQPO7+&WO#LoQPO7+&_O$kQPO7+&aO$kQPO7+&aOOQO7+&d7+&dO#LyQPO7+$iO#MTQPO7+$iP$kQPO'#EwO$kQPO,59cOOQO<<HS<<HSP$kQPO'#ExO2gQPO<<HfO#M`QPO<<HfO#MkQPO<<HfOOQO<<Hf<<HfO#7QQPO1G/PO#MsQPO<<IVO#NOQPO<<IVOOQO<<IV<<IVO#NWQPO<<HcO#N_QPO<<HcOOQO<<Hc<<HcOOQO<<Hd<<HdP2gQPO'#E|O#NgQPO,5;nO#NqQPO,5;nOOQO<<I]<<I]O#N{QPO<<I]OOQO-E9Q-E9QO$ SQPO<<IOO$%bQPO<<IOOOQO7+%m7+%mP$%uQPO'#DxOOQO,5;i,5;iO$kQPO1G/aO$%|QPO1G/aOOQO-E8{-E8{O$&XQPO1G/aOOQO,5;j,5;jOOQO7+%o7+%oO$&lQPO7+%oOOQO-E8|-E8|O$&wQPO<<HjO$kQPO'#FPOOQO<<Hj<<HjO$kQPO<<HjO$'SQPO1G0VO$,QQPO1G/jO$-TQPO1G/jOOQO7+%c7+%cP$.WQPO'#FQOOQO<<Ic<<IcOOQO,5;o,5;oO$.`QPO<<GqO$.eQPO<<GqOOQO-E9R-E9RO2oQPO<<GqO$/_QPO<<IeOOQO1G0c1G0cOOQO,5;q,5;qOOQO<<Ig<<IgO$/gQPO<<IgOOQO-E9T-E9TO$0pQPO<<IjO2gQPO,59OOOQO,5;a,5;aOOQO1G1d1G1dO$1yQPO1G1dOOQO-E8s-E8sO$2RQPO<<GlO$kQPOLD*bO$2]QPO<<IpO$2kQPO<<IrO$2uQPO<<I{O$3PQPO<<I{O$3ZQPO<<HTO$3eQPOAN>QOOQOAN>QAN>QO$3mQPOAN>QOOQOAN>qAN>qO$3xQPOAN>qOOQOAN=}AN=}O$4TQPOAN=}OOQOAN>wAN>wP#8vQPO'#FSO$kQPOAN>jO$4[QPO7+${O$kQPO7+${P2gQPO'#E}O$kQPO7+${OOQO<<IZ<<IZP2gQPO'#FOOOQO-E8}-E8}OOQOAN>UAN>UO$kQPOAN>UO$4oQPO,5;kO$4vQPOAN>UO2oQPOAN=]O$4}QPOAN=]P!!}QPO'#FTOOQOAN=]AN=]O$5SQPOAN?PO$6]QPOAN?POOQOAN?PAN?POOQOAN?RAN?RP2oQPO'#FVO$6eQPOAN?UO$6mQPOAN?UO$7vQPOAN?UO$7{QPO1G.jOOQO7+'O7+'OP$8WQPO'#EuO$8]QPO!$'M|O$kQPOAN?[O$kQPOAN?[O$<dQPOG23lO$<oQPOG23lOOQOG23lG23lOOQOG24]G24]OOQOG23iG23iO$<wQPOG24UO$kQPO<<HgO$=RQPO<<HgO$=UQPO<<HgO$=fQPOG23pO$kQPO1G1VOOQOG23pG23pOOQOG22wG22wO2oQPOG22wOOQO,5;p,5;pOOQOG24kG24kO$=mQPOG24kOOQO-E9S-E9SOOQO,5;r,5;rO$>vQPOG24pO$>{QPOG24pOOQO-E9U-E9UOOQOG24pG24pO$kQPO7+$UO$?TQPOG24vO$?_QPOG24vOOQOLD)WLD)WO$?iQPOLD)WO$?tQPOAN>RO$kQPOAN>ROOQOLD)[LD)[O$@UQPO7+&qOOQOLD(cLD(cOOQOLD*VLD*VP2oQPO'#FUOOQOLD*[LD*[O$@cQPOLD*[P$@hQPO'#FWO$@mQPO<<GpOOQO!$'Lr!$'LrO$@wQPOG23mOOQO!$'Mv!$'MvO$AXQPO,5:dO$FlQPO1G/jO$GSQPO1G/jO$LyQPO1G/jO$MTQPO1G/jO%#lQPO1G/jO%$xQPO1G/jO%+eQPO1G/jO%+oQPO1G/jO%0|QPO1G/jO%1dQPO7+%aOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO1G/uO%3`QPO,5:ZO0UQPO'#DoOLuQPO'#DuOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OO%7{QPO,5:aO%9OQPO,5:aO%:RQPO1G/jO%?iQPO1G/jO%@SQPO1G/jO%FPQPO1G/jO%FWQPO1G/jOLuQPO'#Du",
  stateData: "%F_~O#}OSPOSQOS~OTPOUsOVPOYnO[lO]lO^kO`dOadObdOcdOddOe_Of_OgWOieOofOpfOrSOsWOugO!RhO!djO!hiO!jZO!kZO!wmO!zoO!|pO#OqO#RrO#VtO#XuO#ZvO#`wO#bxO#dyO#eyO#gzO$RVO$TRO$WQO$^SO$_TO$aUO%W[O%X[O%Y[O%Z[O%]ZO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W[O%X[O%Y[O%Z[O%]ZO~O$[}O~P$kO$]!TO~P$kO$`!WO~P$kO$a![O$b!YO$c!YO$d!XO~O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O$XZX$YZX$]ZX$eZX#{ZX%hZX~P&|O$X!rO~O$R!uO!O$UX!X$UX!Y$UX!Z$UX![$UX!]$UX!^$UX!_$UX!`$UX!a$UX!b$UX$T$UX$X$UX$f$UX$g$UX$h$UX$i$UX$j$UX$k$UX$l$UX$m$UX$n$UX$o$UX$p$UX$q$UX$r$UX$s$UX$t$UX$u$UX$v$UX$w$UX$x$UX$y$UX$z$UX${$UX$|$UX$}$UX%O$UX%P$UX%Q$UX%R$UX%S$UX%T$UX%U$UX%V$UX%W$UX%X$UX%Y$UX%Z$UX%[$UX%]$UX%^$UX%_$UX%`$UX%a$UX%b$UX%c$UX%d$UX%e$UX%f$UX%g$UX%i$UX~O$t!xO~P+jO%h!yO~O%g!}O~P$kO$_#OO~O`dOadObdOcdOddOe#ROf#RO!z#SO~P$kO^#TO`dOadObdOcdOddOe#ROf#RO!z#SO~P$kOe#RO$X#SX$Y#SX$e#SX#{#SX%h#SX~O$T#UO~O!x#VO~O$R#WO~O$R#XO~O$R#YO~OTPOVPO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO~P$kO#[#^O#]#_O#^#_O%g#`O~O$aUO~O%g#cO~P$kO$X#fO$Y#gO$ZkX$[kX~P&|O$Z#kO$[#mO~P$kO$Z#kO$[#mO~O$Y$UX$Z$UX$[$UX$]$UX$`$UX!S$UX#{$UX%h$UX$e$UXT$UXV$UXg$UXi$UXo$UXp$UXr$UXs$UXu$UX!R$UX!d$UX!j$UX!k$UX$W$UX$^$UX$_$UX$a$UX#[$UX#]$UX#^$UX!T$UX!U$UX!V$UX!P$UX~P+jO$X#nO$Z#oO$YmX$]mX~P&|O$Y#pO$]#qO~O$]#qO~P$kO$Y#uO$Z#wO$`#vO~P&|O$`#vO~P$kO$a#|O$b!YO$c!YO$d!XO~O$Y#}O$e$OO~P&|O$R!uO!X$UX!Y$UX!Z$UX![$UX!]$UX!^$UX!_$UX!`$UX!a$UX!b$UX$T$UX$Y$UX$e$UX$f$UX$g$UX$h$UX$i$UX$j$UX$k$UX$l$UX$m$UX$n$UX$o$UX$p$UX$q$UX$r$UX$s$UX$t$UX$u$UX$v$UX$w$UX$x$UX$y$UX$z$UX${$UX$|$UX$}$UX%O$UX%P$UX%Q$UX%R$UX%S$UX%T$UX%U$UX%V$UX%W$UX%X$UX%Y$UX%Z$UX%[$UX%]$UX%^$UX%_$UX%`$UX%a$UX%b$UX%c$UX%d$UX%e$UX%f$UX%g$UX%i$UX~O$X$PO!O$UX~P8}O$Y$QO$e$SO~O!O!la!X!la!Y!la!Z!la![!la!]!la!^!la!_!la!`!la!a!la!b!la$T!la$f!la$g!la$h!la$i!la$j!la$k!la$l!la$m!la$n!la$o!la$p!la$q!la$r!la$s!la$t!la$u!la$v!la$w!la$x!la$y!la$z!la${!la$|!la$}!la%O!la%P!la%Q!la%R!la%S!la%T!la%U!la%V!la%W!la%X!la%Y!la%Z!la%[!la%^!la%_!la%`!la%a!la%b!la%c!la%d!la%e!la%f!la%g!la%i!la$Y!la$`!la#{!la%h!la~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$WQO$^SO$_TO$aUO%]ZO$X!la$Z!la$[!la$]!la$e!la!S!la#[!la#]!la#^!la!T!la!U!la!V!la!P!la~P=hOTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W$dO%X$dO%Y$dO%Z$dO%]ZO~OTPOVPO%j$eO~O!b!qO$T!nO%g!mO%i!oO!O!ia!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia$X!ia$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia$Y!ia$Z!ia$[!ia$]!ia$`!ia$e!ia!S!ia#{!ia%h!ia#[!ia#]!ia#^!ia!T!ia!U!ia!V!ia!P!ia~O!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~PEsO!_!hO!`!kO!a!kO%V!hO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO~PEsO$e$lO~P$kO$R$oO~O!S$rO~P&|O#{!ga%h!ga$Y!ga$`!ga~P&|OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!d*zO!j*{O!k*{O$RVO$TRO$WQO$^SO$_TO$aUO%W+ZO%X+ZO%Y+ZO%Z+ZO%]*{O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!hiO!wmO!zoO!|pO#OqO#RrO$`$vO~P$kO!O$wO~O$XZa$YZa$]Za$eZa#{Za%hZa~P&|O!x$xO~O`dOadObdOcdOddOe$zOf$zO!z${O~P$kO[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO~P$kO$R%VO$t%WO#{Sa%hSa~O$t%YO%g%ZO#{#Ua%h#Ua~O$X%[O~O#{#aa%h#aa~P&|O$R%VO~O$t%aO~OT#jaV#jag#jai#jao#jap#jar#jas#jau#ja!R#ja!d#ja$R#ja$T#ja$W#ja$Z#ja$[#ja$^#ja$_#ja$a#ja~P$kO$Zka$[ka~P$kO$Y%dO$Zka$[ka~O$X%fO~P&|O$[%iO~P$kO$Z%jO$[%iO~O$X%oO$YmX$]mX~P&|O$Y#pO$]%pO~O$Y#uO$`%sO~P&|O$e%uO~P&|OTPOVPO$e%zO~O$Y%{O$e%zO~O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$o!bO$p!bO$q!cO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO$X!Wi$f!Wi$g!Wi$h!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO~P!(dO$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi~P!(dO!O!eO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!X!cO$q!cO~P!.UO!X!Wi$q!Wi~P!.UO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!X!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!O!eO!Y!eO!Z!eO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO~P!3jO!O!Wi!Y!Wi!Z!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi~P!3jO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!]!gO%U!gO~P!:QO!]!Wi%U!Wi~P!:QO!`!kO!a!kO!b!qO$T!nO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O%[!jO%]!jO%^!jO%_!jO%`!jO~P!?fO!`!kO!a!kO!b!qO$T!nO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!_!hO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO~P!DpO%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi~P!?fO!b!qO$T!nO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O%f!lO~P!J_O%f!Wi~P!J_O$T!nO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi%f!Wi%g!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!b!qO~P# pO$Y%}O$]&PO~P&|O$Y%}O$]&PO~P$kO!b!WiT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi~P# pO$t&QO%g&RO#{!fi%h!fi$Y!fi$`!fi~O$Y&SO$e&TO~P&|O$e&TO~P$kO!O&YO$Y&WO~P8}O$Y&ZO$e&]O~O#{#Ti%h#Ti~P&|O!O*tO!X*rO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$f*oO$g*oO$h*oO$i*pO$j*pO$k*pO$l*pO$m*pO$n*pO$o*qO$p*qO$q*rO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%[*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$T&`O$WQO$^SO$_TO$aUO%W&bO%X&bO%Y&bO%Z&bO%]&cO~P#*SO$Y&dO$`&eO%h&dO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!hiO!wmO!zoO!|pO#OqO#RrO$`&eO~P$kO$XZi$YZi$]Zi$eZi#{Zi%hZi~P&|O!x&jO~O`dOadObdOcdOddOe#ROf#RO~P$kO^&kO`dOadObdOcdOddOe#ROf#RO~P$kOe#RO~O$Y&lO$]&nO~O$Y&oO~O$X&pO~O$Y&qO$e&sO~O$X&tO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e&xO~P$kO$t&zO#{Si%hSi~O#{#Yi%h#Yi~P&|O#['OO#]'PO#^'PO~P&|O$t'RO%g'SO#{#ci%h#ci~O$Y'UO$Zki$[ki~P&|O$Y#ka$Z#ka$[#ka$e#ka~P&|O$Zki$[ki~P$kO$X'XO$Y#gO$ZkX$[kX~P&|O$['YO~P$kO$Z'[O$Ymi$]mi~P&|O$Y']O$]'_O~O!O&YO$Y&WO~O$Y#pO~O$Y'aO$`'cO~O$Y#uO~P&|O$Y'dO$e'fO~P&|O$Y{i$e{i~P&|O$X$PO~OTPOVPO$e'gO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W'jO%X'jO%Y'jO%Z'jO%]ZO~O$]'kO~P#8vO$Y'lO$]'kO~O$Y&SO$e'pO~P&|OTPOVPO!O'sO~O!O'sO$Y'tO~OTPOVPO$e'xO~O$Y'yO$e'xO~O!T'|O!U(OO!V'}O~P&|O$]!TO~PCzO#{!gq%h!gq$Y!gq$`!gq~P&|O!j*{O!k*{O%]*{OT!laV!lag!lai!lao!lap!lar!las!lau!la!O!la!R!la!X!la!Y!la!Z!la![!la!]!la!^!la!_!la!`!la!a!la!b!la!d!la$R!la$T!la$W!la$^!la$_!la$a!la$f!la$g!la$h!la$i!la$j!la$k!la$l!la$m!la$n!la$o!la$p!la$q!la$r!la$s!la$t!la$u!la$v!la$w!la$x!la$y!la$z!la${!la$|!la$}!la%O!la%P!la%Q!la%R!la%S!la%T!la%U!la%V!la%W!la%X!la%Y!la%Z!la%[!la%^!la%_!la%`!la%a!la%b!la%c!la%d!la%e!la%f!la%g!la%i!la~O$Y&dO$`(SO%h&dO~O$X!cq$Y!cq$Z!cq$[!cq$]!cq$`!cq$e!cq!S!cq#{!cq%h!cq#[!cq#]!cq#^!cq!T!cq!U!cq!V!cq!P!cq~P&|O`dOadObdOcdOddOe$zOf$zO~P$kO[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO$](WO~P$kO$Y(XO$](WO~O!x(ZO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e(_O~P$kO$Y(`O$e(_O~O$R(bO~O$X(cO$YWX$eWX~O$Y(dO$e(eO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e(eO~P$kO#{Sq%hSq~P&|O#{#Uq%h#Uq~P&|O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$t(iO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O#{#Uq%h#Uq~P#HdO#{#aq%h#aq~P&|O$Zkq$[kq~P$kO$Y(nO$Zkq$[kq~OTPOVPO$](pO~O$Y(qO$](pO~OTPOVPO$`(rO~O$Y(sO$`(rO~O$e(tO~P$kO$Y(uO$e(tO~O$Y#va$]#va~P&|O$Y#va$]#va~P$kO$](vO~P#8vO#{!fy%h!fy$Y!fy$`!fy~P&|O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O$t(xO#{!fy%h!fy$Y!fy$`!fy~P$ dO$Y&SO~P&|OTPOVPO!O(zO~O!P(|O$Y}i$e}i$]}i$`}i~P&|OTPOVPO$e(}O~O!T'|O!U)RO!V)QO~O$X#nO$Y%}O$Z#oO$]&PO$YmX$]mX~P&|O!b+RO$T!nO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!ia!R!Wi!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia!d!Wi!j!Wi!k!Wi#{!ia$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia%h!ia$Y!ia$`!ia~O!_*|O!`+OO!a+OO%V*|O%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO~P$'jO!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~P$'jO$Y&dO%h&dO~O!x)UO~O[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO$])VO~P$kO$Y)YO$e)[O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)]O~P$kOYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)aO~P$kO$Y(dO$e)cO~O#{Sy%hSy~P&|O$t)fO%g)gO#{#Wy%h#Wy~O#{#Yy%h#Yy~P&|O#{#cy%h#cy~P&|O#{#cy%h#cy~P#HdO$Zky$[ky~P$kO$Y)hO$])jO~OTPOVPO$])jO~OTPOVPO$`)kO~O$e)lO~P$kO!P)nO$Y}q$e}q$]}q$`}q~P&|O!S)rO~P&|O!V)sO~P&|O!x)uO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)wO~P$kO$Y)xO$e)wO~O$Y)zO$e){O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e){O~P$kO$e*OO~O%g*PO$YWi$eWi~O$Y(dO~O![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi#{!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%h!Wi~OTPOVPO$]*SO~O$Y*TO$]*SO~O$Y!Wi$`!Wi~P$8]O!P*VO$Y}y$e}y$]}y$`}y~P&|O!V*WO~P&|OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e*ZO~P$kO$e*]O~O$Y)zO$e*^O~O#{#W!Z%h#W!Z~P&|O#{#W!Z%h#W!Z~P#HdOTPOVPO$]*aO~O$Y}!R$e}!R$]}!R$`}!R~P&|O!T#sq!U#sq!V#sq~P&|O$e*cO~O$Y)zO~O$YWy$eWy~P&|O$Y}!Z$e}!Z$]}!Z$`}!Z~P&|O#{!la%h!la$Y!la$`!la~P#<kO!O*tO!X*rO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO$o*qO$p*qO$q*rO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O$i*pO$j*pO$k*pO$l*pO$m*pO$n*pO~P$AiO$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi~P$AiO!O*tO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!X*rO$q*rO~P$GjO!X!Wi$q!Wi~P$GjO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!X!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!O*tO!Y*tO!Z*tO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO~P$M_O!O!Wi!Y!Wi!Z!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi~P$M_O!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!]*vO%U*vO~P%&UO!]!Wi%U!Wi~P%&UO!`+OO!a+OO!b+RO$T!nO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!_*|O%V*|O%W*dO%X*dO%Y*dO%Z*dO~P%+yO$T!nO%W*dO%X*dO%Y*dO%Z*dO%]*}OT!cqV!cqg!cqi!cqo!cqp!cqr!cqs!cqu!cq!R!cq!d!cq!j!cq!k!cq$R!cq$W!cq$^!cq$_!cq$a!cq#{!cq%h!cq$Y!cq$`!cq~P#*SO!O*xO~O!b+RO$T!nO%g+QO%i!oOT!iaV!iag!iai!iao!iap!iar!ias!iau!ia!O!ia!R!ia!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia!d!ia!j!ia!k!ia$R!ia$W!ia$^!ia$_!ia$a!ia$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia#{!ia%h!ia$Y!ia$`!ia~O!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~P%3eO!_*|O!`+OO!a+OO%V*|O%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO~P%3eO!_!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi~P%+yO!b+RO$T!nO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!`+OO!a+OO%a+OO%b+OO%c+OO%d+OO%e+OO~P%:iO!`!Wi!a!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi~P%:iO!b+RO$T!nO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi%f!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O%g+QO~P%@mO%g!Wi~P%@mO",
  goto: "! P$WPPPP$XPPP$]$cP%PPPP%uPPPPPPPP&qP&q)w*P-U&qPP&qPP&qP&q-]0i&q&q0m0u3zPP4cPPPPP7iPPPPPPPPPP4cP:q:w:wP7iPP7i4c4c;R4c;X;_7i7i>h7iPP$cP$cP$cP>k$cP$c$X$XP$XP$XPPPP$XP$XP$XPP$XP>s>y?P?V?f?m?t?z@Q@W@_@q@w@}ATA]AcAiAoPPPAuAyF[PFePGs4cTaOcQ&v%VR(f&w!V`Ocu#O#V#W#X#Y$u$x%V%a&j&o&q&w(Z(`(b)U)Y)^)`)u)x*[!U`Ocu#O#V#W#X#Y$u$x%V%a&j&o&q&w(Z(`(b)U)Y)^)`)u)x*[Q%P#UV(V&l(X)W!^_Ocu#O#U#V#W#X#Y$u$x%V%a&j&l&o&q&w(X(Z(`(b)U)W)Y)^)`)u)x*[W#Rkl$|$}T$z#T&k'XWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ!OQV%h#k%j'Z'VWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZS!RR&`R#s!S'WWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ#awR%_#cT!YU!ZQ!_VV%y$Q%{'h'V^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ$n!uQ%m#oQ%r#wb'w&Z']'a'y(q(s)O)h*TR(o'['X^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+Z']^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&b&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*d*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ#PjR*y*zSaOcQ$t#OR&f$uX!v]!P!^$mX!w]!P!^$m'W^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZR$p!wR$f!oQ%T#XV(^&q(`)^QcOR!zcQ&w%VR(g&wQ|QR#j|S#h{%gU%e#h'V'eQ'V%bR'e%vS#l|!OR%k#lS!SR&`R#t!SQ!VTR#y!VQ!ZUR#{!ZQ$R!_R%|$RS&X$m%nR'u&XQ&[$nQ'^%mQ'b%rW'z&['^'b)iR)i(oQ'{&_R)P'{Q$u#OR&g$uQ$k!uR&V$kU&O$c$d(PR'm&OQ&m%PR(Y&mQ)Z([R)y)ZQ&r%TR(a&rQ)`(bR)})`TbOcS]Oc'O!PQRTZ[hiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ!^VQ#ZsQ#[tQ#dyQ#ezQ$g!oQ$i!rQ$m!uh%n#o#w&Z'[']'a'y(q(s)O)h*TU%x$Q%{'hQ&}%[U'r&W't({Q(]&pR)b(cQ%X#ZQ%`#dR(j&}WYOc#O$uQ#]uQ%Q#VQ%R#WW%S#X&q(`)^Q%U#YQ&i$xS&u%V&wQ'T%aQ(U&jQ([&oQ)X(ZQ)_(bQ)t)UU)v)Y)x*[Q)|)`R*Y)u!^XOcu#O#U#V#W#X#Y$u$x%V%a&j&l&o&q&w(X(Z(`(b)U)W)Y)^)`)u)x*[Q{QQ!QRQ!UTQ!]VQ!sZU!t[$d'jQ!{hQ!|iW#Qkl$|$}Q#bxQ#i|Q#r!SQ#x!VQ#z!XQ$T!`Q$U!aQ$V!bQ$W!cQ$X!dQ$Y!eQ$Z!fQ$[!gQ$]!hS$^!i!pQ$_!jQ$`!kQ$a!lQ$b!mQ$c!nS$h!q+RQ$j!uQ$q!xQ$s!}S$y#T&kQ%]#_Q%^#`S%b#f'X^%c#g%d'U'W'd(n(uU%g#k%j'ZQ%l#nQ%v#}Q%w$PQ&U$kQ&^$oQ&_$rQ&a$sQ&h$wQ&y%WQ&{%YQ&|%ZQ'Q%_Q'`%oU'i%}'l(wQ'n&QQ'o&RQ'v&YQ(P&`Q(Q&bQ(R&cQ(h&zQ(k'PQ(l'RQ(m'SQ(y'sQ)S'|Q)T(OQ)e(iQ)m(xQ)o(zQ)p(|Q)q)RQ*Q)fQ*R)gQ*U)nQ*X)rQ*`*PQ*b*VQ*e*oQ*f*pQ*g*qQ*h*rQ*i*sQ*j*tQ*k*uQ*l*vS*m*d*wQ*n*xQ+S*{Q+T+ZQ+U*|Q+V*}Q+W+OQ+X+PR+Y+Q",
  nodeNames: "⚠ LineComment BlockComment SourceFile Annotation Identifier Keyword QuotedIdentifier Parameter ArrayType Keyword TypeBase Keyword Keyword Keyword PrimitiveType Keyword Keyword Keyword Keyword Keyword TypeInstId TypeInstEnumId Absent Anonymous Keyword ArrayLiteral2d ArrayLiteral2dRow ArrayLiteral ArrayLiteralMember BooleanLiteral Keyword Keyword Infinity Keyword Number EmptySet Keyword SetLiteral StringLiteral Interpolation TupleLiteral RecordLiteral RecordMember ArrayComprehension Generator Keyword Keyword IfThenElse Keyword Keyword Keyword Keyword Keyword InfixOperator Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword LetExpression Keyword LetItems Declaration Constraint Keyword PrefixOperator Keyword Keyword PostfixOperator SetComprehension Call Application GeneratorCall GeneratorCallGenerators ParenthesisedExpression IndexedAccess TupleAccess Number RecordAccess Keyword Keyword SetType Keyword TupleType Keyword RecordType Keyword RecordTypeField OperationType Keyword AnyType Assignment Enumeration Keyword FunctionItem Keyword Goal Keyword Keyword Keyword Keyword Include Keyword Output Keyword Predicate Keyword Keyword TypeAlias Keyword",
  maxTerm: 210,
  skippedNodes: [0, 1, 2],
  repeatNodeCount: 19,
  tokenData: "!8_~R!oOX&SXY&qYZ'nZ]&S]^&q^p&Spq&qqr(Prs)Xsu&Suv)^vw&Swx*lxy,ryz-]z{-v{|.a|}/k}!O0U!O!P1`!P!Q3Z!Q!R9g!R![@|![!]Bz!]!^DU!^!_Do!_!`Is!`!aJ}!a!c&S!c!}LX!}#OM[#O#PNf#P#Q!#p#Q#R!$Z#R#SLX#S#T&S#T#oLX#o#p!$t#p#q!%_#q#r!&f#r#s!'P#s%#t&S%#t%#u!.O%#u%#v&S%#v%#w!.i%#w%%W&S%%W%%X!/S%%X%%Y&S%%Y%%Z!/m%%Z%%[&S%%[%%]!0W%%]%&b&S%&b%&c!0q%&c%&p&S%&p%&q!1[%&q%&x&S%&x%&y!1u%&y%'R&S%'R%'S!2`%'S%'T!2y%'T%'U!3d%'U%'V!3}%'V%(^&S%(^%(_!4h%(_%(b&S%(b%(c!5R%(c%(d!5l%(d%)U&S%)U%)V!6V%)V%)W!6p%)W%*]&S%*]%*^!7Z%*^%Gc&S%Gc%Gd!7t%Gd;'S&S;'S;=`&k<%lO&SQ&XU$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SQ&nP;=`<%l&SV&x[$bQ#}TOX&SXY&qYZ'nZ]&S]^&q^p&Spq&qqr&Ss#O&S#P;'S&S;'S;=`&k<%lO&ST'sS#}TXY'nYZ'n]^'npq'nR(UW$bQOY&SZr&Ss!_&S!_!`(n!`#O&S#P;'S&S;'S;=`&k<%lO&SR(uU$vP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S~)^O$a~V)eWPT$bQOY)^Zr)^rs)}s#O)^#O#P)}#P;'S)^;'S;=`*f<%lO)^T*SSPTOY)}Z;'S)};'S;=`*`<%lO)}T*cP;=`<%l)}V*iP;=`<%l)^V*qZ$bQOY*lYZ+dZr*lrs+dsw*lwx,Rx#O*l#O#P+d#P;'S*l;'S;=`,l<%lO*lT+gTOw+dwx+vx;'S+d;'S;=`+{<%lO+dT+{OVTT,OP;=`<%l+dV,YUVT$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV,oP;=`<%l*lR,yU$RP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR-dU$eP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR-}U%aP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR.hW%[P$bQOY&SZr&Ss{&S{|/Q|#O&S#P;'S&S;'S;=`&k<%lO&SR/XU%^P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR/rU$YP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR0]W%]P$bQOY&SZr&Ss!`&S!`!a0u!a#O&S#P;'S&S;'S;=`&k<%lO&SR0|U$iP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR1gW%iP$bQOY&SZr&Ss!O&S!O!P2P!P#O&S#P;'S&S;'S;=`&k<%lO&SR2WW%WP$bQOY&SZr&Ss!^&S!^!_2p!_#O&S#P;'S&S;'S;=`&k<%lO&SR2wU%YP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV3bX%bP$bQOY&SZr&Ssz&Sz{3}{#O&S#O#P9b#P;'S&S;'S;=`&k<%lO&SV4SZ$bQOY3}YZ4uZr3}rs4usz3}z{8S{#O3}#O#P5j#P;'S3};'S;=`9[<%lO3}T4xVOz4uz{5_{#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT5bP!P!Q5eT5jOQTT5mXOz4uz{6Y{#O4u#O#P5j#P#b4u#b#c4u#c;'S4u;'S;=`7|<%lO4uT6]VOz4uz{6r{!P4u!P!Q5e!Q;'S4u;'S;=`7|<%lO4uT6uXOz4uz{5_{!P4u!P!Q7b!Q#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT7gVQTOz4uz{5_{#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT8PP;=`<%l4uV8XW$bQOY&SZr&Ss!P&S!P!Q8q!Q#O&S#P;'S&S;'S;=`&k<%lO&SV8xUQT$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV9_P;=`<%l3}P9gO$rPR9n`sP$bQOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![<O![#O&S#P#U&S#U#V?h#V#c&S#c#d?h#d#l&S#l#m?h#m;'S&S;'S;=`&k<%lO&SR:uW$bQOY&SZr&Ss!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR;fWsP$bQOY&SZr&Ss!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR<V^sP$bQOY&SZr&Ss!O&S!O!P=R!P!Q&S!Q![<O![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SR=WW$bQOY&SZr&Ss!Q&S!Q![=p![#O&S#P;'S&S;'S;=`&k<%lO&SR=w[sP$bQOY&SZr&Ss!Q&S!Q![=p![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SR>r[$bQOY&SZr&Ss{&S{|:p|}&S}!O:p!O!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR?mW$bQOY&SZr&Ss!Q&S!Q![@V![#O&S#P;'S&S;'S;=`&k<%lO&SR@^YsP$bQOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![<O![#O&S#P;'S&S;'S;=`&k<%lO&SVAVYsP$bQ%jSOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![Au![#O&S#P;'S&S;'S;=`&k<%lO&SVBO^sP$bQ%jSOY&SZr&Ss!O&S!O!P=R!P!Q&S!Q![Au![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SRCRW$XP$bQOY&SZr&Ss![&S![!]Ck!]#O&S#P;'S&S;'S;=`&k<%lO&SRCrU%gP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRD]U%hP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRDv[$xP$bQOY&SZr&Ss}&S}!OEl!O!PFv!P!_&S!_!`Ho!`!aIY!a#O&S#P;'S&S;'S;=`&k<%lO&SREsW$lP$bQOY&SZr&Ss!`&S!`!aF]!a#O&S#P;'S&S;'S;=`&k<%lO&SRFdU$fP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRF{W$bQOY&SZr&Ss!O&S!O!PGe!P#O&S#P;'S&S;'S;=`&k<%lO&SRGlW%XP$bQOY&SZr&Ss!^&S!^!_HU!_#O&S#P;'S&S;'S;=`&k<%lO&SRH]U%ZP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRHvU$yP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRIaUgP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRIzW$tP$bQOY&SZr&Ss!_&S!_!`Jd!`#O&S#P;'S&S;'S;=`&k<%lO&SRJkU$uP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRKUW${P$bQOY&SZr&Ss!_&S!_!`Kn!`#O&S#P;'S&S;'S;=`&k<%lO&SRKuU$|P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SVL`^TT$bQOY&SZr&Ss!Q&S!Q![LX![!c&S!c!}LX!}#O&S#P#R&S#R#SLX#S#T&S#T#oLX#o;'S&S;'S;=`&k<%lO&SRMcW$TP$bQOY&SZr&Ss#O&S#P#p&S#p#qM{#q;'S&S;'S;=`&k<%lO&SRNSU$WP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S~NiXrs! Utu! Zxy!!j!P!Q!!o!Q!Y!!t#O#P! U#b#c! U#h#i! U#l#m!#U~! ZO$c~~! ^R!c!}! g#O#P! x#T#o! g~! lSe~!Q![! g!c!}! g#R#S! g#T#o! g~! {Ptu!!O~!!RQ!c!}!!X#T#o!!X~!!^Sf~!Q![!!X!c!}!!X#R#S!!X#T#o!!X~!!oO$d~~!!tO$o~~!!yP$c~!Q!Y!!|~!#RP$c~!Q!Y! U~!#XR!Q![!#b!c!i!#b#T#Z!#b~!#gR$c~!Q![! U!c!i! U#T#Z! UR!#wU$]P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!$bU%fP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!${U$_P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!%fV$ZP$bQOY&SZr&Ss#O&S#P#Q!%{#Q;'S&S;'S;=`&k<%lO&SR!&SU$[P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!&mU$`P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!'Ub$bQOY&SZq&Sqr!(^sz&Sz{!)f{|!*P|}&S}!O!*j!O!P&S!P!Q!+T!Q!_&S!_!`!+n!`#O&S#P#W&S#W#X!,X#X;'S&S;'S;=`&k<%lO&SR!(cW$bQOY&SZr&Ss!_&S!_!`!({!`#O&S#P;'S&S;'S;=`&k<%lO&SR!)SU%SP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!)mU%cP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!*WU%_P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!*qU%`P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!+[U%eP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!+uU%RP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!,^W$bQOY&SZr&Ss#O&S#P#]&S#]#^!,v#^;'S&S;'S;=`&k<%lO&SR!,{W$bQOY&SZr&Ss#O&S#P#j&S#j#k!-e#k;'S&S;'S;=`&k<%lO&SR!-lU%dP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!.VU$mP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!.pU$jP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!/ZU$nP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!/tU$kP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!0_U$hP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!0xU%OP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!1cU%UP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!1|U$^P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!2gU$sP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!3QU$pP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!3kU%VP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!4UU%TP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!4oU$wP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!5YU$zP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!5sU$}P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!6^U%PP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!6wU%QP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!7bU$qP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!7{U$gP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S",
  tokenizers: [0, 1, 2],
  topRules: { SourceFile: [0, 3] },
  specialized: [{ term: 5, get: (i) => vA[i] || -1 }],
  tokenPrec: 0
});
let bA = 0;
class hr {
  /**
  @internal
  */
  constructor(e, t, n, r) {
    this.name = e, this.set = t, this.base = n, this.modified = r, this.id = bA++;
  }
  toString() {
    let { name: e } = this;
    for (let t of this.modified)
      t.name && (e = `${t.name}(${e})`);
    return e;
  }
  static define(e, t) {
    let n = typeof e == "string" ? e : "?";
    if (e instanceof hr && (t = e), t != null && t.base)
      throw new Error("Can not derive from a modified tag");
    let r = new hr(n, [], null, []);
    if (r.set.push(r), t)
      for (let s of t.set)
        r.set.push(s);
    return r;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier(e) {
    let t = new yh(e);
    return (n) => n.modified.indexOf(t) > -1 ? n : yh.get(n.base || n, n.modified.concat(t).sort((r, s) => r.id - s.id));
  }
}
let $A = 0;
class yh {
  constructor(e) {
    this.name = e, this.instances = [], this.id = $A++;
  }
  static get(e, t) {
    if (!t.length)
      return e;
    let n = t[0].instances.find((a) => a.base == e && yA(t, a.modified));
    if (n)
      return n;
    let r = [], s = new hr(e.name, r, e, t);
    for (let a of t)
      a.instances.push(s);
    let o = QA(t);
    for (let a of e.set)
      if (!a.modified.length)
        for (let c of o)
          r.push(yh.get(a, c));
    return s;
  }
}
function yA(i, e) {
  return i.length == e.length && i.every((t, n) => t == e[n]);
}
function QA(i) {
  let e = [[]];
  for (let t = 0; t < i.length; t++)
    for (let n = 0, r = e.length; n < r; n++)
      e.push(e[n].concat(i[t]));
  return e.sort((t, n) => n.length - t.length);
}
function va(i) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in i) {
    let n = i[t];
    Array.isArray(n) || (n = [n]);
    for (let r of t.split(" "))
      if (r) {
        let s = [], o = 2, a = r;
        for (let d = 0; ; ) {
          if (a == "..." && d > 0 && d + 3 == r.length) {
            o = 1;
            break;
          }
          let p = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(a);
          if (!p)
            throw new RangeError("Invalid path: " + r);
          if (s.push(p[0] == "*" ? "" : p[0][0] == '"' ? JSON.parse(p[0]) : p[0]), d += p[0].length, d == r.length)
            break;
          let m = r[d++];
          if (d == r.length && m == "!") {
            o = 0;
            break;
          }
          if (m != "/")
            throw new RangeError("Invalid path: " + r);
          a = r.slice(d);
        }
        let c = s.length - 1, u = s[c];
        if (!u)
          throw new RangeError("Invalid path: " + r);
        let h = new Qh(n, o, c > 0 ? s.slice(0, c) : null);
        e[u] = h.sort(e[u]);
      }
  }
  return Fy.add(e);
}
const Fy = new ft();
class Qh {
  constructor(e, t, n, r) {
    this.tags = e, this.mode = t, this.context = n, this.next = r;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
Qh.empty = new Qh([], 2, null);
function Gy(i, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let s of i)
    if (!Array.isArray(s.tag))
      t[s.tag.id] = s.class;
    else
      for (let o of s.tag)
        t[o.id] = s.class;
  let { scope: n, all: r = null } = e || {};
  return {
    style: (s) => {
      let o = r;
      for (let a of s)
        for (let c of a.set) {
          let u = t[c.id];
          if (u) {
            o = o ? o + " " + u : u;
            break;
          }
        }
      return o;
    },
    scope: n
  };
}
function wA(i, e) {
  let t = null;
  for (let n of i) {
    let r = n.style(e);
    r && (t = t ? t + " " + r : r);
  }
  return t;
}
function PA(i, e, t, n = 0, r = i.length) {
  let s = new xA(n, Array.isArray(e) ? e : [e], t);
  s.highlightRange(i.cursor(), n, r, "", s.highlighters), s.flush(r);
}
class xA {
  constructor(e, t, n) {
    this.at = e, this.highlighters = t, this.span = n, this.class = "";
  }
  startSpan(e, t) {
    t != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = t);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, t, n, r, s) {
    let { type: o, from: a, to: c } = e;
    if (a >= n || c <= t)
      return;
    o.isTop && (s = this.highlighters.filter((m) => !m.scope || m.scope(o)));
    let u = r, h = kA(e) || Qh.empty, d = wA(s, h.tags);
    if (d && (u && (u += " "), u += d, h.mode == 1 && (r += (r ? " " : "") + d)), this.startSpan(Math.max(t, a), u), h.opaque)
      return;
    let p = e.tree && e.tree.prop(ft.mounted);
    if (p && p.overlay) {
      let m = e.node.enter(p.overlay[0].from + a, 1), b = this.highlighters.filter((w) => !w.scope || w.scope(p.tree.type)), y = e.firstChild();
      for (let w = 0, k = a; ; w++) {
        let A = w < p.overlay.length ? p.overlay[w] : null, x = A ? A.from + a : c, _ = Math.max(t, k), W = Math.min(n, x);
        if (_ < W && y)
          for (; e.from < W && (this.highlightRange(e, _, W, r, s), this.startSpan(Math.min(W, e.to), u), !(e.to >= x || !e.nextSibling())); )
            ;
        if (!A || x > n)
          break;
        k = A.to + a, k > t && (this.highlightRange(m.cursor(), Math.max(t, A.from + a), Math.min(n, k), "", b), this.startSpan(Math.min(n, k), u));
      }
      y && e.parent();
    } else if (e.firstChild()) {
      p && (r = "");
      do
        if (!(e.to <= t)) {
          if (e.from >= n)
            break;
          this.highlightRange(e, t, n, r, s), this.startSpan(Math.min(n, e.to), u);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function kA(i) {
  let e = i.type.prop(Fy);
  for (; e && e.context && !i.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const ye = hr.define, ku = ye(), mo = ye(), uS = ye(mo), hS = ye(mo), vo = ye(), _u = ye(vo), Vd = ye(vo), ts = ye(), Fo = ye(ts), Jr = ye(), es = ye(), ng = ye(), ec = ye(ng), Wu = ye(), S = {
  /**
  A comment.
  */
  comment: ku,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: ye(ku),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: ye(ku),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: ye(ku),
  /**
  Any kind of identifier.
  */
  name: mo,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: ye(mo),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: uS,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: ye(uS),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: hS,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: ye(hS),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: ye(mo),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: ye(mo),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: ye(mo),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: ye(mo),
  /**
  A literal value.
  */
  literal: vo,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: _u,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: ye(_u),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: ye(_u),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: ye(_u),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: Vd,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: ye(Vd),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: ye(Vd),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: ye(vo),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: ye(vo),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: ye(vo),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: ye(vo),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: ye(vo),
  /**
  A language keyword.
  */
  keyword: Jr,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: ye(Jr),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: ye(Jr),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: ye(Jr),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: ye(Jr),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: ye(Jr),
  /**
  An operator.
  */
  operator: es,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: ye(es),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: ye(es),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: ye(es),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: ye(es),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: ye(es),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: ye(es),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: ye(es),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: ye(es),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: ye(es),
  /**
  Program or markup punctuation.
  */
  punctuation: ng,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: ye(ng),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: ec,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: ye(ec),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: ye(ec),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: ye(ec),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: ye(ec),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: ts,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: Fo,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: ye(Fo),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: ye(Fo),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: ye(Fo),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: ye(Fo),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: ye(Fo),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: ye(Fo),
  /**
  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).
  */
  contentSeparator: ye(ts),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: ye(ts),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: ye(ts),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: ye(ts),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: ye(ts),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: ye(ts),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: ye(ts),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: ye(ts),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: ye(),
  /**
  Deleted text.
  */
  deleted: ye(),
  /**
  Changed text.
  */
  changed: ye(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: ye(),
  /**
  Metadata or meta-instruction.
  */
  meta: Wu,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: ye(Wu),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: ye(Wu),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: ye(Wu),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: hr.defineModifier("definition"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: hr.defineModifier("constant"),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: hr.defineModifier("function"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: hr.defineModifier("standard"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: hr.defineModifier("local"),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: hr.defineModifier("special")
};
for (let i in S) {
  let e = S[i];
  e instanceof hr && (e.name = i);
}
Gy([
  { tag: S.link, class: "tok-link" },
  { tag: S.heading, class: "tok-heading" },
  { tag: S.emphasis, class: "tok-emphasis" },
  { tag: S.strong, class: "tok-strong" },
  { tag: S.keyword, class: "tok-keyword" },
  { tag: S.atom, class: "tok-atom" },
  { tag: S.bool, class: "tok-bool" },
  { tag: S.url, class: "tok-url" },
  { tag: S.labelName, class: "tok-labelName" },
  { tag: S.inserted, class: "tok-inserted" },
  { tag: S.deleted, class: "tok-deleted" },
  { tag: S.literal, class: "tok-literal" },
  { tag: S.string, class: "tok-string" },
  { tag: S.number, class: "tok-number" },
  { tag: [S.regexp, S.escape, S.special(S.string)], class: "tok-string2" },
  { tag: S.variableName, class: "tok-variableName" },
  { tag: S.local(S.variableName), class: "tok-variableName tok-local" },
  { tag: S.definition(S.variableName), class: "tok-variableName tok-definition" },
  { tag: S.special(S.variableName), class: "tok-variableName2" },
  { tag: S.definition(S.propertyName), class: "tok-propertyName tok-definition" },
  { tag: S.typeName, class: "tok-typeName" },
  { tag: S.namespace, class: "tok-namespace" },
  { tag: S.className, class: "tok-className" },
  { tag: S.macroName, class: "tok-macroName" },
  { tag: S.propertyName, class: "tok-propertyName" },
  { tag: S.operator, class: "tok-operator" },
  { tag: S.comment, class: "tok-comment" },
  { tag: S.meta, class: "tok-meta" },
  { tag: S.invalid, class: "tok-invalid" },
  { tag: S.punctuation, class: "tok-punctuation" }
]);
var Ud;
const Bl = /* @__PURE__ */ new ft();
function Hy(i) {
  return _e.define({
    combine: i ? (e) => e.concat(i) : void 0
  });
}
const tm = /* @__PURE__ */ new ft();
class Vr {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, t, n = [], r = "") {
    this.data = e, this.name = r, St.prototype.hasOwnProperty("tree") || Object.defineProperty(St.prototype, "tree", { get() {
      return ui(this);
    } }), this.parser = t, this.extension = [
      Xo.of(this),
      St.languageData.of((s, o, a) => {
        let c = OS(s, o, a), u = c.type.prop(Bl);
        if (!u)
          return [];
        let h = s.facet(u), d = c.type.prop(tm);
        if (d) {
          let p = c.resolve(o - c.from, a);
          for (let m of d)
            if (m.test(p, s)) {
              let b = s.facet(m.facet);
              return m.type == "replace" ? b : b.concat(h);
            }
        }
        return h;
      })
    ].concat(n);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, t, n = -1) {
    return OS(e, t, n).type.prop(Bl) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let t = e.facet(Xo);
    if ((t == null ? void 0 : t.data) == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!t || !t.allowsNesting)
      return [];
    let n = [], r = (s, o) => {
      if (s.prop(Bl) == this.data) {
        n.push({ from: o, to: o + s.length });
        return;
      }
      let a = s.prop(ft.mounted);
      if (a) {
        if (a.tree.prop(Bl) == this.data) {
          if (a.overlay)
            for (let c of a.overlay)
              n.push({ from: c.from + o, to: c.to + o });
          else
            n.push({ from: o, to: o + s.length });
          return;
        } else if (a.overlay) {
          let c = n.length;
          if (r(a.tree, a.overlay[0].from + o), n.length > c)
            return;
        }
      }
      for (let c = 0; c < s.children.length; c++) {
        let u = s.children[c];
        u instanceof oi && r(u, s.positions[c] + o);
      }
    };
    return r(ui(e), 0), n;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
Vr.setState = /* @__PURE__ */ nt.define();
function OS(i, e, t) {
  let n = i.facet(Xo), r = ui(i).topNode;
  if (!n || n.allowsNesting)
    for (let s = r; s; s = s.enter(e, t, Jt.ExcludeBuffers))
      s.type.isTop && (r = s);
  return r;
}
class Ao extends Vr {
  constructor(e, t, n) {
    super(e, t, [], n), this.parser = t;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let t = Hy(e.languageData);
    return new Ao(t, e.parser.configure({
      props: [Bl.add((n) => n.isTop ? t : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, t) {
    return new Ao(this.data, this.parser.configure(e), t || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function ui(i) {
  let e = i.field(Vr.state, !1);
  return e ? e.tree : oi.empty;
}
class _A {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, t) {
    let n = this.cursorPos - this.string.length;
    return e < n || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - n, t - n);
  }
}
let tc = null;
class wh {
  constructor(e, t, n = [], r, s, o, a, c) {
    this.parser = e, this.state = t, this.fragments = n, this.tree = r, this.treeLen = s, this.viewport = o, this.skipped = a, this.scheduleOn = c, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, t, n) {
    return new wh(e, t, [], oi.empty, 0, n, [], null);
  }
  startParse() {
    return this.parser.startParse(new _A(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, t) {
    return t != null && t >= this.state.doc.length && (t = void 0), this.tree != oi.empty && this.isDone(t ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var n;
      if (typeof e == "number") {
        let r = Date.now() + e;
        e = () => Date.now() > r;
      }
      for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
        let r = this.parse.advance();
        if (r)
          if (this.fragments = this.withoutTempSkipped(Bs.addTree(r, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (n = this.parse.stoppedAt) !== null && n !== void 0 ? n : this.state.doc.length, this.tree = r, this.parse = null, this.treeLen < (t ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, t;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(t = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = t, this.fragments = this.withoutTempSkipped(Bs.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let t = tc;
    tc = this;
    try {
      return e();
    } finally {
      tc = t;
    }
  }
  withoutTempSkipped(e) {
    for (let t; t = this.tempSkipped.pop(); )
      e = dS(e, t.from, t.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, t) {
    let { fragments: n, tree: r, treeLen: s, viewport: o, skipped: a } = this;
    if (this.takeTree(), !e.empty) {
      let c = [];
      if (e.iterChangedRanges((u, h, d, p) => c.push({ fromA: u, toA: h, fromB: d, toB: p })), n = Bs.applyChanges(n, c), r = oi.empty, s = 0, o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }, this.skipped.length) {
        a = [];
        for (let u of this.skipped) {
          let h = e.mapPos(u.from, 1), d = e.mapPos(u.to, -1);
          h < d && a.push({ from: h, to: d });
        }
      }
    }
    return new wh(this.parser, t, n, r, s, o, a, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let t = this.skipped.length;
    for (let n = 0; n < this.skipped.length; n++) {
      let { from: r, to: s } = this.skipped[n];
      r < e.to && s > e.from && (this.fragments = dS(this.fragments, r, s), this.skipped.splice(n--, 1));
    }
    return this.skipped.length >= t ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, t) {
    this.skipped.push({ from: e, to: t });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends By {
      createParse(t, n, r) {
        let s = r[0].from, o = r[r.length - 1].to;
        return {
          parsedPos: s,
          advance() {
            let c = tc;
            if (c) {
              for (let u of r)
                c.tempSkipped.push(u);
              e && (c.scheduleOn = c.scheduleOn ? Promise.all([c.scheduleOn, e]) : e);
            }
            return this.parsedPos = o, new oi(bn.none, [], [], o - s);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let t = this.fragments;
    return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return tc;
  }
}
function dS(i, e, t) {
  return Bs.applyChanges(i, [{ fromA: e, toA: t, fromB: e, toB: t }]);
}
class la {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let t = this.context.changes(e.changes, e.state), n = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
    return t.work(20, n) || t.takeTree(), new la(t);
  }
  static init(e) {
    let t = Math.min(3e3, e.doc.length), n = wh.create(e.facet(Xo).parser, e, { from: 0, to: t });
    return n.work(20, t) || n.takeTree(), new la(n);
  }
}
Vr.state = /* @__PURE__ */ Wi.define({
  create: la.init,
  update(i, e) {
    for (let t of e.effects)
      if (t.is(Vr.setState))
        return t.value;
    return e.startState.facet(Xo) != e.state.facet(Xo) ? la.init(e.state) : i.apply(e);
  }
});
let Ky = (i) => {
  let e = setTimeout(
    () => i(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (Ky = (i) => {
  let e = -1, t = setTimeout(
    () => {
      e = requestIdleCallback(i, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(t) : cancelIdleCallback(e);
});
const Yd = typeof navigator < "u" && (!((Ud = navigator.scheduling) === null || Ud === void 0) && Ud.isInputPending) ? () => navigator.scheduling.isInputPending() : null, WA = /* @__PURE__ */ yi.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let t = this.view.state.field(Vr.state).context;
    (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, t = e.field(Vr.state);
    (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = Ky(this.work));
  }
  work(e) {
    this.working = null;
    let t = Date.now();
    if (this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = t + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: n, viewport: { to: r } } = this.view, s = n.field(Vr.state);
    if (s.tree == s.context.tree && s.context.isDone(
      r + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let o = Date.now() + Math.min(this.chunkBudget, 100, e && !Yd ? Math.max(25, e.timeRemaining() - 5) : 1e9), a = s.context.treeLen < r && n.doc.length > r + 1e3, c = s.context.work(() => Yd && Yd() || Date.now() > o, r + (a ? 0 : 1e5));
    this.chunkBudget -= Date.now() - t, (c || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: Vr.setState.of(new la(s.context)) })), this.chunkBudget > 0 && !(c && !a) && this.scheduleWork(), this.checkAsyncSchedule(s.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((t) => Xn(this.view.state, t)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), Xo = /* @__PURE__ */ _e.define({
  combine(i) {
    return i.length ? i[0] : null;
  },
  enables: (i) => [
    Vr.state,
    WA,
    me.contentAttributes.compute([i], (e) => {
      let t = e.facet(i);
      return t && t.name ? { "data-language": t.name } : {};
    })
  ]
});
class ef {
  /**
  Create a language support object.
  */
  constructor(e, t = []) {
    this.language = e, this.support = t, this.extension = [e, t];
  }
}
const TA = /* @__PURE__ */ _e.define(), tO = /* @__PURE__ */ _e.define({
  combine: (i) => {
    if (!i.length)
      return "  ";
    let e = i[0];
    if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(i[0]));
    return e;
  }
});
function Ph(i) {
  let e = i.facet(tO);
  return e.charCodeAt(0) == 9 ? i.tabSize * e.length : e.length;
}
function Ec(i, e) {
  let t = "", n = i.tabSize, r = i.facet(tO)[0];
  if (r == "	") {
    for (; e >= n; )
      t += "	", e -= n;
    r = " ";
  }
  for (let s = 0; s < e; s++)
    t += r;
  return t;
}
function im(i, e) {
  i instanceof St && (i = new iO(i));
  for (let n of i.state.facet(TA)) {
    let r = n(i, e);
    if (r !== void 0)
      return r;
  }
  let t = ui(i.state);
  return t.length >= e ? ZA(i, t, e) : null;
}
class iO {
  /**
  Create an indent context.
  */
  constructor(e, t = {}) {
    this.state = e, this.options = t, this.unit = Ph(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, t = 1) {
    let n = this.state.doc.lineAt(e), { simulateBreak: r, simulateDoubleBreak: s } = this.options;
    return r != null && r >= n.from && r <= n.to ? s && r == e ? { text: "", from: e } : (t < 0 ? r < e : r <= e) ? { text: n.text.slice(r - n.from), from: r } : { text: n.text.slice(0, r - n.from), from: n.from } : n;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, t = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: n, from: r } = this.lineAt(e, t);
    return n.slice(e - r, Math.min(n.length, e + 100 - r));
  }
  /**
  Find the column for the given position.
  */
  column(e, t = 1) {
    let { text: n, from: r } = this.lineAt(e, t), s = this.countColumn(n, e - r), o = this.options.overrideIndentation ? this.options.overrideIndentation(r) : -1;
    return o > -1 && (s += o - this.countColumn(n, n.search(/\S|$/))), s;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, t = e.length) {
    return ma(e, this.state.tabSize, t);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, t = 1) {
    let { text: n, from: r } = this.lineAt(e, t), s = this.options.overrideIndentation;
    if (s) {
      let o = s(r);
      if (o > -1)
        return o;
    }
    return this.countColumn(n, n.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const Sa = /* @__PURE__ */ new ft();
function ZA(i, e, t) {
  let n = e.resolveStack(t), r = e.resolveInner(t, -1).resolve(t, 0).enterUnfinishedNodesBefore(t);
  if (r != n.node) {
    let s = [];
    for (let o = r; o && !(o.from == n.node.from && o.type == n.node.type); o = o.parent)
      s.push(o);
    for (let o = s.length - 1; o >= 0; o--)
      n = { node: s[o], next: n };
  }
  return Jy(n, i, t);
}
function Jy(i, e, t) {
  for (let n = i; n; n = n.next) {
    let r = RA(n.node);
    if (r)
      return r(nm.create(e, t, n));
  }
  return 0;
}
function CA(i) {
  return i.pos == i.options.simulateBreak && i.options.simulateDoubleBreak;
}
function RA(i) {
  let e = i.type.prop(Sa);
  if (e)
    return e;
  let t = i.firstChild, n;
  if (t && (n = t.type.prop(ft.closedBy))) {
    let r = i.lastChild, s = r && n.indexOf(r.name) > -1;
    return (o) => eQ(o, !0, 1, void 0, s && !CA(o) ? r.from : void 0);
  }
  return i.parent == null ? AA : null;
}
function AA() {
  return 0;
}
class nm extends iO {
  constructor(e, t, n) {
    super(e.state, e.options), this.base = e, this.pos = t, this.context = n;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, t, n) {
    return new nm(e, t, n);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let t = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let n = e.resolve(t.from);
      for (; n.parent && n.parent.from == n.from; )
        n = n.parent;
      if (XA(n, e))
        break;
      t = this.state.doc.lineAt(n.from);
    }
    return this.lineIndent(t.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return Jy(this.context.next, this.base, this.pos);
  }
}
function XA(i, e) {
  for (let t = e; t; t = t.parent)
    if (i == t)
      return !0;
  return !1;
}
function MA(i) {
  let e = i.node, t = e.childAfter(e.from), n = e.lastChild;
  if (!t)
    return null;
  let r = i.options.simulateBreak, s = i.state.doc.lineAt(t.from), o = r == null || r <= s.from ? s.to : Math.min(s.to, r);
  for (let a = t.to; ; ) {
    let c = e.childAfter(a);
    if (!c || c == n)
      return null;
    if (!c.type.isSkipped) {
      if (c.from >= o)
        return null;
      let u = /^ */.exec(s.text.slice(t.to - s.from))[0].length;
      return { from: t.from, to: t.to + u };
    }
    a = c.to;
  }
}
function po({ closing: i, align: e = !0, units: t = 1 }) {
  return (n) => eQ(n, e, t, i);
}
function eQ(i, e, t, n, r) {
  let s = i.textAfter, o = s.match(/^\s*/)[0].length, a = n && s.slice(o, o + n.length) == n || r == i.pos + o, c = e ? MA(i) : null;
  return c ? a ? i.column(c.from) : i.column(c.to) : i.baseIndent + (a ? 0 : i.unit * t);
}
const EA = (i) => i.baseIndent;
function ea({ except: i, units: e = 1 } = {}) {
  return (t) => {
    let n = i && i.test(t.textAfter);
    return t.baseIndent + (n ? 0 : e * t.unit);
  };
}
const qA = 200;
function LA() {
  return St.transactionFilter.of((i) => {
    if (!i.docChanged || !i.isUserEvent("input.type") && !i.isUserEvent("input.complete"))
      return i;
    let e = i.startState.languageDataAt("indentOnInput", i.startState.selection.main.head);
    if (!e.length)
      return i;
    let t = i.newDoc, { head: n } = i.newSelection.main, r = t.lineAt(n);
    if (n > r.from + qA)
      return i;
    let s = t.sliceString(r.from, n);
    if (!e.some((u) => u.test(s)))
      return i;
    let { state: o } = i, a = -1, c = [];
    for (let { head: u } of o.selection.ranges) {
      let h = o.doc.lineAt(u);
      if (h.from == a)
        continue;
      a = h.from;
      let d = im(o, h.from);
      if (d == null)
        continue;
      let p = /^\s*/.exec(h.text)[0], m = Ec(o, d);
      p != m && c.push({ from: h.from, to: h.from + p.length, insert: m });
    }
    return c.length ? [i, { changes: c, sequential: !0 }] : i;
  });
}
const DA = /* @__PURE__ */ _e.define(), ba = /* @__PURE__ */ new ft();
function is(i) {
  let e = i.firstChild, t = i.lastChild;
  return e && e.to < t.from ? { from: e.to, to: t.type.isError ? i.to : t.from } : null;
}
function VA(i, e, t) {
  let n = ui(i);
  if (n.length < t)
    return null;
  let r = n.resolveStack(t, 1), s = null;
  for (let o = r; o; o = o.next) {
    let a = o.node;
    if (a.to <= t || a.from > t)
      continue;
    if (s && a.from < e)
      break;
    let c = a.type.prop(ba);
    if (c && (a.to < n.length - 50 || n.length == i.doc.length || !UA(a))) {
      let u = c(a, i);
      u && u.from <= t && u.from >= e && u.to > t && (s = u);
    }
  }
  return s;
}
function UA(i) {
  let e = i.lastChild;
  return e && e.to == i.to && e.type.isError;
}
function xh(i, e, t) {
  for (let n of i.facet(DA)) {
    let r = n(i, e, t);
    if (r)
      return r;
  }
  return VA(i, e, t);
}
function tQ(i, e) {
  let t = e.mapPos(i.from, 1), n = e.mapPos(i.to, -1);
  return t >= n ? void 0 : { from: t, to: n };
}
const nO = /* @__PURE__ */ nt.define({ map: tQ }), tf = /* @__PURE__ */ nt.define({ map: tQ });
function iQ(i) {
  let e = [];
  for (let { head: t } of i.state.selection.ranges)
    e.some((n) => n.from <= t && n.to >= t) || e.push(i.lineBlockAt(t));
  return e;
}
const fl = /* @__PURE__ */ Wi.define({
  create() {
    return Ue.none;
  },
  update(i, e) {
    i = i.map(e.changes);
    for (let t of e.effects)
      if (t.is(nO) && !YA(i, t.value.from, t.value.to)) {
        let { preparePlaceholder: n } = e.state.facet(sQ), r = n ? Ue.replace({ widget: new GA(n(e.state, t.value)) }) : pS;
        i = i.update({ add: [r.range(t.value.from, t.value.to)] });
      } else t.is(tf) && (i = i.update({
        filter: (n, r) => t.value.from != n || t.value.to != r,
        filterFrom: t.value.from,
        filterTo: t.value.to
      }));
    if (e.selection) {
      let t = !1, { head: n } = e.selection.main;
      i.between(n, n, (r, s) => {
        r < n && s > n && (t = !0);
      }), t && (i = i.update({
        filterFrom: n,
        filterTo: n,
        filter: (r, s) => s <= n || r >= n
      }));
    }
    return i;
  },
  provide: (i) => me.decorations.from(i),
  toJSON(i, e) {
    let t = [];
    return i.between(0, e.doc.length, (n, r) => {
      t.push(n, r);
    }), t;
  },
  fromJSON(i) {
    if (!Array.isArray(i) || i.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let t = 0; t < i.length; ) {
      let n = i[t++], r = i[t++];
      if (typeof n != "number" || typeof r != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(pS.range(n, r));
    }
    return Ue.set(e, !0);
  }
});
function kh(i, e, t) {
  var n;
  let r = null;
  return (n = i.field(fl, !1)) === null || n === void 0 || n.between(e, t, (s, o) => {
    (!r || r.from > s) && (r = { from: s, to: o });
  }), r;
}
function YA(i, e, t) {
  let n = !1;
  return i.between(e, e, (r, s) => {
    r == e && s == t && (n = !0);
  }), n;
}
function nQ(i, e) {
  return i.field(fl, !1) ? e : e.concat(nt.appendConfig.of(oQ()));
}
const zA = (i) => {
  for (let e of iQ(i)) {
    let t = xh(i.state, e.from, e.to);
    if (t)
      return i.dispatch({ effects: nQ(i.state, [nO.of(t), rQ(i, t)]) }), !0;
  }
  return !1;
}, jA = (i) => {
  if (!i.state.field(fl, !1))
    return !1;
  let e = [];
  for (let t of iQ(i)) {
    let n = kh(i.state, t.from, t.to);
    n && e.push(tf.of(n), rQ(i, n, !1));
  }
  return e.length && i.dispatch({ effects: e }), e.length > 0;
};
function rQ(i, e, t = !0) {
  let n = i.state.doc.lineAt(e.from).number, r = i.state.doc.lineAt(e.to).number;
  return me.announce.of(`${i.state.phrase(t ? "Folded lines" : "Unfolded lines")} ${n} ${i.state.phrase("to")} ${r}.`);
}
const BA = (i) => {
  let { state: e } = i, t = [];
  for (let n = 0; n < e.doc.length; ) {
    let r = i.lineBlockAt(n), s = xh(e, r.from, r.to);
    s && t.push(nO.of(s)), n = (s ? i.lineBlockAt(s.to) : r).to + 1;
  }
  return t.length && i.dispatch({ effects: nQ(i.state, t) }), !!t.length;
}, IA = (i) => {
  let e = i.state.field(fl, !1);
  if (!e || !e.size)
    return !1;
  let t = [];
  return e.between(0, i.state.doc.length, (n, r) => {
    t.push(tf.of({ from: n, to: r }));
  }), i.dispatch({ effects: t }), !0;
}, NA = [
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: zA },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: jA },
  { key: "Ctrl-Alt-[", run: BA },
  { key: "Ctrl-Alt-]", run: IA }
], FA = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, sQ = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, FA);
  }
});
function oQ(i) {
  return [fl, JA];
}
function lQ(i, e) {
  let { state: t } = i, n = t.facet(sQ), r = (o) => {
    let a = i.lineBlockAt(i.posAtDOM(o.target)), c = kh(i.state, a.from, a.to);
    c && i.dispatch({ effects: tf.of(c) }), o.preventDefault();
  };
  if (n.placeholderDOM)
    return n.placeholderDOM(i, r, e);
  let s = document.createElement("span");
  return s.textContent = n.placeholderText, s.setAttribute("aria-label", t.phrase("folded code")), s.title = t.phrase("unfold"), s.className = "cm-foldPlaceholder", s.onclick = r, s;
}
const pS = /* @__PURE__ */ Ue.replace({ widget: /* @__PURE__ */ new class extends eo {
  toDOM(i) {
    return lQ(i, null);
  }
}() });
class GA extends eo {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return lQ(e, this.value);
  }
}
const HA = {
  openText: "⌄",
  closedText: "›",
  markerDOM: null,
  domEventHandlers: {},
  foldingChanged: () => !1
};
class zd extends Fs {
  constructor(e, t) {
    super(), this.config = e, this.open = t;
  }
  eq(e) {
    return this.config == e.config && this.open == e.open;
  }
  toDOM(e) {
    if (this.config.markerDOM)
      return this.config.markerDOM(this.open);
    let t = document.createElement("span");
    return t.textContent = this.open ? this.config.openText : this.config.closedText, t.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"), t;
  }
}
function KA(i = {}) {
  let e = Object.assign(Object.assign({}, HA), i), t = new zd(e, !0), n = new zd(e, !1), r = yi.fromClass(class {
    constructor(o) {
      this.from = o.viewport.from, this.markers = this.buildMarkers(o);
    }
    update(o) {
      (o.docChanged || o.viewportChanged || o.startState.facet(Xo) != o.state.facet(Xo) || o.startState.field(fl, !1) != o.state.field(fl, !1) || ui(o.startState) != ui(o.state) || e.foldingChanged(o)) && (this.markers = this.buildMarkers(o.view));
    }
    buildMarkers(o) {
      let a = new Is();
      for (let c of o.viewportLineBlocks) {
        let u = kh(o.state, c.from, c.to) ? n : xh(o.state, c.from, c.to) ? t : null;
        u && a.add(c.from, c.from, u);
      }
      return a.finish();
    }
  }), { domEventHandlers: s } = e;
  return [
    r,
    KR({
      class: "cm-foldGutter",
      markers(o) {
        var a;
        return ((a = o.plugin(r)) === null || a === void 0 ? void 0 : a.markers) || xt.empty;
      },
      initialSpacer() {
        return new zd(e, !1);
      },
      domEventHandlers: Object.assign(Object.assign({}, s), { click: (o, a, c) => {
        if (s.click && s.click(o, a, c))
          return !0;
        let u = kh(o.state, a.from, a.to);
        if (u)
          return o.dispatch({ effects: tf.of(u) }), !0;
        let h = xh(o.state, a.from, a.to);
        return h ? (o.dispatch({ effects: nO.of(h) }), !0) : !1;
      } })
    }),
    oQ()
  ];
}
const JA = /* @__PURE__ */ me.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class nf {
  constructor(e, t) {
    this.specs = e;
    let n;
    function r(a) {
      let c = _o.newName();
      return (n || (n = /* @__PURE__ */ Object.create(null)))["." + c] = a, c;
    }
    const s = typeof t.all == "string" ? t.all : t.all ? r(t.all) : void 0, o = t.scope;
    this.scope = o instanceof Vr ? (a) => a.prop(Bl) == o.data : o ? (a) => a == o : void 0, this.style = Gy(e.map((a) => ({
      tag: a.tag,
      class: a.class || r(Object.assign({}, a, { tag: null }))
    })), {
      all: s
    }).style, this.module = n ? new _o(n) : null, this.themeType = t.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, t) {
    return new nf(e, t || {});
  }
}
const rg = /* @__PURE__ */ _e.define(), aQ = /* @__PURE__ */ _e.define({
  combine(i) {
    return i.length ? [i[0]] : null;
  }
});
function jd(i) {
  let e = i.facet(rg);
  return e.length ? e : i.facet(aQ);
}
function cQ(i, e) {
  let t = [t4], n;
  return i instanceof nf && (i.module && t.push(me.styleModule.of(i.module)), n = i.themeType), e != null && e.fallback ? t.push(aQ.of(i)) : n ? t.push(rg.computeN([me.darkTheme], (r) => r.facet(me.darkTheme) == (n == "dark") ? [i] : [])) : t.push(rg.of(i)), t;
}
class e4 {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = ui(e.state), this.decorations = this.buildDeco(e, jd(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let t = ui(e.state), n = jd(e.state), r = n != jd(e.startState), { viewport: s } = e.view, o = e.changes.mapPos(this.decoratedTo, 1);
    t.length < s.to && !r && t.type == this.tree.type && o >= s.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = o) : (t != this.tree || e.viewportChanged || r) && (this.tree = t, this.decorations = this.buildDeco(e.view, n), this.decoratedTo = s.to);
  }
  buildDeco(e, t) {
    if (!t || !this.tree.length)
      return Ue.none;
    let n = new Is();
    for (let { from: r, to: s } of e.visibleRanges)
      PA(this.tree, t, (o, a, c) => {
        n.add(o, a, this.markCache[c] || (this.markCache[c] = Ue.mark({ class: c })));
      }, r, s);
    return n.finish();
  }
}
const t4 = /* @__PURE__ */ Mo.high(/* @__PURE__ */ yi.fromClass(e4, {
  decorations: (i) => i.decorations
})), i4 = /* @__PURE__ */ nf.define([
  {
    tag: S.meta,
    color: "#404740"
  },
  {
    tag: S.link,
    textDecoration: "underline"
  },
  {
    tag: S.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: S.emphasis,
    fontStyle: "italic"
  },
  {
    tag: S.strong,
    fontWeight: "bold"
  },
  {
    tag: S.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: S.keyword,
    color: "#708"
  },
  {
    tag: [S.atom, S.bool, S.url, S.contentSeparator, S.labelName],
    color: "#219"
  },
  {
    tag: [S.literal, S.inserted],
    color: "#164"
  },
  {
    tag: [S.string, S.deleted],
    color: "#a11"
  },
  {
    tag: [S.regexp, S.escape, /* @__PURE__ */ S.special(S.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ S.definition(S.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ S.local(S.variableName),
    color: "#30a"
  },
  {
    tag: [S.typeName, S.namespace],
    color: "#085"
  },
  {
    tag: S.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ S.special(S.variableName), S.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ S.definition(S.propertyName),
    color: "#00c"
  },
  {
    tag: S.comment,
    color: "#940"
  },
  {
    tag: S.invalid,
    color: "#f00"
  }
]), n4 = /* @__PURE__ */ me.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), fQ = 1e4, uQ = "()[]{}", hQ = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, {
      afterCursor: !0,
      brackets: uQ,
      maxScanDistance: fQ,
      renderMatch: o4
    });
  }
}), r4 = /* @__PURE__ */ Ue.mark({ class: "cm-matchingBracket" }), s4 = /* @__PURE__ */ Ue.mark({ class: "cm-nonmatchingBracket" });
function o4(i) {
  let e = [], t = i.matched ? r4 : s4;
  return e.push(t.range(i.start.from, i.start.to)), i.end && e.push(t.range(i.end.from, i.end.to)), e;
}
const l4 = /* @__PURE__ */ Wi.define({
  create() {
    return Ue.none;
  },
  update(i, e) {
    if (!e.docChanged && !e.selection)
      return i;
    let t = [], n = e.state.facet(hQ);
    for (let r of e.state.selection.ranges) {
      if (!r.empty)
        continue;
      let s = as(e.state, r.head, -1, n) || r.head > 0 && as(e.state, r.head - 1, 1, n) || n.afterCursor && (as(e.state, r.head, 1, n) || r.head < e.state.doc.length && as(e.state, r.head + 1, -1, n));
      s && (t = t.concat(n.renderMatch(s, e.state)));
    }
    return Ue.set(t, !0);
  },
  provide: (i) => me.decorations.from(i)
}), a4 = [
  l4,
  n4
];
function c4(i = {}) {
  return [hQ.of(i), a4];
}
const OQ = /* @__PURE__ */ new ft();
function sg(i, e, t) {
  let n = i.prop(e < 0 ? ft.openedBy : ft.closedBy);
  if (n)
    return n;
  if (i.name.length == 1) {
    let r = t.indexOf(i.name);
    if (r > -1 && r % 2 == (e < 0 ? 1 : 0))
      return [t[r + e]];
  }
  return null;
}
function og(i) {
  let e = i.type.prop(OQ);
  return e ? e(i.node) : i;
}
function as(i, e, t, n = {}) {
  let r = n.maxScanDistance || fQ, s = n.brackets || uQ, o = ui(i), a = o.resolveInner(e, t);
  for (let c = a; c; c = c.parent) {
    let u = sg(c.type, t, s);
    if (u && c.from < c.to) {
      let h = og(c);
      if (h && (t > 0 ? e >= h.from && e < h.to : e > h.from && e <= h.to))
        return f4(i, e, t, c, h, u, s);
    }
  }
  return u4(i, e, t, o, a.type, r, s);
}
function f4(i, e, t, n, r, s, o) {
  let a = n.parent, c = { from: r.from, to: r.to }, u = 0, h = a == null ? void 0 : a.cursor();
  if (h && (t < 0 ? h.childBefore(n.from) : h.childAfter(n.to)))
    do
      if (t < 0 ? h.to <= n.from : h.from >= n.to) {
        if (u == 0 && s.indexOf(h.type.name) > -1 && h.from < h.to) {
          let d = og(h);
          return { start: c, end: d ? { from: d.from, to: d.to } : void 0, matched: !0 };
        } else if (sg(h.type, t, o))
          u++;
        else if (sg(h.type, -t, o)) {
          if (u == 0) {
            let d = og(h);
            return {
              start: c,
              end: d && d.from < d.to ? { from: d.from, to: d.to } : void 0,
              matched: !1
            };
          }
          u--;
        }
      }
    while (t < 0 ? h.prevSibling() : h.nextSibling());
  return { start: c, matched: !1 };
}
function u4(i, e, t, n, r, s, o) {
  let a = t < 0 ? i.sliceDoc(e - 1, e) : i.sliceDoc(e, e + 1), c = o.indexOf(a);
  if (c < 0 || c % 2 == 0 != t > 0)
    return null;
  let u = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e }, h = i.doc.iterRange(e, t > 0 ? i.doc.length : 0), d = 0;
  for (let p = 0; !h.next().done && p <= s; ) {
    let m = h.value;
    t < 0 && (p += m.length);
    let b = e + p * t;
    for (let y = t > 0 ? 0 : m.length - 1, w = t > 0 ? m.length : -1; y != w; y += t) {
      let k = o.indexOf(m[y]);
      if (!(k < 0 || n.resolveInner(b + y, 1).type != r))
        if (k % 2 == 0 == t > 0)
          d++;
        else {
          if (d == 1)
            return { start: u, end: { from: b + y, to: b + y + 1 }, matched: k >> 1 == c >> 1 };
          d--;
        }
    }
    t > 0 && (p += m.length);
  }
  return h.done ? { start: u, matched: !1 } : null;
}
const h4 = /* @__PURE__ */ Object.create(null), gS = [bn.none], mS = [], vS = /* @__PURE__ */ Object.create(null), O4 = /* @__PURE__ */ Object.create(null);
for (let [i, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  O4[i] = /* @__PURE__ */ d4(h4, e);
function Bd(i, e) {
  mS.indexOf(i) > -1 || (mS.push(i), console.warn(e));
}
function d4(i, e) {
  let t = [];
  for (let a of e.split(" ")) {
    let c = [];
    for (let u of a.split(".")) {
      let h = i[u] || S[u];
      h ? typeof h == "function" ? c.length ? c = c.map(h) : Bd(u, `Modifier ${u} used at start of tag`) : c.length ? Bd(u, `Tag ${u} used as modifier`) : c = Array.isArray(h) ? h : [h] : Bd(u, `Unknown highlighting tag ${u}`);
    }
    for (let u of c)
      t.push(u);
  }
  if (!t.length)
    return 0;
  let n = e.replace(/ /g, "_"), r = n + " " + t.map((a) => a.id), s = vS[r];
  if (s)
    return s.id;
  let o = vS[r] = bn.define({
    id: gS.length,
    name: n,
    props: [va({ [n]: t })]
  });
  return gS.push(o), o.id;
}
ii.RTL, ii.LTR;
const p4 = (i) => {
  let { state: e } = i, t = e.doc.lineAt(e.selection.main.from), n = sm(i.state, t.from);
  return n.line ? g4(i) : n.block ? v4(i) : !1;
};
function rm(i, e) {
  return ({ state: t, dispatch: n }) => {
    if (t.readOnly)
      return !1;
    let r = i(e, t);
    return r ? (n(t.update(r)), !0) : !1;
  };
}
const g4 = /* @__PURE__ */ rm(
  $4,
  0
  /* CommentOption.Toggle */
), m4 = /* @__PURE__ */ rm(
  dQ,
  0
  /* CommentOption.Toggle */
), v4 = /* @__PURE__ */ rm(
  (i, e) => dQ(i, e, b4(e)),
  0
  /* CommentOption.Toggle */
);
function sm(i, e) {
  let t = i.languageDataAt("commentTokens", e);
  return t.length ? t[0] : {};
}
const ic = 50;
function S4(i, { open: e, close: t }, n, r) {
  let s = i.sliceDoc(n - ic, n), o = i.sliceDoc(r, r + ic), a = /\s*$/.exec(s)[0].length, c = /^\s*/.exec(o)[0].length, u = s.length - a;
  if (s.slice(u - e.length, u) == e && o.slice(c, c + t.length) == t)
    return {
      open: { pos: n - a, margin: a && 1 },
      close: { pos: r + c, margin: c && 1 }
    };
  let h, d;
  r - n <= 2 * ic ? h = d = i.sliceDoc(n, r) : (h = i.sliceDoc(n, n + ic), d = i.sliceDoc(r - ic, r));
  let p = /^\s*/.exec(h)[0].length, m = /\s*$/.exec(d)[0].length, b = d.length - m - t.length;
  return h.slice(p, p + e.length) == e && d.slice(b, b + t.length) == t ? {
    open: {
      pos: n + p + e.length,
      margin: /\s/.test(h.charAt(p + e.length)) ? 1 : 0
    },
    close: {
      pos: r - m - t.length,
      margin: /\s/.test(d.charAt(b - 1)) ? 1 : 0
    }
  } : null;
}
function b4(i) {
  let e = [];
  for (let t of i.selection.ranges) {
    let n = i.doc.lineAt(t.from), r = t.to <= n.to ? n : i.doc.lineAt(t.to);
    r.from > n.from && r.from == t.to && (r = t.to == n.to + 1 ? n : i.doc.lineAt(t.to - 1));
    let s = e.length - 1;
    s >= 0 && e[s].to > n.from ? e[s].to = r.to : e.push({ from: n.from + /^\s*/.exec(n.text)[0].length, to: r.to });
  }
  return e;
}
function dQ(i, e, t = e.selection.ranges) {
  let n = t.map((s) => sm(e, s.from).block);
  if (!n.every((s) => s))
    return null;
  let r = t.map((s, o) => S4(e, n[o], s.from, s.to));
  if (i != 2 && !r.every((s) => s))
    return { changes: e.changes(t.map((s, o) => r[o] ? [] : [{ from: s.from, insert: n[o].open + " " }, { from: s.to, insert: " " + n[o].close }])) };
  if (i != 1 && r.some((s) => s)) {
    let s = [];
    for (let o = 0, a; o < r.length; o++)
      if (a = r[o]) {
        let c = n[o], { open: u, close: h } = a;
        s.push({ from: u.pos - c.open.length, to: u.pos + u.margin }, { from: h.pos - h.margin, to: h.pos + c.close.length });
      }
    return { changes: s };
  }
  return null;
}
function $4(i, e, t = e.selection.ranges) {
  let n = [], r = -1;
  for (let { from: s, to: o } of t) {
    let a = n.length, c = 1e9, u = sm(e, s).line;
    if (u) {
      for (let h = s; h <= o; ) {
        let d = e.doc.lineAt(h);
        if (d.from > r && (s == o || o > d.from)) {
          r = d.from;
          let p = /^\s*/.exec(d.text)[0].length, m = p == d.length, b = d.text.slice(p, p + u.length) == u ? p : -1;
          p < d.text.length && p < c && (c = p), n.push({ line: d, comment: b, token: u, indent: p, empty: m, single: !1 });
        }
        h = d.to + 1;
      }
      if (c < 1e9)
        for (let h = a; h < n.length; h++)
          n[h].indent < n[h].line.text.length && (n[h].indent = c);
      n.length == a + 1 && (n[a].single = !0);
    }
  }
  if (i != 2 && n.some((s) => s.comment < 0 && (!s.empty || s.single))) {
    let s = [];
    for (let { line: a, token: c, indent: u, empty: h, single: d } of n)
      (d || !h) && s.push({ from: a.from + u, insert: c + " " });
    let o = e.changes(s);
    return { changes: o, selection: e.selection.map(o, 1) };
  } else if (i != 1 && n.some((s) => s.comment >= 0)) {
    let s = [];
    for (let { line: o, comment: a, token: c } of n)
      if (a >= 0) {
        let u = o.from + a, h = u + c.length;
        o.text[h - o.from] == " " && h++, s.push({ from: u, to: h });
      }
    return { changes: s };
  }
  return null;
}
const lg = /* @__PURE__ */ Js.define(), y4 = /* @__PURE__ */ Js.define(), Q4 = /* @__PURE__ */ _e.define(), pQ = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, t) => t
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, t) => (n, r) => e(n, r) || t(n, r)
    });
  }
}), gQ = /* @__PURE__ */ Wi.define({
  create() {
    return cs.empty;
  },
  update(i, e) {
    let t = e.state.facet(pQ), n = e.annotation(lg);
    if (n) {
      let c = Mn.fromTransaction(e, n.selection), u = n.side, h = u == 0 ? i.undone : i.done;
      return c ? h = _h(h, h.length, t.minDepth, c) : h = SQ(h, e.startState.selection), new cs(u == 0 ? n.rest : h, u == 0 ? h : n.rest);
    }
    let r = e.annotation(y4);
    if ((r == "full" || r == "before") && (i = i.isolate()), e.annotation($i.addToHistory) === !1)
      return e.changes.empty ? i : i.addMapping(e.changes.desc);
    let s = Mn.fromTransaction(e), o = e.annotation($i.time), a = e.annotation($i.userEvent);
    return s ? i = i.addChanges(s, o, a, t, e) : e.selection && (i = i.addSelection(e.startState.selection, o, a, t.newGroupDelay)), (r == "full" || r == "after") && (i = i.isolate()), i;
  },
  toJSON(i) {
    return { done: i.done.map((e) => e.toJSON()), undone: i.undone.map((e) => e.toJSON()) };
  },
  fromJSON(i) {
    return new cs(i.done.map(Mn.fromJSON), i.undone.map(Mn.fromJSON));
  }
});
function w4(i = {}) {
  return [
    gQ,
    pQ.of(i),
    me.domEventHandlers({
      beforeinput(e, t) {
        let n = e.inputType == "historyUndo" ? mQ : e.inputType == "historyRedo" ? ag : null;
        return n ? (e.preventDefault(), n(t)) : !1;
      }
    })
  ];
}
function rO(i, e) {
  return function({ state: t, dispatch: n }) {
    if (!e && t.readOnly)
      return !1;
    let r = t.field(gQ, !1);
    if (!r)
      return !1;
    let s = r.pop(i, t, e);
    return s ? (n(s), !0) : !1;
  };
}
const mQ = /* @__PURE__ */ rO(0, !1), ag = /* @__PURE__ */ rO(1, !1), P4 = /* @__PURE__ */ rO(0, !0), x4 = /* @__PURE__ */ rO(1, !0);
class Mn {
  constructor(e, t, n, r, s) {
    this.changes = e, this.effects = t, this.mapped = n, this.startSelection = r, this.selectionsAfter = s;
  }
  setSelAfter(e) {
    return new Mn(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, t, n;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(),
      startSelection: (n = this.startSelection) === null || n === void 0 ? void 0 : n.toJSON(),
      selectionsAfter: this.selectionsAfter.map((r) => r.toJSON())
    };
  }
  static fromJSON(e) {
    return new Mn(e.changes && ki.fromJSON(e.changes), [], e.mapped && us.fromJSON(e.mapped), e.startSelection && J.fromJSON(e.startSelection), e.selectionsAfter.map(J.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, t) {
    let n = pr;
    for (let r of e.startState.facet(Q4)) {
      let s = r(e);
      s.length && (n = n.concat(s));
    }
    return !n.length && e.changes.empty ? null : new Mn(e.changes.invert(e.startState.doc), n, void 0, t || e.startState.selection, pr);
  }
  static selection(e) {
    return new Mn(void 0, pr, void 0, void 0, e);
  }
}
function _h(i, e, t, n) {
  let r = e + 1 > t + 20 ? e - t - 1 : 0, s = i.slice(r, e);
  return s.push(n), s;
}
function k4(i, e) {
  let t = [], n = !1;
  return i.iterChangedRanges((r, s) => t.push(r, s)), e.iterChangedRanges((r, s, o, a) => {
    for (let c = 0; c < t.length; ) {
      let u = t[c++], h = t[c++];
      a >= u && o <= h && (n = !0);
    }
  }), n;
}
function _4(i, e) {
  return i.ranges.length == e.ranges.length && i.ranges.filter((t, n) => t.empty != e.ranges[n].empty).length === 0;
}
function vQ(i, e) {
  return i.length ? e.length ? i.concat(e) : i : e;
}
const pr = [], W4 = 200;
function SQ(i, e) {
  if (i.length) {
    let t = i[i.length - 1], n = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - W4));
    return n.length && n[n.length - 1].eq(e) ? i : (n.push(e), _h(i, i.length - 1, 1e9, t.setSelAfter(n)));
  } else
    return [Mn.selection([e])];
}
function T4(i) {
  let e = i[i.length - 1], t = i.slice();
  return t[i.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), t;
}
function Id(i, e) {
  if (!i.length)
    return i;
  let t = i.length, n = pr;
  for (; t; ) {
    let r = Z4(i[t - 1], e, n);
    if (r.changes && !r.changes.empty || r.effects.length) {
      let s = i.slice(0, t);
      return s[t - 1] = r, s;
    } else
      e = r.mapped, t--, n = r.selectionsAfter;
  }
  return n.length ? [Mn.selection(n)] : pr;
}
function Z4(i, e, t) {
  let n = vQ(i.selectionsAfter.length ? i.selectionsAfter.map((a) => a.map(e)) : pr, t);
  if (!i.changes)
    return Mn.selection(n);
  let r = i.changes.map(e), s = e.mapDesc(i.changes, !0), o = i.mapped ? i.mapped.composeDesc(s) : s;
  return new Mn(r, nt.mapEffects(i.effects, e), o, i.startSelection.map(s), n);
}
const C4 = /^(input\.type|delete)($|\.)/;
class cs {
  constructor(e, t, n = 0, r = void 0) {
    this.done = e, this.undone = t, this.prevTime = n, this.prevUserEvent = r;
  }
  isolate() {
    return this.prevTime ? new cs(this.done, this.undone) : this;
  }
  addChanges(e, t, n, r, s) {
    let o = this.done, a = o[o.length - 1];
    return a && a.changes && !a.changes.empty && e.changes && (!n || C4.test(n)) && (!a.selectionsAfter.length && t - this.prevTime < r.newGroupDelay && r.joinToEvent(s, k4(a.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    n == "input.type.compose") ? o = _h(o, o.length - 1, r.minDepth, new Mn(e.changes.compose(a.changes), vQ(nt.mapEffects(e.effects, a.changes), a.effects), a.mapped, a.startSelection, pr)) : o = _h(o, o.length, r.minDepth, e), new cs(o, pr, t, n);
  }
  addSelection(e, t, n, r) {
    let s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : pr;
    return s.length > 0 && t - this.prevTime < r && n == this.prevUserEvent && n && /^select($|\.)/.test(n) && _4(s[s.length - 1], e) ? this : new cs(SQ(this.done, e), this.undone, t, n);
  }
  addMapping(e) {
    return new cs(Id(this.done, e), Id(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, t, n) {
    let r = e == 0 ? this.done : this.undone;
    if (r.length == 0)
      return null;
    let s = r[r.length - 1], o = s.selectionsAfter[0] || t.selection;
    if (n && s.selectionsAfter.length)
      return t.update({
        selection: s.selectionsAfter[s.selectionsAfter.length - 1],
        annotations: lg.of({ side: e, rest: T4(r), selection: o }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (s.changes) {
      let a = r.length == 1 ? pr : r.slice(0, r.length - 1);
      return s.mapped && (a = Id(a, s.mapped)), t.update({
        changes: s.changes,
        selection: s.startSelection,
        effects: s.effects,
        annotations: lg.of({ side: e, rest: a, selection: o }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
cs.empty = /* @__PURE__ */ new cs(pr, pr);
const R4 = [
  { key: "Mod-z", run: mQ, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: ag, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: ag, preventDefault: !0 },
  { key: "Mod-u", run: P4, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: x4, preventDefault: !0 }
];
function $a(i, e) {
  return J.create(i.ranges.map(e), i.mainIndex);
}
function ms(i, e) {
  return i.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function Br({ state: i, dispatch: e }, t) {
  let n = $a(i.selection, t);
  return n.eq(i.selection, !0) ? !1 : (e(ms(i, n)), !0);
}
function sO(i, e) {
  return J.cursor(e ? i.to : i.from);
}
function bQ(i, e) {
  return Br(i, (t) => t.empty ? i.moveByChar(t, e) : sO(t, e));
}
function fn(i) {
  return i.textDirectionAt(i.state.selection.main.head) == ii.LTR;
}
const $Q = (i) => bQ(i, !fn(i)), yQ = (i) => bQ(i, fn(i));
function QQ(i, e) {
  return Br(i, (t) => t.empty ? i.moveByGroup(t, e) : sO(t, e));
}
const A4 = (i) => QQ(i, !fn(i)), X4 = (i) => QQ(i, fn(i));
function M4(i, e, t) {
  if (e.type.prop(t))
    return !0;
  let n = e.to - e.from;
  return n && (n > 2 || /[^\s,.;:]/.test(i.sliceDoc(e.from, e.to))) || e.firstChild;
}
function oO(i, e, t) {
  let n = ui(i).resolveInner(e.head), r = t ? ft.closedBy : ft.openedBy;
  for (let c = e.head; ; ) {
    let u = t ? n.childAfter(c) : n.childBefore(c);
    if (!u)
      break;
    M4(i, u, r) ? n = u : c = t ? u.to : u.from;
  }
  let s = n.type.prop(r), o, a;
  return s && (o = t ? as(i, n.from, 1) : as(i, n.to, -1)) && o.matched ? a = t ? o.end.to : o.end.from : a = t ? n.to : n.from, J.cursor(a, t ? -1 : 1);
}
const E4 = (i) => Br(i, (e) => oO(i.state, e, !fn(i))), q4 = (i) => Br(i, (e) => oO(i.state, e, fn(i)));
function wQ(i, e) {
  return Br(i, (t) => {
    if (!t.empty)
      return sO(t, e);
    let n = i.moveVertically(t, e);
    return n.head != t.head ? n : i.moveToLineBoundary(t, e);
  });
}
const PQ = (i) => wQ(i, !1), xQ = (i) => wQ(i, !0);
function kQ(i) {
  let e = i.scrollDOM.clientHeight < i.scrollDOM.scrollHeight - 2, t = 0, n = 0, r;
  if (e) {
    for (let s of i.state.facet(me.scrollMargins)) {
      let o = s(i);
      o != null && o.top && (t = Math.max(o == null ? void 0 : o.top, t)), o != null && o.bottom && (n = Math.max(o == null ? void 0 : o.bottom, n));
    }
    r = i.scrollDOM.clientHeight - t - n;
  } else
    r = (i.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: t,
    marginBottom: n,
    selfScroll: e,
    height: Math.max(i.defaultLineHeight, r - 5)
  };
}
function _Q(i, e) {
  let t = kQ(i), { state: n } = i, r = $a(n.selection, (o) => o.empty ? i.moveVertically(o, e, t.height) : sO(o, e));
  if (r.eq(n.selection))
    return !1;
  let s;
  if (t.selfScroll) {
    let o = i.coordsAtPos(n.selection.main.head), a = i.scrollDOM.getBoundingClientRect(), c = a.top + t.marginTop, u = a.bottom - t.marginBottom;
    o && o.top > c && o.bottom < u && (s = me.scrollIntoView(r.main.head, { y: "start", yMargin: o.top - c }));
  }
  return i.dispatch(ms(n, r), { effects: s }), !0;
}
const SS = (i) => _Q(i, !1), cg = (i) => _Q(i, !0);
function Eo(i, e, t) {
  let n = i.lineBlockAt(e.head), r = i.moveToLineBoundary(e, t);
  if (r.head == e.head && r.head != (t ? n.to : n.from) && (r = i.moveToLineBoundary(e, t, !1)), !t && r.head == n.from && n.length) {
    let s = /^\s*/.exec(i.state.sliceDoc(n.from, Math.min(n.from + 100, n.to)))[0].length;
    s && e.head != n.from + s && (r = J.cursor(n.from + s));
  }
  return r;
}
const L4 = (i) => Br(i, (e) => Eo(i, e, !0)), D4 = (i) => Br(i, (e) => Eo(i, e, !1)), V4 = (i) => Br(i, (e) => Eo(i, e, !fn(i))), U4 = (i) => Br(i, (e) => Eo(i, e, fn(i))), Y4 = (i) => Br(i, (e) => J.cursor(i.lineBlockAt(e.head).from, 1)), z4 = (i) => Br(i, (e) => J.cursor(i.lineBlockAt(e.head).to, -1));
function j4(i, e, t) {
  let n = !1, r = $a(i.selection, (s) => {
    let o = as(i, s.head, -1) || as(i, s.head, 1) || s.head > 0 && as(i, s.head - 1, 1) || s.head < i.doc.length && as(i, s.head + 1, -1);
    if (!o || !o.end)
      return s;
    n = !0;
    let a = o.start.from == s.head ? o.end.to : o.end.from;
    return J.cursor(a);
  });
  return n ? (e(ms(i, r)), !0) : !1;
}
const B4 = ({ state: i, dispatch: e }) => j4(i, e);
function Qr(i, e) {
  let t = $a(i.state.selection, (n) => {
    let r = e(n);
    return J.range(n.anchor, r.head, r.goalColumn, r.bidiLevel || void 0);
  });
  return t.eq(i.state.selection) ? !1 : (i.dispatch(ms(i.state, t)), !0);
}
function WQ(i, e) {
  return Qr(i, (t) => i.moveByChar(t, e));
}
const TQ = (i) => WQ(i, !fn(i)), ZQ = (i) => WQ(i, fn(i));
function CQ(i, e) {
  return Qr(i, (t) => i.moveByGroup(t, e));
}
const I4 = (i) => CQ(i, !fn(i)), N4 = (i) => CQ(i, fn(i)), F4 = (i) => Qr(i, (e) => oO(i.state, e, !fn(i))), G4 = (i) => Qr(i, (e) => oO(i.state, e, fn(i)));
function RQ(i, e) {
  return Qr(i, (t) => i.moveVertically(t, e));
}
const AQ = (i) => RQ(i, !1), XQ = (i) => RQ(i, !0);
function MQ(i, e) {
  return Qr(i, (t) => i.moveVertically(t, e, kQ(i).height));
}
const bS = (i) => MQ(i, !1), $S = (i) => MQ(i, !0), H4 = (i) => Qr(i, (e) => Eo(i, e, !0)), K4 = (i) => Qr(i, (e) => Eo(i, e, !1)), J4 = (i) => Qr(i, (e) => Eo(i, e, !fn(i))), eX = (i) => Qr(i, (e) => Eo(i, e, fn(i))), tX = (i) => Qr(i, (e) => J.cursor(i.lineBlockAt(e.head).from)), iX = (i) => Qr(i, (e) => J.cursor(i.lineBlockAt(e.head).to)), yS = ({ state: i, dispatch: e }) => (e(ms(i, { anchor: 0 })), !0), QS = ({ state: i, dispatch: e }) => (e(ms(i, { anchor: i.doc.length })), !0), wS = ({ state: i, dispatch: e }) => (e(ms(i, { anchor: i.selection.main.anchor, head: 0 })), !0), PS = ({ state: i, dispatch: e }) => (e(ms(i, { anchor: i.selection.main.anchor, head: i.doc.length })), !0), nX = ({ state: i, dispatch: e }) => (e(i.update({ selection: { anchor: 0, head: i.doc.length }, userEvent: "select" })), !0), rX = ({ state: i, dispatch: e }) => {
  let t = lO(i).map(({ from: n, to: r }) => J.range(n, Math.min(r + 1, i.doc.length)));
  return e(i.update({ selection: J.create(t), userEvent: "select" })), !0;
}, sX = ({ state: i, dispatch: e }) => {
  let t = $a(i.selection, (n) => {
    let r = ui(i), s = r.resolveStack(n.from, 1);
    if (n.empty) {
      let o = r.resolveStack(n.from, -1);
      o.node.from >= s.node.from && o.node.to <= s.node.to && (s = o);
    }
    for (let o = s; o; o = o.next) {
      let { node: a } = o;
      if ((a.from < n.from && a.to >= n.to || a.to > n.to && a.from <= n.from) && o.next)
        return J.range(a.to, a.from);
    }
    return n;
  });
  return t.eq(i.selection) ? !1 : (e(ms(i, t)), !0);
}, oX = ({ state: i, dispatch: e }) => {
  let t = i.selection, n = null;
  return t.ranges.length > 1 ? n = J.create([t.main]) : t.main.empty || (n = J.create([J.cursor(t.main.head)])), n ? (e(ms(i, n)), !0) : !1;
};
function rf(i, e) {
  if (i.state.readOnly)
    return !1;
  let t = "delete.selection", { state: n } = i, r = n.changeByRange((s) => {
    let { from: o, to: a } = s;
    if (o == a) {
      let c = e(s);
      c < o ? (t = "delete.backward", c = Tu(i, c, !1)) : c > o && (t = "delete.forward", c = Tu(i, c, !0)), o = Math.min(o, c), a = Math.max(a, c);
    } else
      o = Tu(i, o, !1), a = Tu(i, a, !0);
    return o == a ? { range: s } : { changes: { from: o, to: a }, range: J.cursor(o, o < s.head ? -1 : 1) };
  });
  return r.changes.empty ? !1 : (i.dispatch(n.update(r, {
    scrollIntoView: !0,
    userEvent: t,
    effects: t == "delete.selection" ? me.announce.of(n.phrase("Selection deleted")) : void 0
  })), !0);
}
function Tu(i, e, t) {
  if (i instanceof me)
    for (let n of i.state.facet(me.atomicRanges).map((r) => r(i)))
      n.between(e, e, (r, s) => {
        r < e && s > e && (e = t ? s : r);
      });
  return e;
}
const EQ = (i, e, t) => rf(i, (n) => {
  let r = n.from, { state: s } = i, o = s.doc.lineAt(r), a, c;
  if (t && !e && r > o.from && r < o.from + 200 && !/[^ \t]/.test(a = o.text.slice(0, r - o.from))) {
    if (a[a.length - 1] == "	")
      return r - 1;
    let u = ma(a, s.tabSize), h = u % Ph(s) || Ph(s);
    for (let d = 0; d < h && a[a.length - 1 - d] == " "; d++)
      r--;
    c = r;
  } else
    c = Yi(o.text, r - o.from, e, e) + o.from, c == r && o.number != (e ? s.doc.lines : 1) ? c += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(o.text.slice(c - o.from, r - o.from)) && (c = Yi(o.text, c - o.from, !1, !1) + o.from);
  return c;
}), fg = (i) => EQ(i, !1, !0), qQ = (i) => EQ(i, !0, !1), LQ = (i, e) => rf(i, (t) => {
  let n = t.head, { state: r } = i, s = r.doc.lineAt(n), o = r.charCategorizer(n);
  for (let a = null; ; ) {
    if (n == (e ? s.to : s.from)) {
      n == t.head && s.number != (e ? r.doc.lines : 1) && (n += e ? 1 : -1);
      break;
    }
    let c = Yi(s.text, n - s.from, e) + s.from, u = s.text.slice(Math.min(n, c) - s.from, Math.max(n, c) - s.from), h = o(u);
    if (a != null && h != a)
      break;
    (u != " " || n != t.head) && (a = h), n = c;
  }
  return n;
}), DQ = (i) => LQ(i, !1), lX = (i) => LQ(i, !0), aX = (i) => rf(i, (e) => {
  let t = i.lineBlockAt(e.head).to;
  return e.head < t ? t : Math.min(i.state.doc.length, e.head + 1);
}), cX = (i) => rf(i, (e) => {
  let t = i.moveToLineBoundary(e, !1).head;
  return e.head > t ? t : Math.max(0, e.head - 1);
}), fX = (i) => rf(i, (e) => {
  let t = i.moveToLineBoundary(e, !0).head;
  return e.head < t ? t : Math.min(i.state.doc.length, e.head + 1);
}), uX = ({ state: i, dispatch: e }) => {
  if (i.readOnly)
    return !1;
  let t = i.changeByRange((n) => ({
    changes: { from: n.from, to: n.to, insert: Tt.of(["", ""]) },
    range: J.cursor(n.from)
  }));
  return e(i.update(t, { scrollIntoView: !0, userEvent: "input" })), !0;
}, hX = ({ state: i, dispatch: e }) => {
  if (i.readOnly)
    return !1;
  let t = i.changeByRange((n) => {
    if (!n.empty || n.from == 0 || n.from == i.doc.length)
      return { range: n };
    let r = n.from, s = i.doc.lineAt(r), o = r == s.from ? r - 1 : Yi(s.text, r - s.from, !1) + s.from, a = r == s.to ? r + 1 : Yi(s.text, r - s.from, !0) + s.from;
    return {
      changes: { from: o, to: a, insert: i.doc.slice(r, a).append(i.doc.slice(o, r)) },
      range: J.cursor(a)
    };
  });
  return t.changes.empty ? !1 : (e(i.update(t, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function lO(i) {
  let e = [], t = -1;
  for (let n of i.selection.ranges) {
    let r = i.doc.lineAt(n.from), s = i.doc.lineAt(n.to);
    if (!n.empty && n.to == s.from && (s = i.doc.lineAt(n.to - 1)), t >= r.number) {
      let o = e[e.length - 1];
      o.to = s.to, o.ranges.push(n);
    } else
      e.push({ from: r.from, to: s.to, ranges: [n] });
    t = s.number + 1;
  }
  return e;
}
function VQ(i, e, t) {
  if (i.readOnly)
    return !1;
  let n = [], r = [];
  for (let s of lO(i)) {
    if (t ? s.to == i.doc.length : s.from == 0)
      continue;
    let o = i.doc.lineAt(t ? s.to + 1 : s.from - 1), a = o.length + 1;
    if (t) {
      n.push({ from: s.to, to: o.to }, { from: s.from, insert: o.text + i.lineBreak });
      for (let c of s.ranges)
        r.push(J.range(Math.min(i.doc.length, c.anchor + a), Math.min(i.doc.length, c.head + a)));
    } else {
      n.push({ from: o.from, to: s.from }, { from: s.to, insert: i.lineBreak + o.text });
      for (let c of s.ranges)
        r.push(J.range(c.anchor - a, c.head - a));
    }
  }
  return n.length ? (e(i.update({
    changes: n,
    scrollIntoView: !0,
    selection: J.create(r, i.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const OX = ({ state: i, dispatch: e }) => VQ(i, e, !1), dX = ({ state: i, dispatch: e }) => VQ(i, e, !0);
function UQ(i, e, t) {
  if (i.readOnly)
    return !1;
  let n = [];
  for (let r of lO(i))
    t ? n.push({ from: r.from, insert: i.doc.slice(r.from, r.to) + i.lineBreak }) : n.push({ from: r.to, insert: i.lineBreak + i.doc.slice(r.from, r.to) });
  return e(i.update({ changes: n, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const pX = ({ state: i, dispatch: e }) => UQ(i, e, !1), gX = ({ state: i, dispatch: e }) => UQ(i, e, !0), mX = (i) => {
  if (i.state.readOnly)
    return !1;
  let { state: e } = i, t = e.changes(lO(e).map(({ from: r, to: s }) => (r > 0 ? r-- : s < e.doc.length && s++, { from: r, to: s }))), n = $a(e.selection, (r) => {
    let s;
    if (i.lineWrapping) {
      let o = i.lineBlockAt(r.head), a = i.coordsAtPos(r.head, r.assoc || 1);
      a && (s = o.bottom + i.documentTop - a.bottom + i.defaultLineHeight / 2);
    }
    return i.moveVertically(r, !0, s);
  }).map(t);
  return i.dispatch({ changes: t, selection: n, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function vX(i, e) {
  if (/\(\)|\[\]|\{\}/.test(i.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let t = ui(i).resolveInner(e), n = t.childBefore(e), r = t.childAfter(e), s;
  return n && r && n.to <= e && r.from >= e && (s = n.type.prop(ft.closedBy)) && s.indexOf(r.name) > -1 && i.doc.lineAt(n.to).from == i.doc.lineAt(r.from).from && !/\S/.test(i.sliceDoc(n.to, r.from)) ? { from: n.to, to: r.from } : null;
}
const xS = /* @__PURE__ */ YQ(!1), SX = /* @__PURE__ */ YQ(!0);
function YQ(i) {
  return ({ state: e, dispatch: t }) => {
    if (e.readOnly)
      return !1;
    let n = e.changeByRange((r) => {
      let { from: s, to: o } = r, a = e.doc.lineAt(s), c = !i && s == o && vX(e, s);
      i && (s = o = (o <= a.to ? a : e.doc.lineAt(o)).to);
      let u = new iO(e, { simulateBreak: s, simulateDoubleBreak: !!c }), h = im(u, s);
      for (h == null && (h = ma(/^\s*/.exec(e.doc.lineAt(s).text)[0], e.tabSize)); o < a.to && /\s/.test(a.text[o - a.from]); )
        o++;
      c ? { from: s, to: o } = c : s > a.from && s < a.from + 100 && !/\S/.test(a.text.slice(0, s)) && (s = a.from);
      let d = ["", Ec(e, h)];
      return c && d.push(Ec(e, u.lineIndent(a.from, -1))), {
        changes: { from: s, to: o, insert: Tt.of(d) },
        range: J.cursor(s + 1 + d[1].length)
      };
    });
    return t(e.update(n, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function om(i, e) {
  let t = -1;
  return i.changeByRange((n) => {
    let r = [];
    for (let o = n.from; o <= n.to; ) {
      let a = i.doc.lineAt(o);
      a.number > t && (n.empty || n.to > a.from) && (e(a, r, n), t = a.number), o = a.to + 1;
    }
    let s = i.changes(r);
    return {
      changes: r,
      range: J.range(s.mapPos(n.anchor, 1), s.mapPos(n.head, 1))
    };
  });
}
const bX = ({ state: i, dispatch: e }) => {
  if (i.readOnly)
    return !1;
  let t = /* @__PURE__ */ Object.create(null), n = new iO(i, { overrideIndentation: (s) => {
    let o = t[s];
    return o ?? -1;
  } }), r = om(i, (s, o, a) => {
    let c = im(n, s.from);
    if (c == null)
      return;
    /\S/.test(s.text) || (c = 0);
    let u = /^\s*/.exec(s.text)[0], h = Ec(i, c);
    (u != h || a.from < s.from + u.length) && (t[s.from] = c, o.push({ from: s.from, to: s.from + u.length, insert: h }));
  });
  return r.changes.empty || e(i.update(r, { userEvent: "indent" })), !0;
}, zQ = ({ state: i, dispatch: e }) => i.readOnly ? !1 : (e(i.update(om(i, (t, n) => {
  n.push({ from: t.from, insert: i.facet(tO) });
}), { userEvent: "input.indent" })), !0), jQ = ({ state: i, dispatch: e }) => i.readOnly ? !1 : (e(i.update(om(i, (t, n) => {
  let r = /^\s*/.exec(t.text)[0];
  if (!r)
    return;
  let s = ma(r, i.tabSize), o = 0, a = Ec(i, Math.max(0, s - Ph(i)));
  for (; o < r.length && o < a.length && r.charCodeAt(o) == a.charCodeAt(o); )
    o++;
  n.push({ from: t.from + o, to: t.from + r.length, insert: a.slice(o) });
}), { userEvent: "delete.dedent" })), !0), $X = (i) => (i.setTabFocusMode(), !0), yX = [
  { key: "Ctrl-b", run: $Q, shift: TQ, preventDefault: !0 },
  { key: "Ctrl-f", run: yQ, shift: ZQ },
  { key: "Ctrl-p", run: PQ, shift: AQ },
  { key: "Ctrl-n", run: xQ, shift: XQ },
  { key: "Ctrl-a", run: Y4, shift: tX },
  { key: "Ctrl-e", run: z4, shift: iX },
  { key: "Ctrl-d", run: qQ },
  { key: "Ctrl-h", run: fg },
  { key: "Ctrl-k", run: aX },
  { key: "Ctrl-Alt-h", run: DQ },
  { key: "Ctrl-o", run: uX },
  { key: "Ctrl-t", run: hX },
  { key: "Ctrl-v", run: cg }
], QX = /* @__PURE__ */ [
  { key: "ArrowLeft", run: $Q, shift: TQ, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: A4, shift: I4, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: V4, shift: J4, preventDefault: !0 },
  { key: "ArrowRight", run: yQ, shift: ZQ, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: X4, shift: N4, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: U4, shift: eX, preventDefault: !0 },
  { key: "ArrowUp", run: PQ, shift: AQ, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: yS, shift: wS },
  { mac: "Ctrl-ArrowUp", run: SS, shift: bS },
  { key: "ArrowDown", run: xQ, shift: XQ, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: QS, shift: PS },
  { mac: "Ctrl-ArrowDown", run: cg, shift: $S },
  { key: "PageUp", run: SS, shift: bS },
  { key: "PageDown", run: cg, shift: $S },
  { key: "Home", run: D4, shift: K4, preventDefault: !0 },
  { key: "Mod-Home", run: yS, shift: wS },
  { key: "End", run: L4, shift: H4, preventDefault: !0 },
  { key: "Mod-End", run: QS, shift: PS },
  { key: "Enter", run: xS, shift: xS },
  { key: "Mod-a", run: nX },
  { key: "Backspace", run: fg, shift: fg },
  { key: "Delete", run: qQ },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: DQ },
  { key: "Mod-Delete", mac: "Alt-Delete", run: lX },
  { mac: "Mod-Backspace", run: cX },
  { mac: "Mod-Delete", run: fX }
].concat(/* @__PURE__ */ yX.map((i) => ({ mac: i.key, run: i.run, shift: i.shift }))), wX = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: E4, shift: F4 },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: q4, shift: G4 },
  { key: "Alt-ArrowUp", run: OX },
  { key: "Shift-Alt-ArrowUp", run: pX },
  { key: "Alt-ArrowDown", run: dX },
  { key: "Shift-Alt-ArrowDown", run: gX },
  { key: "Escape", run: oX },
  { key: "Mod-Enter", run: SX },
  { key: "Alt-l", mac: "Ctrl-l", run: rX },
  { key: "Mod-i", run: sX, preventDefault: !0 },
  { key: "Mod-[", run: jQ },
  { key: "Mod-]", run: zQ },
  { key: "Mod-Alt-\\", run: bX },
  { key: "Shift-Mod-k", run: mX },
  { key: "Shift-Mod-\\", run: B4 },
  { key: "Mod-/", run: p4 },
  { key: "Alt-A", run: m4 },
  { key: "Ctrl-m", mac: "Shift-Alt-m", run: $X }
].concat(QX);
function Kt() {
  var i = arguments[0];
  typeof i == "string" && (i = document.createElement(i));
  var e = 1, t = arguments[1];
  if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
    for (var n in t) if (Object.prototype.hasOwnProperty.call(t, n)) {
      var r = t[n];
      typeof r == "string" ? i.setAttribute(n, r) : r != null && (i[n] = r);
    }
    e++;
  }
  for (; e < arguments.length; e++) BQ(i, arguments[e]);
  return i;
}
function BQ(i, e) {
  if (typeof e == "string")
    i.appendChild(document.createTextNode(e));
  else if (e != null) if (e.nodeType != null)
    i.appendChild(e);
  else if (Array.isArray(e))
    for (var t = 0; t < e.length; t++) BQ(i, e[t]);
  else
    throw new RangeError("Unsupported child node: " + e);
}
const kS = typeof String.prototype.normalize == "function" ? (i) => i.normalize("NFKD") : (i) => i;
class aa {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, t, n = 0, r = e.length, s, o) {
    this.test = o, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(n, r), this.bufferStart = n, this.normalize = s ? (a) => s(kS(a)) : kS, this.query = this.normalize(t);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return Cn(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let t = Ag(e), n = this.bufferStart + this.bufferPos;
      this.bufferPos += rs(e);
      let r = this.normalize(t);
      if (r.length)
        for (let s = 0, o = n; ; s++) {
          let a = r.charCodeAt(s), c = this.match(a, o, this.bufferPos + this.bufferStart);
          if (s == r.length - 1) {
            if (c)
              return this.value = c, this;
            break;
          }
          o == n && s < t.length && t.charCodeAt(s) == a && o++;
        }
    }
  }
  match(e, t, n) {
    let r = null;
    for (let s = 0; s < this.matches.length; s += 2) {
      let o = this.matches[s], a = !1;
      this.query.charCodeAt(o) == e && (o == this.query.length - 1 ? r = { from: this.matches[s + 1], to: n } : (this.matches[s]++, a = !0)), a || (this.matches.splice(s, 2), s -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? r = { from: t, to: n } : this.matches.push(1, t)), r && this.test && !this.test(r.from, r.to, this.buffer, this.bufferStart) && (r = null), r;
  }
}
typeof Symbol < "u" && (aa.prototype[Symbol.iterator] = function() {
  return this;
});
const IQ = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, lm = "gm" + (/x/.unicode == null ? "" : "u");
class NQ {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, t, n, r = 0, s = e.length) {
    if (this.text = e, this.to = s, this.curLine = "", this.done = !1, this.value = IQ, /\\[sWDnr]|\n|\r|\[\^/.test(t))
      return new FQ(e, t, n, r, s);
    this.re = new RegExp(t, lm + (n != null && n.ignoreCase ? "i" : "")), this.test = n == null ? void 0 : n.test, this.iter = e.iter();
    let o = e.lineAt(r);
    this.curLineStart = o.from, this.matchPos = Wh(e, r), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let t = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (t) {
        let n = this.curLineStart + t.index, r = n + t[0].length;
        if (this.matchPos = Wh(this.text, r + (n == r ? 1 : 0)), n == this.curLineStart + this.curLine.length && this.nextLine(), (n < r || n > this.value.to) && (!this.test || this.test(n, r, t)))
          return this.value = { from: n, to: r, match: t }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const Nd = /* @__PURE__ */ new WeakMap();
class ta {
  constructor(e, t) {
    this.from = e, this.text = t;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, t, n) {
    let r = Nd.get(e);
    if (!r || r.from >= n || r.to <= t) {
      let a = new ta(t, e.sliceString(t, n));
      return Nd.set(e, a), a;
    }
    if (r.from == t && r.to == n)
      return r;
    let { text: s, from: o } = r;
    return o > t && (s = e.sliceString(t, o) + s, o = t), r.to < n && (s += e.sliceString(r.to, n)), Nd.set(e, new ta(o, s)), new ta(t, s.slice(t - o, n - o));
  }
}
class FQ {
  constructor(e, t, n, r, s) {
    this.text = e, this.to = s, this.done = !1, this.value = IQ, this.matchPos = Wh(e, r), this.re = new RegExp(t, lm + (n != null && n.ignoreCase ? "i" : "")), this.test = n == null ? void 0 : n.test, this.flat = ta.get(e, r, this.chunkEnd(
      r + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, t = this.re.exec(this.flat.text);
      if (t && !t[0] && t.index == e && (this.re.lastIndex = e + 1, t = this.re.exec(this.flat.text)), t) {
        let n = this.flat.from + t.index, r = n + t[0].length;
        if ((this.flat.to >= this.to || t.index + t[0].length <= this.flat.text.length - 10) && (!this.test || this.test(n, r, t)))
          return this.value = { from: n, to: r, match: t }, this.matchPos = Wh(this.text, r + (n == r ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = ta.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (NQ.prototype[Symbol.iterator] = FQ.prototype[Symbol.iterator] = function() {
  return this;
});
function PX(i) {
  try {
    return new RegExp(i, lm), !0;
  } catch {
    return !1;
  }
}
function Wh(i, e) {
  if (e >= i.length)
    return e;
  let t = i.lineAt(e), n;
  for (; e < t.to && (n = t.text.charCodeAt(e - t.from)) >= 56320 && n < 57344; )
    e++;
  return e;
}
function ug(i) {
  let e = String(i.state.doc.lineAt(i.state.selection.main.head).number), t = Kt("input", { class: "cm-textfield", name: "line", value: e }), n = Kt("form", {
    class: "cm-gotoLine",
    onkeydown: (s) => {
      s.keyCode == 27 ? (s.preventDefault(), i.dispatch({ effects: Th.of(!1) }), i.focus()) : s.keyCode == 13 && (s.preventDefault(), r());
    },
    onsubmit: (s) => {
      s.preventDefault(), r();
    }
  }, Kt("label", i.state.phrase("Go to line"), ": ", t), " ", Kt("button", { class: "cm-button", type: "submit" }, i.state.phrase("go")));
  function r() {
    let s = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);
    if (!s)
      return;
    let { state: o } = i, a = o.doc.lineAt(o.selection.main.head), [, c, u, h, d] = s, p = h ? +h.slice(1) : 0, m = u ? +u : a.number;
    if (u && d) {
      let w = m / 100;
      c && (w = w * (c == "-" ? -1 : 1) + a.number / o.doc.lines), m = Math.round(o.doc.lines * w);
    } else u && c && (m = m * (c == "-" ? -1 : 1) + a.number);
    let b = o.doc.line(Math.max(1, Math.min(o.doc.lines, m))), y = J.cursor(b.from + Math.max(0, Math.min(p, b.length)));
    i.dispatch({
      effects: [Th.of(!1), me.scrollIntoView(y.from, { y: "center" })],
      selection: y
    }), i.focus();
  }
  return { dom: n };
}
const Th = /* @__PURE__ */ nt.define(), _S = /* @__PURE__ */ Wi.define({
  create() {
    return !0;
  },
  update(i, e) {
    for (let t of e.effects)
      t.is(Th) && (i = t.value);
    return i;
  },
  provide: (i) => Rc.from(i, (e) => e ? ug : null)
}), xX = (i) => {
  let e = Cc(i, ug);
  if (!e) {
    let t = [Th.of(!0)];
    i.state.field(_S, !1) == null && t.push(nt.appendConfig.of([_S, kX])), i.dispatch({ effects: t }), e = Cc(i, ug);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, kX = /* @__PURE__ */ me.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), _X = {
  highlightWordAroundCursor: !1,
  minSelectionLength: 1,
  maxMatches: 100,
  wholeWords: !1
}, WX = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, _X, {
      highlightWordAroundCursor: (e, t) => e || t,
      minSelectionLength: Math.min,
      maxMatches: Math.min
    });
  }
});
function TX(i) {
  return [XX, AX];
}
const ZX = /* @__PURE__ */ Ue.mark({ class: "cm-selectionMatch" }), CX = /* @__PURE__ */ Ue.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
function WS(i, e, t, n) {
  return (t == 0 || i(e.sliceDoc(t - 1, t)) != ri.Word) && (n == e.doc.length || i(e.sliceDoc(n, n + 1)) != ri.Word);
}
function RX(i, e, t, n) {
  return i(e.sliceDoc(t, t + 1)) == ri.Word && i(e.sliceDoc(n - 1, n)) == ri.Word;
}
const AX = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.decorations = this.getDeco(i);
  }
  update(i) {
    (i.selectionSet || i.docChanged || i.viewportChanged) && (this.decorations = this.getDeco(i.view));
  }
  getDeco(i) {
    let e = i.state.facet(WX), { state: t } = i, n = t.selection;
    if (n.ranges.length > 1)
      return Ue.none;
    let r = n.main, s, o = null;
    if (r.empty) {
      if (!e.highlightWordAroundCursor)
        return Ue.none;
      let c = t.wordAt(r.head);
      if (!c)
        return Ue.none;
      o = t.charCategorizer(r.head), s = t.sliceDoc(c.from, c.to);
    } else {
      let c = r.to - r.from;
      if (c < e.minSelectionLength || c > 200)
        return Ue.none;
      if (e.wholeWords) {
        if (s = t.sliceDoc(r.from, r.to), o = t.charCategorizer(r.head), !(WS(o, t, r.from, r.to) && RX(o, t, r.from, r.to)))
          return Ue.none;
      } else if (s = t.sliceDoc(r.from, r.to), !s)
        return Ue.none;
    }
    let a = [];
    for (let c of i.visibleRanges) {
      let u = new aa(t.doc, s, c.from, c.to);
      for (; !u.next().done; ) {
        let { from: h, to: d } = u.value;
        if ((!o || WS(o, t, h, d)) && (r.empty && h <= r.from && d >= r.to ? a.push(CX.range(h, d)) : (h >= r.to || d <= r.from) && a.push(ZX.range(h, d)), a.length > e.maxMatches))
          return Ue.none;
      }
    }
    return Ue.set(a);
  }
}, {
  decorations: (i) => i.decorations
}), XX = /* @__PURE__ */ me.baseTheme({
  ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
  ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
}), MX = ({ state: i, dispatch: e }) => {
  let { selection: t } = i, n = J.create(t.ranges.map((r) => i.wordAt(r.head) || J.cursor(r.head)), t.mainIndex);
  return n.eq(t) ? !1 : (e(i.update({ selection: n })), !0);
};
function EX(i, e) {
  let { main: t, ranges: n } = i.selection, r = i.wordAt(t.head), s = r && r.from == t.from && r.to == t.to;
  for (let o = !1, a = new aa(i.doc, e, n[n.length - 1].to); ; )
    if (a.next(), a.done) {
      if (o)
        return null;
      a = new aa(i.doc, e, 0, Math.max(0, n[n.length - 1].from - 1)), o = !0;
    } else {
      if (o && n.some((c) => c.from == a.value.from))
        continue;
      if (s) {
        let c = i.wordAt(a.value.from);
        if (!c || c.from != a.value.from || c.to != a.value.to)
          continue;
      }
      return a.value;
    }
}
const qX = ({ state: i, dispatch: e }) => {
  let { ranges: t } = i.selection;
  if (t.some((s) => s.from === s.to))
    return MX({ state: i, dispatch: e });
  let n = i.sliceDoc(t[0].from, t[0].to);
  if (i.selection.ranges.some((s) => i.sliceDoc(s.from, s.to) != n))
    return !1;
  let r = EX(i, n);
  return r ? (e(i.update({
    selection: i.selection.addRange(J.range(r.from, r.to), !1),
    effects: me.scrollIntoView(r.to)
  })), !0) : !1;
}, ya = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new GX(e),
      scrollToMatch: (e) => me.scrollIntoView(e)
    });
  }
});
class GQ {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || PX(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (t, n) => n == "n" ? `
` : n == "r" ? "\r" : n == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new UX(this) : new DX(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, t = 0, n) {
    let r = e.doc ? e : St.create({ doc: e });
    return n == null && (n = r.doc.length), this.regexp ? Yl(this, r, t, n) : Ul(this, r, t, n);
  }
}
class HQ {
  constructor(e) {
    this.spec = e;
  }
}
function Ul(i, e, t, n) {
  return new aa(e.doc, i.unquoted, t, n, i.caseSensitive ? void 0 : (r) => r.toLowerCase(), i.wholeWord ? LX(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function LX(i, e) {
  return (t, n, r, s) => ((s > t || s + r.length < n) && (s = Math.max(0, t - 2), r = i.sliceString(s, Math.min(i.length, n + 2))), (e(Zh(r, t - s)) != ri.Word || e(Ch(r, t - s)) != ri.Word) && (e(Ch(r, n - s)) != ri.Word || e(Zh(r, n - s)) != ri.Word));
}
class DX extends HQ {
  constructor(e) {
    super(e);
  }
  nextMatch(e, t, n) {
    let r = Ul(this.spec, e, n, e.doc.length).nextOverlapping();
    if (r.done) {
      let s = Math.min(e.doc.length, t + this.spec.unquoted.length);
      r = Ul(this.spec, e, 0, s).nextOverlapping();
    }
    return r.done || r.value.from == t && r.value.to == n ? null : r.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, t, n) {
    for (let r = n; ; ) {
      let s = Math.max(t, r - 1e4 - this.spec.unquoted.length), o = Ul(this.spec, e, s, r), a = null;
      for (; !o.nextOverlapping().done; )
        a = o.value;
      if (a)
        return a;
      if (s == t)
        return null;
      r -= 1e4;
    }
  }
  prevMatch(e, t, n) {
    let r = this.prevMatchInRange(e, 0, t);
    return r || (r = this.prevMatchInRange(e, Math.max(0, n - this.spec.unquoted.length), e.doc.length)), r && (r.from != t || r.to != n) ? r : null;
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, t) {
    let n = Ul(this.spec, e, 0, e.doc.length), r = [];
    for (; !n.next().done; ) {
      if (r.length >= t)
        return null;
      r.push(n.value);
    }
    return r;
  }
  highlight(e, t, n, r) {
    let s = Ul(this.spec, e, Math.max(0, t - this.spec.unquoted.length), Math.min(n + this.spec.unquoted.length, e.doc.length));
    for (; !s.next().done; )
      r(s.value.from, s.value.to);
  }
}
function Yl(i, e, t, n) {
  return new NQ(e.doc, i.search, {
    ignoreCase: !i.caseSensitive,
    test: i.wholeWord ? VX(e.charCategorizer(e.selection.main.head)) : void 0
  }, t, n);
}
function Zh(i, e) {
  return i.slice(Yi(i, e, !1), e);
}
function Ch(i, e) {
  return i.slice(e, Yi(i, e));
}
function VX(i) {
  return (e, t, n) => !n[0].length || (i(Zh(n.input, n.index)) != ri.Word || i(Ch(n.input, n.index)) != ri.Word) && (i(Ch(n.input, n.index + n[0].length)) != ri.Word || i(Zh(n.input, n.index + n[0].length)) != ri.Word);
}
class UX extends HQ {
  nextMatch(e, t, n) {
    let r = Yl(this.spec, e, n, e.doc.length).next();
    return r.done && (r = Yl(this.spec, e, 0, t).next()), r.done ? null : r.value;
  }
  prevMatchInRange(e, t, n) {
    for (let r = 1; ; r++) {
      let s = Math.max(
        t,
        n - r * 1e4
        /* FindPrev.ChunkSize */
      ), o = Yl(this.spec, e, s, n), a = null;
      for (; !o.next().done; )
        a = o.value;
      if (a && (s == t || a.from > s + 10))
        return a;
      if (s == t)
        return null;
    }
  }
  prevMatch(e, t, n) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, n, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&]|\d+)/g, (t, n) => {
      if (n == "&")
        return e.match[0];
      if (n == "$")
        return "$";
      for (let r = n.length; r > 0; r--) {
        let s = +n.slice(0, r);
        if (s > 0 && s < e.match.length)
          return e.match[s] + n.slice(r);
      }
      return t;
    });
  }
  matchAll(e, t) {
    let n = Yl(this.spec, e, 0, e.doc.length), r = [];
    for (; !n.next().done; ) {
      if (r.length >= t)
        return null;
      r.push(n.value);
    }
    return r;
  }
  highlight(e, t, n, r) {
    let s = Yl(this.spec, e, Math.max(
      0,
      t - 250
      /* RegExp.HighlightMargin */
    ), Math.min(n + 250, e.doc.length));
    for (; !s.next().done; )
      r(s.value.from, s.value.to);
  }
}
const qc = /* @__PURE__ */ nt.define(), am = /* @__PURE__ */ nt.define(), Po = /* @__PURE__ */ Wi.define({
  create(i) {
    return new Fd(hg(i).create(), null);
  },
  update(i, e) {
    for (let t of e.effects)
      t.is(qc) ? i = new Fd(t.value.create(), i.panel) : t.is(am) && (i = new Fd(i.query, t.value ? cm : null));
    return i;
  },
  provide: (i) => Rc.from(i, (e) => e.panel)
});
class Fd {
  constructor(e, t) {
    this.query = e, this.panel = t;
  }
}
const YX = /* @__PURE__ */ Ue.mark({ class: "cm-searchMatch" }), zX = /* @__PURE__ */ Ue.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), jX = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.view = i, this.decorations = this.highlight(i.state.field(Po));
  }
  update(i) {
    let e = i.state.field(Po);
    (e != i.startState.field(Po) || i.docChanged || i.selectionSet || i.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: i, panel: e }) {
    if (!e || !i.spec.valid)
      return Ue.none;
    let { view: t } = this, n = new Is();
    for (let r = 0, s = t.visibleRanges, o = s.length; r < o; r++) {
      let { from: a, to: c } = s[r];
      for (; r < o - 1 && c > s[r + 1].from - 2 * 250; )
        c = s[++r].to;
      i.highlight(t.state, a, c, (u, h) => {
        let d = t.state.selection.ranges.some((p) => p.from == u && p.to == h);
        n.add(u, h, d ? zX : YX);
      });
    }
    return n.finish();
  }
}, {
  decorations: (i) => i.decorations
});
function sf(i) {
  return (e) => {
    let t = e.state.field(Po, !1);
    return t && t.query.spec.valid ? i(e, t) : ew(e);
  };
}
const Rh = /* @__PURE__ */ sf((i, { query: e }) => {
  let { to: t } = i.state.selection.main, n = e.nextMatch(i.state, t, t);
  if (!n)
    return !1;
  let r = J.single(n.from, n.to), s = i.state.facet(ya);
  return i.dispatch({
    selection: r,
    effects: [fm(i, n), s.scrollToMatch(r.main, i)],
    userEvent: "select.search"
  }), JQ(i), !0;
}), Ah = /* @__PURE__ */ sf((i, { query: e }) => {
  let { state: t } = i, { from: n } = t.selection.main, r = e.prevMatch(t, n, n);
  if (!r)
    return !1;
  let s = J.single(r.from, r.to), o = i.state.facet(ya);
  return i.dispatch({
    selection: s,
    effects: [fm(i, r), o.scrollToMatch(s.main, i)],
    userEvent: "select.search"
  }), JQ(i), !0;
}), BX = /* @__PURE__ */ sf((i, { query: e }) => {
  let t = e.matchAll(i.state, 1e3);
  return !t || !t.length ? !1 : (i.dispatch({
    selection: J.create(t.map((n) => J.range(n.from, n.to))),
    userEvent: "select.search.matches"
  }), !0);
}), IX = ({ state: i, dispatch: e }) => {
  let t = i.selection;
  if (t.ranges.length > 1 || t.main.empty)
    return !1;
  let { from: n, to: r } = t.main, s = [], o = 0;
  for (let a = new aa(i.doc, i.sliceDoc(n, r)); !a.next().done; ) {
    if (s.length > 1e3)
      return !1;
    a.value.from == n && (o = s.length), s.push(J.range(a.value.from, a.value.to));
  }
  return e(i.update({
    selection: J.create(s, o),
    userEvent: "select.search.matches"
  })), !0;
}, TS = /* @__PURE__ */ sf((i, { query: e }) => {
  let { state: t } = i, { from: n, to: r } = t.selection.main;
  if (t.readOnly)
    return !1;
  let s = e.nextMatch(t, n, n);
  if (!s)
    return !1;
  let o = s, a = [], c, u, h = [];
  if (o.from == n && o.to == r && (u = t.toText(e.getReplacement(o)), a.push({ from: o.from, to: o.to, insert: u }), o = e.nextMatch(t, o.from, o.to), h.push(me.announce.of(t.phrase("replaced match on line $", t.doc.lineAt(n).number) + "."))), o) {
    let d = a.length == 0 || a[0].from >= s.to ? 0 : s.to - s.from - u.length;
    c = J.single(o.from - d, o.to - d), h.push(fm(i, o)), h.push(t.facet(ya).scrollToMatch(c.main, i));
  }
  return i.dispatch({
    changes: a,
    selection: c,
    effects: h,
    userEvent: "input.replace"
  }), !0;
}), NX = /* @__PURE__ */ sf((i, { query: e }) => {
  if (i.state.readOnly)
    return !1;
  let t = e.matchAll(i.state, 1e9).map((r) => {
    let { from: s, to: o } = r;
    return { from: s, to: o, insert: e.getReplacement(r) };
  });
  if (!t.length)
    return !1;
  let n = i.state.phrase("replaced $ matches", t.length) + ".";
  return i.dispatch({
    changes: t,
    effects: me.announce.of(n),
    userEvent: "input.replace.all"
  }), !0;
});
function cm(i) {
  return i.state.facet(ya).createPanel(i);
}
function hg(i, e) {
  var t, n, r, s, o;
  let a = i.selection.main, c = a.empty || a.to > a.from + 100 ? "" : i.sliceDoc(a.from, a.to);
  if (e && !c)
    return e;
  let u = i.facet(ya);
  return new GQ({
    search: ((t = e == null ? void 0 : e.literal) !== null && t !== void 0 ? t : u.literal) ? c : c.replace(/\n/g, "\\n"),
    caseSensitive: (n = e == null ? void 0 : e.caseSensitive) !== null && n !== void 0 ? n : u.caseSensitive,
    literal: (r = e == null ? void 0 : e.literal) !== null && r !== void 0 ? r : u.literal,
    regexp: (s = e == null ? void 0 : e.regexp) !== null && s !== void 0 ? s : u.regexp,
    wholeWord: (o = e == null ? void 0 : e.wholeWord) !== null && o !== void 0 ? o : u.wholeWord
  });
}
function KQ(i) {
  let e = Cc(i, cm);
  return e && e.dom.querySelector("[main-field]");
}
function JQ(i) {
  let e = KQ(i);
  e && e == i.root.activeElement && e.select();
}
const ew = (i) => {
  let e = i.state.field(Po, !1);
  if (e && e.panel) {
    let t = KQ(i);
    if (t && t != i.root.activeElement) {
      let n = hg(i.state, e.query.spec);
      n.valid && i.dispatch({ effects: qc.of(n) }), t.focus(), t.select();
    }
  } else
    i.dispatch({ effects: [
      am.of(!0),
      e ? qc.of(hg(i.state, e.query.spec)) : nt.appendConfig.of(KX)
    ] });
  return !0;
}, tw = (i) => {
  let e = i.state.field(Po, !1);
  if (!e || !e.panel)
    return !1;
  let t = Cc(i, cm);
  return t && t.dom.contains(i.root.activeElement) && i.focus(), i.dispatch({ effects: am.of(!1) }), !0;
}, FX = [
  { key: "Mod-f", run: ew, scope: "editor search-panel" },
  { key: "F3", run: Rh, shift: Ah, scope: "editor search-panel", preventDefault: !0 },
  { key: "Mod-g", run: Rh, shift: Ah, scope: "editor search-panel", preventDefault: !0 },
  { key: "Escape", run: tw, scope: "editor search-panel" },
  { key: "Mod-Shift-l", run: IX },
  { key: "Mod-Alt-g", run: xX },
  { key: "Mod-d", run: qX, preventDefault: !0 }
];
class GX {
  constructor(e) {
    this.view = e;
    let t = this.query = e.state.field(Po).query.spec;
    this.commit = this.commit.bind(this), this.searchField = Kt("input", {
      value: t.search,
      placeholder: In(e, "Find"),
      "aria-label": In(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = Kt("input", {
      value: t.replace,
      placeholder: In(e, "Replace"),
      "aria-label": In(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = Kt("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: t.caseSensitive,
      onchange: this.commit
    }), this.reField = Kt("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: t.regexp,
      onchange: this.commit
    }), this.wordField = Kt("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: t.wholeWord,
      onchange: this.commit
    });
    function n(r, s, o) {
      return Kt("button", { class: "cm-button", name: r, onclick: s, type: "button" }, o);
    }
    this.dom = Kt("div", { onkeydown: (r) => this.keydown(r), class: "cm-search" }, [
      this.searchField,
      n("next", () => Rh(e), [In(e, "next")]),
      n("prev", () => Ah(e), [In(e, "previous")]),
      n("select", () => BX(e), [In(e, "all")]),
      Kt("label", null, [this.caseField, In(e, "match case")]),
      Kt("label", null, [this.reField, In(e, "regexp")]),
      Kt("label", null, [this.wordField, In(e, "by word")]),
      ...e.state.readOnly ? [] : [
        Kt("br"),
        this.replaceField,
        n("replace", () => TS(e), [In(e, "replace")]),
        n("replaceAll", () => NX(e), [In(e, "replace all")])
      ],
      Kt("button", {
        name: "close",
        onclick: () => tw(e),
        "aria-label": In(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new GQ({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: qc.of(e) }));
  }
  keydown(e) {
    aR(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? Ah : Rh)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), TS(this.view));
  }
  update(e) {
    for (let t of e.transactions)
      for (let n of t.effects)
        n.is(qc) && !n.value.eq(this.query) && this.setQuery(n.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(ya).top;
  }
}
function In(i, e) {
  return i.state.phrase(e);
}
const Zu = 30, Cu = /[\s\.,:;?!]/;
function fm(i, { from: e, to: t }) {
  let n = i.state.doc.lineAt(e), r = i.state.doc.lineAt(t).to, s = Math.max(n.from, e - Zu), o = Math.min(r, t + Zu), a = i.state.sliceDoc(s, o);
  if (s != n.from) {
    for (let c = 0; c < Zu; c++)
      if (!Cu.test(a[c + 1]) && Cu.test(a[c])) {
        a = a.slice(c);
        break;
      }
  }
  if (o != r) {
    for (let c = a.length - 1; c > a.length - Zu; c--)
      if (!Cu.test(a[c - 1]) && Cu.test(a[c])) {
        a = a.slice(0, c);
        break;
      }
  }
  return me.announce.of(`${i.state.phrase("current match")}. ${a} ${i.state.phrase("on line")} ${n.number}.`);
}
const HX = /* @__PURE__ */ me.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), KX = [
  Po,
  /* @__PURE__ */ Mo.low(jX),
  HX
];
class iw {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, t, n, r) {
    this.state = e, this.pos = t, this.explicit = n, this.view = r, this.abortListeners = [], this.abortOnDocChange = !1;
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let t = ui(this.state).resolveInner(this.pos, -1);
    for (; t && e.indexOf(t.name) < 0; )
      t = t.parent;
    return t ? {
      from: t.from,
      to: this.pos,
      text: this.state.sliceDoc(t.from, this.pos),
      type: t.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let t = this.state.doc.lineAt(this.pos), n = Math.max(t.from, this.pos - 250), r = t.text.slice(n - t.from, this.pos - t.from), s = r.search(rw(e, !1));
    return s < 0 ? null : { from: n + s, to: this.pos, text: r.slice(s) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  
  By default, running queries will not be aborted for regular
  typing or backspacing, on the assumption that they are likely to
  return a result with a
  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that
  allows the result to be used after all. Passing `onDocChange:
  true` will cause this query to be aborted for any document
  change.
  */
  addEventListener(e, t, n) {
    e == "abort" && this.abortListeners && (this.abortListeners.push(t), n && n.onDocChange && (this.abortOnDocChange = !0));
  }
}
function ZS(i) {
  let e = Object.keys(i).join(""), t = /\w/.test(e);
  return t && (e = e.replace(/\w/g, "")), `[${t ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function JX(i) {
  let e = /* @__PURE__ */ Object.create(null), t = /* @__PURE__ */ Object.create(null);
  for (let { label: r } of i) {
    e[r[0]] = !0;
    for (let s = 1; s < r.length; s++)
      t[r[s]] = !0;
  }
  let n = ZS(e) + ZS(t) + "*$";
  return [new RegExp("^" + n), new RegExp(n)];
}
function nw(i) {
  let e = i.map((r) => typeof r == "string" ? { label: r } : r), [t, n] = e.every((r) => /^\w+$/.test(r.label)) ? [/\w*$/, /\w+$/] : JX(e);
  return (r) => {
    let s = r.matchBefore(n);
    return s || r.explicit ? { from: s ? s.from : r.pos, options: e, validFor: t } : null;
  };
}
function eM(i, e) {
  return (t) => {
    for (let n = ui(t.state).resolveInner(t.pos, -1); n; n = n.parent) {
      if (i.indexOf(n.name) > -1)
        return null;
      if (n.type.isTop)
        break;
    }
    return e(t);
  };
}
class CS {
  constructor(e, t, n, r) {
    this.completion = e, this.source = t, this.match = n, this.score = r;
  }
}
function rl(i) {
  return i.selection.main.from;
}
function rw(i, e) {
  var t;
  let { source: n } = i, r = e && n[0] != "^", s = n[n.length - 1] != "$";
  return !r && !s ? i : new RegExp(`${r ? "^" : ""}(?:${n})${s ? "$" : ""}`, (t = i.flags) !== null && t !== void 0 ? t : i.ignoreCase ? "i" : "");
}
const um = /* @__PURE__ */ Js.define();
function tM(i, e, t, n) {
  let { main: r } = i.selection, s = t - r.from, o = n - r.from;
  return Object.assign(Object.assign({}, i.changeByRange((a) => {
    if (a != r && t != n && i.sliceDoc(a.from + s, a.from + o) != i.sliceDoc(t, n))
      return { range: a };
    let c = i.toText(e);
    return {
      changes: { from: a.from + s, to: n == r.from ? a.to : a.from + o, insert: c },
      range: J.cursor(a.from + s + c.length)
    };
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const RS = /* @__PURE__ */ new WeakMap();
function iM(i) {
  if (!Array.isArray(i))
    return i;
  let e = RS.get(i);
  return e || RS.set(i, e = nw(i)), e;
}
const Xh = /* @__PURE__ */ nt.define(), Lc = /* @__PURE__ */ nt.define();
class nM {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let t = 0; t < e.length; ) {
      let n = Cn(e, t), r = rs(n);
      this.chars.push(n);
      let s = e.slice(t, t + r), o = s.toUpperCase();
      this.folded.push(Cn(o == s ? s.toLowerCase() : o, 0)), t += r;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, t) {
    return this.score = e, this.matched = t, this;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return null;
    let { chars: t, folded: n, any: r, precise: s, byWord: o } = this;
    if (t.length == 1) {
      let A = Cn(e, 0), x = rs(A), _ = x == e.length ? 0 : -100;
      if (A != t[0]) if (A == n[0])
        _ += -200;
      else
        return null;
      return this.ret(_, [0, x]);
    }
    let a = e.indexOf(this.pattern);
    if (a == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let c = t.length, u = 0;
    if (a < 0) {
      for (let A = 0, x = Math.min(e.length, 200); A < x && u < c; ) {
        let _ = Cn(e, A);
        (_ == t[u] || _ == n[u]) && (r[u++] = A), A += rs(_);
      }
      if (u < c)
        return null;
    }
    let h = 0, d = 0, p = !1, m = 0, b = -1, y = -1, w = /[a-z]/.test(e), k = !0;
    for (let A = 0, x = Math.min(e.length, 200), _ = 0; A < x && d < c; ) {
      let W = Cn(e, A);
      a < 0 && (h < c && W == t[h] && (s[h++] = A), m < c && (W == t[m] || W == n[m] ? (m == 0 && (b = A), y = A + 1, m++) : m = 0));
      let D, q = W < 255 ? W >= 48 && W <= 57 || W >= 97 && W <= 122 ? 2 : W >= 65 && W <= 90 ? 1 : 0 : (D = Ag(W)) != D.toLowerCase() ? 1 : D != D.toUpperCase() ? 2 : 0;
      (!A || q == 1 && w || _ == 0 && q != 0) && (t[d] == W || n[d] == W && (p = !0) ? o[d++] = A : o.length && (k = !1)), _ = q, A += rs(W);
    }
    return d == c && o[0] == 0 && k ? this.result(-100 + (p ? -200 : 0), o, e) : m == c && b == 0 ? this.ret(-200 - e.length + (y == e.length ? 0 : -100), [0, y]) : a > -1 ? this.ret(-700 - e.length, [a, a + this.pattern.length]) : m == c ? this.ret(-900 - e.length, [b, y]) : d == c ? this.result(-100 + (p ? -200 : 0) + -700 + (k ? 0 : -1100), o, e) : t.length == 2 ? null : this.result((r[0] ? -700 : 0) + -200 + -1100, r, e);
  }
  result(e, t, n) {
    let r = [], s = 0;
    for (let o of t) {
      let a = o + (this.astral ? rs(Cn(n, o)) : 1);
      s && r[s - 1] == o ? r[s - 1] = a : (r[s++] = o, r[s++] = a);
    }
    return this.ret(e - n.length, r);
  }
}
class rM {
  constructor(e) {
    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();
  }
  match(e) {
    if (e.length < this.pattern.length)
      return null;
    let t = e.slice(0, this.pattern.length), n = t == this.pattern ? 0 : t.toLowerCase() == this.folded ? -200 : null;
    return n == null ? null : (this.matched = [0, t.length], this.score = n + (e.length == this.pattern.length ? 0 : -100), this);
  }
}
const Ai = /* @__PURE__ */ _e.define({
  combine(i) {
    return gs(i, {
      activateOnTyping: !0,
      activateOnCompletion: () => !1,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: sM,
      filterStrict: !1,
      compareCompletions: (e, t) => e.label.localeCompare(t.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, t) => e && t,
      closeOnBlur: (e, t) => e && t,
      icons: (e, t) => e && t,
      tooltipClass: (e, t) => (n) => AS(e(n), t(n)),
      optionClass: (e, t) => (n) => AS(e(n), t(n)),
      addToOptions: (e, t) => e.concat(t),
      filterStrict: (e, t) => e || t
    });
  }
});
function AS(i, e) {
  return i ? e ? i + " " + e : i : e;
}
function sM(i, e, t, n, r, s) {
  let o = i.textDirection == ii.RTL, a = o, c = !1, u = "top", h, d, p = e.left - r.left, m = r.right - e.right, b = n.right - n.left, y = n.bottom - n.top;
  if (a && p < Math.min(b, m) ? a = !1 : !a && m < Math.min(b, p) && (a = !0), b <= (a ? p : m))
    h = Math.max(r.top, Math.min(t.top, r.bottom - y)) - e.top, d = Math.min(400, a ? p : m);
  else {
    c = !0, d = Math.min(
      400,
      (o ? e.right : r.right - e.left) - 30
      /* Info.Margin */
    );
    let A = r.bottom - e.bottom;
    A >= y || A > e.top ? h = t.bottom - e.top : (u = "bottom", h = e.bottom - t.top);
  }
  let w = (e.bottom - e.top) / s.offsetHeight, k = (e.right - e.left) / s.offsetWidth;
  return {
    style: `${u}: ${h / w}px; max-width: ${d / k}px`,
    class: "cm-completionInfo-" + (c ? o ? "left-narrow" : "right-narrow" : a ? "left" : "right")
  };
}
function oM(i) {
  let e = i.addToOptions.slice();
  return i.icons && e.push({
    render(t) {
      let n = document.createElement("div");
      return n.classList.add("cm-completionIcon"), t.type && n.classList.add(...t.type.split(/\s+/g).map((r) => "cm-completionIcon-" + r)), n.setAttribute("aria-hidden", "true"), n;
    },
    position: 20
  }), e.push({
    render(t, n, r, s) {
      let o = document.createElement("span");
      o.className = "cm-completionLabel";
      let a = t.displayLabel || t.label, c = 0;
      for (let u = 0; u < s.length; ) {
        let h = s[u++], d = s[u++];
        h > c && o.appendChild(document.createTextNode(a.slice(c, h)));
        let p = o.appendChild(document.createElement("span"));
        p.appendChild(document.createTextNode(a.slice(h, d))), p.className = "cm-completionMatchedText", c = d;
      }
      return c < a.length && o.appendChild(document.createTextNode(a.slice(c))), o;
    },
    position: 50
  }, {
    render(t) {
      if (!t.detail)
        return null;
      let n = document.createElement("span");
      return n.className = "cm-completionDetail", n.textContent = t.detail, n;
    },
    position: 80
  }), e.sort((t, n) => t.position - n.position).map((t) => t.render);
}
function Gd(i, e, t) {
  if (i <= t)
    return { from: 0, to: i };
  if (e < 0 && (e = 0), e <= i >> 1) {
    let r = Math.floor(e / t);
    return { from: r * t, to: (r + 1) * t };
  }
  let n = Math.floor((i - e) / t);
  return { from: i - (n + 1) * t, to: i - n * t };
}
class lM {
  constructor(e, t, n) {
    this.view = e, this.stateField = t, this.applyCompletion = n, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (c) => this.placeInfo(c),
      key: this
    }, this.space = null, this.currentClass = "";
    let r = e.state.field(t), { options: s, selected: o } = r.open, a = e.state.facet(Ai);
    this.optionContent = oM(a), this.optionClass = a.optionClass, this.tooltipClass = a.tooltipClass, this.range = Gd(s.length, o, a.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (c) => {
      let { options: u } = e.state.field(t).open;
      for (let h = c.target, d; h && h != this.dom; h = h.parentNode)
        if (h.nodeName == "LI" && (d = /-(\d+)$/.exec(h.id)) && +d[1] < u.length) {
          this.applyCompletion(e, u[+d[1]]), c.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (c) => {
      let u = e.state.field(this.stateField, !1);
      u && u.tooltip && e.state.facet(Ai).closeOnBlur && c.relatedTarget != e.contentDOM && e.dispatch({ effects: Lc.of(null) });
    }), this.showOptions(s, r.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, t) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, t, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var t;
    let n = e.state.field(this.stateField), r = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), n != r) {
      let { options: s, selected: o, disabled: a } = n.open;
      (!r.open || r.open.options != s) && (this.range = Gd(s.length, o, e.state.facet(Ai).maxRenderedOptions), this.showOptions(s, n.id)), this.updateSel(), a != ((t = r.open) === null || t === void 0 ? void 0 : t.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!a);
    }
  }
  updateTooltipClass(e) {
    let t = this.tooltipClass(e);
    if (t != this.currentClass) {
      for (let n of this.currentClass.split(" "))
        n && this.dom.classList.remove(n);
      for (let n of t.split(" "))
        n && this.dom.classList.add(n);
      this.currentClass = t;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), t = e.open;
    if ((t.selected > -1 && t.selected < this.range.from || t.selected >= this.range.to) && (this.range = Gd(t.options.length, t.selected, this.view.state.facet(Ai).maxRenderedOptions), this.showOptions(t.options, e.id)), this.updateSelectedOption(t.selected)) {
      this.destroyInfo();
      let { completion: n } = t.options[t.selected], { info: r } = n;
      if (!r)
        return;
      let s = typeof r == "string" ? document.createTextNode(r) : r(n);
      if (!s)
        return;
      "then" in s ? s.then((o) => {
        o && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(o, n);
      }).catch((o) => Xn(this.view.state, o, "completion info")) : this.addInfoPane(s, n);
    }
  }
  addInfoPane(e, t) {
    this.destroyInfo();
    let n = this.info = document.createElement("div");
    if (n.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      n.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: r, destroy: s } = e;
      n.appendChild(r), this.infoDestroy = s || null;
    }
    this.dom.appendChild(n), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let t = null;
    for (let n = this.list.firstChild, r = this.range.from; n; n = n.nextSibling, r++)
      n.nodeName != "LI" || !n.id ? r-- : r == e ? n.hasAttribute("aria-selected") || (n.setAttribute("aria-selected", "true"), t = n) : n.hasAttribute("aria-selected") && n.removeAttribute("aria-selected");
    return t && cM(this.list, t), t;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let t = this.dom.getBoundingClientRect(), n = this.info.getBoundingClientRect(), r = e.getBoundingClientRect(), s = this.space;
    if (!s) {
      let o = this.dom.ownerDocument.documentElement;
      s = { left: 0, top: 0, right: o.clientWidth, bottom: o.clientHeight };
    }
    return r.top > Math.min(s.bottom, t.bottom) - 10 || r.bottom < Math.max(s.top, t.top) + 10 ? null : this.view.state.facet(Ai).positionInfo(this.view, t, r, n, s, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, t, n) {
    const r = document.createElement("ul");
    r.id = t, r.setAttribute("role", "listbox"), r.setAttribute("aria-expanded", "true"), r.setAttribute("aria-label", this.view.state.phrase("Completions")), r.addEventListener("mousedown", (o) => {
      o.target == r && o.preventDefault();
    });
    let s = null;
    for (let o = n.from; o < n.to; o++) {
      let { completion: a, match: c } = e[o], { section: u } = a;
      if (u) {
        let p = typeof u == "string" ? u : u.name;
        if (p != s && (o > n.from || n.from == 0))
          if (s = p, typeof u != "string" && u.header)
            r.appendChild(u.header(u));
          else {
            let m = r.appendChild(document.createElement("completion-section"));
            m.textContent = p;
          }
      }
      const h = r.appendChild(document.createElement("li"));
      h.id = t + "-" + o, h.setAttribute("role", "option");
      let d = this.optionClass(a);
      d && (h.className = d);
      for (let p of this.optionContent) {
        let m = p(a, this.view.state, this.view, c);
        m && h.appendChild(m);
      }
    }
    return n.from && r.classList.add("cm-completionListIncompleteTop"), n.to < e.length && r.classList.add("cm-completionListIncompleteBottom"), r;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function aM(i, e) {
  return (t) => new lM(t, i, e);
}
function cM(i, e) {
  let t = i.getBoundingClientRect(), n = e.getBoundingClientRect(), r = t.height / i.offsetHeight;
  n.top < t.top ? i.scrollTop -= (t.top - n.top) / r : n.bottom > t.bottom && (i.scrollTop += (n.bottom - t.bottom) / r);
}
function XS(i) {
  return (i.boost || 0) * 100 + (i.apply ? 10 : 0) + (i.info ? 5 : 0) + (i.type ? 1 : 0);
}
function fM(i, e) {
  let t = [], n = null, r = (u) => {
    t.push(u);
    let { section: h } = u.completion;
    if (h) {
      n || (n = []);
      let d = typeof h == "string" ? h : h.name;
      n.some((p) => p.name == d) || n.push(typeof h == "string" ? { name: d } : h);
    }
  }, s = e.facet(Ai);
  for (let u of i)
    if (u.hasResult()) {
      let h = u.result.getMatch;
      if (u.result.filter === !1)
        for (let d of u.result.options)
          r(new CS(d, u.source, h ? h(d) : [], 1e9 - t.length));
      else {
        let d = e.sliceDoc(u.from, u.to), p, m = s.filterStrict ? new rM(d) : new nM(d);
        for (let b of u.result.options)
          if (p = m.match(b.label)) {
            let y = b.displayLabel ? h ? h(b, p.matched) : [] : p.matched;
            r(new CS(b, u.source, y, p.score + (b.boost || 0)));
          }
      }
    }
  if (n) {
    let u = /* @__PURE__ */ Object.create(null), h = 0, d = (p, m) => {
      var b, y;
      return ((b = p.rank) !== null && b !== void 0 ? b : 1e9) - ((y = m.rank) !== null && y !== void 0 ? y : 1e9) || (p.name < m.name ? -1 : 1);
    };
    for (let p of n.sort(d))
      h -= 1e5, u[p.name] = h;
    for (let p of t) {
      let { section: m } = p.completion;
      m && (p.score += u[typeof m == "string" ? m : m.name]);
    }
  }
  let o = [], a = null, c = s.compareCompletions;
  for (let u of t.sort((h, d) => d.score - h.score || c(h.completion, d.completion))) {
    let h = u.completion;
    !a || a.label != h.label || a.detail != h.detail || a.type != null && h.type != null && a.type != h.type || a.apply != h.apply || a.boost != h.boost ? o.push(u) : XS(u.completion) > XS(a) && (o[o.length - 1] = u), a = u.completion;
  }
  return o;
}
class Il {
  constructor(e, t, n, r, s, o) {
    this.options = e, this.attrs = t, this.tooltip = n, this.timestamp = r, this.selected = s, this.disabled = o;
  }
  setSelected(e, t) {
    return e == this.selected || e >= this.options.length ? this : new Il(this.options, MS(t, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, t, n, r, s, o) {
    if (r && !o && e.some((u) => u.isPending))
      return r.setDisabled();
    let a = fM(e, t);
    if (!a.length)
      return r && e.some((u) => u.isPending) ? r.setDisabled() : null;
    let c = t.facet(Ai).selectOnOpen ? 0 : -1;
    if (r && r.selected != c && r.selected != -1) {
      let u = r.options[r.selected].completion;
      for (let h = 0; h < a.length; h++)
        if (a[h].completion == u) {
          c = h;
          break;
        }
    }
    return new Il(a, MS(n, c), {
      pos: e.reduce((u, h) => h.hasResult() ? Math.min(u, h.from) : u, 1e8),
      create: gM,
      above: s.aboveCursor
    }, r ? r.timestamp : Date.now(), c, !1);
  }
  map(e) {
    return new Il(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
  setDisabled() {
    return new Il(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);
  }
}
class Mh {
  constructor(e, t, n) {
    this.active = e, this.id = t, this.open = n;
  }
  static start() {
    return new Mh(dM, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: t } = e, n = t.facet(Ai), s = (n.override || t.languageDataAt("autocomplete", rl(t)).map(iM)).map((c) => (this.active.find((h) => h.source == c) || new gr(
      c,
      this.active.some(
        (h) => h.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, n));
    s.length == this.active.length && s.every((c, u) => c == this.active[u]) && (s = this.active);
    let o = this.open, a = e.effects.some((c) => c.is(hm));
    o && e.docChanged && (o = o.map(e.changes)), e.selection || s.some((c) => c.hasResult() && e.changes.touchesRange(c.from, c.to)) || !uM(s, this.active) || a ? o = Il.build(s, t, this.id, o, n, a) : o && o.disabled && !s.some((c) => c.isPending) && (o = null), !o && s.every((c) => !c.isPending) && s.some((c) => c.hasResult()) && (s = s.map((c) => c.hasResult() ? new gr(
      c.source,
      0
      /* State.Inactive */
    ) : c));
    for (let c of e.effects)
      c.is(ow) && (o = o && o.setSelected(c.value, this.id));
    return s == this.active && o == this.open ? this : new Mh(s, this.id, o);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : this.active.length ? hM : OM;
  }
}
function uM(i, e) {
  if (i == e)
    return !0;
  for (let t = 0, n = 0; ; ) {
    for (; t < i.length && !i[t].hasResult(); )
      t++;
    for (; n < e.length && !e[n].hasResult(); )
      n++;
    let r = t == i.length, s = n == e.length;
    if (r || s)
      return r == s;
    if (i[t++].result != e[n++].result)
      return !1;
  }
}
const hM = {
  "aria-autocomplete": "list"
}, OM = {};
function MS(i, e) {
  let t = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": i
  };
  return e > -1 && (t["aria-activedescendant"] = i + "-" + e), t;
}
const dM = [];
function sw(i, e) {
  if (i.isUserEvent("input.complete")) {
    let n = i.annotation(um);
    if (n && e.activateOnCompletion(n))
      return 12;
  }
  let t = i.isUserEvent("input.type");
  return t && e.activateOnTyping ? 5 : t ? 1 : i.isUserEvent("delete.backward") ? 2 : i.selection ? 8 : i.docChanged ? 16 : 0;
}
class gr {
  constructor(e, t, n = !1) {
    this.source = e, this.state = t, this.explicit = n;
  }
  hasResult() {
    return !1;
  }
  get isPending() {
    return this.state == 1;
  }
  update(e, t) {
    let n = sw(e, t), r = this;
    (n & 8 || n & 16 && this.touches(e)) && (r = new gr(
      r.source,
      0
      /* State.Inactive */
    )), n & 4 && r.state == 0 && (r = new gr(
      this.source,
      1
      /* State.Pending */
    )), r = r.updateFor(e, n);
    for (let s of e.effects)
      if (s.is(Xh))
        r = new gr(r.source, 1, s.value);
      else if (s.is(Lc))
        r = new gr(
          r.source,
          0
          /* State.Inactive */
        );
      else if (s.is(hm))
        for (let o of s.value)
          o.source == r.source && (r = o);
    return r;
  }
  updateFor(e, t) {
    return this.map(e.changes);
  }
  map(e) {
    return this;
  }
  touches(e) {
    return e.changes.touchesRange(rl(e.state));
  }
}
class ia extends gr {
  constructor(e, t, n, r, s, o) {
    super(e, 3, t), this.limit = n, this.result = r, this.from = s, this.to = o;
  }
  hasResult() {
    return !0;
  }
  updateFor(e, t) {
    var n;
    if (!(t & 3))
      return this.map(e.changes);
    let r = this.result;
    r.map && !e.changes.empty && (r = r.map(r, e.changes));
    let s = e.changes.mapPos(this.from), o = e.changes.mapPos(this.to, 1), a = rl(e.state);
    if (a > o || !r || t & 2 && (rl(e.startState) == this.from || a < this.limit))
      return new gr(
        this.source,
        t & 4 ? 1 : 0
        /* State.Inactive */
      );
    let c = e.changes.mapPos(this.limit);
    return pM(r.validFor, e.state, s, o) ? new ia(this.source, this.explicit, c, r, s, o) : r.update && (r = r.update(r, s, o, new iw(e.state, a, !1))) ? new ia(this.source, this.explicit, c, r, r.from, (n = r.to) !== null && n !== void 0 ? n : rl(e.state)) : new gr(this.source, 1, this.explicit);
  }
  map(e) {
    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new ia(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new gr(
      this.source,
      0
      /* State.Inactive */
    );
  }
  touches(e) {
    return e.changes.touchesRange(this.from, this.to);
  }
}
function pM(i, e, t, n) {
  if (!i)
    return !1;
  let r = e.sliceDoc(t, n);
  return typeof i == "function" ? i(r, t, n, e) : rw(i, !0).test(r);
}
const hm = /* @__PURE__ */ nt.define({
  map(i, e) {
    return i.map((t) => t.map(e));
  }
}), ow = /* @__PURE__ */ nt.define(), An = /* @__PURE__ */ Wi.define({
  create() {
    return Mh.start();
  },
  update(i, e) {
    return i.update(e);
  },
  provide: (i) => [
    Fg.from(i, (e) => e.tooltip),
    me.contentAttributes.from(i, (e) => e.attrs)
  ]
});
function Om(i, e) {
  const t = e.completion.apply || e.completion.label;
  let n = i.state.field(An).active.find((r) => r.source == e.source);
  return n instanceof ia ? (typeof t == "string" ? i.dispatch(Object.assign(Object.assign({}, tM(i.state, t, n.from, n.to)), { annotations: um.of(e.completion) })) : t(i, e.completion, n.from, n.to), !0) : !1;
}
const gM = /* @__PURE__ */ aM(An, Om);
function Ru(i, e = "option") {
  return (t) => {
    let n = t.state.field(An, !1);
    if (!n || !n.open || n.open.disabled || Date.now() - n.open.timestamp < t.state.facet(Ai).interactionDelay)
      return !1;
    let r = 1, s;
    e == "page" && (s = _y(t, n.open.tooltip)) && (r = Math.max(2, Math.floor(s.dom.offsetHeight / s.dom.querySelector("li").offsetHeight) - 1));
    let { length: o } = n.open.options, a = n.open.selected > -1 ? n.open.selected + r * (i ? 1 : -1) : i ? 0 : o - 1;
    return a < 0 ? a = e == "page" ? 0 : o - 1 : a >= o && (a = e == "page" ? o - 1 : 0), t.dispatch({ effects: ow.of(a) }), !0;
  };
}
const mM = (i) => {
  let e = i.state.field(An, !1);
  return i.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < i.state.facet(Ai).interactionDelay ? !1 : Om(i, e.open.options[e.open.selected]);
}, ES = (i) => i.state.field(An, !1) ? (i.dispatch({ effects: Xh.of(!0) }), !0) : !1, vM = (i) => {
  let e = i.state.field(An, !1);
  return !e || !e.active.some(
    (t) => t.state != 0
    /* State.Inactive */
  ) ? !1 : (i.dispatch({ effects: Lc.of(null) }), !0);
};
class SM {
  constructor(e, t) {
    this.active = e, this.context = t, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const bM = 50, $M = 1e3, yM = /* @__PURE__ */ yi.fromClass(class {
  constructor(i) {
    this.view = i, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of i.state.field(An).active)
      e.isPending && this.startQuery(e);
  }
  update(i) {
    let e = i.state.field(An), t = i.state.facet(Ai);
    if (!i.selectionSet && !i.docChanged && i.startState.field(An) == e)
      return;
    let n = i.transactions.some((s) => {
      let o = sw(s, t);
      return o & 8 || (s.selection || s.docChanged) && !(o & 3);
    });
    for (let s = 0; s < this.running.length; s++) {
      let o = this.running[s];
      if (n || o.context.abortOnDocChange && i.docChanged || o.updates.length + i.transactions.length > bM && Date.now() - o.time > $M) {
        for (let a of o.context.abortListeners)
          try {
            a();
          } catch (c) {
            Xn(this.view.state, c);
          }
        o.context.abortListeners = null, this.running.splice(s--, 1);
      } else
        o.updates.push(...i.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), i.transactions.some((s) => s.effects.some((o) => o.is(Xh))) && (this.pendingStart = !0);
    let r = this.pendingStart ? 50 : t.activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((s) => s.isPending && !this.running.some((o) => o.active.source == s.source)) ? setTimeout(() => this.startUpdate(), r) : -1, this.composing != 0)
      for (let s of i.transactions)
        s.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && s.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: i } = this.view, e = i.field(An);
    for (let t of e.active)
      t.isPending && !this.running.some((n) => n.active.source == t.source) && this.startQuery(t);
    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(Ai).updateSyncTime));
  }
  startQuery(i) {
    let { state: e } = this.view, t = rl(e), n = new iw(e, t, i.explicit, this.view), r = new SM(i, n);
    this.running.push(r), Promise.resolve(i.source(n)).then((s) => {
      r.context.aborted || (r.done = s || null, this.scheduleAccept());
    }, (s) => {
      this.view.dispatch({ effects: Lc.of(null) }), Xn(this.view.state, s);
    });
  }
  scheduleAccept() {
    this.running.every((i) => i.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(Ai).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var i;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], t = this.view.state.facet(Ai), n = this.view.state.field(An);
    for (let r = 0; r < this.running.length; r++) {
      let s = this.running[r];
      if (s.done === void 0)
        continue;
      if (this.running.splice(r--, 1), s.done) {
        let a = rl(s.updates.length ? s.updates[0].startState : this.view.state), c = Math.min(a, s.done.from + (s.active.explicit ? 0 : 1)), u = new ia(s.active.source, s.active.explicit, c, s.done, s.done.from, (i = s.done.to) !== null && i !== void 0 ? i : a);
        for (let h of s.updates)
          u = u.update(h, t);
        if (u.hasResult()) {
          e.push(u);
          continue;
        }
      }
      let o = n.active.find((a) => a.source == s.active.source);
      if (o && o.isPending)
        if (s.done == null) {
          let a = new gr(
            s.active.source,
            0
            /* State.Inactive */
          );
          for (let c of s.updates)
            a = a.update(c, t);
          a.isPending || e.push(a);
        } else
          this.startQuery(o);
    }
    (e.length || n.open && n.open.disabled) && this.view.dispatch({ effects: hm.of(e) });
  }
}, {
  eventHandlers: {
    blur(i) {
      let e = this.view.state.field(An, !1);
      if (e && e.tooltip && this.view.state.facet(Ai).closeOnBlur) {
        let t = e.open && _y(this.view, e.open.tooltip);
        (!t || !t.dom.contains(i.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: Lc.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: Xh.of(!1) }), 20), this.composing = 0;
    }
  }
}), QM = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), wM = /* @__PURE__ */ Mo.highest(/* @__PURE__ */ me.domEventHandlers({
  keydown(i, e) {
    let t = e.state.field(An, !1);
    if (!t || !t.open || t.open.disabled || t.open.selected < 0 || i.key.length > 1 || i.ctrlKey && !(QM && i.altKey) || i.metaKey)
      return !1;
    let n = t.open.options[t.open.selected], r = t.active.find((o) => o.source == n.source), s = n.completion.commitCharacters || r.result.commitCharacters;
    return s && s.indexOf(i.key) > -1 && Om(e, n), !1;
  }
})), lw = /* @__PURE__ */ me.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box",
    whiteSpace: "pre-line"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class PM {
  constructor(e, t, n, r) {
    this.field = e, this.line = t, this.from = n, this.to = r;
  }
}
class dm {
  constructor(e, t, n) {
    this.field = e, this.from = t, this.to = n;
  }
  map(e) {
    let t = e.mapPos(this.from, -1, Ui.TrackDel), n = e.mapPos(this.to, 1, Ui.TrackDel);
    return t == null || n == null ? null : new dm(this.field, t, n);
  }
}
class pm {
  constructor(e, t) {
    this.lines = e, this.fieldPositions = t;
  }
  instantiate(e, t) {
    let n = [], r = [t], s = e.doc.lineAt(t), o = /^\s*/.exec(s.text)[0];
    for (let c of this.lines) {
      if (n.length) {
        let u = o, h = /^\t*/.exec(c)[0].length;
        for (let d = 0; d < h; d++)
          u += e.facet(tO);
        r.push(t + u.length - h), c = u + c.slice(h);
      }
      n.push(c), t += c.length + 1;
    }
    let a = this.fieldPositions.map((c) => new dm(c.field, r[c.line] + c.from, r[c.line] + c.to));
    return { text: n, ranges: a };
  }
  static parse(e) {
    let t = [], n = [], r = [], s;
    for (let o of e.split(/\r\n?|\n/)) {
      for (; s = /[#$]\{(?:(\d+)(?::([^}]*))?|((?:\\[{}]|[^}])*))\}/.exec(o); ) {
        let a = s[1] ? +s[1] : null, c = s[2] || s[3] || "", u = -1, h = c.replace(/\\[{}]/g, (d) => d[1]);
        for (let d = 0; d < t.length; d++)
          (a != null ? t[d].seq == a : h && t[d].name == h) && (u = d);
        if (u < 0) {
          let d = 0;
          for (; d < t.length && (a == null || t[d].seq != null && t[d].seq < a); )
            d++;
          t.splice(d, 0, { seq: a, name: h }), u = d;
          for (let p of r)
            p.field >= u && p.field++;
        }
        r.push(new PM(u, n.length, s.index, s.index + h.length)), o = o.slice(0, s.index) + c + o.slice(s.index + s[0].length);
      }
      o = o.replace(/\\([{}])/g, (a, c, u) => {
        for (let h of r)
          h.line == n.length && h.from > u && (h.from--, h.to--);
        return c;
      }), n.push(o);
    }
    return new pm(n, r);
  }
}
let xM = /* @__PURE__ */ Ue.widget({ widget: /* @__PURE__ */ new class extends eo {
  toDOM() {
    let i = document.createElement("span");
    return i.className = "cm-snippetFieldPosition", i;
  }
  ignoreEvent() {
    return !1;
  }
}() }), kM = /* @__PURE__ */ Ue.mark({ class: "cm-snippetField" });
class Qa {
  constructor(e, t) {
    this.ranges = e, this.active = t, this.deco = Ue.set(e.map((n) => (n.from == n.to ? xM : kM).range(n.from, n.to)));
  }
  map(e) {
    let t = [];
    for (let n of this.ranges) {
      let r = n.map(e);
      if (!r)
        return null;
      t.push(r);
    }
    return new Qa(t, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((t) => this.ranges.some((n) => n.field == this.active && n.from <= t.from && n.to >= t.to));
  }
}
const of = /* @__PURE__ */ nt.define({
  map(i, e) {
    return i && i.map(e);
  }
}), _M = /* @__PURE__ */ nt.define(), Dc = /* @__PURE__ */ Wi.define({
  create() {
    return null;
  },
  update(i, e) {
    for (let t of e.effects) {
      if (t.is(of))
        return t.value;
      if (t.is(_M) && i)
        return new Qa(i.ranges, t.value);
    }
    return i && e.docChanged && (i = i.map(e.changes)), i && e.selection && !i.selectionInsideField(e.selection) && (i = null), i;
  },
  provide: (i) => me.decorations.from(i, (e) => e ? e.deco : Ue.none)
});
function gm(i, e) {
  return J.create(i.filter((t) => t.field == e).map((t) => J.range(t.from, t.to)));
}
function WM(i) {
  let e = pm.parse(i);
  return (t, n, r, s) => {
    let { text: o, ranges: a } = e.instantiate(t.state, r), { main: c } = t.state.selection, u = {
      changes: { from: r, to: s == c.from ? c.to : s, insert: Tt.of(o) },
      scrollIntoView: !0,
      annotations: n ? [um.of(n), $i.userEvent.of("input.complete")] : void 0
    };
    if (a.length && (u.selection = gm(a, 0)), a.some((h) => h.field > 0)) {
      let h = new Qa(a, 0), d = u.effects = [of.of(h)];
      t.state.field(Dc, !1) === void 0 && d.push(nt.appendConfig.of([Dc, AM, XM, lw]));
    }
    t.dispatch(t.state.update(u));
  };
}
function aw(i) {
  return ({ state: e, dispatch: t }) => {
    let n = e.field(Dc, !1);
    if (!n || i < 0 && n.active == 0)
      return !1;
    let r = n.active + i, s = i > 0 && !n.ranges.some((o) => o.field == r + i);
    return t(e.update({
      selection: gm(n.ranges, r),
      effects: of.of(s ? null : new Qa(n.ranges, r)),
      scrollIntoView: !0
    })), !0;
  };
}
const TM = ({ state: i, dispatch: e }) => i.field(Dc, !1) ? (e(i.update({ effects: of.of(null) })), !0) : !1, ZM = /* @__PURE__ */ aw(1), CM = /* @__PURE__ */ aw(-1), RM = [
  { key: "Tab", run: ZM, shift: CM },
  { key: "Escape", run: TM }
], qS = /* @__PURE__ */ _e.define({
  combine(i) {
    return i.length ? i[0] : RM;
  }
}), AM = /* @__PURE__ */ Mo.highest(/* @__PURE__ */ Kc.compute([qS], (i) => i.facet(qS)));
function Zn(i, e) {
  return Object.assign(Object.assign({}, e), { apply: WM(i) });
}
const XM = /* @__PURE__ */ me.domEventHandlers({
  mousedown(i, e) {
    let t = e.state.field(Dc, !1), n;
    if (!t || (n = e.posAtCoords({ x: i.clientX, y: i.clientY })) == null)
      return !1;
    let r = t.ranges.find((s) => s.from <= n && s.to >= n);
    return !r || r.field == t.active ? !1 : (e.dispatch({
      selection: gm(t.ranges, r.field),
      effects: of.of(t.ranges.some((s) => s.field > r.field) ? new Qa(t.ranges, r.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), Vc = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, tl = /* @__PURE__ */ nt.define({
  map(i, e) {
    let t = e.mapPos(i, -1, Ui.TrackAfter);
    return t ?? void 0;
  }
}), mm = /* @__PURE__ */ new class extends ol {
}();
mm.startSide = 1;
mm.endSide = -1;
const cw = /* @__PURE__ */ Wi.define({
  create() {
    return xt.empty;
  },
  update(i, e) {
    if (i = i.map(e.changes), e.selection) {
      let t = e.state.doc.lineAt(e.selection.main.head);
      i = i.update({ filter: (n) => n >= t.from && n <= t.to });
    }
    for (let t of e.effects)
      t.is(tl) && (i = i.update({ add: [mm.range(t.value, t.value + 1)] }));
    return i;
  }
});
function MM() {
  return [qM, cw];
}
const Hd = "()[]{}<>«»»«［］｛｝";
function fw(i) {
  for (let e = 0; e < Hd.length; e += 2)
    if (Hd.charCodeAt(e) == i)
      return Hd.charAt(e + 1);
  return Ag(i < 128 ? i : i + 1);
}
function uw(i, e) {
  return i.languageDataAt("closeBrackets", e)[0] || Vc;
}
const EM = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), qM = /* @__PURE__ */ me.inputHandler.of((i, e, t, n) => {
  if ((EM ? i.composing : i.compositionStarted) || i.state.readOnly)
    return !1;
  let r = i.state.selection.main;
  if (n.length > 2 || n.length == 2 && rs(Cn(n, 0)) == 1 || e != r.from || t != r.to)
    return !1;
  let s = VM(i.state, n);
  return s ? (i.dispatch(s), !0) : !1;
}), LM = ({ state: i, dispatch: e }) => {
  if (i.readOnly)
    return !1;
  let n = uw(i, i.selection.main.head).brackets || Vc.brackets, r = null, s = i.changeByRange((o) => {
    if (o.empty) {
      let a = UM(i.doc, o.head);
      for (let c of n)
        if (c == a && aO(i.doc, o.head) == fw(Cn(c, 0)))
          return {
            changes: { from: o.head - c.length, to: o.head + c.length },
            range: J.cursor(o.head - c.length)
          };
    }
    return { range: r = o };
  });
  return r || e(i.update(s, { scrollIntoView: !0, userEvent: "delete.backward" })), !r;
}, DM = [
  { key: "Backspace", run: LM }
];
function VM(i, e) {
  let t = uw(i, i.selection.main.head), n = t.brackets || Vc.brackets;
  for (let r of n) {
    let s = fw(Cn(r, 0));
    if (e == r)
      return s == r ? jM(i, r, n.indexOf(r + r + r) > -1, t) : YM(i, r, s, t.before || Vc.before);
    if (e == s && hw(i, i.selection.main.from))
      return zM(i, r, s);
  }
  return null;
}
function hw(i, e) {
  let t = !1;
  return i.field(cw).between(0, i.doc.length, (n) => {
    n == e && (t = !0);
  }), t;
}
function aO(i, e) {
  let t = i.sliceString(e, e + 2);
  return t.slice(0, rs(Cn(t, 0)));
}
function UM(i, e) {
  let t = i.sliceString(e - 2, e);
  return rs(Cn(t, 0)) == t.length ? t : t.slice(1);
}
function YM(i, e, t, n) {
  let r = null, s = i.changeByRange((o) => {
    if (!o.empty)
      return {
        changes: [{ insert: e, from: o.from }, { insert: t, from: o.to }],
        effects: tl.of(o.to + e.length),
        range: J.range(o.anchor + e.length, o.head + e.length)
      };
    let a = aO(i.doc, o.head);
    return !a || /\s/.test(a) || n.indexOf(a) > -1 ? {
      changes: { insert: e + t, from: o.head },
      effects: tl.of(o.head + e.length),
      range: J.cursor(o.head + e.length)
    } : { range: r = o };
  });
  return r ? null : i.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function zM(i, e, t) {
  let n = null, r = i.changeByRange((s) => s.empty && aO(i.doc, s.head) == t ? {
    changes: { from: s.head, to: s.head + t.length, insert: t },
    range: J.cursor(s.head + t.length)
  } : n = { range: s });
  return n ? null : i.update(r, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function jM(i, e, t, n) {
  let r = n.stringPrefixes || Vc.stringPrefixes, s = null, o = i.changeByRange((a) => {
    if (!a.empty)
      return {
        changes: [{ insert: e, from: a.from }, { insert: e, from: a.to }],
        effects: tl.of(a.to + e.length),
        range: J.range(a.anchor + e.length, a.head + e.length)
      };
    let c = a.head, u = aO(i.doc, c), h;
    if (u == e) {
      if (LS(i, c))
        return {
          changes: { insert: e + e, from: c },
          effects: tl.of(c + e.length),
          range: J.cursor(c + e.length)
        };
      if (hw(i, c)) {
        let p = t && i.sliceDoc(c, c + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: c, to: c + p.length, insert: p },
          range: J.cursor(c + p.length)
        };
      }
    } else {
      if (t && i.sliceDoc(c - 2 * e.length, c) == e + e && (h = DS(i, c - 2 * e.length, r)) > -1 && LS(i, h))
        return {
          changes: { insert: e + e + e + e, from: c },
          effects: tl.of(c + e.length),
          range: J.cursor(c + e.length)
        };
      if (i.charCategorizer(c)(u) != ri.Word && DS(i, c, r) > -1 && !BM(i, c, e, r))
        return {
          changes: { insert: e + e, from: c },
          effects: tl.of(c + e.length),
          range: J.cursor(c + e.length)
        };
    }
    return { range: s = a };
  });
  return s ? null : i.update(o, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function LS(i, e) {
  let t = ui(i).resolveInner(e + 1);
  return t.parent && t.from == e;
}
function BM(i, e, t, n) {
  let r = ui(i).resolveInner(e, -1), s = n.reduce((o, a) => Math.max(o, a.length), 0);
  for (let o = 0; o < 5; o++) {
    let a = i.sliceDoc(r.from, Math.min(r.to, r.from + t.length + s)), c = a.indexOf(t);
    if (!c || c > -1 && n.indexOf(a.slice(0, c)) > -1) {
      let h = r.firstChild;
      for (; h && h.from == r.from && h.to - h.from > t.length + c; ) {
        if (i.sliceDoc(h.to - t.length, h.to) == t)
          return !1;
        h = h.firstChild;
      }
      return !0;
    }
    let u = r.to == e && r.parent;
    if (!u)
      break;
    r = u;
  }
  return !1;
}
function DS(i, e, t) {
  let n = i.charCategorizer(e);
  if (n(i.sliceDoc(e - 1, e)) != ri.Word)
    return e;
  for (let r of t) {
    let s = e - r.length;
    if (i.sliceDoc(s, e) == r && n(i.sliceDoc(s - 1, s)) != ri.Word)
      return s;
  }
  return -1;
}
function IM(i = {}) {
  return [
    wM,
    An,
    Ai.of(i),
    yM,
    NM,
    lw
  ];
}
const Ow = [
  { key: "Ctrl-Space", run: ES },
  { mac: "Alt-`", run: ES },
  { key: "Escape", run: vM },
  { key: "ArrowDown", run: /* @__PURE__ */ Ru(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ Ru(!1) },
  { key: "PageDown", run: /* @__PURE__ */ Ru(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ Ru(!1, "page") },
  { key: "Enter", run: mM }
], NM = /* @__PURE__ */ Mo.highest(/* @__PURE__ */ Kc.computeN([Ai], (i) => i.facet(Ai).defaultKeymap ? [Ow] : []));
class VS {
  constructor(e, t, n) {
    this.from = e, this.to = t, this.diagnostic = n;
  }
}
class Ho {
  constructor(e, t, n) {
    this.diagnostics = e, this.panel = t, this.selected = n;
  }
  static init(e, t, n) {
    let r = e, s = n.facet(Uc).markerFilter;
    s && (r = s(r, n));
    let o = e.slice().sort((d, p) => d.from - p.from || d.to - p.to), a = new Is(), c = [], u = 0;
    for (let d = 0; ; ) {
      let p = d == o.length ? null : o[d];
      if (!p && !c.length)
        break;
      let m, b;
      for (c.length ? (m = u, b = c.reduce((w, k) => Math.min(w, k.to), p && p.from > m ? p.from : 1e8)) : (m = p.from, b = p.to, c.push(p), d++); d < o.length; ) {
        let w = o[d];
        if (w.from == m && (w.to > w.from || w.to == m))
          c.push(w), d++, b = Math.min(w.to, b);
        else {
          b = Math.min(w.from, b);
          break;
        }
      }
      let y = l7(c);
      if (c.some((w) => w.from == w.to || w.from == w.to - 1 && n.doc.lineAt(w.from).to == w.from))
        a.add(m, m, Ue.widget({
          widget: new n7(y),
          diagnostics: c.slice()
        }));
      else {
        let w = c.reduce((k, A) => A.markClass ? k + " " + A.markClass : k, "");
        a.add(m, b, Ue.mark({
          class: "cm-lintRange cm-lintRange-" + y + w,
          diagnostics: c.slice(),
          inclusiveEnd: c.some((k) => k.to > b)
        }));
      }
      u = b;
      for (let w = 0; w < c.length; w++)
        c[w].to <= u && c.splice(w--, 1);
    }
    let h = a.finish();
    return new Ho(h, t, ca(h));
  }
}
function ca(i, e = null, t = 0) {
  let n = null;
  return i.between(t, 1e9, (r, s, { spec: o }) => {
    if (!(e && o.diagnostics.indexOf(e) < 0))
      if (!n)
        n = new VS(r, s, e || o.diagnostics[0]);
      else {
        if (o.diagnostics.indexOf(n.diagnostic) < 0)
          return !1;
        n = new VS(n.from, s, n.diagnostic);
      }
  }), n;
}
function FM(i, e) {
  let t = e.pos, n = e.end || t, r = i.state.facet(Uc).hideOn(i, t, n);
  if (r != null)
    return r;
  let s = i.startState.doc.lineAt(e.pos);
  return !!(i.effects.some((o) => o.is(dw)) || i.changes.touchesRange(s.from, Math.max(s.to, n)));
}
function GM(i, e) {
  return i.field(Hn, !1) ? e : e.concat(nt.appendConfig.of(a7));
}
const dw = /* @__PURE__ */ nt.define(), vm = /* @__PURE__ */ nt.define(), pw = /* @__PURE__ */ nt.define(), Hn = /* @__PURE__ */ Wi.define({
  create() {
    return new Ho(Ue.none, null, null);
  },
  update(i, e) {
    if (e.docChanged && i.diagnostics.size) {
      let t = i.diagnostics.map(e.changes), n = null, r = i.panel;
      if (i.selected) {
        let s = e.changes.mapPos(i.selected.from, 1);
        n = ca(t, i.selected.diagnostic, s) || ca(t, null, s);
      }
      !t.size && r && e.state.facet(Uc).autoPanel && (r = null), i = new Ho(t, r, n);
    }
    for (let t of e.effects)
      if (t.is(dw)) {
        let n = e.state.facet(Uc).autoPanel ? t.value.length ? Yc.open : null : i.panel;
        i = Ho.init(t.value, n, e.state);
      } else t.is(vm) ? i = new Ho(i.diagnostics, t.value ? Yc.open : null, i.selected) : t.is(pw) && (i = new Ho(i.diagnostics, i.panel, t.value));
    return i;
  },
  provide: (i) => [
    Rc.from(i, (e) => e.panel),
    me.decorations.from(i, (e) => e.diagnostics)
  ]
}), HM = /* @__PURE__ */ Ue.mark({ class: "cm-lintRange cm-lintRange-active" });
function KM(i, e, t) {
  let { diagnostics: n } = i.state.field(Hn), r, s = -1, o = -1;
  n.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (c, u, { spec: h }) => {
    if (e >= c && e <= u && (c == u || (e > c || t > 0) && (e < u || t < 0)))
      return r = h.diagnostics, s = c, o = u, !1;
  });
  let a = i.state.facet(Uc).tooltipFilter;
  return r && a && (r = a(r, i.state)), r ? {
    pos: s,
    end: o,
    above: i.state.doc.lineAt(s).to < o,
    create() {
      return { dom: JM(i, r) };
    }
  } : null;
}
function JM(i, e) {
  return Kt("ul", { class: "cm-tooltip-lint" }, e.map((t) => mw(i, t, !1)));
}
const e7 = (i) => {
  let e = i.state.field(Hn, !1);
  (!e || !e.panel) && i.dispatch({ effects: GM(i.state, [vm.of(!0)]) });
  let t = Cc(i, Yc.open);
  return t && t.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, US = (i) => {
  let e = i.state.field(Hn, !1);
  return !e || !e.panel ? !1 : (i.dispatch({ effects: vm.of(!1) }), !0);
}, t7 = (i) => {
  let e = i.state.field(Hn, !1);
  if (!e)
    return !1;
  let t = i.state.selection.main, n = e.diagnostics.iter(t.to + 1);
  return !n.value && (n = e.diagnostics.iter(0), !n.value || n.from == t.from && n.to == t.to) ? !1 : (i.dispatch({ selection: { anchor: n.from, head: n.to }, scrollIntoView: !0 }), !0);
}, i7 = [
  { key: "Mod-Shift-m", run: e7, preventDefault: !0 },
  { key: "F8", run: t7 }
], Uc = /* @__PURE__ */ _e.define({
  combine(i) {
    return Object.assign({ sources: i.map((e) => e.source).filter((e) => e != null) }, gs(i.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null,
      hideOn: () => null
    }, {
      needsRefresh: (e, t) => e ? t ? (n) => e(n) || t(n) : e : t
    }));
  }
});
function gw(i) {
  let e = [];
  if (i)
    e: for (let { name: t } of i) {
      for (let n = 0; n < t.length; n++) {
        let r = t[n];
        if (/[a-zA-Z]/.test(r) && !e.some((s) => s.toLowerCase() == r.toLowerCase())) {
          e.push(r);
          continue e;
        }
      }
      e.push("");
    }
  return e;
}
function mw(i, e, t) {
  var n;
  let r = t ? gw(e.actions) : [];
  return Kt("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, Kt("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(i) : e.message), (n = e.actions) === null || n === void 0 ? void 0 : n.map((s, o) => {
    let a = !1, c = (p) => {
      if (p.preventDefault(), a)
        return;
      a = !0;
      let m = ca(i.state.field(Hn).diagnostics, e);
      m && s.apply(i, m.from, m.to);
    }, { name: u } = s, h = r[o] ? u.indexOf(r[o]) : -1, d = h < 0 ? u : [
      u.slice(0, h),
      Kt("u", u.slice(h, h + 1)),
      u.slice(h + 1)
    ];
    return Kt("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: c,
      onmousedown: c,
      "aria-label": ` Action: ${u}${h < 0 ? "" : ` (access key "${r[o]})"`}.`
    }, d);
  }), e.source && Kt("div", { class: "cm-diagnosticSource" }, e.source));
}
class n7 extends eo {
  constructor(e) {
    super(), this.sev = e;
  }
  eq(e) {
    return e.sev == this.sev;
  }
  toDOM() {
    return Kt("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });
  }
}
class YS {
  constructor(e, t) {
    this.diagnostic = t, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = mw(e, t, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class Yc {
  constructor(e) {
    this.view = e, this.items = [];
    let t = (r) => {
      if (r.keyCode == 27)
        US(this.view), this.view.focus();
      else if (r.keyCode == 38 || r.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (r.keyCode == 40 || r.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (r.keyCode == 36)
        this.moveSelection(0);
      else if (r.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (r.keyCode == 13)
        this.view.focus();
      else if (r.keyCode >= 65 && r.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: s } = this.items[this.selectedIndex], o = gw(s.actions);
        for (let a = 0; a < o.length; a++)
          if (o[a].toUpperCase().charCodeAt(0) == r.keyCode) {
            let c = ca(this.view.state.field(Hn).diagnostics, s);
            c && s.actions[a].apply(e, c.from, c.to);
          }
      } else
        return;
      r.preventDefault();
    }, n = (r) => {
      for (let s = 0; s < this.items.length; s++)
        this.items[s].dom.contains(r.target) && this.moveSelection(s);
    };
    this.list = Kt("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: t,
      onclick: n
    }), this.dom = Kt("div", { class: "cm-panel-lint" }, this.list, Kt("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => US(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(Hn).selected;
    if (!e)
      return -1;
    for (let t = 0; t < this.items.length; t++)
      if (this.items[t].diagnostic == e.diagnostic)
        return t;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: t } = this.view.state.field(Hn), n = 0, r = !1, s = null, o = /* @__PURE__ */ new Set();
    for (e.between(0, this.view.state.doc.length, (a, c, { spec: u }) => {
      for (let h of u.diagnostics) {
        if (o.has(h))
          continue;
        o.add(h);
        let d = -1, p;
        for (let m = n; m < this.items.length; m++)
          if (this.items[m].diagnostic == h) {
            d = m;
            break;
          }
        d < 0 ? (p = new YS(this.view, h), this.items.splice(n, 0, p), r = !0) : (p = this.items[d], d > n && (this.items.splice(n, d - n), r = !0)), t && p.diagnostic == t.diagnostic ? p.dom.hasAttribute("aria-selected") || (p.dom.setAttribute("aria-selected", "true"), s = p) : p.dom.hasAttribute("aria-selected") && p.dom.removeAttribute("aria-selected"), n++;
      }
    }); n < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      r = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new YS(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), r = !0), s ? (this.list.setAttribute("aria-activedescendant", s.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: a, panel: c }) => {
        let u = c.height / this.list.offsetHeight;
        a.top < c.top ? this.list.scrollTop -= (c.top - a.top) / u : a.bottom > c.bottom && (this.list.scrollTop += (a.bottom - c.bottom) / u);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), r && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function t() {
      let n = e;
      e = n.nextSibling, n.remove();
    }
    for (let n of this.items)
      if (n.dom.parentNode == this.list) {
        for (; e != n.dom; )
          t();
        e = n.dom.nextSibling;
      } else
        this.list.insertBefore(n.dom, e);
    for (; e; )
      t();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let t = this.view.state.field(Hn), n = ca(t.diagnostics, this.items[e].diagnostic);
    n && this.view.dispatch({
      selection: { anchor: n.from, head: n.to },
      scrollIntoView: !0,
      effects: pw.of(n)
    });
  }
  static open(e) {
    return new Yc(e);
  }
}
function r7(i, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(i)}</svg>')`;
}
function Au(i) {
  return r7(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${i}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const s7 = /* @__PURE__ */ me.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ Au("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ Au("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ Au("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ Au("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
});
function o7(i) {
  return i == "error" ? 4 : i == "warning" ? 3 : i == "info" ? 2 : 1;
}
function l7(i) {
  let e = "hint", t = 1;
  for (let n of i) {
    let r = o7(n.severity);
    r > t && (t = r, e = n.severity);
  }
  return e;
}
const a7 = [
  Hn,
  /* @__PURE__ */ me.decorations.compute([Hn], (i) => {
    let { selected: e, panel: t } = i.field(Hn);
    return !e || !t || e.from == e.to ? Ue.none : Ue.set([
      HM.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ NR(KM, { hideOn: FM }),
  s7
], c7 = [
  s3(),
  a3(),
  PR(),
  w4(),
  KA(),
  dR(),
  SR(),
  St.allowMultipleSelections.of(!0),
  LA(),
  cQ(i4, { fallback: !0 }),
  c4(),
  MM(),
  IM(),
  ER(),
  DR(),
  ZR(),
  TX(),
  Kc.of([
    ...DM,
    ...wX,
    ...FX,
    ...R4,
    ...NA,
    ...Ow,
    ...i7
  ])
], Mi = ({ variant: i, settings: e, styles: t }) => {
  const n = me.theme({
    // eslint-disable-next-line @typescript-eslint/naming-convention
    "&": {
      backgroundColor: e.background,
      color: e.foreground
    },
    ".cm-content": {
      caretColor: e.caret
    },
    ".cm-cursor, .cm-dropCursor": {
      borderLeftColor: e.caret
    },
    "&.cm-focused .cm-selectionBackgroundm .cm-selectionBackground, .cm-content ::selection": {
      backgroundColor: e.selection
    },
    ".cm-activeLine": {
      backgroundColor: e.lineHighlight
    },
    ".cm-gutters": {
      backgroundColor: e.gutterBackground,
      color: e.gutterForeground
    },
    ".cm-activeLineGutter": {
      backgroundColor: e.lineHighlight
    }
  }, {
    dark: i === "dark"
  }), r = nf.define(t);
  return [n, cQ(r)];
};
Mi({
  variant: "dark",
  settings: {
    background: "#200020",
    foreground: "#D0D0FF",
    caret: "#7070FF",
    selection: "#80000080",
    gutterBackground: "#200020",
    gutterForeground: "#C080C0",
    lineHighlight: "#80000040"
  },
  styles: [
    {
      tag: S.comment,
      color: "#404080"
    },
    {
      tag: [S.string, S.regexp],
      color: "#999999"
    },
    {
      tag: S.number,
      color: "#7090B0"
    },
    {
      tag: [S.bool, S.null],
      color: "#8080A0"
    },
    {
      tag: [S.punctuation, S.derefOperator],
      color: "#805080"
    },
    {
      tag: S.keyword,
      color: "#60B0FF"
    },
    {
      tag: S.definitionKeyword,
      color: "#B0FFF0"
    },
    {
      tag: S.moduleKeyword,
      color: "#60B0FF"
    },
    {
      tag: S.operator,
      color: "#A0A0FF"
    },
    {
      tag: [S.variableName, S.self],
      color: "#008080"
    },
    {
      tag: S.operatorKeyword,
      color: "#A0A0FF"
    },
    {
      tag: S.controlKeyword,
      color: "#80A0FF"
    },
    {
      tag: S.className,
      color: "#70E080"
    },
    {
      tag: [S.function(S.propertyName), S.propertyName],
      color: "#50A0A0"
    },
    {
      tag: S.tagName,
      color: "#009090"
    },
    {
      tag: S.modifier,
      color: "#B0FFF0"
    },
    {
      tag: [S.squareBracket, S.attributeName],
      color: "#D0D0FF"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#fcfcfc",
    foreground: "#5c6166",
    caret: "#ffaa33",
    selection: "#036dd626",
    gutterBackground: "#fcfcfc",
    gutterForeground: "#8a919966",
    lineHighlight: "#8a91991a"
  },
  styles: [
    {
      tag: S.comment,
      color: "#787b8099"
    },
    {
      tag: S.string,
      color: "#86b300"
    },
    {
      tag: S.regexp,
      color: "#4cbf99"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#ffaa33"
    },
    {
      tag: S.variableName,
      color: "#5c6166"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#fa8d3e"
    },
    {
      tag: [S.keyword, S.special(S.brace)],
      color: "#fa8d3e"
    },
    {
      tag: S.operator,
      color: "#ed9366"
    },
    {
      tag: S.separator,
      color: "#5c6166b3"
    },
    {
      tag: S.punctuation,
      color: "#5c6166"
    },
    {
      tag: [S.definition(S.propertyName), S.function(S.variableName)],
      color: "#f2ae49"
    },
    {
      tag: [S.className, S.definition(S.typeName)],
      color: "#22a4e6"
    },
    {
      tag: [S.tagName, S.typeName, S.self, S.labelName],
      color: "#55b4d4"
    },
    {
      tag: S.angleBracket,
      color: "#55b4d480"
    },
    {
      tag: S.attributeName,
      color: "#f2ae49"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#15191EFA",
    foreground: "#EEF2F7",
    caret: "#C4C4C4",
    selection: "#90B2D557",
    gutterBackground: "#15191EFA",
    gutterForeground: "#aaaaaa95",
    lineHighlight: "#57575712"
  },
  styles: [
    {
      tag: S.comment,
      color: "#6E6E6E"
    },
    {
      tag: [S.string, S.regexp, S.special(S.brace)],
      color: "#5C81B3"
    },
    {
      tag: S.number,
      color: "#C1E1B8"
    },
    {
      tag: S.bool,
      color: "#53667D"
    },
    {
      tag: [S.definitionKeyword, S.modifier, S.function(S.propertyName)],
      color: "#A3D295",
      fontWeight: "bold"
    },
    {
      tag: [S.keyword, S.moduleKeyword, S.operatorKeyword, S.operator],
      color: "#697A8E",
      fontWeight: "bold"
    },
    {
      tag: [S.variableName, S.attributeName],
      color: "#708E67"
    },
    {
      tag: [
        S.function(S.variableName),
        S.definition(S.propertyName),
        S.derefOperator
      ],
      color: "#fff"
    },
    {
      tag: S.tagName,
      color: "#A3D295"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#2e241d",
    foreground: "#BAAE9E",
    caret: "#A7A7A7",
    selection: "#DDF0FF33",
    gutterBackground: "#28211C",
    gutterForeground: "#BAAE9E90",
    lineHighlight: "#FFFFFF08"
  },
  styles: [
    {
      tag: S.comment,
      color: "#666666"
    },
    {
      tag: [S.string, S.special(S.brace)],
      color: "#54BE0D"
    },
    {
      tag: S.regexp,
      color: "#E9C062"
    },
    {
      tag: S.number,
      color: "#CF6A4C"
    },
    {
      tag: [S.keyword, S.operator],
      color: "#5EA6EA"
    },
    {
      tag: S.variableName,
      color: "#7587A6"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#F9EE98"
    },
    {
      tag: [S.propertyName, S.function(S.variableName)],
      color: "#937121"
    },
    {
      tag: [S.typeName, S.angleBracket, S.tagName],
      color: "#9B859D"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#3b2627",
    foreground: "#E6E1C4",
    caret: "#E6E1C4",
    selection: "#16120E",
    gutterBackground: "#3b2627",
    gutterForeground: "#E6E1C490",
    lineHighlight: "#1F1611"
  },
  styles: [
    {
      tag: S.comment,
      color: "#6B4E32"
    },
    {
      tag: [S.keyword, S.operator, S.derefOperator],
      color: "#EF5D32"
    },
    {
      tag: S.className,
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: [
        S.typeName,
        S.propertyName,
        S.function(S.variableName),
        S.definition(S.variableName)
      ],
      color: "#EFAC32"
    },
    {
      tag: S.definition(S.typeName),
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: S.labelName,
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: [S.number, S.bool],
      color: "#6C99BB"
    },
    {
      tag: [S.variableName, S.self],
      color: "#7DAF9C"
    },
    {
      tag: [S.string, S.special(S.brace), S.regexp],
      color: "#D9D762"
    },
    {
      tag: [S.angleBracket, S.tagName, S.attributeName],
      color: "#EFCB43"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#000205",
    foreground: "#FFFFFF",
    caret: "#E60065",
    selection: "#E60C6559",
    gutterBackground: "#000205",
    gutterForeground: "#ffffff90",
    lineHighlight: "#4DD7FC1A"
  },
  styles: [
    {
      tag: S.comment,
      color: "#404040"
    },
    {
      tag: [S.string, S.special(S.brace), S.regexp],
      color: "#00D8FF"
    },
    {
      tag: S.number,
      color: "#E62286"
    },
    {
      tag: [S.variableName, S.attributeName, S.self],
      color: "#E62286",
      fontWeight: "bold"
    },
    {
      tag: S.function(S.variableName),
      color: "#fff",
      fontWeight: "bold"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#000",
    selection: "#BDD5FC",
    gutterBackground: "#fff",
    gutterForeground: "#00000070",
    lineHighlight: "#FFFBD1"
  },
  styles: [
    {
      tag: S.comment,
      color: "#BCC8BA"
    },
    {
      tag: [S.string, S.special(S.brace), S.regexp],
      color: "#5D90CD"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#46A609"
    },
    {
      tag: S.keyword,
      color: "#AF956F"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#C52727"
    },
    {
      tag: [S.angleBracket, S.tagName, S.attributeName],
      color: "#606060"
    },
    {
      tag: S.self,
      color: "#000"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#00254b",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#B36539BF",
    gutterBackground: "#00254b",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#00000059"
  },
  styles: [
    {
      tag: S.comment,
      color: "#0088FF"
    },
    {
      tag: S.string,
      color: "#3AD900"
    },
    {
      tag: S.regexp,
      color: "#80FFC2"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#FF628C"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#FFEE80"
    },
    {
      tag: S.variableName,
      color: "#CCCCCC"
    },
    {
      tag: S.self,
      color: "#FF80E1"
    },
    {
      tag: [
        S.className,
        S.definition(S.propertyName),
        S.function(S.variableName),
        S.definition(S.typeName),
        S.labelName
      ],
      color: "#FFDD00"
    },
    {
      tag: [S.keyword, S.operator],
      color: "#FF9D00"
    },
    {
      tag: [S.propertyName, S.typeName],
      color: "#80FFBB"
    },
    {
      tag: S.special(S.brace),
      color: "#EDEF7D"
    },
    {
      tag: S.attributeName,
      color: "#9EFFFF"
    },
    {
      tag: S.derefOperator,
      color: "#fff"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#060521",
    foreground: "#E0E0E0",
    caret: "#FFFFFFA6",
    selection: "#122BBB",
    gutterBackground: "#060521",
    gutterForeground: "#E0E0E090",
    lineHighlight: "#FFFFFF0F"
  },
  styles: [
    {
      tag: S.comment,
      color: "#AEAEAE"
    },
    {
      tag: [S.string, S.special(S.brace), S.regexp],
      color: "#8DFF8E"
    },
    {
      tag: [
        S.className,
        S.definition(S.propertyName),
        S.function(S.variableName),
        S.function(S.definition(S.variableName)),
        S.definition(S.typeName)
      ],
      color: "#A3EBFF"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#62E9BD"
    },
    {
      tag: [S.keyword, S.operator],
      color: "#2BF1DC"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#F8FBB1"
    },
    {
      tag: [S.variableName, S.self],
      color: "#B683CA"
    },
    {
      tag: [S.angleBracket, S.tagName, S.typeName, S.propertyName],
      color: "#60A4F1"
    },
    {
      tag: S.derefOperator,
      color: "#E0E0E0"
    },
    {
      tag: S.attributeName,
      color: "#7BACCA"
    }
  ]
});
Mi({
  variant: "dark",
  settings: {
    background: "#2d2f3f",
    foreground: "#f8f8f2",
    caret: "#f8f8f0",
    selection: "#44475a",
    gutterBackground: "#282a36",
    gutterForeground: "rgb(144, 145, 148)",
    lineHighlight: "#44475a"
  },
  styles: [
    {
      tag: S.comment,
      color: "#6272a4"
    },
    {
      tag: [S.string, S.special(S.brace)],
      color: "#f1fa8c"
    },
    {
      tag: [S.number, S.self, S.bool, S.null],
      color: "#bd93f9"
    },
    {
      tag: [S.keyword, S.operator],
      color: "#ff79c6"
    },
    {
      tag: [S.definitionKeyword, S.typeName],
      color: "#8be9fd"
    },
    {
      tag: S.definition(S.typeName),
      color: "#f8f8f2"
    },
    {
      tag: [
        S.className,
        S.definition(S.propertyName),
        S.function(S.variableName),
        S.attributeName
      ],
      color: "#50fa7b"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#000000",
    selection: "#80C7FF",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#00000070",
    lineHighlight: "#C1E2F8"
  },
  styles: [
    {
      tag: S.comment,
      color: "#AAAAAA"
    },
    {
      tag: [S.keyword, S.operator, S.typeName, S.tagName, S.propertyName],
      color: "#2F6F9F",
      fontWeight: "bold"
    },
    {
      tag: [S.attributeName, S.definition(S.propertyName)],
      color: "#4F9FD0"
    },
    {
      tag: [S.className, S.string, S.special(S.brace)],
      color: "#CF4F5F"
    },
    {
      tag: S.number,
      color: "#CF4F5F",
      fontWeight: "bold"
    },
    {
      tag: S.variableName,
      fontWeight: "bold"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#f2f1f8",
    foreground: "#0c006b",
    caret: "#5c49e9",
    selection: "#d5d1f2",
    gutterBackground: "#f2f1f8",
    gutterForeground: "#0c006b70",
    lineHighlight: "#e1def3"
  },
  styles: [
    {
      tag: S.comment,
      color: "#9995b7"
    },
    {
      tag: S.keyword,
      color: "#ff5792",
      fontWeight: "bold"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#ff5792"
    },
    {
      tag: [S.className, S.tagName, S.definition(S.typeName)],
      color: "#0094f0"
    },
    {
      tag: [S.number, S.bool, S.null, S.special(S.brace)],
      color: "#5842ff"
    },
    {
      tag: [S.definition(S.propertyName), S.function(S.variableName)],
      color: "#0095a8"
    },
    {
      tag: S.typeName,
      color: "#b3694d"
    },
    {
      tag: [S.propertyName, S.variableName],
      color: "#fa8900"
    },
    {
      tag: S.operator,
      color: "#ff5792"
    },
    {
      tag: S.self,
      color: "#e64100"
    },
    {
      tag: [S.string, S.regexp],
      color: "#00b368"
    },
    {
      tag: [S.paren, S.bracket],
      color: "#0431fa"
    },
    {
      tag: S.labelName,
      color: "#00bdd6"
    },
    {
      tag: S.attributeName,
      color: "#e64100"
    },
    {
      tag: S.angleBracket,
      color: "#9995b7"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#faf4ed",
    foreground: "#575279",
    caret: "#575279",
    selection: "#6e6a8614",
    gutterBackground: "#faf4ed",
    gutterForeground: "#57527970",
    lineHighlight: "#6e6a860d"
  },
  styles: [
    {
      tag: S.comment,
      color: "#9893a5"
    },
    {
      tag: [S.bool, S.null],
      color: "#286983"
    },
    {
      tag: S.number,
      color: "#d7827e"
    },
    {
      tag: S.className,
      color: "#d7827e"
    },
    {
      tag: [S.angleBracket, S.tagName, S.typeName],
      color: "#56949f"
    },
    {
      tag: S.attributeName,
      color: "#907aa9"
    },
    {
      tag: S.punctuation,
      color: "#797593"
    },
    {
      tag: [S.keyword, S.modifier],
      color: "#286983"
    },
    {
      tag: [S.string, S.regexp],
      color: "#ea9d34"
    },
    {
      tag: S.variableName,
      color: "#d7827e"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#000000",
    selection: "#FFFD0054",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#00000070",
    lineHighlight: "#00000008"
  },
  styles: [
    {
      tag: S.comment,
      color: "#CFCFCF"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#E66C29"
    },
    {
      tag: [
        S.className,
        S.definition(S.propertyName),
        S.function(S.variableName),
        S.labelName,
        S.definition(S.typeName)
      ],
      color: "#2EB43B"
    },
    {
      tag: S.keyword,
      color: "#D8B229"
    },
    {
      tag: S.operator,
      color: "#4EA44E",
      fontWeight: "bold"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#925A47"
    },
    {
      tag: S.string,
      color: "#704D3D"
    },
    {
      tag: S.typeName,
      color: "#2F8996"
    },
    {
      tag: [S.variableName, S.propertyName],
      color: "#77ACB0"
    },
    {
      tag: S.self,
      color: "#77ACB0",
      fontWeight: "bold"
    },
    {
      tag: S.regexp,
      color: "#E3965E"
    },
    {
      tag: [S.tagName, S.angleBracket],
      color: "#BAA827"
    },
    {
      tag: S.attributeName,
      color: "#B06520"
    },
    {
      tag: S.derefOperator,
      color: "#000"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#fef7e5",
    foreground: "#586E75",
    caret: "#000000",
    selection: "#073642",
    gutterBackground: "#fef7e5",
    gutterForeground: "#586E7580",
    lineHighlight: "#EEE8D5"
  },
  styles: [
    {
      tag: S.comment,
      color: "#93A1A1"
    },
    {
      tag: S.string,
      color: "#2AA198"
    },
    {
      tag: S.regexp,
      color: "#D30102"
    },
    {
      tag: S.number,
      color: "#D33682"
    },
    {
      tag: S.variableName,
      color: "#268BD2"
    },
    {
      tag: [S.keyword, S.operator, S.punctuation],
      color: "#859900"
    },
    {
      tag: [S.definitionKeyword, S.modifier],
      color: "#073642",
      fontWeight: "bold"
    },
    {
      tag: [S.className, S.self, S.definition(S.propertyName)],
      color: "#268BD2"
    },
    {
      tag: S.function(S.variableName),
      color: "#268BD2"
    },
    {
      tag: [S.bool, S.null],
      color: "#B58900"
    },
    {
      tag: S.tagName,
      color: "#268BD2",
      fontWeight: "bold"
    },
    {
      tag: S.angleBracket,
      color: "#93A1A1"
    },
    {
      tag: S.attributeName,
      color: "#93A1A1"
    },
    {
      tag: S.typeName,
      color: "#859900"
    }
  ]
});
Mi({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#4D4D4C",
    caret: "#AEAFAD",
    selection: "#D6D6D6",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#4D4D4C80",
    lineHighlight: "#EFEFEF"
  },
  styles: [
    {
      tag: S.comment,
      color: "#8E908C"
    },
    {
      tag: [S.variableName, S.self, S.propertyName, S.attributeName, S.regexp],
      color: "#C82829"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#F5871F"
    },
    {
      tag: [S.className, S.typeName, S.definition(S.typeName)],
      color: "#C99E00"
    },
    {
      tag: [S.string, S.special(S.brace)],
      color: "#718C00"
    },
    {
      tag: S.operator,
      color: "#3E999F"
    },
    {
      tag: [S.definition(S.propertyName), S.function(S.variableName)],
      color: "#4271AE"
    },
    {
      tag: S.keyword,
      color: "#8959A8"
    },
    {
      tag: S.derefOperator,
      color: "#4D4D4C"
    }
  ]
});
const f7 = va({
  String: S.string,
  Number: S.number,
  "True False": S.bool,
  PropertyName: S.propertyName,
  Null: S.null,
  ", :": S.separator,
  "[ ]": S.squareBracket,
  "{ }": S.brace
}), u7 = Ro.deserialize({
  version: 14,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l",
  stateData: "#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O",
  goto: "!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array",
  maxTerm: 25,
  nodeProps: [
    ["isolate", -2, 6, 11, ""],
    ["openedBy", 7, "{", 14, "["],
    ["closedBy", 8, "}", 15, "]"]
  ],
  propSources: [f7],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",
  tokenizers: [0],
  topRules: { JsonText: [0, 1] },
  tokenPrec: 0
}), h7 = /* @__PURE__ */ Ao.define({
  name: "json",
  parser: /* @__PURE__ */ u7.configure({
    props: [
      /* @__PURE__ */ Sa.add({
        Object: /* @__PURE__ */ ea({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ ea({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ ba.add({
        "Object Array": is
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function O7() {
  return new ef(h7);
}
const d7 = 54, p7 = 1, g7 = 55, m7 = 2, v7 = 56, S7 = 3, zS = 4, b7 = 5, Eh = 6, vw = 7, Sw = 8, bw = 9, $w = 10, $7 = 11, y7 = 12, Q7 = 13, Kd = 57, w7 = 14, jS = 58, yw = 20, P7 = 22, Qw = 23, x7 = 24, Og = 26, ww = 27, k7 = 28, _7 = 31, W7 = 34, T7 = 36, Z7 = 37, C7 = 0, R7 = 1, A7 = {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  command: !0,
  embed: !0,
  frame: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0,
  menuitem: !0
}, X7 = {
  dd: !0,
  li: !0,
  optgroup: !0,
  option: !0,
  p: !0,
  rp: !0,
  rt: !0,
  tbody: !0,
  td: !0,
  tfoot: !0,
  th: !0,
  tr: !0
}, BS = {
  dd: { dd: !0, dt: !0 },
  dt: { dd: !0, dt: !0 },
  li: { li: !0 },
  option: { option: !0, optgroup: !0 },
  optgroup: { optgroup: !0 },
  p: {
    address: !0,
    article: !0,
    aside: !0,
    blockquote: !0,
    dir: !0,
    div: !0,
    dl: !0,
    fieldset: !0,
    footer: !0,
    form: !0,
    h1: !0,
    h2: !0,
    h3: !0,
    h4: !0,
    h5: !0,
    h6: !0,
    header: !0,
    hgroup: !0,
    hr: !0,
    menu: !0,
    nav: !0,
    ol: !0,
    p: !0,
    pre: !0,
    section: !0,
    table: !0,
    ul: !0
  },
  rp: { rp: !0, rt: !0 },
  rt: { rp: !0, rt: !0 },
  tbody: { tbody: !0, tfoot: !0 },
  td: { td: !0, th: !0 },
  tfoot: { tbody: !0 },
  th: { td: !0, th: !0 },
  thead: { tbody: !0, tfoot: !0 },
  tr: { tr: !0 }
};
function M7(i) {
  return i == 45 || i == 46 || i == 58 || i >= 65 && i <= 90 || i == 95 || i >= 97 && i <= 122 || i >= 161;
}
function Pw(i) {
  return i == 9 || i == 10 || i == 13 || i == 32;
}
let IS = null, NS = null, FS = 0;
function dg(i, e) {
  let t = i.pos + e;
  if (FS == t && NS == i) return IS;
  let n = i.peek(e);
  for (; Pw(n); ) n = i.peek(++e);
  let r = "";
  for (; M7(n); )
    r += String.fromCharCode(n), n = i.peek(++e);
  return NS = i, FS = t, IS = r ? r.toLowerCase() : n == E7 || n == q7 ? void 0 : null;
}
const xw = 60, qh = 62, Sm = 47, E7 = 63, q7 = 33, L7 = 45;
function GS(i, e) {
  this.name = i, this.parent = e;
}
const D7 = [Eh, $w, vw, Sw, bw], V7 = new Ny({
  start: null,
  shift(i, e, t, n) {
    return D7.indexOf(e) > -1 ? new GS(dg(n, 1) || "", i) : i;
  },
  reduce(i, e) {
    return e == yw && i ? i.parent : i;
  },
  reuse(i, e, t, n) {
    let r = e.type.id;
    return r == Eh || r == T7 ? new GS(dg(n, 1) || "", i) : i;
  },
  strict: !1
}), U7 = new yr((i, e) => {
  if (i.next != xw) {
    i.next < 0 && e.context && i.acceptToken(Kd);
    return;
  }
  i.advance();
  let t = i.next == Sm;
  t && i.advance();
  let n = dg(i, 0);
  if (n === void 0) return;
  if (!n) return i.acceptToken(t ? w7 : Eh);
  let r = e.context ? e.context.name : null;
  if (t) {
    if (n == r) return i.acceptToken($7);
    if (r && X7[r]) return i.acceptToken(Kd, -2);
    if (e.dialectEnabled(C7)) return i.acceptToken(y7);
    for (let s = e.context; s; s = s.parent) if (s.name == n) return;
    i.acceptToken(Q7);
  } else {
    if (n == "script") return i.acceptToken(vw);
    if (n == "style") return i.acceptToken(Sw);
    if (n == "textarea") return i.acceptToken(bw);
    if (A7.hasOwnProperty(n)) return i.acceptToken($w);
    r && BS[r] && BS[r][n] ? i.acceptToken(Kd, -1) : i.acceptToken(Eh);
  }
}, { contextual: !0 }), Y7 = new yr((i) => {
  for (let e = 0, t = 0; ; t++) {
    if (i.next < 0) {
      t && i.acceptToken(jS);
      break;
    }
    if (i.next == L7)
      e++;
    else if (i.next == qh && e >= 2) {
      t >= 3 && i.acceptToken(jS, -2);
      break;
    } else
      e = 0;
    i.advance();
  }
});
function z7(i) {
  for (; i; i = i.parent)
    if (i.name == "svg" || i.name == "math") return !0;
  return !1;
}
const j7 = new yr((i, e) => {
  if (i.next == Sm && i.peek(1) == qh) {
    let t = e.dialectEnabled(R7) || z7(e.context);
    i.acceptToken(t ? b7 : zS, 2);
  } else i.next == qh && i.acceptToken(zS, 1);
});
function bm(i, e, t) {
  let n = 2 + i.length;
  return new yr((r) => {
    for (let s = 0, o = 0, a = 0; ; a++) {
      if (r.next < 0) {
        a && r.acceptToken(e);
        break;
      }
      if (s == 0 && r.next == xw || s == 1 && r.next == Sm || s >= 2 && s < n && r.next == i.charCodeAt(s - 2))
        s++, o++;
      else if ((s == 2 || s == n) && Pw(r.next))
        o++;
      else if (s == n && r.next == qh) {
        a > o ? r.acceptToken(e, -o) : r.acceptToken(t, -(o - 2));
        break;
      } else if ((r.next == 10 || r.next == 13) && a) {
        r.acceptToken(e, 1);
        break;
      } else
        s = o = 0;
      r.advance();
    }
  });
}
const B7 = bm("script", d7, p7), I7 = bm("style", g7, m7), N7 = bm("textarea", v7, S7), F7 = va({
  "Text RawText": S.content,
  "StartTag StartCloseTag SelfClosingEndTag EndTag": S.angleBracket,
  TagName: S.tagName,
  "MismatchedCloseTag/TagName": [S.tagName, S.invalid],
  AttributeName: S.attributeName,
  "AttributeValue UnquotedAttributeValue": S.attributeValue,
  Is: S.definitionOperator,
  "EntityReference CharacterReference": S.character,
  Comment: S.blockComment,
  ProcessingInst: S.processingInstruction,
  DoctypeDecl: S.documentMeta
}), G7 = Ro.deserialize({
  version: 14,
  states: ",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%ZQ&rO,59fO%fQ&rO,59iO%qQ&rO,59lO%|Q&rO,59nOOOa'#D^'#D^O&XOaO'#CxO&dOaO,59[OOOb'#D_'#D_O&lObO'#C{O&wObO,59[OOOd'#D`'#D`O'POdO'#DOO'[OdO,59[OOO`'#Da'#DaO'dO!rO,59[O'kQ#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'pO$fO,59oOOO`,59o,59oO'xQ#|O,59qO'}Q#|O,59rOOO`-E7W-E7WO(SQ&rO'#CsOOQW'#DZ'#DZO(bQ&rO1G.wOOOa1G.w1G.wOOO`1G/Y1G/YO(mQ&rO1G/QOOOb1G/Q1G/QO(xQ&rO1G/TOOOd1G/T1G/TO)TQ&rO1G/WOOO`1G/W1G/WO)`Q&rO1G/YOOOa-E7[-E7[O)kQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)pQ#tO'#C|OOOd-E7^-E7^O)uQ#tO'#DPOOO`-E7_-E7_O)zQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O*PQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOO`7+$t7+$tOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rO*[Q#|O,59eO*aQ#|O,59hO*fQ#|O,59kOOO`1G/X1G/XO*kO7[O'#CvO*|OMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O+_O7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+pOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z",
  stateData: ",]~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OT}OhyO~OS!POT}OhyO~OS!ROT}OhyO~OS!TOT}OhyO~OS}OT}OhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXTgXhgX~OS!fOT!gOhyO~OS!hOT!gOhyO~OS!iOT!gOhyO~OS!jOT!gOhyO~OS!gOT!gOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~",
  goto: "%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{!O!Q!S!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ!ObQ!QcQ!SdQ!UeZ!e{!O!Q!S!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",
  nodeNames: "⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl",
  maxTerm: 67,
  context: V7,
  nodeProps: [
    ["closedBy", -10, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, "EndTag", 6, "EndTag SelfClosingEndTag", -4, 21, 30, 33, 36, "CloseTag"],
    ["openedBy", 4, "StartTag StartCloseTag", 5, "StartTag", -4, 29, 32, 35, 37, "OpenTag"],
    ["group", -9, 14, 17, 18, 19, 20, 39, 40, 41, 42, "Entity", 16, "Entity TextContent", -3, 28, 31, 34, "TextContent Entity"],
    ["isolate", -11, 21, 29, 30, 32, 33, 35, 36, 37, 38, 41, 42, "ltr", -3, 26, 27, 39, ""]
  ],
  propSources: [F7],
  skippedNodes: [0],
  repeatNodeCount: 9,
  tokenData: "!<p!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs3_sv-_vw3}wxHYx}-_}!OH{!O!P-_!P!Q$q!Q![-_![!]Mz!]!^-_!^!_!$S!_!`!;x!`!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4U-_4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/ebhSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0rXhSqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0mS1bP;=`<%l0m[1hP;=`<%l/^!V1vchS`P!a`!cpOq&Xqr1krs&}sv1kvw0mwx(tx!P1k!P!Q&X!Q!^1k!^!_*V!_!a&X!a#s1k#s$f&X$f;'S1k;'S;=`3R<%l?Ah1k?Ah?BY&X?BY?Mn1k?MnO&X!V3UP;=`<%l1k!_3[P;=`<%l-_!Z3hV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_4WihSkWc!ROX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst>]tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^/^!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!Z5zbkWOX5uXZ7SZ[5u[^7S^p5uqr5urs7Sst+Ptw5uwx7Sx!]5u!]!^7w!^!a7S!a#S5u#S#T7S#T;'S5u;'S;=`8n<%lO5u!R7VVOp7Sqs7St!]7S!]!^7l!^;'S7S;'S;=`7q<%lO7S!R7qOa!R!R7tP;=`<%l7S!Z8OYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z8qP;=`<%l5u!_8{ihSkWOX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst/^tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^:j!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!_:sbhSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V<QchSOp7Sqr;{rs7Sst0mtw;{wx7Sx!P;{!P!Q7S!Q!];{!]!^=]!^!a7S!a#s;{#s$f7S$f;'S;{;'S;=`>P<%l?Ah;{?Ah?BY7S?BY?Mn;{?MnO7S!V=dXhSa!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!V>SP;=`<%l;{!_>YP;=`<%l8t!_>dhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^/^!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!Z@TakWOX@OXZAYZ[@O[^AY^p@Oqr@OrsAYsw@OwxAYx!]@O!]!^Az!^!aAY!a#S@O#S#TAY#T;'S@O;'S;=`Bq<%lO@O!RA]UOpAYq!]AY!]!^Ao!^;'SAY;'S;=`At<%lOAY!RAtOb!R!RAwP;=`<%lAY!ZBRYkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZBtP;=`<%l@O!_COhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^Dj!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!_DsbhSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VFQbhSOpAYqrE{rsAYswE{wxAYx!PE{!P!QAY!Q!]E{!]!^GY!^!aAY!a#sE{#s$fAY$f;'SE{;'S;=`G|<%l?AhE{?Ah?BYAY?BY?MnE{?MnOAY!VGaXhSb!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!VHPP;=`<%lE{!_HVP;=`<%lBw!ZHcW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aIYlhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OKQ!O!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aK_khS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!`&X!`!aMS!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!TM_X`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!aNZ!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMz!O!PMz!P!Q$q!Q![Mz![!]Mz!]!^-_!^!_*V!_!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f$}-_$}%OMz%O%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4UMz4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Je-_$Je$JgMz$Jg$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!a!$PP;=`<%lMz!R!$ZY!a`!cpOq*Vqr!$yrs(Vsv*Vwx)ex!a*V!a!b!4t!b;'S*V;'S;=`*s<%lO*V!R!%Q]!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!%y!O!f*V!f!g!']!g#W*V#W#X!0`#X;'S*V;'S;=`*s<%lO*V!R!&QX!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!&m!O;'S*V;'S;=`*s<%lO*V!R!&vV!a`!cp!dPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!'dX!a`!cpOr*Vrs(Vsv*Vwx)ex!q*V!q!r!(P!r;'S*V;'S;=`*s<%lO*V!R!(WX!a`!cpOr*Vrs(Vsv*Vwx)ex!e*V!e!f!(s!f;'S*V;'S;=`*s<%lO*V!R!(zX!a`!cpOr*Vrs(Vsv*Vwx)ex!v*V!v!w!)g!w;'S*V;'S;=`*s<%lO*V!R!)nX!a`!cpOr*Vrs(Vsv*Vwx)ex!{*V!{!|!*Z!|;'S*V;'S;=`*s<%lO*V!R!*bX!a`!cpOr*Vrs(Vsv*Vwx)ex!r*V!r!s!*}!s;'S*V;'S;=`*s<%lO*V!R!+UX!a`!cpOr*Vrs(Vsv*Vwx)ex!g*V!g!h!+q!h;'S*V;'S;=`*s<%lO*V!R!+xY!a`!cpOr!+qrs!,hsv!+qvw!-Swx!.[x!`!+q!`!a!/j!a;'S!+q;'S;=`!0Y<%lO!+qq!,mV!cpOv!,hvx!-Sx!`!,h!`!a!-q!a;'S!,h;'S;=`!.U<%lO!,hP!-VTO!`!-S!`!a!-f!a;'S!-S;'S;=`!-k<%lO!-SP!-kO{PP!-nP;=`<%l!-Sq!-xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!.XP;=`<%l!,ha!.aX!a`Or!.[rs!-Ssv!.[vw!-Sw!`!.[!`!a!.|!a;'S!.[;'S;=`!/d<%lO!.[a!/TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!/gP;=`<%l!.[!R!/sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!0]P;=`<%l!+q!R!0gX!a`!cpOr*Vrs(Vsv*Vwx)ex#c*V#c#d!1S#d;'S*V;'S;=`*s<%lO*V!R!1ZX!a`!cpOr*Vrs(Vsv*Vwx)ex#V*V#V#W!1v#W;'S*V;'S;=`*s<%lO*V!R!1}X!a`!cpOr*Vrs(Vsv*Vwx)ex#h*V#h#i!2j#i;'S*V;'S;=`*s<%lO*V!R!2qX!a`!cpOr*Vrs(Vsv*Vwx)ex#m*V#m#n!3^#n;'S*V;'S;=`*s<%lO*V!R!3eX!a`!cpOr*Vrs(Vsv*Vwx)ex#d*V#d#e!4Q#e;'S*V;'S;=`*s<%lO*V!R!4XX!a`!cpOr*Vrs(Vsv*Vwx)ex#X*V#X#Y!+q#Y;'S*V;'S;=`*s<%lO*V!R!4{Y!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!a!4t!a!b!:]!b;'S!4t;'S;=`!;r<%lO!4tq!5pV!cpOv!5kvx!6Vx!a!5k!a!b!7W!b;'S!5k;'S;=`!8V<%lO!5kP!6YTO!a!6V!a!b!6i!b;'S!6V;'S;=`!7Q<%lO!6VP!6lTO!`!6V!`!a!6{!a;'S!6V;'S;=`!7Q<%lO!6VP!7QOxPP!7TP;=`<%l!6Vq!7]V!cpOv!5kvx!6Vx!`!5k!`!a!7r!a;'S!5k;'S;=`!8V<%lO!5kq!7yS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!8YP;=`<%l!5ka!8bX!a`Or!8]rs!6Vsv!8]vw!6Vw!a!8]!a!b!8}!b;'S!8];'S;=`!:V<%lO!8]a!9SX!a`Or!8]rs!6Vsv!8]vw!6Vw!`!8]!`!a!9o!a;'S!8];'S;=`!:V<%lO!8]a!9vT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!:YP;=`<%l!8]!R!:dY!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!`!4t!`!a!;S!a;'S!4t;'S;=`!;r<%lO!4t!R!;]V!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;uP;=`<%l!4t!V!<TXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X",
  tokenizers: [B7, I7, N7, j7, U7, Y7, 0, 1, 2, 3, 4, 5],
  topRules: { Document: [0, 15] },
  dialects: { noMatch: 0, selfClosing: 509 },
  tokenPrec: 511
});
function kw(i, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let n of i.getChildren(Qw)) {
    let r = n.getChild(x7), s = n.getChild(Og) || n.getChild(ww);
    r && (t[e.read(r.from, r.to)] = s ? s.type.id == Og ? e.read(s.from + 1, s.to - 1) : e.read(s.from, s.to) : "");
  }
  return t;
}
function HS(i, e) {
  let t = i.getChild(P7);
  return t ? e.read(t.from, t.to) : " ";
}
function Jd(i, e, t) {
  let n;
  for (let r of t)
    if (!r.attrs || r.attrs(n || (n = kw(i.node.parent.firstChild, e))))
      return { parser: r.parser };
  return null;
}
function _w(i = [], e = []) {
  let t = [], n = [], r = [], s = [];
  for (let a of i)
    (a.tag == "script" ? t : a.tag == "style" ? n : a.tag == "textarea" ? r : s).push(a);
  let o = e.length ? /* @__PURE__ */ Object.create(null) : null;
  for (let a of e) (o[a.name] || (o[a.name] = [])).push(a);
  return nA((a, c) => {
    let u = a.type.id;
    if (u == k7) return Jd(a, c, t);
    if (u == _7) return Jd(a, c, n);
    if (u == W7) return Jd(a, c, r);
    if (u == yw && s.length) {
      let h = a.node, d = h.firstChild, p = d && HS(d, c), m;
      if (p) {
        for (let b of s)
          if (b.tag == p && (!b.attrs || b.attrs(m || (m = kw(d, c))))) {
            let y = h.lastChild, w = y.type.id == Z7 ? y.from : h.to;
            if (w > d.to)
              return { parser: b.parser, overlay: [{ from: d.to, to: w }] };
          }
      }
    }
    if (o && u == Qw) {
      let h = a.node, d;
      if (d = h.firstChild) {
        let p = o[c.read(d.from, d.to)];
        if (p) for (let m of p) {
          if (m.tagName && m.tagName != HS(h.parent, c)) continue;
          let b = h.lastChild;
          if (b.type.id == Og) {
            let y = b.from + 1, w = b.lastChild, k = b.to - (w && w.isError ? 0 : 1);
            if (k > y) return { parser: m.parser, overlay: [{ from: y, to: k }] };
          } else if (b.type.id == ww)
            return { parser: m.parser, overlay: [{ from: b.from, to: b.to }] };
        }
      }
    }
    return null;
  });
}
const H7 = 100, KS = 1, K7 = 101, J7 = 102, JS = 2, Ww = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], eE = 58, tE = 40, Tw = 95, iE = 91, Hu = 45, nE = 46, rE = 35, sE = 37, oE = 38, lE = 92, aE = 10;
function zc(i) {
  return i >= 65 && i <= 90 || i >= 97 && i <= 122 || i >= 161;
}
function Zw(i) {
  return i >= 48 && i <= 57;
}
const cE = new yr((i, e) => {
  for (let t = !1, n = 0, r = 0; ; r++) {
    let { next: s } = i;
    if (zc(s) || s == Hu || s == Tw || t && Zw(s))
      !t && (s != Hu || r > 0) && (t = !0), n === r && s == Hu && n++, i.advance();
    else if (s == lE && i.peek(1) != aE)
      i.advance(), i.next > -1 && i.advance(), t = !0;
    else {
      t && i.acceptToken(s == tE ? K7 : n == 2 && e.canShift(JS) ? JS : J7);
      break;
    }
  }
}), fE = new yr((i) => {
  if (Ww.includes(i.peek(-1))) {
    let { next: e } = i;
    (zc(e) || e == Tw || e == rE || e == nE || e == iE || e == eE && zc(i.peek(1)) || e == Hu || e == oE) && i.acceptToken(H7);
  }
}), uE = new yr((i) => {
  if (!Ww.includes(i.peek(-1))) {
    let { next: e } = i;
    if (e == sE && (i.advance(), i.acceptToken(KS)), zc(e)) {
      do
        i.advance();
      while (zc(i.next) || Zw(i.next));
      i.acceptToken(KS);
    }
  }
}), hE = va({
  "AtKeyword import charset namespace keyframes media supports": S.definitionKeyword,
  "from to selector": S.keyword,
  NamespaceName: S.namespace,
  KeyframeName: S.labelName,
  KeyframeRangeName: S.operatorKeyword,
  TagName: S.tagName,
  ClassName: S.className,
  PseudoClassName: S.constant(S.className),
  IdName: S.labelName,
  "FeatureName PropertyName": S.propertyName,
  AttributeName: S.attributeName,
  NumberLiteral: S.number,
  KeywordQuery: S.keyword,
  UnaryQueryOp: S.operatorKeyword,
  "CallTag ValueName": S.atom,
  VariableName: S.variableName,
  Callee: S.operatorKeyword,
  Unit: S.unit,
  "UniversalSelector NestingSelector": S.definitionOperator,
  MatchOp: S.compareOperator,
  "ChildOp SiblingOp, LogicOp": S.logicOperator,
  BinOp: S.arithmeticOperator,
  Important: S.modifier,
  Comment: S.blockComment,
  ColorLiteral: S.color,
  "ParenthesizedContent StringLiteral": S.string,
  ":": S.punctuation,
  "PseudoOp #": S.derefOperator,
  "; ,": S.separator,
  "( )": S.paren,
  "[ ]": S.squareBracket,
  "{ }": S.brace
}), OE = { __proto__: null, lang: 34, "nth-child": 34, "nth-last-child": 34, "nth-of-type": 34, "nth-last-of-type": 34, dir: 34, "host-context": 34, url: 62, "url-prefix": 62, domain: 62, regexp: 62, selector: 140 }, dE = { __proto__: null, "@import": 120, "@media": 144, "@charset": 148, "@namespace": 152, "@keyframes": 158, "@supports": 170 }, pE = { __proto__: null, not: 134, only: 134 }, gE = Ro.deserialize({
  version: 14,
  states: ":jQYQ[OOO#_Q[OOP#fOWOOOOQP'#Cd'#CdOOQP'#Cc'#CcO#kQ[O'#CfO$_QXO'#CaO$fQ[O'#CiO$qQ[O'#DUO$vQ[O'#DXOOQP'#En'#EnO${QdO'#DhO%jQ[O'#DuO${QdO'#DwO%{Q[O'#DyO&WQ[O'#D|O&`Q[O'#ESO&nQ[O'#EUOOQS'#Em'#EmOOQS'#EX'#EXQYQ[OOO&uQXO'#CdO'jQWO'#DdO'oQWO'#EsO'zQ[O'#EsQOQWOOP(UO#tO'#C_POOO)C@])C@]OOQP'#Ch'#ChOOQP,59Q,59QO#kQ[O,59QO(aQ[O'#E]O({QWO,58{O)TQ[O,59TO$qQ[O,59pO$vQ[O,59sO(aQ[O,59vO(aQ[O,59xO(aQ[O,59yO)`Q[O'#DcOOQS,58{,58{OOQP'#Cl'#ClOOQO'#DS'#DSOOQP,59T,59TO)gQWO,59TO)lQWO,59TOOQP'#DW'#DWOOQP,59p,59pOOQO'#DY'#DYO)qQ`O,59sOOQS'#Cq'#CqO${QdO'#CrO)yQvO'#CtO+ZQtO,5:SOOQO'#Cy'#CyO)lQWO'#CxO+oQWO'#CzO+tQ[O'#DPOOQS'#Ep'#EpOOQO'#Dk'#DkO+|Q[O'#DrO,[QWO'#EtO&`Q[O'#DpO,jQWO'#DsOOQO'#Eu'#EuO)OQWO,5:aO,oQpO,5:cOOQS'#D{'#D{O,wQWO,5:eO,|Q[O,5:eOOQO'#EO'#EOO-UQWO,5:hO-ZQWO,5:nO-cQWO,5:pOOQS-E8V-E8VO-kQdO,5:OO-{Q[O'#E_O.YQWO,5;_O.YQWO,5;_POOO'#EW'#EWP.eO#tO,58yPOOO,58y,58yOOQP1G.l1G.lO/[QXO,5:wOOQO-E8Z-E8ZOOQS1G.g1G.gOOQP1G.o1G.oO)gQWO1G.oO)lQWO1G.oOOQP1G/[1G/[O/iQ`O1G/_O0SQXO1G/bO0jQXO1G/dO1QQXO1G/eO1hQWO,59}O1mQ[O'#DTO1tQdO'#CpOOQP1G/_1G/_O${QdO1G/_O1{QpO,59^OOQS,59`,59`O${QdO,59bO2TQWO1G/nOOQS,59d,59dO2YQ!bO,59fOOQS'#DQ'#DQOOQS'#EZ'#EZO2eQ[O,59kOOQS,59k,59kO2mQWO'#DkO2xQWO,5:WO2}QWO,5:^O&`Q[O,5:YO&`Q[O'#E`O3VQWO,5;`O3bQWO,5:[O(aQ[O,5:_OOQS1G/{1G/{OOQS1G/}1G/}OOQS1G0P1G0PO3sQWO1G0PO3xQdO'#EPOOQS1G0S1G0SOOQS1G0Y1G0YOOQS1G0[1G0[O4TQtO1G/jOOQO1G/j1G/jOOQO,5:y,5:yO4kQ[O,5:yOOQO-E8]-E8]O4xQWO1G0yPOOO-E8U-E8UPOOO1G.e1G.eOOQP7+$Z7+$ZOOQP7+$y7+$yO${QdO7+$yOOQS1G/i1G/iO5TQXO'#ErO5[QWO,59oO5aQtO'#EYO6XQdO'#EoO6cQWO,59[O6hQpO7+$yOOQS1G.x1G.xOOQS1G.|1G.|OOQS7+%Y7+%YOOQS1G/Q1G/QO6pQWO1G/QOOQS-E8X-E8XOOQS1G/V1G/VO${QdO1G/rOOQO1G/x1G/xOOQO1G/t1G/tO6uQWO,5:zOOQO-E8^-E8^O7TQXO1G/yOOQS7+%k7+%kO7[QYO'#CtOOQO'#ER'#ERO7gQ`O'#EQOOQO'#EQ'#EQO7rQWO'#EaO7zQdO,5:kOOQS,5:k,5:kO8VQtO'#E^O${QdO'#E^O9WQdO7+%UOOQO7+%U7+%UOOQO1G0e1G0eO9kQpO<<HeO9sQWO,5;^OOQP1G/Z1G/ZOOQS-E8W-E8WO${QdO'#E[O9{QWO,5;ZOOQT1G.v1G.vOOQP<<He<<HeOOQS7+$l7+$lO:TQdO7+%^OOQO7+%e7+%eOOQO,5:l,5:lO3{QdO'#EbO7rQWO,5:{OOQS,5:{,5:{OOQS-E8_-E8_OOQS1G0V1G0VO:[QtO,5:xOOQS-E8[-E8[OOQO<<Hp<<HpOOQPAN>PAN>PO;]QdO,5:vOOQO-E8Y-E8YOOQO<<Hx<<HxOOQO,5:|,5:|OOQO-E8`-E8`OOQS1G0g1G0g",
  stateData: ";o~O#[OS#]QQ~OUYOXYOZTO^VO_VOrXOyWO!]aO!^ZO!j[O!l]O!n^O!q_O!w`O#YRO~OQfOUYOXYOZTO^VO_VOrXOyWO!]aO!^ZO!j[O!l]O!n^O!q_O!w`O#YeO~O#V#gP~P!ZO#]jO~O#YlO~OZnO^qO_qOrsOuoOyrO!PtO!SvO#WuO~O!UwO~P#pOa}O#XzO#YyO~O#Y!OO~O#Y!QO~OQ![Oc!TOg![Oi![Oo!YOr!ZO#X!WO#Y!SO#e!UO~Oc!^O!e!`O!h!aO#Y!]O!U#hP~Oi!fOo!YO#Y!eO~Oi!hO#Y!hO~Oc!^O!e!`O!h!aO#Y!]O~O!Z#hP~P%jOZWX^WX^!XX_WXrWXuWXyWX!PWX!SWX!UWX#WWX~O^!mO~O!Z!nO#V#gX!T#gX~O#V#gX!T#gX~P!ZO#^!qO#_!qO#`!sO~OUYOXYOZTO^VO_VOrXOyWO#YRO~OuoO!UwO~Oa!zO#XzO#YyO~O!T#gP~P!ZOc#RO~Oc#SO~Oq#TO}#UO~OP#WOchXkhX!ZhX!ehX!hhX#YhXbhXQhXghXihXohXrhXuhX!YhX#VhX#XhX#ehXqhX!ThX~Oc!^Ok#XO!e!`O!h!aO#Y!]O!Z#hP~Oc#[O~Oq#`O#Y#]O~Oc!^O!e!`O!h!aO#Y#aO~Ou#eO!c#dO!U#hX!Z#hX~Oc#hO~Ok#XO!Z#jO~O!Z#kO~Oi#lOo!YO~O!U#mO~O!UwO!c#dO~O!UwO!Z#pO~O!Y#rO!Z!Wa#V!Wa!T!Wa~P${O!Z#RX#V#RX!T#RX~P!ZO!Z!nO#V#ga!T#ga~O#^!qO#_!qO#`#xO~OZnO^qO_qOrsOyrO!PtO!SvO#WuO~Ou#Pa!U#Pab#Pa~P.pOq#zO}#{O~OZnO^qO_qOrsOyrO~Ou!Oi!P!Oi!S!Oi!U!Oi#W!Oib!Oi~P/qOu!Qi!P!Qi!S!Qi!U!Qi#W!Qib!Qi~P/qOu!Ri!P!Ri!S!Ri!U!Ri#W!Rib!Ri~P/qO!T#|O~Ob#fP~P(aOb#cP~P${Ob$TOk#XO~O!Z$VO~Ob$WOi$XOp$XO~Oq$ZO#Y#]O~O^!aXb!_X!c!_X~O^$[O~Ob$]O!c#dO~Ou#eO!U#ha!Z#ha~O!c#dOu!da!U!da!Z!dab!da~O!Z$bO~O!T$iO#Y$dO#e$cO~Ok#XOu$kO!Y$mO!Z!Wi#V!Wi!T!Wi~P${O!Z#Ra#V#Ra!T#Ra~P!ZO!Z!nO#V#gi!T#gi~Ob#fX~P#pOb$qO~Ok#XOQ!|Xb!|Xc!|Xg!|Xi!|Xo!|Xr!|Xu!|X#X!|X#Y!|X#e!|X~Ou$sOb#cX~P${Ob$uO~Ok#XOq$vO~Ob$wO~O!c#dOu#Sa!U#Sa!Z#Sa~Ob$yO~P.pOP#WOuhX!UhX~O#e$cOu!tX!U!tX~Ou${O!UwO~O!T%PO#Y$dO#e$cO~Ok#XOQ#QXc#QXg#QXi#QXo#QXr#QXu#QX!Y#QX!Z#QX#V#QX#X#QX#Y#QX#e#QX!T#QX~Ou$kO!Y%SO!Z!Wq#V!Wq!T!Wq~P${Ok#XOq%TO~OuoOb#fa~Ou$sOb#ca~Ob%WO~P${Ok#XOQ#Qac#Qag#Qai#Qao#Qar#Qau#Qa!Y#Qa!Z#Qa#V#Qa#X#Qa#Y#Qa#e#Qa!T#Qa~Ob#Oau#Oa~P${O#[p#]#ek!S#e~",
  goto: "-g#jPPP#kP#nP#w$WP#wP$g#wPP$mPPP$s$|$|P%`P$|P$|%z&^PPPP$|&vP&z'Q#wP'W#w'^P#wP#w#wPPP'd'y(WPP#nPP(_(_(i(_P(_P(_(_P#nP#nP#nP(l#nP(o(r(u(|#nP#nP)R)X)h)v)|*S*^*d*n*t*zPPPPPPPPPP+Q+Z+v+yP,o,r,x-RRkQ_bOPdhw!n#tkYOPdhotuvw!n#R#h#tkSOPdhotuvw!n#R#h#tQmTR!tnQ{VR!xqQ!x}Q#Z!XR#y!zq![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UU$f#m$h${R$z$eq!XZ]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UQ!f^R#l!gT#^!Z#_Q|VR!yqQ!x|R#y!yQ!PWR!{rQ!RXR!|sQxUQ!wpQ#i!cQ#o!jQ#p!kQ$}$gR%Z$|SgPwQ!phQ#s!nR$n#tZfPhw!n#ta!b[`a!V!^!`#d#eR#b!^R!g^R!i_R#n!iS$g#m$hR%X${V$e#m$h${Q!rjR#w!rQdOShPwU!ldh#tR#t!nQ$Q#SU$r$Q$x%UQ$x$[R%U$sQ#_!ZR$Y#_Q$t$QR%V$tQpUS!vp$pR$p#}Q$l#qR%R$lQ!ogS#u!o#vR#v!pQ#f!_R$`#fQ$h#mR%O$hQ$|$gR%Y$|_cOPdhw!n#t^UOPdhw!n#tQ!uoQ!}tQ#OuQ#PvQ#}#RR$a#hR$R#SQ!VZQ!d]Q#V!TQ#q!m[$P#S$Q$[$s$x%UQ$S#UQ$U#XS$j#q$lQ$o#{R%Q$kR$O#RQiPR#QwQ!c[Q!kaR#Y!VU!_[a!VQ!j`Q#c!^Q#g!`Q$^#dR$_#e",
  nodeNames: "⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector . ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent ] [ LineNames LineName , PseudoClassName ArgList IdSelector # IdName AttributeSelector AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList KeyframeSelector KeyframeRangeName SupportsStatement supports AtRule Styles",
  maxTerm: 117,
  nodeProps: [
    ["isolate", -2, 3, 25, ""],
    ["openedBy", 18, "(", 33, "[", 51, "{"],
    ["closedBy", 19, ")", 34, "]", 52, "}"]
  ],
  propSources: [hE],
  skippedNodes: [0, 3, 88],
  repeatNodeCount: 11,
  tokenData: "J^~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Ab![!]B]!]!^CX!^!_$}!_!`Cj!`!aC{!a!b$}!b!cDw!c!}$}!}#OFa#O#P$}#P#QFr#Q#R6d#R#T$}#T#UGT#U#c$}#c#dHf#d#o$}#o#pH{#p#q6d#q#rI^#r#sIo#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`JW<%lO$}`%QSOy%^z;'S%^;'S;=`%o<%lO%^`%cSp`Oy%^z;'S%^;'S;=`%o<%lO%^`%rP;=`<%l%^~%zh#[~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#[~p`OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^l)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^l)sUp`Oy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^l*[Up`Oy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^l*sUp`Oy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^l+[Up`Oy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^l+sUp`Oy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^l,[Up`Oy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^l,sUp`Oy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^l-[Up`Oy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^l-uS!Y[p`Oy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOi~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.Rn/zYyQOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^l0oYp`Oy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^l1dYp`Oy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^l2ZYg[p`Oy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^l3QYg[p`Oy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^l3uYp`Oy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^l4lYg[p`Oy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^l5aYp`Oy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^l6WSg[p`Oy%^z;'S%^;'S;=`%o<%lO%^d6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^d7QS}Sp`Oy%^z;'S%^;'S;=`%o<%lO%^b7cSXQOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7on9cSc^Oy%^z;'S%^;'S;=`%o<%lO%^~9tOb~n9{UUQkWOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^n:fWkW!SQOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^l;TUp`Oy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^l;nYp`#e[Oy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^l<cYp`Oy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=WUp`Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=qUp`#e[Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l>[[p`#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^n?VSu^Oy%^z;'S%^;'S;=`%o<%lO%^l?hWkWOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^n@VUZQOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTkWOy%^z{@}{;'S%^;'S;=`%o<%lO%^~AUSp`#]~Oy%^z;'S%^;'S;=`%o<%lO%^lAg[#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^bBbU^QOy%^z![%^![!]Bt!];'S%^;'S;=`%o<%lO%^bB{S_Qp`Oy%^z;'S%^;'S;=`%o<%lO%^nC^S!Z^Oy%^z;'S%^;'S;=`%o<%lO%^dCoS}SOy%^z;'S%^;'S;=`%o<%lO%^bDQU!PQOy%^z!`%^!`!aDd!a;'S%^;'S;=`%o<%lO%^bDkS!PQp`Oy%^z;'S%^;'S;=`%o<%lO%^bDzWOy%^z!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^bEk[!]Qp`Oy%^z}%^}!OEd!O!Q%^!Q![Ed![!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^nFfSr^Oy%^z;'S%^;'S;=`%o<%lO%^nFwSq^Oy%^z;'S%^;'S;=`%o<%lO%^bGWUOy%^z#b%^#b#cGj#c;'S%^;'S;=`%o<%lO%^bGoUp`Oy%^z#W%^#W#XHR#X;'S%^;'S;=`%o<%lO%^bHYS!cQp`Oy%^z;'S%^;'S;=`%o<%lO%^bHiUOy%^z#f%^#f#gHR#g;'S%^;'S;=`%o<%lO%^fIQS!UUOy%^z;'S%^;'S;=`%o<%lO%^nIcS!T^Oy%^z;'S%^;'S;=`%o<%lO%^fItU!SQOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^`JZP;=`<%l$}",
  tokenizers: [fE, uE, cE, 1, 2, 3, 4, new $h("m~RRYZ[z{a~~g~aO#_~~dP!P!Qg~lO#`~~", 28, 106)],
  topRules: { StyleSheet: [0, 4], Styles: [1, 87] },
  specialized: [{ term: 101, get: (i) => OE[i] || -1 }, { term: 59, get: (i) => dE[i] || -1 }, { term: 102, get: (i) => pE[i] || -1 }],
  tokenPrec: 1219
});
let ep = null;
function tp() {
  if (!ep && typeof document == "object" && document.body) {
    let { style: i } = document.body, e = [], t = /* @__PURE__ */ new Set();
    for (let n in i)
      n != "cssText" && n != "cssFloat" && typeof i[n] == "string" && (/[A-Z]/.test(n) && (n = n.replace(/[A-Z]/g, (r) => "-" + r.toLowerCase())), t.has(n) || (e.push(n), t.add(n)));
    ep = e.sort().map((n) => ({ type: "property", label: n, apply: n + ": " }));
  }
  return ep || [];
}
const eb = /* @__PURE__ */ [
  "active",
  "after",
  "any-link",
  "autofill",
  "backdrop",
  "before",
  "checked",
  "cue",
  "default",
  "defined",
  "disabled",
  "empty",
  "enabled",
  "file-selector-button",
  "first",
  "first-child",
  "first-letter",
  "first-line",
  "first-of-type",
  "focus",
  "focus-visible",
  "focus-within",
  "fullscreen",
  "has",
  "host",
  "host-context",
  "hover",
  "in-range",
  "indeterminate",
  "invalid",
  "is",
  "lang",
  "last-child",
  "last-of-type",
  "left",
  "link",
  "marker",
  "modal",
  "not",
  "nth-child",
  "nth-last-child",
  "nth-last-of-type",
  "nth-of-type",
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "part",
  "placeholder",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "selection",
  "slotted",
  "target",
  "target-text",
  "valid",
  "visited",
  "where"
].map((i) => ({ type: "class", label: i })), tb = /* @__PURE__ */ [
  "above",
  "absolute",
  "activeborder",
  "additive",
  "activecaption",
  "after-white-space",
  "ahead",
  "alias",
  "all",
  "all-scroll",
  "alphabetic",
  "alternate",
  "always",
  "antialiased",
  "appworkspace",
  "asterisks",
  "attr",
  "auto",
  "auto-flow",
  "avoid",
  "avoid-column",
  "avoid-page",
  "avoid-region",
  "axis-pan",
  "background",
  "backwards",
  "baseline",
  "below",
  "bidi-override",
  "blink",
  "block",
  "block-axis",
  "bold",
  "bolder",
  "border",
  "border-box",
  "both",
  "bottom",
  "break",
  "break-all",
  "break-word",
  "bullets",
  "button",
  "button-bevel",
  "buttonface",
  "buttonhighlight",
  "buttonshadow",
  "buttontext",
  "calc",
  "capitalize",
  "caps-lock-indicator",
  "caption",
  "captiontext",
  "caret",
  "cell",
  "center",
  "checkbox",
  "circle",
  "cjk-decimal",
  "clear",
  "clip",
  "close-quote",
  "col-resize",
  "collapse",
  "color",
  "color-burn",
  "color-dodge",
  "column",
  "column-reverse",
  "compact",
  "condensed",
  "contain",
  "content",
  "contents",
  "content-box",
  "context-menu",
  "continuous",
  "copy",
  "counter",
  "counters",
  "cover",
  "crop",
  "cross",
  "crosshair",
  "currentcolor",
  "cursive",
  "cyclic",
  "darken",
  "dashed",
  "decimal",
  "decimal-leading-zero",
  "default",
  "default-button",
  "dense",
  "destination-atop",
  "destination-in",
  "destination-out",
  "destination-over",
  "difference",
  "disc",
  "discard",
  "disclosure-closed",
  "disclosure-open",
  "document",
  "dot-dash",
  "dot-dot-dash",
  "dotted",
  "double",
  "down",
  "e-resize",
  "ease",
  "ease-in",
  "ease-in-out",
  "ease-out",
  "element",
  "ellipse",
  "ellipsis",
  "embed",
  "end",
  "ethiopic-abegede-gez",
  "ethiopic-halehame-aa-er",
  "ethiopic-halehame-gez",
  "ew-resize",
  "exclusion",
  "expanded",
  "extends",
  "extra-condensed",
  "extra-expanded",
  "fantasy",
  "fast",
  "fill",
  "fill-box",
  "fixed",
  "flat",
  "flex",
  "flex-end",
  "flex-start",
  "footnotes",
  "forwards",
  "from",
  "geometricPrecision",
  "graytext",
  "grid",
  "groove",
  "hand",
  "hard-light",
  "help",
  "hidden",
  "hide",
  "higher",
  "highlight",
  "highlighttext",
  "horizontal",
  "hsl",
  "hsla",
  "hue",
  "icon",
  "ignore",
  "inactiveborder",
  "inactivecaption",
  "inactivecaptiontext",
  "infinite",
  "infobackground",
  "infotext",
  "inherit",
  "initial",
  "inline",
  "inline-axis",
  "inline-block",
  "inline-flex",
  "inline-grid",
  "inline-table",
  "inset",
  "inside",
  "intrinsic",
  "invert",
  "italic",
  "justify",
  "keep-all",
  "landscape",
  "large",
  "larger",
  "left",
  "level",
  "lighter",
  "lighten",
  "line-through",
  "linear",
  "linear-gradient",
  "lines",
  "list-item",
  "listbox",
  "listitem",
  "local",
  "logical",
  "loud",
  "lower",
  "lower-hexadecimal",
  "lower-latin",
  "lower-norwegian",
  "lowercase",
  "ltr",
  "luminosity",
  "manipulation",
  "match",
  "matrix",
  "matrix3d",
  "medium",
  "menu",
  "menutext",
  "message-box",
  "middle",
  "min-intrinsic",
  "mix",
  "monospace",
  "move",
  "multiple",
  "multiple_mask_images",
  "multiply",
  "n-resize",
  "narrower",
  "ne-resize",
  "nesw-resize",
  "no-close-quote",
  "no-drop",
  "no-open-quote",
  "no-repeat",
  "none",
  "normal",
  "not-allowed",
  "nowrap",
  "ns-resize",
  "numbers",
  "numeric",
  "nw-resize",
  "nwse-resize",
  "oblique",
  "opacity",
  "open-quote",
  "optimizeLegibility",
  "optimizeSpeed",
  "outset",
  "outside",
  "outside-shape",
  "overlay",
  "overline",
  "padding",
  "padding-box",
  "painted",
  "page",
  "paused",
  "perspective",
  "pinch-zoom",
  "plus-darker",
  "plus-lighter",
  "pointer",
  "polygon",
  "portrait",
  "pre",
  "pre-line",
  "pre-wrap",
  "preserve-3d",
  "progress",
  "push-button",
  "radial-gradient",
  "radio",
  "read-only",
  "read-write",
  "read-write-plaintext-only",
  "rectangle",
  "region",
  "relative",
  "repeat",
  "repeating-linear-gradient",
  "repeating-radial-gradient",
  "repeat-x",
  "repeat-y",
  "reset",
  "reverse",
  "rgb",
  "rgba",
  "ridge",
  "right",
  "rotate",
  "rotate3d",
  "rotateX",
  "rotateY",
  "rotateZ",
  "round",
  "row",
  "row-resize",
  "row-reverse",
  "rtl",
  "run-in",
  "running",
  "s-resize",
  "sans-serif",
  "saturation",
  "scale",
  "scale3d",
  "scaleX",
  "scaleY",
  "scaleZ",
  "screen",
  "scroll",
  "scrollbar",
  "scroll-position",
  "se-resize",
  "self-start",
  "self-end",
  "semi-condensed",
  "semi-expanded",
  "separate",
  "serif",
  "show",
  "single",
  "skew",
  "skewX",
  "skewY",
  "skip-white-space",
  "slide",
  "slider-horizontal",
  "slider-vertical",
  "sliderthumb-horizontal",
  "sliderthumb-vertical",
  "slow",
  "small",
  "small-caps",
  "small-caption",
  "smaller",
  "soft-light",
  "solid",
  "source-atop",
  "source-in",
  "source-out",
  "source-over",
  "space",
  "space-around",
  "space-between",
  "space-evenly",
  "spell-out",
  "square",
  "start",
  "static",
  "status-bar",
  "stretch",
  "stroke",
  "stroke-box",
  "sub",
  "subpixel-antialiased",
  "svg_masks",
  "super",
  "sw-resize",
  "symbolic",
  "symbols",
  "system-ui",
  "table",
  "table-caption",
  "table-cell",
  "table-column",
  "table-column-group",
  "table-footer-group",
  "table-header-group",
  "table-row",
  "table-row-group",
  "text",
  "text-bottom",
  "text-top",
  "textarea",
  "textfield",
  "thick",
  "thin",
  "threeddarkshadow",
  "threedface",
  "threedhighlight",
  "threedlightshadow",
  "threedshadow",
  "to",
  "top",
  "transform",
  "translate",
  "translate3d",
  "translateX",
  "translateY",
  "translateZ",
  "transparent",
  "ultra-condensed",
  "ultra-expanded",
  "underline",
  "unidirectional-pan",
  "unset",
  "up",
  "upper-latin",
  "uppercase",
  "url",
  "var",
  "vertical",
  "vertical-text",
  "view-box",
  "visible",
  "visibleFill",
  "visiblePainted",
  "visibleStroke",
  "visual",
  "w-resize",
  "wait",
  "wave",
  "wider",
  "window",
  "windowframe",
  "windowtext",
  "words",
  "wrap",
  "wrap-reverse",
  "x-large",
  "x-small",
  "xor",
  "xx-large",
  "xx-small"
].map((i) => ({ type: "keyword", label: i })).concat(/* @__PURE__ */ [
  "aliceblue",
  "antiquewhite",
  "aqua",
  "aquamarine",
  "azure",
  "beige",
  "bisque",
  "black",
  "blanchedalmond",
  "blue",
  "blueviolet",
  "brown",
  "burlywood",
  "cadetblue",
  "chartreuse",
  "chocolate",
  "coral",
  "cornflowerblue",
  "cornsilk",
  "crimson",
  "cyan",
  "darkblue",
  "darkcyan",
  "darkgoldenrod",
  "darkgray",
  "darkgreen",
  "darkkhaki",
  "darkmagenta",
  "darkolivegreen",
  "darkorange",
  "darkorchid",
  "darkred",
  "darksalmon",
  "darkseagreen",
  "darkslateblue",
  "darkslategray",
  "darkturquoise",
  "darkviolet",
  "deeppink",
  "deepskyblue",
  "dimgray",
  "dodgerblue",
  "firebrick",
  "floralwhite",
  "forestgreen",
  "fuchsia",
  "gainsboro",
  "ghostwhite",
  "gold",
  "goldenrod",
  "gray",
  "grey",
  "green",
  "greenyellow",
  "honeydew",
  "hotpink",
  "indianred",
  "indigo",
  "ivory",
  "khaki",
  "lavender",
  "lavenderblush",
  "lawngreen",
  "lemonchiffon",
  "lightblue",
  "lightcoral",
  "lightcyan",
  "lightgoldenrodyellow",
  "lightgray",
  "lightgreen",
  "lightpink",
  "lightsalmon",
  "lightseagreen",
  "lightskyblue",
  "lightslategray",
  "lightsteelblue",
  "lightyellow",
  "lime",
  "limegreen",
  "linen",
  "magenta",
  "maroon",
  "mediumaquamarine",
  "mediumblue",
  "mediumorchid",
  "mediumpurple",
  "mediumseagreen",
  "mediumslateblue",
  "mediumspringgreen",
  "mediumturquoise",
  "mediumvioletred",
  "midnightblue",
  "mintcream",
  "mistyrose",
  "moccasin",
  "navajowhite",
  "navy",
  "oldlace",
  "olive",
  "olivedrab",
  "orange",
  "orangered",
  "orchid",
  "palegoldenrod",
  "palegreen",
  "paleturquoise",
  "palevioletred",
  "papayawhip",
  "peachpuff",
  "peru",
  "pink",
  "plum",
  "powderblue",
  "purple",
  "rebeccapurple",
  "red",
  "rosybrown",
  "royalblue",
  "saddlebrown",
  "salmon",
  "sandybrown",
  "seagreen",
  "seashell",
  "sienna",
  "silver",
  "skyblue",
  "slateblue",
  "slategray",
  "snow",
  "springgreen",
  "steelblue",
  "tan",
  "teal",
  "thistle",
  "tomato",
  "turquoise",
  "violet",
  "wheat",
  "white",
  "whitesmoke",
  "yellow",
  "yellowgreen"
].map((i) => ({ type: "constant", label: i }))), mE = /* @__PURE__ */ [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "b",
  "bdi",
  "bdo",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "figcaption",
  "figure",
  "footer",
  "form",
  "header",
  "hgroup",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "meter",
  "nav",
  "ol",
  "output",
  "p",
  "pre",
  "ruby",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "template",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "tr",
  "u",
  "ul"
].map((i) => ({ type: "type", label: i })), vE = /* @__PURE__ */ [
  "@charset",
  "@color-profile",
  "@container",
  "@counter-style",
  "@font-face",
  "@font-feature-values",
  "@font-palette-values",
  "@import",
  "@keyframes",
  "@layer",
  "@media",
  "@namespace",
  "@page",
  "@position-try",
  "@property",
  "@scope",
  "@starting-style",
  "@supports",
  "@view-transition"
].map((i) => ({ type: "keyword", label: i })), Ms = /^(\w[\w-]*|-\w[\w-]*|)$/, SE = /^-(-[\w-]*)?$/;
function bE(i, e) {
  var t;
  if ((i.name == "(" || i.type.isError) && (i = i.parent || i), i.name != "ArgList")
    return !1;
  let n = (t = i.parent) === null || t === void 0 ? void 0 : t.firstChild;
  return (n == null ? void 0 : n.name) != "Callee" ? !1 : e.sliceString(n.from, n.to) == "var";
}
const ib = /* @__PURE__ */ new jy(), $E = ["Declaration"];
function yE(i) {
  for (let e = i; ; ) {
    if (e.type.isTop)
      return e;
    if (!(e = e.parent))
      return i;
  }
}
function Cw(i, e, t) {
  if (e.to - e.from > 4096) {
    let n = ib.get(e);
    if (n)
      return n;
    let r = [], s = /* @__PURE__ */ new Set(), o = e.cursor(Jt.IncludeAnonymous);
    if (o.firstChild())
      do
        for (let a of Cw(i, o.node, t))
          s.has(a.label) || (s.add(a.label), r.push(a));
      while (o.nextSibling());
    return ib.set(e, r), r;
  } else {
    let n = [], r = /* @__PURE__ */ new Set();
    return e.cursor().iterate((s) => {
      var o;
      if (t(s) && s.matchContext($E) && ((o = s.node.nextSibling) === null || o === void 0 ? void 0 : o.name) == ":") {
        let a = i.sliceString(s.from, s.to);
        r.has(a) || (r.add(a), n.push({ label: a, type: "variable" }));
      }
    }), n;
  }
}
const QE = (i) => (e) => {
  let { state: t, pos: n } = e, r = ui(t).resolveInner(n, -1), s = r.type.isError && r.from == r.to - 1 && t.doc.sliceString(r.from, r.to) == "-";
  if (r.name == "PropertyName" || (s || r.name == "TagName") && /^(Block|Styles)$/.test(r.resolve(r.to).name))
    return { from: r.from, options: tp(), validFor: Ms };
  if (r.name == "ValueName")
    return { from: r.from, options: tb, validFor: Ms };
  if (r.name == "PseudoClassName")
    return { from: r.from, options: eb, validFor: Ms };
  if (i(r) || (e.explicit || s) && bE(r, t.doc))
    return {
      from: i(r) || s ? r.from : n,
      options: Cw(t.doc, yE(r), i),
      validFor: SE
    };
  if (r.name == "TagName") {
    for (let { parent: c } = r; c; c = c.parent)
      if (c.name == "Block")
        return { from: r.from, options: tp(), validFor: Ms };
    return { from: r.from, options: mE, validFor: Ms };
  }
  if (r.name == "AtKeyword")
    return { from: r.from, options: vE, validFor: Ms };
  if (!e.explicit)
    return null;
  let o = r.resolve(n), a = o.childBefore(n);
  return a && a.name == ":" && o.name == "PseudoClassSelector" ? { from: n, options: eb, validFor: Ms } : a && a.name == ":" && o.name == "Declaration" || o.name == "ArgList" ? { from: n, options: tb, validFor: Ms } : o.name == "Block" || o.name == "Styles" ? { from: n, options: tp(), validFor: Ms } : null;
}, wE = /* @__PURE__ */ QE((i) => i.name == "VariableName"), Lh = /* @__PURE__ */ Ao.define({
  name: "css",
  parser: /* @__PURE__ */ gE.configure({
    props: [
      /* @__PURE__ */ Sa.add({
        Declaration: /* @__PURE__ */ ea()
      }),
      /* @__PURE__ */ ba.add({
        "Block KeyframeList": is
      })
    ]
  }),
  languageData: {
    commentTokens: { block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*\}$/,
    wordChars: "-"
  }
});
function PE() {
  return new ef(Lh, Lh.data.of({ autocomplete: wE }));
}
const xE = 314, kE = 315, nb = 1, _E = 2, WE = 3, TE = 4, ZE = 316, CE = 318, RE = 319, AE = 5, XE = 6, ME = 0, pg = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], Rw = 125, EE = 59, gg = 47, qE = 42, LE = 43, DE = 45, VE = 60, UE = 44, YE = 63, zE = 46, jE = 91, BE = new Ny({
  start: !1,
  shift(i, e) {
    return e == AE || e == XE || e == CE ? i : e == RE;
  },
  strict: !1
}), IE = new yr((i, e) => {
  let { next: t } = i;
  (t == Rw || t == -1 || e.context) && i.acceptToken(ZE);
}, { contextual: !0, fallback: !0 }), NE = new yr((i, e) => {
  let { next: t } = i, n;
  pg.indexOf(t) > -1 || t == gg && ((n = i.peek(1)) == gg || n == qE) || t != Rw && t != EE && t != -1 && !e.context && i.acceptToken(xE);
}, { contextual: !0 }), FE = new yr((i, e) => {
  i.next == jE && !e.context && i.acceptToken(kE);
}, { contextual: !0 }), GE = new yr((i, e) => {
  let { next: t } = i;
  if (t == LE || t == DE) {
    if (i.advance(), t == i.next) {
      i.advance();
      let n = !e.context && e.canShift(nb);
      i.acceptToken(n ? nb : _E);
    }
  } else t == YE && i.peek(1) == zE && (i.advance(), i.advance(), (i.next < 48 || i.next > 57) && i.acceptToken(WE));
}, { contextual: !0 });
function ip(i, e) {
  return i >= 65 && i <= 90 || i >= 97 && i <= 122 || i == 95 || i >= 192 || !e && i >= 48 && i <= 57;
}
const HE = new yr((i, e) => {
  if (i.next != VE || !e.dialectEnabled(ME) || (i.advance(), i.next == gg)) return;
  let t = 0;
  for (; pg.indexOf(i.next) > -1; )
    i.advance(), t++;
  if (ip(i.next, !0)) {
    for (i.advance(), t++; ip(i.next, !1); )
      i.advance(), t++;
    for (; pg.indexOf(i.next) > -1; )
      i.advance(), t++;
    if (i.next == UE) return;
    for (let n = 0; ; n++) {
      if (n == 7) {
        if (!ip(i.next, !0)) return;
        break;
      }
      if (i.next != "extends".charCodeAt(n)) break;
      i.advance(), t++;
    }
  }
  i.acceptToken(TE, -t);
}), KE = va({
  "get set async static": S.modifier,
  "for while do if else switch try catch finally return throw break continue default case": S.controlKeyword,
  "in of await yield void typeof delete instanceof": S.operatorKeyword,
  "let var const using function class extends": S.definitionKeyword,
  "import export from": S.moduleKeyword,
  "with debugger as new": S.keyword,
  TemplateString: S.special(S.string),
  super: S.atom,
  BooleanLiteral: S.bool,
  this: S.self,
  null: S.null,
  Star: S.modifier,
  VariableName: S.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": S.function(S.variableName),
  VariableDefinition: S.definition(S.variableName),
  Label: S.labelName,
  PropertyName: S.propertyName,
  PrivatePropertyName: S.special(S.propertyName),
  "CallExpression/MemberExpression/PropertyName": S.function(S.propertyName),
  "FunctionDeclaration/VariableDefinition": S.function(S.definition(S.variableName)),
  "ClassDeclaration/VariableDefinition": S.definition(S.className),
  "NewExpression/VariableName": S.className,
  PropertyDefinition: S.definition(S.propertyName),
  PrivatePropertyDefinition: S.definition(S.special(S.propertyName)),
  UpdateOp: S.updateOperator,
  "LineComment Hashbang": S.lineComment,
  BlockComment: S.blockComment,
  Number: S.number,
  String: S.string,
  Escape: S.escape,
  ArithOp: S.arithmeticOperator,
  LogicOp: S.logicOperator,
  BitOp: S.bitwiseOperator,
  CompareOp: S.compareOperator,
  RegExp: S.regexp,
  Equals: S.definitionOperator,
  Arrow: S.function(S.punctuation),
  ": Spread": S.punctuation,
  "( )": S.paren,
  "[ ]": S.squareBracket,
  "{ }": S.brace,
  "InterpolationStart InterpolationEnd": S.special(S.brace),
  ".": S.derefOperator,
  ", ;": S.separator,
  "@": S.meta,
  TypeName: S.typeName,
  TypeDefinition: S.definition(S.typeName),
  "type enum interface implements namespace module declare": S.definitionKeyword,
  "abstract global Privacy readonly override": S.modifier,
  "is keyof unique infer asserts": S.operatorKeyword,
  JSXAttributeValue: S.attributeValue,
  JSXText: S.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": S.angleBracket,
  "JSXIdentifier JSXNameSpacedName": S.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": S.attributeName,
  "JSXBuiltin/JSXIdentifier": S.standard(S.tagName)
}), JE = { __proto__: null, export: 20, as: 25, from: 33, default: 36, async: 41, function: 42, const: 52, extends: 56, this: 60, true: 68, false: 68, null: 80, void: 84, typeof: 88, super: 104, new: 138, delete: 150, yield: 159, await: 163, class: 168, public: 231, private: 231, protected: 231, readonly: 233, instanceof: 252, satisfies: 255, in: 256, import: 290, keyof: 347, unique: 351, infer: 357, asserts: 393, is: 395, abstract: 415, implements: 417, type: 419, let: 422, var: 424, using: 427, interface: 433, enum: 437, namespace: 443, module: 445, declare: 449, global: 453, for: 472, of: 481, while: 484, with: 488, do: 492, if: 496, else: 498, switch: 502, case: 508, try: 514, catch: 518, finally: 522, return: 526, throw: 530, break: 534, continue: 538, debugger: 542 }, e8 = { __proto__: null, async: 125, get: 127, set: 129, declare: 191, public: 193, private: 193, protected: 193, static: 195, abstract: 197, override: 199, readonly: 205, accessor: 207, new: 399 }, t8 = { __proto__: null, "<": 189 }, i8 = Ro.deserialize({
  version: 14,
  states: "$EOQ%TQlOOO%[QlOOO'_QpOOP(lO`OOO*zQ!0MxO'#CiO+RO#tO'#CjO+aO&jO'#CjO+oO#@ItO'#D_O.QQlO'#DeO.bQlO'#DpO%[QlO'#DxO0fQlO'#EQOOQ!0Lf'#EY'#EYO1PQ`O'#EVOOQO'#En'#EnOOQO'#Ij'#IjO1XQ`O'#GrO1dQ`O'#EmO1iQ`O'#EmO3hQ!0MxO'#JpO6[Q!0MxO'#JqO6uQ`O'#F[O6zQ,UO'#FsOOQ!0Lf'#Fe'#FeO7VO7dO'#FeO7eQMhO'#F{O9UQ`O'#FzOOQ!0Lf'#Jq'#JqOOQ!0Lb'#Jp'#JpO9ZQ`O'#GvOOQ['#K]'#K]O9fQ`O'#IWO9kQ!0LrO'#IXOOQ['#J^'#J^OOQ['#I]'#I]Q`QlOOQ`QlOOO9sQ!L^O'#DtO9zQlO'#D|O:RQlO'#EOO9aQ`O'#GrO:YQMhO'#CoO:hQ`O'#ElO:sQ`O'#EwO:xQMhO'#FdO;gQ`O'#GrOOQO'#K^'#K^O;lQ`O'#K^O;zQ`O'#GzO;zQ`O'#G{O;zQ`O'#G}O9aQ`O'#HQO<qQ`O'#HTO>YQ`O'#CeO>jQ`O'#HaO>rQ`O'#HgO>rQ`O'#HiO`QlO'#HkO>rQ`O'#HmO>rQ`O'#HpO>wQ`O'#HvO>|Q!0LsO'#H|O%[QlO'#IOO?XQ!0LsO'#IQO?dQ!0LsO'#ISO9kQ!0LrO'#IUO?oQ!0MxO'#CiO@qQpO'#DjQOQ`OOO%[QlO'#EOOAXQ`O'#ERO:YQMhO'#ElOAdQ`O'#ElOAoQ!bO'#FdOOQ['#Cg'#CgOOQ!0Lb'#Do'#DoOOQ!0Lb'#Jt'#JtO%[QlO'#JtOOQO'#Jw'#JwOOQO'#If'#IfOBoQpO'#EeOOQ!0Lb'#Ed'#EdOOQ!0Lb'#J{'#J{OCkQ!0MSO'#EeOCuQpO'#EUOOQO'#Jv'#JvODZQpO'#JwOEhQpO'#EUOCuQpO'#EePEuO&2DjO'#CbPOOO)CD{)CD{OOOO'#I^'#I^OFQO#tO,59UOOQ!0Lh,59U,59UOOOO'#I_'#I_OF`O&jO,59UOFnQ!L^O'#DaOOOO'#Ia'#IaOFuO#@ItO,59yOOQ!0Lf,59y,59yOGTQlO'#IbOGhQ`O'#JrOIgQ!fO'#JrO+}QlO'#JrOInQ`O,5:POJUQ`O'#EnOJcQ`O'#KROJnQ`O'#KQOJnQ`O'#KQOJvQ`O,5;[OJ{Q`O'#KPOOQ!0Ln,5:[,5:[OKSQlO,5:[OMQQ!0MxO,5:dOMqQ`O,5:lON[Q!0LrO'#KOONcQ`O'#J}O9ZQ`O'#J}ONwQ`O'#J}O! PQ`O,5;ZO! UQ`O'#J}O!#ZQ!fO'#JqOOQ!0Lh'#Ci'#CiO%[QlO'#EQO!#yQ!fO,5:qOOQS'#Jx'#JxOOQO-E<h-E<hO9aQ`O,5=^O!$aQ`O,5=^O!$fQlO,5;XO!&iQMhO'#EiO!(SQ`O,5;XO!(XQlO'#DwO!(cQpO,5;bO!(kQpO,5;bO%[QlO,5;bOOQ['#FS'#FSOOQ['#FU'#FUO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cOOQ['#FY'#FYO!(yQlO,5;sOOQ!0Lf,5;x,5;xOOQ!0Lf,5;y,5;yOOQ!0Lf,5;{,5;{O%[QlO'#InO!*|Q!0LrO,5<hO%[QlO,5;cO!&iQMhO,5;cO!+kQMhO,5;cO!-]QMhO'#E[O%[QlO,5;vOOQ!0Lf,5;z,5;zO!-dQ,UO'#FiO!.aQ,UO'#KVO!-{Q,UO'#KVO!.hQ,UO'#KVOOQO'#KV'#KVO!.|Q,UO,5<ROOOW,5<_,5<_O!/_QlO'#FuOOOW'#Im'#ImO7VO7dO,5<PO!/fQ,UO'#FwOOQ!0Lf,5<P,5<PO!0VQ$IUO'#CwOOQ!0Lh'#C{'#C{O!0jO#@ItO'#DPO!1WQMjO,5<dO!1_Q`O,5<gO!2zQ(CWO'#GWO!3XQ`O'#GXO!3^Q`O'#GXO!4|Q(CWO'#G]O!6RQpO'#GaOOQO'#Gm'#GmO!+rQMhO'#GlOOQO'#Go'#GoO!+rQMhO'#GnO!6tQ$IUO'#JjOOQ!0Lh'#Jj'#JjO!7OQ`O'#JiO!7^Q`O'#JhO!7fQ`O'#CuOOQ!0Lh'#Cy'#CyO!7qQ`O'#C{OOQ!0Lh'#DT'#DTOOQ!0Lh'#DV'#DVO1SQ`O'#DXO!+rQMhO'#GOO!+rQMhO'#GQO!7vQ`O'#GSO!7{Q`O'#GTO!3^Q`O'#GZO!+rQMhO'#G`O;zQ`O'#JiO!8QQ`O'#EoO!8oQ`O,5<fOOQ!0Lb'#Cr'#CrO!8wQ`O'#EpO!9qQpO'#EqOOQ!0Lb'#KP'#KPO!9xQ!0LrO'#K_O9kQ!0LrO,5=bO`QlO,5>rOOQ['#Jf'#JfOOQ[,5>s,5>sOOQ[-E<Z-E<ZO!;wQ!0MxO,5:`O!9lQpO,5:^O!>bQ!0MxO,5:hO%[QlO,5:hO!@xQ!0MxO,5:jOOQO,5@x,5@xO!AiQMhO,5=^O!AwQ!0LrO'#JgO9UQ`O'#JgO!BYQ!0LrO,59ZO!BeQpO,59ZO!BmQMhO,59ZO:YQMhO,59ZO!BxQ`O,5;XO!CQQ`O'#H`O!CfQ`O'#KbO%[QlO,5;|O!9lQpO,5<OO!CnQ`O,5=yO!CsQ`O,5=yO!CxQ`O,5=yO9kQ!0LrO,5=yO;zQ`O,5=iOOQO'#Cw'#CwO!DWQpO,5=fO!D`QMhO,5=gO!DkQ`O,5=iO!DpQ!bO,5=lO!DxQ`O'#K^O>wQ`O'#HVO9aQ`O'#HXO!D}Q`O'#HXO:YQMhO'#HZO!ESQ`O'#HZOOQ[,5=o,5=oO!EXQ`O'#H[O!EjQ`O'#CoO!EoQ`O,59PO!EyQ`O,59PO!HOQlO,59POOQ[,59P,59PO!H`Q!0LrO,59PO%[QlO,59PO!JkQlO'#HcOOQ['#Hd'#HdOOQ['#He'#HeO`QlO,5={O!KRQ`O,5={O`QlO,5>RO`QlO,5>TO!KWQ`O,5>VO`QlO,5>XO!K]Q`O,5>[O!KbQlO,5>bOOQ[,5>h,5>hO%[QlO,5>hO9kQ!0LrO,5>jOOQ[,5>l,5>lO# lQ`O,5>lOOQ[,5>n,5>nO# lQ`O,5>nOOQ[,5>p,5>pO#!YQpO'#D]O%[QlO'#JtO#!{QpO'#JtO##VQpO'#DkO##hQpO'#DkO#%yQlO'#DkO#&QQ`O'#JsO#&YQ`O,5:UO#&_Q`O'#ErO#&mQ`O'#KSO#&uQ`O,5;]O#&zQpO'#DkO#'XQpO'#ETOOQ!0Lf,5:m,5:mO%[QlO,5:mO#'`Q`O,5:mO>wQ`O,5;WO!BeQpO,5;WO!BmQMhO,5;WO:YQMhO,5;WO#'hQ`O,5@`O#'mQ07dO,5:qOOQO-E<d-E<dO#(sQ!0MSO,5;POCuQpO,5:pO#(}QpO,5:pOCuQpO,5;PO!BYQ!0LrO,5:pOOQ!0Lb'#Eh'#EhOOQO,5;P,5;PO%[QlO,5;PO#)[Q!0LrO,5;PO#)gQ!0LrO,5;PO!BeQpO,5:pOOQO,5;V,5;VO#)uQ!0LrO,5;PPOOO'#I['#I[P#*ZO&2DjO,58|POOO,58|,58|OOOO-E<[-E<[OOQ!0Lh1G.p1G.pOOOO-E<]-E<]OOOO,59{,59{O#*fQ!bO,59{OOOO-E<_-E<_OOQ!0Lf1G/e1G/eO#*kQ!fO,5>|O+}QlO,5>|OOQO,5?S,5?SO#*uQlO'#IbOOQO-E<`-E<`O#+SQ`O,5@^O#+[Q!fO,5@^O#+cQ`O,5@lOOQ!0Lf1G/k1G/kO%[QlO,5@mO#+kQ`O'#IhOOQO-E<f-E<fO#+cQ`O,5@lOOQ!0Lb1G0v1G0vOOQ!0Ln1G/v1G/vOOQ!0Ln1G0W1G0WO%[QlO,5@jO#,PQ!0LrO,5@jO#,bQ!0LrO,5@jO#,iQ`O,5@iO9ZQ`O,5@iO#,qQ`O,5@iO#-PQ`O'#IkO#,iQ`O,5@iOOQ!0Lb1G0u1G0uO!(cQpO,5:sO!(nQpO,5:sOOQS,5:u,5:uO#-qQdO,5:uO#-yQMhO1G2xO9aQ`O1G2xOOQ!0Lf1G0s1G0sO#.XQ!0MxO1G0sO#/^Q!0MvO,5;TOOQ!0Lh'#GV'#GVO#/zQ!0MzO'#JjO!$fQlO1G0sO#2VQ!fO'#JuO%[QlO'#JuO#2aQ`O,5:cOOQ!0Lh'#D]'#D]OOQ!0Lf1G0|1G0|O%[QlO1G0|OOQ!0Lf1G1e1G1eO#2fQ`O1G0|O#4zQ!0MxO1G0}O#5RQ!0MxO1G0}O#7iQ!0MxO1G0}O#7pQ!0MxO1G0}O#:WQ!0MxO1G0}O#<nQ!0MxO1G0}O#<uQ!0MxO1G0}O#<|Q!0MxO1G0}O#?dQ!0MxO1G0}O#?kQ!0MxO1G0}O#AxQ?MtO'#CiO#CsQ?MtO1G1_O#CzQ?MtO'#JqO#D_Q!0MxO,5?YOOQ!0Lb-E<l-E<lO#FlQ!0MxO1G0}O#GiQ!0MzO1G0}OOQ!0Lf1G0}1G0}O#HlQMjO'#JzO#HvQ`O,5:vO#H{Q!0MxO1G1bO#IoQ,UO,5<VO#IwQ,UO,5<WO#JPQ,UO'#FnO#JhQ`O'#FmOOQO'#KW'#KWOOQO'#Il'#IlO#JmQ,UO1G1mOOQ!0Lf1G1m1G1mOOOW1G1x1G1xO#KOQ?MtO'#JpO#KYQ`O,5<aO!(yQlO,5<aOOOW-E<k-E<kOOQ!0Lf1G1k1G1kO#K_QpO'#KVOOQ!0Lf,5<c,5<cO#KgQpO,5<cO#KlQMhO'#DROOOO'#I`'#I`O#KsO#@ItO,59kOOQ!0Lh,59k,59kO%[QlO1G2OO!7{Q`O'#IpO#LOQ`O,5<yOOQ!0Lh,5<v,5<vO!+rQMhO'#IsO#LlQMjO,5=WO!+rQMhO'#IuO#M_QMjO,5=YO!&iQMhO,5=[OOQO1G2R1G2RO#MiQ!dO'#CrO#M|Q(CWO'#EpO$ RQpO'#GaO$ iQ!dO,5<rO$ pQ`O'#KYO9ZQ`O'#KYO$!OQ`O,5<tO!+rQMhO,5<sO$!TQ`O'#GYO$!fQ`O,5<sO$!kQ!dO'#GVO$!xQ!dO'#KZO$#SQ`O'#KZO!&iQMhO'#KZO$#XQ`O,5<wO$#^QlO'#JtO$#hQpO'#GbO##hQpO'#GbO$#yQ`O'#GfO!3^Q`O'#GjO$$OQ!0LrO'#IrO$$ZQpO,5<{OOQ!0Lp,5<{,5<{O$$bQpO'#GbO$$oQpO'#GcO$%QQpO'#GcO$%VQMjO,5=WO$%gQMjO,5=YOOQ!0Lh,5=],5=]O!+rQMhO,5@TO!+rQMhO,5@TO$%wQ`O'#IwO$&VQ`O,5@SO$&_Q`O,59aOOQ!0Lh,59g,59gO$'UQ$IYO,59sOOQ!0Lh'#Jn'#JnO$'wQMjO,5<jO$(jQMjO,5<lO@iQ`O,5<nOOQ!0Lh,5<o,5<oO$(tQ`O,5<uO$(yQMjO,5<zO$)ZQ`O,5@TO$)iQ`O'#J}O!$fQlO1G2QO$)nQ`O1G2QO9ZQ`O'#KQO9ZQ`O'#ErO%[QlO'#ErO9ZQ`O'#IyO$)sQ!0LrO,5@yOOQ[1G2|1G2|OOQ[1G4^1G4^OOQ!0Lf1G/z1G/zOOQ!0Lf1G/x1G/xO$+uQ!0MxO1G0SOOQ[1G2x1G2xO!&iQMhO1G2xO%[QlO1G2xO#-|Q`O1G2xO$-yQMhO'#EiOOQ!0Lb,5@R,5@RO$.WQ!0LrO,5@ROOQ[1G.u1G.uO!BYQ!0LrO1G.uO!BeQpO1G.uO!BmQMhO1G.uO$.iQ`O1G0sO$.nQ`O'#CiO$.yQ`O'#KcO$/RQ`O,5=zO$/WQ`O'#KcO$/]Q`O'#KcO$/kQ`O'#JPO$/yQ`O,5@|O$0RQ!fO1G1hOOQ!0Lf1G1j1G1jO9aQ`O1G3eO@iQ`O1G3eO$0YQ`O1G3eO$0_Q`O1G3eOOQ[1G3e1G3eO!DkQ`O1G3TO!&iQMhO1G3QO$0dQ`O1G3QOOQ[1G3R1G3RO!&iQMhO1G3RO$0iQ`O1G3RO$0qQpO'#HPOOQ[1G3T1G3TO!5|QpO'#I{O!DpQ!bO1G3WOOQ[1G3W1G3WOOQ[,5=q,5=qO$0yQMhO,5=sO9aQ`O,5=sO$#yQ`O,5=uO9UQ`O,5=uO!BeQpO,5=uO!BmQMhO,5=uO:YQMhO,5=uO$1XQ`O'#KaO$1dQ`O,5=vOOQ[1G.k1G.kO$1iQ!0LrO1G.kO@iQ`O1G.kO$1tQ`O1G.kO9kQ!0LrO1G.kO$3|Q!fO,5AOO$4ZQ`O,5AOO9ZQ`O,5AOO$4fQlO,5=}O$4mQ`O,5=}OOQ[1G3g1G3gO`QlO1G3gOOQ[1G3m1G3mOOQ[1G3o1G3oO>rQ`O1G3qO$4rQlO1G3sO$8vQlO'#HrOOQ[1G3v1G3vO$9TQ`O'#HxO>wQ`O'#HzOOQ[1G3|1G3|O$9]QlO1G3|O9kQ!0LrO1G4SOOQ[1G4U1G4UOOQ!0Lb'#G^'#G^O9kQ!0LrO1G4WO9kQ!0LrO1G4YO$=dQ`O,5@`O!(yQlO,5;^O9ZQ`O,5;^O>wQ`O,5:VO!(yQlO,5:VO!BeQpO,5:VO$=iQ?MtO,5:VOOQO,5;^,5;^O$=sQpO'#IcO$>ZQ`O,5@_OOQ!0Lf1G/p1G/pO$>cQpO'#IiO$>mQ`O,5@nOOQ!0Lb1G0w1G0wO##hQpO,5:VOOQO'#Ie'#IeO$>uQpO,5:oOOQ!0Ln,5:o,5:oO#'cQ`O1G0XOOQ!0Lf1G0X1G0XO%[QlO1G0XOOQ!0Lf1G0r1G0rO>wQ`O1G0rO!BeQpO1G0rO!BmQMhO1G0rOOQ!0Lb1G5z1G5zO!BYQ!0LrO1G0[OOQO1G0k1G0kO%[QlO1G0kO$>|Q!0LrO1G0kO$?XQ!0LrO1G0kO!BeQpO1G0[OCuQpO1G0[O$?gQ!0LrO1G0kOOQO1G0[1G0[O$?{Q!0MxO1G0kPOOO-E<Y-E<YPOOO1G.h1G.hOOOO1G/g1G/gO$@VQ!bO,5<hO$@_Q!fO1G4hOOQO1G4n1G4nO%[QlO,5>|O$@iQ`O1G5xO$@qQ`O1G6WO$@yQ!fO1G6XO9ZQ`O,5?SO$ATQ!0MxO1G6UO%[QlO1G6UO$AeQ!0LrO1G6UO$AvQ`O1G6TO$AvQ`O1G6TO9ZQ`O1G6TO$BOQ`O,5?VO9ZQ`O,5?VOOQO,5?V,5?VO$BdQ`O,5?VO$)iQ`O,5?VOOQO-E<i-E<iOOQS1G0_1G0_OOQS1G0a1G0aO#-tQ`O1G0aOOQ[7+(d7+(dO!&iQMhO7+(dO%[QlO7+(dO$BrQ`O7+(dO$B}QMhO7+(dO$C]Q!0MzO,5=WO$EhQ!0MzO,5=YO$GsQ!0MzO,5=WO$JUQ!0MzO,5=YO$LgQ!0MzO,59sO$NlQ!0MzO,5<jO%!wQ!0MzO,5<lO%%SQ!0MzO,5<zOOQ!0Lf7+&_7+&_O%'eQ!0MxO7+&_O%(XQlO'#IdO%(fQ`O,5@aO%(nQ!fO,5@aOOQ!0Lf1G/}1G/}O%(xQ`O7+&hOOQ!0Lf7+&h7+&hO%(}Q?MtO,5:dO%[QlO7+&yO%)XQ?MtO,5:`O%)fQ?MtO,5:hO%)pQ?MtO,5:jO%)zQMhO'#IgO%*UQ`O,5@fOOQ!0Lh1G0b1G0bOOQO1G1q1G1qOOQO1G1r1G1rO%*^Q!jO,5<YO!(yQlO,5<XOOQO-E<j-E<jOOQ!0Lf7+'X7+'XOOOW7+'d7+'dOOOW1G1{1G1{O%*iQ`O1G1{OOQ!0Lf1G1}1G1}OOOO,59m,59mO%*nQ!dO,59mOOOO-E<^-E<^OOQ!0Lh1G/V1G/VO%*uQ!0MxO7+'jOOQ!0Lh,5?[,5?[O%+iQMhO1G2eP%+pQ`O'#IpPOQ!0Lh-E<n-E<nO%,^QMjO,5?_OOQ!0Lh-E<q-E<qO%-PQMjO,5?aOOQ!0Lh-E<s-E<sO%-ZQ!dO1G2vO%-bQ!dO'#CrO%-xQMhO'#KQO$#^QlO'#JtOOQ!0Lh1G2^1G2^O%.PQ`O'#IoO%.eQ`O,5@tO%.eQ`O,5@tO%.mQ`O,5@tO%.xQ`O,5@tOOQO1G2`1G2`O%/WQMjO1G2_O!+rQMhO1G2_O%/hQ(CWO'#IqO%/uQ`O,5@uO!&iQMhO,5@uO%/}Q!dO,5@uOOQ!0Lh1G2c1G2cO%2_Q!fO'#CiO%2iQ`O,5=OOOQ!0Lb,5<|,5<|O%2qQpO,5<|OOQ!0Lb,5<},5<}OCfQ`O,5<|O%2|QpO,5<|OOQ!0Lb,5=Q,5=QO$)iQ`O,5=UOOQO,5?^,5?^OOQO-E<p-E<pOOQ!0Lp1G2g1G2gO##hQpO,5<|O$#^QlO,5=OO%3[Q`O,5<}O%3gQpO,5<}O!+rQMhO'#IsO%4aQMjO1G2rO!+rQMhO'#IuO%5SQMjO1G2tO%5^QMjO1G5oO%5hQMjO1G5oOOQO,5?c,5?cOOQO-E<u-E<uOOQO1G.{1G.{O!9lQpO,59uO%[QlO,59uOOQ!0Lh,5<i,5<iO%5uQ`O1G2YO!+rQMhO1G2aO!+rQMhO1G5oO!+rQMhO1G5oO%5zQ!0MxO7+'lOOQ!0Lf7+'l7+'lO!$fQlO7+'lO%6nQ`O,5;^OOQ!0Lb,5?e,5?eOOQ!0Lb-E<w-E<wO%6sQ!dO'#K[O#'cQ`O7+(dO4UQ!fO7+(dO$BuQ`O7+(dO%6}Q!0MvO'#CiO%7nQ!0LrO,5=RO%8PQ!0MvO,5=RO%8dQ`O,5=ROOQ!0Lb1G5m1G5mOOQ[7+$a7+$aO!BYQ!0LrO7+$aO!BeQpO7+$aO!$fQlO7+&_O%8lQ`O'#JOO%9TQ`O,5@}OOQO1G3f1G3fO9aQ`O,5@}O%9TQ`O,5@}O%9]Q`O,5@}OOQO,5?k,5?kOOQO-E<}-E<}OOQ!0Lf7+'S7+'SO%9bQ`O7+)PO9kQ!0LrO7+)PO9aQ`O7+)PO@iQ`O7+)POOQ[7+(o7+(oO%9gQ!0MvO7+(lO!&iQMhO7+(lO!DfQ`O7+(mOOQ[7+(m7+(mO!&iQMhO7+(mO%9qQ`O'#K`O%9|Q`O,5=kOOQO,5?g,5?gOOQO-E<y-E<yOOQ[7+(r7+(rO%;`QpO'#HYOOQ[1G3_1G3_O!&iQMhO1G3_O%[QlO1G3_O%;gQ`O1G3_O%;rQMhO1G3_O9kQ!0LrO1G3aO$#yQ`O1G3aO9UQ`O1G3aO!BeQpO1G3aO!BmQMhO1G3aO%<QQ`O'#I}O%<fQ`O,5@{O%<nQpO,5@{OOQ!0Lb1G3b1G3bOOQ[7+$V7+$VO@iQ`O7+$VO9kQ!0LrO7+$VO%<yQ`O7+$VO%[QlO1G6jO%[QlO1G6kO%=OQ!0LrO1G6jO%=YQlO1G3iO%=aQ`O1G3iO%=fQlO1G3iOOQ[7+)R7+)RO9kQ!0LrO7+)]O`QlO7+)_OOQ['#Kf'#KfOOQ['#JQ'#JQO%=mQlO,5>^OOQ[,5>^,5>^O%[QlO'#HsO%=zQ`O'#HuOOQ[,5>d,5>dO9ZQ`O,5>dOOQ[,5>f,5>fOOQ[7+)h7+)hOOQ[7+)n7+)nOOQ[7+)r7+)rOOQ[7+)t7+)tO%>PQpO1G5zO%>kQ?MtO1G0xO%>uQ`O1G0xOOQO1G/q1G/qO%?QQ?MtO1G/qO>wQ`O1G/qO!(yQlO'#DkOOQO,5>},5>}OOQO-E<a-E<aOOQO,5?T,5?TOOQO-E<g-E<gO!BeQpO1G/qOOQO-E<c-E<cOOQ!0Ln1G0Z1G0ZOOQ!0Lf7+%s7+%sO#'cQ`O7+%sOOQ!0Lf7+&^7+&^O>wQ`O7+&^O!BeQpO7+&^OOQO7+%v7+%vO$?{Q!0MxO7+&VOOQO7+&V7+&VO%[QlO7+&VO%?[Q!0LrO7+&VO!BYQ!0LrO7+%vO!BeQpO7+%vO%?gQ!0LrO7+&VO%?uQ!0MxO7++pO%[QlO7++pO%@VQ`O7++oO%@VQ`O7++oOOQO1G4q1G4qO9ZQ`O1G4qO%@_Q`O1G4qOOQS7+%{7+%{O#'cQ`O<<LOO4UQ!fO<<LOO%@mQ`O<<LOOOQ[<<LO<<LOO!&iQMhO<<LOO%[QlO<<LOO%@uQ`O<<LOO%AQQ!0MzO,5?_O%C]Q!0MzO,5?aO%EhQ!0MzO1G2_O%GyQ!0MzO1G2rO%JUQ!0MzO1G2tO%LaQ!fO,5?OO%[QlO,5?OOOQO-E<b-E<bO%LkQ`O1G5{OOQ!0Lf<<JS<<JSO%LsQ?MtO1G0sO%NzQ?MtO1G0}O& RQ?MtO1G0}O&#SQ?MtO1G0}O&#ZQ?MtO1G0}O&%[Q?MtO1G0}O&']Q?MtO1G0}O&'dQ?MtO1G0}O&'kQ?MtO1G0}O&)lQ?MtO1G0}O&)sQ?MtO1G0}O&)zQ!0MxO<<JeO&+rQ?MtO1G0}O&,oQ?MvO1G0}O&-rQ?MvO'#JjO&/xQ?MtO1G1bO&0VQ?MtO1G0SO&0aQMjO,5?ROOQO-E<e-E<eO!(yQlO'#FpOOQO'#KX'#KXOOQO1G1t1G1tO&0kQ`O1G1sO&0pQ?MtO,5?YOOOW7+'g7+'gOOOO1G/X1G/XO&0zQ!dO1G4vOOQ!0Lh7+(P7+(PP!&iQMhO,5?[O!+rQMhO7+(bO&1RQ`O,5?ZO9ZQ`O,5?ZOOQO-E<m-E<mO&1aQ`O1G6`O&1aQ`O1G6`O&1iQ`O1G6`O&1tQMjO7+'yO&2UQ!dO,5?]O&2`Q`O,5?]O!&iQMhO,5?]OOQO-E<o-E<oO&2eQ!dO1G6aO&2oQ`O1G6aO&2wQ`O1G2jO!&iQMhO1G2jOOQ!0Lb1G2h1G2hOOQ!0Lb1G2i1G2iO%2qQpO1G2hO!BeQpO1G2hOCfQ`O1G2hOOQ!0Lb1G2p1G2pO&2|QpO1G2hO&3[Q`O1G2jO$)iQ`O1G2iOCfQ`O1G2iO$#^QlO1G2jO&3dQ`O1G2iO&4WQMjO,5?_OOQ!0Lh-E<r-E<rO&4yQMjO,5?aOOQ!0Lh-E<t-E<tO!+rQMhO7++ZOOQ!0Lh1G/a1G/aO&5TQ`O1G/aOOQ!0Lh7+'t7+'tO&5YQMjO7+'{O&5jQMjO7++ZO&5tQMjO7++ZO&6RQ!0MxO<<KWOOQ!0Lf<<KW<<KWO&6uQ`O1G0xO!&iQMhO'#IxO&6zQ`O,5@vO&8|Q!fO<<LOO!&iQMhO1G2mO&9TQ!0LrO1G2mOOQ[<<G{<<G{O!BYQ!0LrO<<G{O&9fQ!0MxO<<IyOOQ!0Lf<<Iy<<IyOOQO,5?j,5?jO&:YQ`O,5?jO&:_Q`O,5?jOOQO-E<|-E<|O&:mQ`O1G6iO&:mQ`O1G6iO9aQ`O1G6iO@iQ`O<<LkOOQ[<<Lk<<LkO&:uQ`O<<LkO9kQ!0LrO<<LkOOQ[<<LW<<LWO%9gQ!0MvO<<LWOOQ[<<LX<<LXO!DfQ`O<<LXO&:zQpO'#IzO&;VQ`O,5@zO!(yQlO,5@zOOQ[1G3V1G3VOOQO'#I|'#I|O9kQ!0LrO'#I|O&;_QpO,5=tOOQ[,5=t,5=tO&;fQpO'#EeO&;mQpO'#GdO&;rQ`O7+(yO&;wQ`O7+(yOOQ[7+(y7+(yO!&iQMhO7+(yO%[QlO7+(yO&<PQ`O7+(yOOQ[7+({7+({O9kQ!0LrO7+({O$#yQ`O7+({O9UQ`O7+({O!BeQpO7+({O&<[Q`O,5?iOOQO-E<{-E<{OOQO'#H]'#H]O&<gQ`O1G6gO9kQ!0LrO<<GqOOQ[<<Gq<<GqO@iQ`O<<GqO&<oQ`O7+,UO&<tQ`O7+,VO%[QlO7+,UO%[QlO7+,VOOQ[7+)T7+)TO&<yQ`O7+)TO&=OQlO7+)TO&=VQ`O7+)TOOQ[<<Lw<<LwOOQ[<<Ly<<LyOOQ[-E=O-E=OOOQ[1G3x1G3xO&=[Q`O,5>_OOQ[,5>a,5>aO&=aQ`O1G4OO9ZQ`O7+&dO!(yQlO7+&dOOQO7+%]7+%]O&=fQ?MtO1G6XO>wQ`O7+%]OOQ!0Lf<<I_<<I_OOQ!0Lf<<Ix<<IxO>wQ`O<<IxOOQO<<Iq<<IqO$?{Q!0MxO<<IqO%[QlO<<IqOOQO<<Ib<<IbO!BYQ!0LrO<<IbO&=pQ!0LrO<<IqO&={Q!0MxO<= [O&>]Q`O<= ZOOQO7+*]7+*]O9ZQ`O7+*]OOQ[ANAjANAjO&>eQ!fOANAjO!&iQMhOANAjO#'cQ`OANAjO4UQ!fOANAjO&>lQ`OANAjO%[QlOANAjO&>tQ!0MzO7+'yO&AVQ!0MzO,5?_O&CbQ!0MzO,5?aO&EmQ!0MzO7+'{O&HOQ!fO1G4jO&HYQ?MtO7+&_O&J^Q?MvO,5=WO&LeQ?MvO,5=YO&LuQ?MvO,5=WO&MVQ?MvO,5=YO&MgQ?MvO,59sO' mQ?MvO,5<jO'#pQ?MvO,5<lO'&UQ?MvO,5<zO''zQ?MtO7+'jO'(XQ?MtO7+'lO'(fQ`O,5<[OOQO7+'_7+'_OOQ!0Lh7+*b7+*bO'(kQMjO<<K|OOQO1G4u1G4uO'(rQ`O1G4uO'(}Q`O1G4uO')]Q`O7++zO')]Q`O7++zO!&iQMhO1G4wO')eQ!dO1G4wO')oQ`O7++{O')wQ`O7+(UO'*SQ!dO7+(UOOQ!0Lb7+(S7+(SOOQ!0Lb7+(T7+(TO!BeQpO7+(SOCfQ`O7+(SO'*^Q`O7+(UO!&iQMhO7+(UO$)iQ`O7+(TO'*cQ`O7+(UOCfQ`O7+(TO'*kQMjO<<NuOOQ!0Lh7+${7+${O!+rQMhO<<NuO'*uQ!dO,5?dOOQO-E<v-E<vO'+PQ!0MvO7+(XO!&iQMhO7+(XOOQ[AN=gAN=gO9aQ`O1G5UOOQO1G5U1G5UO'+aQ`O1G5UO'+fQ`O7+,TO'+fQ`O7+,TO9kQ!0LrOANBVO@iQ`OANBVOOQ[ANBVANBVOOQ[ANArANArOOQ[ANAsANAsO'+nQ`O,5?fOOQO-E<x-E<xO'+yQ?MtO1G6fOOQO,5?h,5?hOOQO-E<z-E<zOOQ[1G3`1G3`O',TQ`O,5=OOOQ[<<Le<<LeO!&iQMhO<<LeO&;rQ`O<<LeO',YQ`O<<LeO%[QlO<<LeOOQ[<<Lg<<LgO9kQ!0LrO<<LgO$#yQ`O<<LgO9UQ`O<<LgO',bQpO1G5TO',mQ`O7+,ROOQ[AN=]AN=]O9kQ!0LrOAN=]OOQ[<= p<= pOOQ[<= q<= qO',uQ`O<= pO',zQ`O<= qOOQ[<<Lo<<LoO'-PQ`O<<LoO'-UQlO<<LoOOQ[1G3y1G3yO>wQ`O7+)jO'-]Q`O<<JOO'-hQ?MtO<<JOOOQO<<Hw<<HwOOQ!0LfAN?dAN?dOOQOAN?]AN?]O$?{Q!0MxOAN?]OOQOAN>|AN>|O%[QlOAN?]OOQO<<Mw<<MwOOQ[G27UG27UO!&iQMhOG27UO#'cQ`OG27UO'-rQ!fOG27UO4UQ!fOG27UO'-yQ`OG27UO'.RQ?MtO<<JeO'.`Q?MvO1G2_O'0UQ?MvO,5?_O'2XQ?MvO,5?aO'4[Q?MvO1G2rO'6_Q?MvO1G2tO'8bQ?MtO<<KWO'8oQ?MtO<<IyOOQO1G1v1G1vO!+rQMhOANAhOOQO7+*a7+*aO'8|Q`O7+*aO'9XQ`O<= fO'9aQ!dO7+*cOOQ!0Lb<<Kp<<KpO$)iQ`O<<KpOCfQ`O<<KpO'9kQ`O<<KpO!&iQMhO<<KpOOQ!0Lb<<Kn<<KnO!BeQpO<<KnO'9vQ!dO<<KpOOQ!0Lb<<Ko<<KoO':QQ`O<<KpO!&iQMhO<<KpO$)iQ`O<<KoO':VQMjOANDaO':aQ!0MvO<<KsOOQO7+*p7+*pO9aQ`O7+*pO':qQ`O<= oOOQ[G27qG27qO9kQ!0LrOG27qO!(yQlO1G5QO':yQ`O7+,QO';RQ`O1G2jO&;rQ`OANBPOOQ[ANBPANBPO!&iQMhOANBPO';WQ`OANBPOOQ[ANBRANBRO9kQ!0LrOANBRO$#yQ`OANBROOQO'#H^'#H^OOQO7+*o7+*oOOQ[G22wG22wOOQ[ANE[ANE[OOQ[ANE]ANE]OOQ[ANBZANBZO';`Q`OANBZOOQ[<<MU<<MUO!(yQlOAN?jOOQOG24wG24wO$?{Q!0MxOG24wO#'cQ`OLD,pOOQ[LD,pLD,pO!&iQMhOLD,pO';eQ!fOLD,pO';lQ?MvO7+'yO'=bQ?MvO,5?_O'?eQ?MvO,5?aO'AhQ?MvO7+'{O'C^QMjOG27SOOQO<<M{<<M{OOQ!0LbANA[ANA[O$)iQ`OANA[OCfQ`OANA[O'CnQ!dOANA[OOQ!0LbANAYANAYO'CuQ`OANA[O!&iQMhOANA[O'DQQ!dOANA[OOQ!0LbANAZANAZOOQO<<N[<<N[OOQ[LD-]LD-]O'D[Q?MtO7+*lOOQO'#Ge'#GeOOQ[G27kG27kO&;rQ`OG27kO!&iQMhOG27kOOQ[G27mG27mO9kQ!0LrOG27mOOQ[G27uG27uO'DfQ?MtOG25UOOQOLD*cLD*cOOQ[!$(![!$(![O#'cQ`O!$(![O!&iQMhO!$(![O'DpQ!0MzOG27SOOQ!0LbG26vG26vO$)iQ`OG26vO'GRQ`OG26vOCfQ`OG26vO'G^Q!dOG26vO!&iQMhOG26vOOQ[LD-VLD-VO&;rQ`OLD-VOOQ[LD-XLD-XOOQ[!)9Ev!)9EvO#'cQ`O!)9EvOOQ!0LbLD,bLD,bO$)iQ`OLD,bOCfQ`OLD,bO'GeQ`OLD,bO'GpQ!dOLD,bOOQ[!$(!q!$(!qOOQ[!.K;b!.K;bO'GwQ?MvOG27SOOQ!0Lb!$( |!$( |O$)iQ`O!$( |OCfQ`O!$( |O'ImQ`O!$( |OOQ!0Lb!)9Eh!)9EhO$)iQ`O!)9EhOCfQ`O!)9EhOOQ!0Lb!.K;S!.K;SO$)iQ`O!.K;SOOQ!0Lb!4/0n!4/0nO!(yQlO'#DxO1PQ`O'#EVO'IxQ!fO'#JpO'JPQ!L^O'#DtO'JWQlO'#D|O'J_Q!fO'#CiO'LuQ!fO'#CiO!(yQlO'#EOO'MVQlO,5;XO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO'#InO( YQ`O,5<hO!(yQlO,5;cO( bQMhO,5;cO(!{QMhO,5;cO!(yQlO,5;vO!&iQMhO'#GlO( bQMhO'#GlO!&iQMhO'#GnO( bQMhO'#GnO1SQ`O'#DXO1SQ`O'#DXO!&iQMhO'#GOO( bQMhO'#GOO!&iQMhO'#GQO( bQMhO'#GQO!&iQMhO'#G`O( bQMhO'#G`O!(yQlO,5:hO(#SQpO'#D]O(#^QpO'#JtO!(yQlO,5@mO'MVQlO1G0sO(#hQ?MtO'#CiO!(yQlO1G2OO!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO(#rQ!dO'#CrO!&iQMhO,5<sO( bQMhO,5<sO'MVQlO1G2QO!(yQlO7+&yO!&iQMhO1G2_O( bQMhO1G2_O!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO!&iQMhO1G2aO( bQMhO1G2aO'MVQlO7+'lO'MVQlO7+&_O!&iQMhOANAhO( bQMhOANAhO($VQ`O'#EmO($[Q`O'#EmO($dQ`O'#F[O($iQ`O'#EwO($nQ`O'#KRO($yQ`O'#KPO(%UQ`O,5;XO(%ZQMjO,5<dO(%bQ`O'#GXO(%gQ`O'#GXO(%lQ`O,5<fO(%tQ`O,5;XO(%|Q?MtO1G1_O(&TQ`O,5<sO(&YQ`O,5<sO(&_Q`O,5<uO(&dQ`O,5<uO(&iQ`O1G2QO(&nQ`O1G0sO(&sQMjO<<K|O(&zQMjO<<K|O7eQMhO'#F{O9UQ`O'#FzOAdQ`O'#ElO!(yQlO,5;sO!3^Q`O'#GXO!3^Q`O'#GXO!3^Q`O'#GZO!3^Q`O'#GZO!+rQMhO7+(bO!+rQMhO7+(bO%-ZQ!dO1G2vO%-ZQ!dO1G2vO!&iQMhO,5=[O!&iQMhO,5=[",
  stateData: "((P~O'zOS'{OSTOS'|RQ~OPYOQYOSfOY!VOaqOdzOeyOj!POnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!swO!vxO!z]O$V|O$miO%g}O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO&U!WO&[!XO&^!YO&`!ZO&b![O&e!]O&k!^O&q!_O&s!`O&u!aO&w!bO&y!cO(RSO(TTO(WUO(_VO(m[O~OWtO~P`OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa!wOq!nO!Q!oO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!xO#U!pO#V!pO#Y!zO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O'|!{O~OP]XR]X[]Xa]Xp]X!O]X!Q]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X'x]X(_]X(p]X(w]X(x]X~O!e%QX~P(qO_!}O(T#PO(U!}O(V#PO~O_#QO(V#PO(W#PO(X#QO~Ov#SO!S#TO(`#TO(a#VO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R;{O(TTO(WUO(_VO(m[O~O!Y#ZO!Z#WO!W(fP!W(tP~P+}O![#cO~P`OPYOQYOSfOd!jOe!iOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(TTO(WUO(_VO(m[O~On#mO!Y#iO!z]O#g#lO#h#iO(R;|O!i(qP~P.iO!j#oO(R#nO~O!v#sO!z]O%g#tO~O#i#uO~O!e#vO#i#uO~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z$_O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa(dX'x(dX'u(dX!i(dX!W(dX!](dX%h(dX!e(dX~P1qO#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX!](eX%h(eX~Oa(eX'x(eX'u(eX!W(eX!i(eXt(eX!e(eX~P4UO#^$eO~O$[$hO$^$gO$e$mO~OSfO!]$nO$h$oO$j$qO~Oh%VOj%cOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R$sO(TTO(WUO(_$uO(w$}O(x%POg([P~O!j%dO~O!Q%gO!]%hO(R%fO~O!e%lO~Oa%mO'x%mO~O!O%qO~P%[O(S!lO~P%[O%m%uO~P%[Oh%VO!j%dO(R%fO(S!lO~Oe%|O!j%dO(R%fO~O#t$RO~O!O&RO!]&OO!j&QO%i&UO(R%fO(S!lO(TTO(WUO`)UP~O!v#sO~O%r&WO!Q)QX!])QX(R)QX~O(R&XO~Oj!PO!s&^O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO~Od&cOe&bO!v&`O%g&aO%z&_O~P<POd&fOeyOj!PO!]&eO!s&^O!vxO!z]O%g}O%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO~Ob&iO#^&lO%i&gO(S!lO~P=UO!j&mO!s&qO~O!j#oO~O!]XO~Oa%mO'v&yO'x%mO~Oa%mO'v&|O'x%mO~Oa%mO'v'OO'x%mO~O'u]X!W]Xt]X!i]X&Y]X!]]X%h]X!e]X~P(qO!`']O!a'UO!b'UO(S!lO(TTO(WUO~Oq'SO!Q'RO!Y'VO(c'QO![(gP![(vP~P@]Ol'`O!]'^O(R%fO~Oe'eO!j%dO(R%fO~O!O&RO!j&QO~Oq!nO!Q!oO!z;wO#R!pO#S!pO#U!pO#V!pO(S!lO(TTO(WUO(c!mO(m!sO~O!`'kO!a'jO!b'jO#T!pO#Y'lO#Z'lO~PAwOa%mOh%VO!e#vO!j%dO'x%mO(p'nO~O!n'rO#^'pO~PCVOq!nO!Q!oO(TTO(WUO(c!mO(m!sO~O!]XOq(kX!Q(kX!`(kX!a(kX!b(kX!z(kX#R(kX#S(kX#T(kX#U(kX#V(kX#Y(kX#Z(kX(S(kX(T(kX(W(kX(c(kX(m(kX~O!a'jO!b'jO(S!lO~PCuO'}'vO(O'vO(P'xO~O_!}O(T'zO(U!}O(V'zO~O_#QO(V'zO(W'zO(X#QO~Ot'|O~P%[Ov#SO!S#TO(`#TO(a(PO~O!Y(RO!W'UX!W'[X!Z'UX!Z'[X~P+}O!Z(TO!W(fX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z(TO!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~O!W(fX~PGpO!W(YO~O!W(sX!Z(sX!e(sX!i(sX(p(sX~O#^(sX#i#bX![(sX~PIsO#^(ZO!W(uX!Z(uX~O!Z([O!W(tX~O!W(_O~O#^$eO~PIsO![(`O~P`OR#zO!O#yO!Q#{O!j#xO(_VOP!la[!lap!la!Z!la!n!la#P!la#l!la#m!la#n!la#o!la#p!la#q!la#r!la#s!la#t!la#u!la#w!la#y!la#z!la(p!la(w!la(x!la~Oa!la'x!la'u!la!W!la!i!lat!la!]!la%h!la!e!la~PKZO!i(aO~O!e#vO#^(bO(p'nO!Z(rXa(rX'x(rX~O!i(rX~PMvO!Q%gO!]%hO!z]O#g(gO#h(fO(R%fO~O!Z(hO!i(qX~O!i(jO~O!Q%gO!]%hO#h(fO(R%fO~OP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O!e#vO!i(eX~P! dOR(lO!O(kO!j#xO#Q$dO!z!ya!Q!ya~O!v!ya%g!ya!]!ya#g!ya#h!ya(R!ya~P!#eO!v(pO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~O#i(vO~O!Y(xO!i(iP~P%[O(c(zO(m[O~O!Q(|O!j#xO(c(zO(m[O~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z$_Oa$pa'x$pa'u$pa!i$pa!W$pa!]$pa%h$pa!e$pa~Oj)bO~P!&iOh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Og(nP~P!+rO!O)gO!e)fO!]$]X$Y$]X$[$]X$^$]X$e$]X~O!e)fO!](yX$Y(yX$[(yX$^(yX$e(yX~O!O)gO~P!-{O!O)gO!](yX$Y(yX$[(yX$^(yX$e(yX~O!])iO$Y)mO$[)hO$^)hO$e)nO~O!Y)qO~P!(yO$[$hO$^$gO$e)uO~Ol$yX!O$yX#Q$yX'w$yX(w$yX(x$yX~OgkXg$yXlkX!ZkX#^kX~P!/qOv)wO(`)xO(a)zO~Ol*TO!O)|O'w)}O(w$}O(x%PO~Og){O~P!0uOg*UO~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q*WO!]*XO!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~O!Y*[O(R*VO!i(|P~P!1dO#i*^O~O!j*_O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R*aO(TTO(WUO(_$uO(w$}O(x%PO~O!Y*dO!W(}P~P!3cOp*pOq!nO!Q*fO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO(c!mO~O![*mO~P!5WO#Q$dOl(^X!O(^X'w(^X(w(^X(x(^X!Z(^X#^(^X~Og(^X#}(^X~P!6YOl*uO#^*tOg(]X!Z(]X~O!Z*vOg([X~Oj%cO(R&XOg([P~Oq*yO~O!j+OO~O(R(tO~On+TO!Q%gO!Y#iO!]%hO!z]O#g#lO#h#iO(R%fO!i(qP~O!e#vO#i+UO~O!Q%gO!Y+WO!Z([O!]%hO(R%fO!W(tP~Oq'YO!Q+YO!Y+XO(TTO(WUO(c(zO~O![(vP~P!9]O!Z+ZOa)RX'x)RX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa!ha!Z!ha'x!ha'u!ha!W!ha!i!hat!ha!]!ha%h!ha!e!ha~P!:TOR#zO!O#yO!Q#{O!j#xO(_VOP!pa[!pap!pa!Z!pa!n!pa#P!pa#l!pa#m!pa#n!pa#o!pa#p!pa#q!pa#r!pa#s!pa#t!pa#u!pa#w!pa#y!pa#z!pa(p!pa(w!pa(x!pa~Oa!pa'x!pa'u!pa!W!pa!i!pat!pa!]!pa%h!pa!e!pa~P!<kOR#zO!O#yO!Q#{O!j#xO(_VOP!ra[!rap!ra!Z!ra!n!ra#P!ra#l!ra#m!ra#n!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#u!ra#w!ra#y!ra#z!ra(p!ra(w!ra(x!ra~Oa!ra'x!ra'u!ra!W!ra!i!rat!ra!]!ra%h!ra!e!ra~P!?ROh%VOl+dO!]'^O%h+cO~O!e+fOa(ZX!](ZX'x(ZX!Z(ZX~Oa%mO!]XO'x%mO~Oh%VO!j%dO~Oh%VO!j%dO(R%fO~O!e#vO#i(vO~Ob+qO%i+rO(R+nO(TTO(WUO![)VP~O!Z+sO`)UX~O[+wO~O`+xO~O!]&OO(R%fO(S!lO`)UP~Oh%VO#^+}O~Oh%VOl,QO!]$|O~O!],SO~O!O,UO!]XO~O%m%uO~O!v,ZO~Oe,`O~Ob,aO(R#nO(TTO(WUO![)TP~Oe%|O~O%i!QO(R&XO~P=UO[,fO`,eO~OPYOQYOSfOdzOeyOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!guO!jZO!mYO!nYO!oYO!qvO!vxO!z]O$miO%g}O(TTO(WUO(_VO(m[O~O!]!eO!s!gO$V!kO(R!dO~P!FRO`,eOa%mO'x%mO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa,kOj!OO!swO%k!OO%l!OO%m!OO~P!HkO!j&mO~O&[,qO~O!],sO~O&m,uO&o,vOP&jaQ&jaS&jaY&jaa&jad&jae&jaj&jan&jap&jaq&jar&jax&jaz&ja|&ja!Q&ja!U&ja!V&ja!]&ja!g&ja!j&ja!m&ja!n&ja!o&ja!q&ja!s&ja!v&ja!z&ja$V&ja$m&ja%g&ja%i&ja%k&ja%l&ja%m&ja%p&ja%r&ja%u&ja%v&ja%x&ja&U&ja&[&ja&^&ja&`&ja&b&ja&e&ja&k&ja&q&ja&s&ja&u&ja&w&ja&y&ja'u&ja(R&ja(T&ja(W&ja(_&ja(m&ja![&ja&c&jab&ja&h&ja~O(R,{O~Oh!cX!Z!PX![!PX!e!PX!e!cX!j!cX#^!PX~O!Z!cX![!cX~P# qO!e-QO#^-POh(hX!Z#fX![#fX!e(hX!j(hX~O!Z(hX![(hX~P#!dOh%VO!e-SO!j%dO!Z!_X![!_X~Oq!nO!Q!oO(TTO(WUO(c!mO~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(TTO(WUO(_VO(m[O~O(R<rO~P##yO!Z-WO![(gX~O![-YO~O!e-QO#^-PO!Z#fX![#fX~O!Z-ZO![(vX~O![-]O~O!a-^O!b-^O(S!lO~P##hO![-aO~P'_Ol-dO!]'^O~O!W-iO~Oq!ya!`!ya!a!ya!b!ya#R!ya#S!ya#T!ya#U!ya#V!ya#Y!ya#Z!ya(S!ya(T!ya(W!ya(c!ya(m!ya~P!#eO!n-nO#^-lO~PCVO!a-pO!b-pO(S!lO~PCuOa%mO#^-lO'x%mO~Oa%mO!e#vO#^-lO'x%mO~Oa%mO!e#vO!n-nO#^-lO'x%mO(p'nO~O'}'vO(O'vO(P-uO~Ot-vO~O!W'Ua!Z'Ua~P!:TO!Y-zO!W'UX!Z'UX~P%[O!Z(TO!W(fa~O!W(fa~PGpO!Z([O!W(ta~O!Q%gO!Y.OO!]%hO(R%fO!W'[X!Z'[X~O#^.QO!Z(ra!i(raa(ra'x(ra~O!e#vO~P#,PO!Z(hO!i(qa~O!Q%gO!]%hO#h.UO(R%fO~On.ZO!Q%gO!Y.WO!]%hO!z]O#g.YO#h.WO(R%fO!Z'_X!i'_X~OR._O!j#xO~Oh%VOl.bO!]'^O%h.aO~Oa#ai!Z#ai'x#ai'u#ai!W#ai!i#ait#ai!]#ai%h#ai!e#ai~P!:TOl=|O!O)|O'w)}O(w$}O(x%PO~O#i#]aa#]a#^#]a'x#]a!Z#]a!i#]a!]#]a!W#]a~P#.{O#i(^XP(^XR(^X[(^Xa(^Xp(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X'x(^X(_(^X(p(^X!i(^X!W(^X'u(^Xt(^X!](^X%h(^X!e(^X~P!6YO!Z.oO!i(iX~P!:TO!i.rO~O!W.tO~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kia#kip#ki!Z#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#l#ki~P#2kO#l$OO~P#2kOP$[OR#zOp$aO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO[#kia#ki!Z#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#p#ki~P#5YO#p$QO~P#5YOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO(_VOa#ki!Z#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#u#ki~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO(_VO(x#}Oa#ki!Z#ki#y#ki#z#ki'x#ki(p#ki(w#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#w$UO~P#:_O#w#ki~P#:_O#u$SO~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO(_VO(w#|O(x#}Oa#ki!Z#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#y#ki~P#=TO#y$WO~P#=TOP]XR]X[]Xp]X!O]X!Q]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X!Z]X![]X~O#}]X~P#?rOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO#y<XO#z<YO(_VO(p$YO(w#|O(x#}O~O#}.vO~P#BPO#Q$dO#^<`O$P<`O#}(eX![(eX~P! dOa'ba!Z'ba'x'ba'u'ba!i'ba!W'bat'ba!]'ba%h'ba!e'ba~P!:TO[#kia#kip#ki!Z#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO(w#ki(x#ki~P#EROl=|O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P#ERO!Z.zOg(nX~P!0uOg.|O~Oa$Oi!Z$Oi'x$Oi'u$Oi!W$Oi!i$Oit$Oi!]$Oi%h$Oi!e$Oi~P!:TO$[.}O$^.}O~O$[/OO$^/OO~O!e)fO#^/PO!]$bX$Y$bX$[$bX$^$bX$e$bX~O!Y/QO~O!])iO$Y/SO$[)hO$^)hO$e/TO~O!Z<ZO![(dX~P#BPO![/UO~O!e)fO$e(yX~O$e/WO~Ot/XO~P!&iOv)wO(`)xO(a/[O~O!Q/_O~O(w$}Ol%`a!O%`a'w%`a(x%`a!Z%`a#^%`a~Og%`a#}%`a~P#LTO(x%POl%ba!O%ba'w%ba(w%ba!Z%ba#^%ba~Og%ba#}%ba~P#LvO!ZfX!efX!ifX!i$yX(pfX~P!/qO!Y/hO!Z([O(R/gO!W(tP!W(}P~P!1dOp*pO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO~Oq<oO!Q/iO!Y+XO![*mO(c<nO![(vP~P#NaO!i/jO~P#.{O!Z/kO!e#vO(p'nO!i(|X~O!i/pO~O!Q%gO!Y*[O!]%hO(R%fO!i(|P~O#i/rO~O!W$yX!Z$yX!e%QX~P!/qO!Z/sO!W(}X~P#.{O!e/uO~O!W/wO~OnkO(R/xO~P.iOh%VOp/}O!e#vO!j%dO(p'nO~O!e+fO~Oa%mO!Z0RO'x%mO~O![0TO~P!5WO!a0UO!b0UO(S!lO~P##hOq!nO!Q0VO(TTO(WUO(c!mO~O#Y0XO~Og%`a!Z%`a#^%`a#}%`a~P!0uOg%ba!Z%ba#^%ba#}%ba~P!0uOj%cO(R&XOg'kX!Z'kX~O!Z*vOg([a~Og0bO~OR0cO!O0cO!Q0dO#Q$dOl{a'w{a(w{a(x{a!Z{a#^{a~Og{a#}{a~P$&dO!O)|O'w)}Ol$ra(w$ra(x$ra!Z$ra#^$ra~Og$ra#}$ra~P$'`O!O)|O'w)}Ol$ta(w$ta(x$ta!Z$ta#^$ta~Og$ta#}$ta~P$(RO#i0gO~Og%Sa!Z%Sa#^%Sa#}%Sa~P!0uOl0iO#^0hOg(]a!Z(]a~O!e#vO~O#i0lO~O!Z+ZOa)Ra'x)Ra~OR#zO!O#yO!Q#{O!j#xO(_VOP!pi[!pip!pi!Z!pi!n!pi#P!pi#l!pi#m!pi#n!pi#o!pi#p!pi#q!pi#r!pi#s!pi#t!pi#u!pi#w!pi#y!pi#z!pi(p!pi(w!pi(x!pi~Oa!pi'x!pi'u!pi!W!pi!i!pit!pi!]!pi%h!pi!e!pi~P$*OOh%VOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~On0vO%[0wO(R0tO~P$,fO!e+fOa(Za!](Za'x(Za!Z(Za~O#i0|O~O[]X!ZfX![fX~O!Z0}O![)VX~O![1PO~O[1QO~Ob1SO(R+nO(TTO(WUO~O!]&OO(R%fO`'sX!Z'sX~O!Z+sO`)Ua~O!i1VO~P!:TO[1YO~O`1ZO~O#^1^O~Ol1aO!]$|O~O(c(zO![)SP~Oh%VOl1jO!]1gO%h1iO~O[1tO!Z1rO![)TX~O![1uO~O`1wOa%mO'x%mO~O(R#nO(TTO(WUO~O#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O#t1zO&Y1{Oa(eX~P$2PO#^$eO#t1zO&Y1{O~Oa1}O~P%[Oa2PO~O&c2SOP&aiQ&aiS&aiY&aia&aid&aie&aij&ain&aip&aiq&air&aix&aiz&ai|&ai!Q&ai!U&ai!V&ai!]&ai!g&ai!j&ai!m&ai!n&ai!o&ai!q&ai!s&ai!v&ai!z&ai$V&ai$m&ai%g&ai%i&ai%k&ai%l&ai%m&ai%p&ai%r&ai%u&ai%v&ai%x&ai&U&ai&[&ai&^&ai&`&ai&b&ai&e&ai&k&ai&q&ai&s&ai&u&ai&w&ai&y&ai'u&ai(R&ai(T&ai(W&ai(_&ai(m&ai![&aib&ai&h&ai~Ob2YO![2WO&h2XO~P`O!]XO!j2[O~O&o,vOP&jiQ&jiS&jiY&jia&jid&jie&jij&jin&jip&jiq&jir&jix&jiz&ji|&ji!Q&ji!U&ji!V&ji!]&ji!g&ji!j&ji!m&ji!n&ji!o&ji!q&ji!s&ji!v&ji!z&ji$V&ji$m&ji%g&ji%i&ji%k&ji%l&ji%m&ji%p&ji%r&ji%u&ji%v&ji%x&ji&U&ji&[&ji&^&ji&`&ji&b&ji&e&ji&k&ji&q&ji&s&ji&u&ji&w&ji&y&ji'u&ji(R&ji(T&ji(W&ji(_&ji(m&ji![&ji&c&jib&ji&h&ji~O!W2bO~O!Z!_a![!_a~P#BPOq!nO!Q!oO!Y2hO(c!mO!Z'VX!['VX~P@]O!Z-WO![(ga~O!Z']X![']X~P!9]O!Z-ZO![(va~O![2oO~P'_Oa%mO#^2xO'x%mO~Oa%mO!e#vO#^2xO'x%mO~Oa%mO!e#vO!n2|O#^2xO'x%mO(p'nO~Oa%mO'x%mO~P!:TO!Z$_Ot$pa~O!W'Ui!Z'Ui~P!:TO!Z(TO!W(fi~O!Z([O!W(ti~O!W(ui!Z(ui~P!:TO!Z(ri!i(ria(ri'x(ri~P!:TO#^3OO!Z(ri!i(ria(ri'x(ri~O!Z(hO!i(qi~O!Q%gO!]%hO!z]O#g3TO#h3SO(R%fO~O!Q%gO!]%hO#h3SO(R%fO~Ol3[O!]'^O%h3ZO~Oh%VOl3[O!]'^O%h3ZO~O#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`at%`a!]%`a%h%`a!e%`a~P#LTO#i%baP%baR%ba[%baa%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%bat%ba!]%ba%h%ba!e%ba~P#LvO#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!Z%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`a#^%`at%`a!]%`a%h%`a!e%`a~P#.{O#i%baP%baR%ba[%baa%bap%ba!Q%ba!Z%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%ba#^%bat%ba!]%ba%h%ba!e%ba~P#.{O#i{aP{a[{aa{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a'x{a(_{a(p{a!i{a!W{a'u{at{a!]{a%h{a!e{a~P$&dO#i$raP$raR$ra[$raa$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra'x$ra(_$ra(p$ra!i$ra!W$ra'u$rat$ra!]$ra%h$ra!e$ra~P$'`O#i$taP$taR$ta[$taa$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta'x$ta(_$ta(p$ta!i$ta!W$ta'u$tat$ta!]$ta%h$ta!e$ta~P$(RO#i%SaP%SaR%Sa[%Saa%Sap%Sa!Q%Sa!Z%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa'x%Sa(_%Sa(p%Sa!i%Sa!W%Sa'u%Sa#^%Sat%Sa!]%Sa%h%Sa!e%Sa~P#.{Oa#aq!Z#aq'x#aq'u#aq!W#aq!i#aqt#aq!]#aq%h#aq!e#aq~P!:TO!Y3dO!Z'WX!i'WX~P%[O!Z.oO!i(ia~O!Z.oO!i(ia~P!:TO!W3gO~O#}!la![!la~PKZO#}!ha!Z!ha![!ha~P#BPO#}!pa![!pa~P!<kO#}!ra![!ra~P!?ROg'ZX!Z'ZX~P!+rO!Z.zOg(na~OSfO!]3{O$c3|O~O![4QO~Ot4RO~P#.{Oa$lq!Z$lq'x$lq'u$lq!W$lq!i$lqt$lq!]$lq%h$lq!e$lq~P!:TO!W4TO~P!&iO!Q4UO~O!O)|O'w)}O(x%POl'ga(w'ga!Z'ga#^'ga~Og'ga#}'ga~P%+uO!O)|O'w)}Ol'ia(w'ia(x'ia!Z'ia#^'ia~Og'ia#}'ia~P%,hO(p$YO~P#.{O!WfX!W$yX!ZfX!Z$yX!e%QX#^fX~P!/qO(R<xO~P!1dO!Q%gO!Y4XO!]%hO(R%fO!Z'cX!i'cX~O!Z/kO!i(|a~O!Z/kO!e#vO!i(|a~O!Z/kO!e#vO(p'nO!i(|a~Og${i!Z${i#^${i#}${i~P!0uO!Y4aO!W'eX!Z'eX~P!3cO!Z/sO!W(}a~O!Z/sO!W(}a~P#.{OP]XR]X[]Xp]X!O]X!Q]X!W]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!e%XX#t%XX~P%0XO!e#vO#t4fO~Oh%VO!e#vO!j%dO~Oh%VOp4kO!j%dO(p'nO~Op4pO!e#vO(p'nO~Oq!nO!Q4qO(TTO(WUO(c!mO~O(w$}Ol%`i!O%`i'w%`i(x%`i!Z%`i#^%`i~Og%`i#}%`i~P%3xO(x%POl%bi!O%bi'w%bi(w%bi!Z%bi#^%bi~Og%bi#}%bi~P%4kOg(]i!Z(]i~P!0uO#^4wOg(]i!Z(]i~P!0uO!i4zO~Oa$nq!Z$nq'x$nq'u$nq!W$nq!i$nqt$nq!]$nq%h$nq!e$nq~P!:TO!W5QO~O!Z5RO!])OX~P#.{Oa]Xa$yX!]]X!]$yX%]]X'x]X'x$yX!Z]X!Z$yX~P!/qO%]5UOa%Za!]%Za'x%Za!Z%Za~OlmX!OmX'wmX(wmX(xmX~P%7nOn5VO(R#nO~Ob5]O%i5^O(R+nO(TTO(WUO!Z'rX!['rX~O!Z0}O![)Va~O[5bO~O`5cO~Oa%mO'x%mO~P#.{O!Z5kO#^5mO![)SX~O![5nO~Op5tOq!nO!Q*fO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!pO#U!pO#V!pO#Y5sO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O![5rO~P%:ROl5yO!]1gO%h5xO~Oh%VOl5yO!]1gO%h5xO~Ob6QO(R#nO(TTO(WUO!Z'qX!['qX~O!Z1rO![)Ta~O(TTO(WUO(c6SO~O`6WO~O#t6ZO&Y6[O~PMvO!i6]O~P%[Oa6_O~Oa6_O~P%[Ob2YO![6dO&h2XO~P`O!e6fO~O!e6hOh(hi!Z(hi![(hi!e(hi!j(hip(hi(p(hi~O!Z#fi![#fi~P#BPO#^6iO!Z#fi![#fi~O!Z!_i![!_i~P#BPOa%mO#^6rO'x%mO~Oa%mO!e#vO#^6rO'x%mO~O!Z(rq!i(rqa(rq'x(rq~P!:TO!Z(hO!i(qq~O!Q%gO!]%hO#h6yO(R%fO~O!]'^O%h6|O~Ol7QO!]'^O%h6|O~O#i'gaP'gaR'ga['gaa'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga'x'ga(_'ga(p'ga!i'ga!W'ga'u'gat'ga!]'ga%h'ga!e'ga~P%+uO#i'iaP'iaR'ia['iaa'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia'x'ia(_'ia(p'ia!i'ia!W'ia'u'iat'ia!]'ia%h'ia!e'ia~P%,hO#i${iP${iR${i[${ia${ip${i!Q${i!Z${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i'x${i(_${i(p${i!i${i!W${i'u${i#^${it${i!]${i%h${i!e${i~P#.{O#i%`iP%`iR%`i[%`ia%`ip%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i'x%`i(_%`i(p%`i!i%`i!W%`i'u%`it%`i!]%`i%h%`i!e%`i~P%3xO#i%biP%biR%bi[%bia%bip%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi'x%bi(_%bi(p%bi!i%bi!W%bi'u%bit%bi!]%bi%h%bi!e%bi~P%4kO!Z'Wa!i'Wa~P!:TO!Z.oO!i(ii~O#}#ai!Z#ai![#ai~P#BPOP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kip#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#l#ki~P%MQO#l<PO~P%MQOP$[OR#zOp<]O!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO[#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#p#ki~P& YO#p<RO~P& YOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO(_VO#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#u#ki~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO(_VO(x#}O#y#ki#z#ki#}#ki(p#ki(w#ki!Z#ki![#ki~O#w<VO~P&%cO#w#ki~P&%cO#u<TO~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO(_VO(w#|O(x#}O#z#ki#}#ki(p#ki!Z#ki![#ki~O#y#ki~P&'rO#y<XO~P&'rOa#{y!Z#{y'x#{y'u#{y!W#{y!i#{yt#{y!]#{y%h#{y!e#{y~P!:TO[#kip#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki!Z#ki![#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO(w#ki(x#ki~P&*nOl=}O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P&*nO#Q$dOP(^XR(^X[(^Xl(^Xp(^X!O(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X#}(^X'w(^X(_(^X(p(^X(w(^X(x(^X!Z(^X![(^X~O#}$Oi!Z$Oi![$Oi~P#BPO#}!pi![!pi~P$*OOg'Za!Z'Za~P!0uO![7dO~O!Z'ba!['ba~P#BPO!W7eO~P#.{O!e#vO(p'nO!Z'ca!i'ca~O!Z/kO!i(|i~O!Z/kO!e#vO!i(|i~Og${q!Z${q#^${q#}${q~P!0uO!W'ea!Z'ea~P#.{O!e7lO~O!Z/sO!W(}i~P#.{O!Z/sO!W(}i~O!W7oO~Oh%VOp7tO!j%dO(p'nO~O!e#vO#t7vO~Op7yO!e#vO(p'nO~O!O)|O'w)}O(x%POl'ha(w'ha!Z'ha#^'ha~Og'ha#}'ha~P&3oO!O)|O'w)}Ol'ja(w'ja(x'ja!Z'ja#^'ja~Og'ja#}'ja~P&4bO!W7{O~Og$}q!Z$}q#^$}q#}$}q~P!0uOg(]q!Z(]q~P!0uO#^7|Og(]q!Z(]q~P!0uOa$ny!Z$ny'x$ny'u$ny!W$ny!i$nyt$ny!]$ny%h$ny!e$ny~P!:TO!e6hO~O!Z5RO!])Oa~O!]'^OP$SaR$Sa[$Sap$Sa!O$Sa!Q$Sa!Z$Sa!j$Sa!n$Sa#P$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#t$Sa#u$Sa#w$Sa#y$Sa#z$Sa(_$Sa(p$Sa(w$Sa(x$Sa~O%h6|O~P&7SO%]8QOa%Zi!]%Zi'x%Zi!Z%Zi~Oa#ay!Z#ay'x#ay'u#ay!W#ay!i#ayt#ay!]#ay%h#ay!e#ay~P!:TO[8SO~Ob8UO(R+nO(TTO(WUO~O!Z0}O![)Vi~O`8YO~O(c(zO!Z'nX!['nX~O!Z5kO![)Sa~O![8cO~P%:RO(m!sO~P$$oO#Y8dO~O!]1gO~O!]1gO%h8fO~Ol8iO!]1gO%h8fO~O[8nO!Z'qa!['qa~O!Z1rO![)Ti~O!i8rO~O!i8sO~O!i8vO~O!i8vO~P%[Oa8xO~O!e8yO~O!i8zO~O!Z(ui![(ui~P#BPOa%mO#^9SO'x%mO~O!Z(ry!i(rya(ry'x(ry~P!:TO!Z(hO!i(qy~O%h9VO~P&7SO!]'^O%h9VO~O#i${qP${qR${q[${qa${qp${q!Q${q!Z${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q'x${q(_${q(p${q!i${q!W${q'u${q#^${qt${q!]${q%h${q!e${q~P#.{O#i'haP'haR'ha['haa'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha'x'ha(_'ha(p'ha!i'ha!W'ha'u'hat'ha!]'ha%h'ha!e'ha~P&3oO#i'jaP'jaR'ja['jaa'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja'x'ja(_'ja(p'ja!i'ja!W'ja'u'jat'ja!]'ja%h'ja!e'ja~P&4bO#i$}qP$}qR$}q[$}qa$}qp$}q!Q$}q!Z$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q'x$}q(_$}q(p$}q!i$}q!W$}q'u$}q#^$}qt$}q!]$}q%h$}q!e$}q~P#.{O!Z'Wi!i'Wi~P!:TO#}#aq!Z#aq![#aq~P#BPO(w$}OP%`aR%`a[%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a#}%`a(_%`a(p%`a!Z%`a![%`a~Ol%`a!O%`a'w%`a(x%`a~P&HgO(x%POP%baR%ba[%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba#}%ba(_%ba(p%ba!Z%ba![%ba~Ol%ba!O%ba'w%ba(w%ba~P&JnOl=}O!O)|O'w)}O(x%PO~P&HgOl=}O!O)|O'w)}O(w$}O~P&JnOR0cO!O0cO!Q0dO#Q$dOP{a[{al{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a#}{a'w{a(_{a(p{a(w{a(x{a!Z{a![{a~O!O)|O'w)}OP$raR$ra[$ral$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra#}$ra(_$ra(p$ra(w$ra(x$ra!Z$ra![$ra~O!O)|O'w)}OP$taR$ta[$tal$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta#}$ta(_$ta(p$ta(w$ta(x$ta!Z$ta![$ta~Ol=}O!O)|O'w)}O(w$}O(x%PO~OP%SaR%Sa[%Sap%Sa!Q%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa#}%Sa(_%Sa(p%Sa!Z%Sa![%Sa~P'%sO#}$lq!Z$lq![$lq~P#BPO#}$nq!Z$nq![$nq~P#BPO![9dO~O#}9eO~P!0uO!e#vO!Z'ci!i'ci~O!e#vO(p'nO!Z'ci!i'ci~O!Z/kO!i(|q~O!W'ei!Z'ei~P#.{O!Z/sO!W(}q~Op9lO!e#vO(p'nO~O[9nO!W9mO~P#.{O!W9mO~O!e#vO#t9tO~Og(]y!Z(]y~P!0uO!Z'la!]'la~P#.{Oa%Zq!]%Zq'x%Zq!Z%Zq~P#.{O[9yO~O!Z0}O![)Vq~O#^9}O!Z'na!['na~O!Z5kO![)Si~P#BPO!Q:PO~O!]1gO%h:SO~O(TTO(WUO(c:XO~O!Z1rO![)Tq~O!i:[O~O!i:]O~O!i:^O~O!i:^O~P%[O#^:aO!Z#fy![#fy~O!Z#fy![#fy~P#BPO%h:fO~P&7SO!]'^O%h:fO~O#}#{y!Z#{y![#{y~P#BPOP${iR${i[${ip${i!Q${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i#}${i(_${i(p${i!Z${i![${i~P'%sO!O)|O'w)}O(x%POP'gaR'ga['gal'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga#}'ga(_'ga(p'ga(w'ga!Z'ga!['ga~O!O)|O'w)}OP'iaR'ia['ial'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia#}'ia(_'ia(p'ia(w'ia(x'ia!Z'ia!['ia~O(w$}OP%`iR%`i[%`il%`ip%`i!O%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i#}%`i'w%`i(_%`i(p%`i(x%`i!Z%`i![%`i~O(x%POP%biR%bi[%bil%bip%bi!O%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi#}%bi'w%bi(_%bi(p%bi(w%bi!Z%bi![%bi~O#}$ny!Z$ny![$ny~P#BPO#}#ay!Z#ay![#ay~P#BPO!e#vO!Z'cq!i'cq~O!Z/kO!i(|y~O!W'eq!Z'eq~P#.{Op:pO!e#vO(p'nO~O[:tO!W:sO~P#.{O!W:sO~Og(]!R!Z(]!R~P!0uOa%Zy!]%Zy'x%Zy!Z%Zy~P#.{O!Z0}O![)Vy~O!Z5kO![)Sq~O(R:zO~O!]1gO%h:}O~O!i;QO~O%h;VO~P&7SOP${qR${q[${qp${q!Q${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q#}${q(_${q(p${q!Z${q![${q~P'%sO!O)|O'w)}O(x%POP'haR'ha['hal'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha#}'ha(_'ha(p'ha(w'ha!Z'ha!['ha~O!O)|O'w)}OP'jaR'ja['jal'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja#}'ja(_'ja(p'ja(w'ja(x'ja!Z'ja!['ja~OP$}qR$}q[$}qp$}q!Q$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q#}$}q(_$}q(p$}q!Z$}q![$}q~P'%sOg%d!Z!Z%d!Z#^%d!Z#}%d!Z~P!0uO!W;ZO~P#.{Op;[O!e#vO(p'nO~O[;^O!W;ZO~P#.{O!Z'nq!['nq~P#BPO!Z#f!Z![#f!Z~P#BPO#i%d!ZP%d!ZR%d!Z[%d!Za%d!Zp%d!Z!Q%d!Z!Z%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z'x%d!Z(_%d!Z(p%d!Z!i%d!Z!W%d!Z'u%d!Z#^%d!Zt%d!Z!]%d!Z%h%d!Z!e%d!Z~P#.{Op;fO!e#vO(p'nO~O!W;gO~P#.{Op;nO!e#vO(p'nO~O!W;oO~P#.{OP%d!ZR%d!Z[%d!Zp%d!Z!Q%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z#}%d!Z(_%d!Z(p%d!Z!Z%d!Z![%d!Z~P'%sOp;rO!e#vO(p'nO~Ot(dX~P1qO!O%qO~P!(yO(S!lO~P!(yO!WfX!ZfX#^fX~P%0XOP]XR]X[]Xp]X!O]X!Q]X!Z]X!ZfX!j]X!n]X#P]X#Q]X#^]X#^fX#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!efX!i]X!ifX(pfX~P'JlOP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]XO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z<ZO![$pa~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<fO!Q${O!]$|O!g=wO!j$xO#h<lO$V%_O$s<hO$u<jO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Oj)bO~P( bOp!cX(p!cX~P# qOp(hX(p(hX~P#!dO![]X![fX~P'JlO!WfX!W$yX!ZfX!Z$yX#^fX~P!/qO#i<OO~O!e#vO#i<OO~O#^<`O~O#t<SO~O#^<pO!Z(uX![(uX~O#^<`O!Z(sX![(sX~O#i<qO~Og<sO~P!0uO#i<yO~O#i<zO~O!e#vO#i<{O~O!e#vO#i<qO~O#}<|O~P#BPO#i<}O~O#i=OO~O#i=TO~O#i=UO~O#i=VO~O#i=WO~O#}=XO~P!0uO#}=YO~P!0uO#Q#R#S#U#V#Y#g#h#s$m$s$u$x%[%]%g%h%i%p%r%u%v%x%z~'|T#m!V'z(S#nq#l#op!O'{$['{(R$^(c~",
  goto: "$8f)ZPPPPPP)[PP)_P)pP+Q/VPPPP6aPP6wPP<oP@cP@yP@yPPP@yPCRP@yP@yP@yPCVPC[PCyPHsPPPHwPPPPHwKzPPPLQLrPHwPHwPP! QHwPPPHwPHwP!#XHwP!&o!'t!'}P!(q!(u!(q!,SPPPPPPP!,s!'tPP!-T!.uP!2RHwHw!2W!5d!:Q!:Q!>PPPP!>XHwPPPPPPPPPP!AhP!BuPPHw!DWPHwPHwHwHwHwHwPHw!EjP!HtP!KzP!LO!LY!L^!L^P!HqP!Lb!LbP# hP# lHwPHw# r#$wCV@yP@yP@y@yP#&U@y@y#(h@y#+`@y#-l@y@y#.[#0p#0p#0u#1O#0p#1ZPP#0pP@y#1s@y#5r@y@y6aPPP#9wPPP#:b#:bP#:bP#:x#:bPP#;OP#:uP#:u#;c#:u#;}#<T#<W)_#<Z)_P#<b#<b#<bP)_P)_P)_P)_PP)_P#<h#<kP#<k)_P#<oP#<rP)_P)_P)_P)_P)_P)_)_PP#<x#=O#=Z#=a#=g#=m#=s#>R#>X#>c#>i#>s#>y#?Z#?a#@R#@e#@k#@q#AP#Af#CZ#Ci#Cp#E[#Ej#G[#Gj#Gp#Gv#G|#HW#H^#Hd#Hn#IQ#IWPPPPPPPPPPP#I^PPPPPPP#JR#MY#Nr#Ny$ RPPP$&mP$&v$)o$0Y$0]$0`$1_$1b$1i$1qP$1w$1zP$2h$2l$3d$4r$4w$5_PP$5d$5j$5n$5q$5u$5y$6u$7^$7u$7y$7|$8P$8V$8Y$8^$8bR!|RoqOXst!Z#d%l&p&r&s&u,n,s2S2VY!vQ'^-`1g5qQ%svQ%{yQ&S|Q&h!VS'U!e-WQ'd!iS'j!r!yU*h$|*X*lQ+l%|Q+y&UQ,_&bQ-^']Q-h'eQ-p'kQ0U*nQ1q,`R<m;z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9SS#q];w!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU*{%[<e<fQ+q&OQ,a&eQ,h&mQ0r+dQ0u+fQ1S+rQ1y,fQ3W.bQ5V0wQ5]0}Q6Q1rQ7O3[Q8U5^R9Y7Q'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s!S!nQ!r!v!y!z$|'U']'^'j'k'l*h*l*n*o-W-^-`-p0U0X1g5q5s%[$ti#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q&V|Q'S!eS'Y%h-ZQ+q&OQ,a&eQ0f+OQ1S+rQ1X+xQ1x,eQ1y,fQ5]0}Q5f1ZQ6Q1rQ6T1tQ6U1wQ8U5^Q8X5cQ8q6WQ9|8YQ:Y8nR<o*XrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR,c&i&z^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=r=s[#]WZ#W#Z'V(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ%vxQ%zyS&P|&UQ&]!TQ'a!hQ'c!iQ(o#sS+k%{%|Q+o&OQ,Y&`Q,^&bS-g'd'eQ.d(pQ0{+lQ1R+rQ1T+sQ1W+wQ1l,ZS1p,_,`Q2t-hQ5[0}Q5`1QQ5e1YQ6P1qQ8T5^Q8W5bQ9x8SR:w9y!U$zi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y!^%xy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pQ+e%vQ,O&YQ,R&ZQ,]&bQ.c(oQ1k,YU1o,^,_,`Q3].dQ5z1lS6O1p1qQ8m6P#f=t#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o=u<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YW%Ti%V*v=pS&Y!Q&gQ&Z!RQ&[!SQ+S%cR+|&W%]%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}T)x$u)yV*{%[<e<fW'Y!e%h*X-ZS({#y#zQ+`%qQ+v&RS.](k(lQ1b,SQ4x0cR8^5k'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s$i$^c#Y#e%p%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.w.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gT#TV#U'RkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ'W!eR2i-W!W!nQ!e!r!v!y!z$|'U']'^'j'k'l*X*h*l*n*o-W-^-`-p0U0X1g5q5sR1d,UnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&w!^Q't!xS(q#u<OQ+i%yQ,W&]Q,X&_Q-e'bQ-r'mS.m(v<qS0k+U<{Q0y+jQ1f,VQ2Z,uQ2],vQ2e-RQ2r-fQ2u-jS5P0l=VQ5W0zS5Z0|=WQ6j2gQ6n2sQ6s2zQ8R5XQ8}6lQ9O6oQ9R6tR:`8z$d$]c#Y#e%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gS(m#p'gQ(}#zS+_%p.wS.^(l(nR3U._'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS#q];wQ&r!XQ&s!YQ&u![Q&v!]R2R,qQ'_!hQ+b%vQ-c'aS.`(o+eQ2p-bW3Y.c.d0q0sQ6m2qW6z3V3X3]5TU9U6{6}7PU:e9W9X9ZS;T:d:gQ;b;UR;j;cU!wQ'^-`T5o1g5q!Q_OXZ`st!V!Z#d#h%d%l&g&i&p&r&s&u(h,n,s.V2S2V]!pQ!r'^-`1g5qT#q];w%^{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS({#y#zS.](k(l!s=^$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU$fd)],hS(n#p'gU*s%R(u3vU0e*z.i7]Q5T0rQ6{3WQ9X7OR:g9Ym!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sQ'r!uS(d#g1|S-n'i'uQ/n*ZQ/{*gQ2|-qQ4]/oQ4i/}Q4j0OQ4o0WQ7h4WS7s4k4mS7w4p4rQ9g7iQ9k7oQ9p7tQ9u7yS:o9l9mS;Y:p:sS;e;Z;[S;m;f;gS;q;n;oR;t;rQ#wbQ'q!uS(c#g1|S(e#m+TQ+V%eQ+g%wQ+m%}U-m'i'r'uQ.R(dQ/m*ZQ/|*gQ0P*iQ0x+hQ1m,[S2y-n-qQ3R.ZS4[/n/oQ4e/yS4h/{0WQ4l0QQ5|1nQ6u2|Q7g4WQ7k4]U7r4i4o4rQ7u4nQ8k5}S9f7h7iQ9j7oQ9r7wQ9s7xQ:V8lQ:m9gS:n9k9mQ:v9uQ;P:WS;X:o:sS;d;Y;ZS;l;e;gS;p;m;oQ;s;qQ;u;tQ=a=[Q=l=eR=m=fV!wQ'^-`%^aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS#wz!j!r=Z$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=a=r%^bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SQ%ej!^%wy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pS%}z!jQ+h%xQ,[&bW1n,],^,_,`U5}1o1p1qS8l6O6PQ:W8m!r=[$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ=e=qR=f=r%QeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SY#bWZ#W#Z(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ,i&m!p=]$Z$n)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=`'VU'Z!e%h*XR2k-Z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9S!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ,h&mQ0r+dQ3W.bQ7O3[R9Y7Q!b$Tc#Y%p(Q(W(r(w)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!P<U)[)o-U.w2c2f3h3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!f$Vc#Y%p(Q(W(r(w)U)V)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!T<W)[)o-U.w2c2f3h3n3o3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!^$Zc#Y%p(Q(W(r(w)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;xQ4V/fz=s)[)o-U.w2c2f3h3w4P6k7W7a7b8`8|9[9b9c:y;R=gQ=x=zR=y={'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS$oh$pR3|/P'XgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$kf$qQ$ifS)h$l)lR)t$qT$jf$qT)j$l)l'XhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$oh$pQ$rhR)s$p%^jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9S!s=q$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s#glOPXZst!Z!`!o#S#d#o#{$n%l&i&l&m&p&r&s&u&y'R'`(|)q*f+Y+d,k,n,s-d.b/Q/i0V0d1j1z1{1}2P2S2V2X3[3{4q5y6Z6[6_7Q8i8x!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}Q+P%`Q/^)|o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!U$yi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yQ*`$zU*i$|*X*lQ+Q%aQ0Q*j#f=c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n=d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YQ=h=tQ=i=uQ=j=vR=k=w!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YnoOXst!Z#d%l&p&r&s&u,n,s2S2VS*c${*WQ,|&|Q,}'OR4`/s%[%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q,P&ZQ1`,RQ5i1_R8]5jV*k$|*X*lU*k$|*X*lT5p1g5qS/y*f/iQ4n0VT7x4q:PQ+g%wQ0P*iQ0x+hQ1m,[Q5|1nQ8k5}Q:V8lR;P:W!U%Oi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yx*P$v)c*Q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=oS0Y*q0Z#f<a#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<b<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!d<t(s)a*Y*b.e.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={`<u3u7X7[7`9]:h:k;kS=P.g3aT=Q7Z9`!U%Qi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y|*R$v)c*S*q+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=oS0[*r0]#f<c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!h<v(s)a*Y*b.f.g.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={d<w3u7Y7Z7`9]9^:h:i:k;kS=R.h3bT=S7[9arnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ&d!UR,k&mrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR&d!UQ,T&[R1[+|snOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ1h,YS5w1k1lU8e5u5v5zS:R8g8hS:{:Q:TQ;_:|R;i;`Q&k!VR,d&gR6T1tR:Y8nS&P|&UR1T+sQ&p!WR,n&qR,t&vT2T,s2VR,x&wQ,w&wR2^,xQ'w!{R-t'wSsOtQ#dXT%os#dQ#OTR'y#OQ#RUR'{#RQ)y$uR/Z)yQ#UVR(O#UQ#XWU(U#X(V-{Q(V#YR-{(WQ-X'WR2j-XQ.p(wS3e.p3fR3f.qQ-`'^R2n-`Y!rQ'^-`1g5qR'h!rQ.{)cR3z.{U#_W%g*WU(]#_(^-|Q(^#`R-|(XQ-['ZR2l-[t`OXst!V!Z#d%l&g&i&p&r&s&u,n,s2S2VS#hZ%dU#r`#h.VR.V(hQ(i#jQ.S(eW.[(i.S3P6wQ3P.TR6w3QQ)l$lR/R)lQ$phR)r$pQ$`cU)_$`-w<[Q-w;xR<[)oQ/l*ZW4Y/l4Z7j9hU4Z/m/n/oS7j4[4]R9h7k$e*O$v(s)a)c*Y*b*q*r*|*}+R.g.h.j.k.l/Y/b/d/f/q/v0^0_0p1]3^3_3`3u3y4S4^4_4c4s4u4{4|4}5h7R7S7T7U7Z7[7^7_7`7f7m7p7z7}8P9]9^9_9i9q9v9w:h:i:j:k:l:q:u;W;];h;k=b=n=o=z={Q/t*bU4b/t4d7nQ4d/vR7n4cS*l$|*XR0S*lx*Q$v)c*q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=o!d.e(s)a*Y*b.g.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/c*Q.e7Xa7X3u7Z7[7`9]:h:k;kQ0Z*qQ3a.gU4t0Z3a9`R9`7Z|*S$v)c*q*r+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=o!h.f(s)a*Y*b.g.h.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/e*S.f7Ye7Y3u7Z7[7`9]9^:h:i:k;kQ0]*rQ3b.hU4v0]3b9aR9a7[Q*w%UR0a*wQ5S0pR8O5SQ+[%jR0o+[Q5l1bS8_5l:OR:O8`Q,V&]R1e,VQ5q1gR8b5qQ1s,aS6R1s8oR8o6TQ1O+oW5_1O5a8V9zQ5a1RQ8V5`R9z8WQ+t&PR1U+tQ2V,sR6c2VYrOXst#dQ&t!ZQ+^%lQ,m&pQ,o&rQ,p&sQ,r&uQ2Q,nS2T,s2VR6b2SQ%npQ&x!_Q&{!aQ&}!bQ'P!cQ'o!uQ+]%kQ+i%yQ+{&VQ,c&kQ,z&zW-k'i'q'r'uQ-r'mQ0R*kQ0y+jS1v,d,gQ2_,yQ2`,|Q2a,}Q2u-jW2w-m-n-q-sQ5W0zQ5d1XQ5g1]Q5{1mQ6V1xQ6a2RU6p2v2y2|Q6s2zQ8R5XQ8Z5fQ8[5hQ8a5pQ8j5|Q8p6US9P6q6uQ9R6tQ9{8XQ:U8kQ:Z8qQ:b9QQ:x9|Q;O:VQ;S:cR;a;PQ%yyQ'b!iQ'm!uU+j%z%{%|Q-R'TU-f'c'd'eS-j'i'sQ/z*gS0z+k+lQ2g-TS2s-g-hQ2z-oS4g/{0OQ5X0{Q6l2mQ6o2tQ6t2{U7q4i4j4mQ9o7sR:r9pS$wi=pR*x%VU%Ui%V=pR0`*vQ$viS(s#v+fS)a$b$cQ)c$dQ*Y$xS*b${*WQ*q%OQ*r%QQ*|%]Q*}%^Q+R%bQ.g<aQ.h<cQ.j<gQ.k<iQ.l<kQ/Y)wQ/b*PQ/d*RQ/f*TQ/q*^S/v*d/hQ0^*tQ0_*ul0p+c,Q.a1a1i3Z5x6|8f9V:S:f:};VQ1]+}Q3^<tQ3_<vQ3`<yS3u<^<_Q3y.zS4S/_4UQ4^/rQ4_/sQ4c/uQ4s0YQ4u0[Q4{0gQ4|0hQ4}0iQ5h1^Q7R<}Q7S=PQ7T=RQ7U=TQ7Z<bQ7[<dQ7^<hQ7_<jQ7`<lQ7f4VQ7m4aQ7p4fQ7z4wQ7}5RQ8P5UQ9]<zQ9^<uQ9_<wQ9i7lQ9q7vQ9v7|Q9w8QQ:h=OQ:i=QQ:j=SQ:k=UQ:l9eQ:q9nQ:u9tQ;W=XQ;]:tQ;h;^Q;k=YQ=b=pQ=n=xQ=o=yQ=z=|R={=}Q*z%[Q.i<eR7]<fnpOXst!Z#d%l&p&r&s&u,n,s2S2VQ!fPS#fZ#oQ&z!`W'f!o*f0V4qQ'}#SQ)O#{Q)p$nS,g&i&lQ,l&mQ,y&yS-O'R/iQ-b'`Q.s(|Q/V)qQ0m+YQ0s+dQ2O,kQ2q-dQ3X.bQ4O/QQ4y0dQ5v1jQ6X1zQ6Y1{Q6^1}Q6`2PQ6e2XQ7P3[Q7c3{Q8h5yQ8t6ZQ8u6[Q8w6_Q9Z7QQ:T8iR:_8x#[cOPXZst!Z!`!o#d#o#{%l&i&l&m&p&r&s&u&y'R'`(|*f+Y+d,k,n,s-d.b/i0V0d1j1z1{1}2P2S2V2X3[4q5y6Z6[6_7Q8i8xQ#YWQ#eYQ%puQ%rvS%tw!gS(Q#W(TQ(W#ZQ(r#uQ(w#xQ)P$OQ)Q$PQ)R$QQ)S$RQ)T$SQ)U$TQ)V$UQ)W$VQ)X$WQ)Y$XQ)[$ZQ)^$_Q)`$aQ)e$eW)o$n)q/Q3{Q+a%sQ+u&QS-U'V2hQ-s'pS-x(R-zQ-}(ZQ.P(bQ.n(vQ.q(xQ.u;vQ.w;yQ.x;zQ.y;}Q/]){Q0j+UQ2c-PQ2f-SQ2v-lQ2}.QQ3c.oQ3h<OQ3i<PQ3j<QQ3k<RQ3l<SQ3m<TQ3n<UQ3o<VQ3p<WQ3q<XQ3r<YQ3s.vQ3t<]Q3w<`Q3x<mQ4P<ZQ5O0lQ5Y0|Q6k<pQ6q2xQ6v3OQ7V3dQ7W<qQ7a<sQ7b<{Q8`5mQ8|6iQ9Q6rQ9[<|Q9b=VQ9c=WQ:c9SQ:y9}Q;R:aQ;x#SR=g=sR#[WR'X!el!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sS'T!e-WU*g$|*X*lS-T'U']S0O*h*nQ0W*oQ2m-^Q4m0UR4r0XR(y#xQ!fQT-_'^-`]!qQ!r'^-`1g5qQ#p]R'g;wR)d$dY!uQ'^-`1g5qQ'i!rS's!v!yS'u!z5sS-o'j'kQ-q'lR2{-pT#kZ%dS#jZ%dS%jm,jU(e#h#i#lS.T(f(gQ.X(hQ0n+ZQ3Q.UU3R.V.W.YS6x3S3TR9T6yd#^W#W#Z%g(R([*W+W.O/hr#gZm#h#i#l%d(f(g(h+Z.U.V.W.Y3S3T6yS*Z$x*_Q/o*[Q1|,jQ2d-QQ4W/kQ6g2[Q7i4XQ8{6hT=_'V+XV#aW%g*WU#`W%g*WS(S#W([U(X#Z+W/hS-V'V+XT-y(R.OV'[!e%h*XQ$lfR)v$qT)k$l)lR3}/PT*]$x*_T*e${*WQ0q+cQ1_,QQ3V.aQ5j1aQ5u1iQ6}3ZQ8g5xQ9W6|Q:Q8fQ:d9VQ:|:SQ;U:fQ;`:}R;c;VnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&j!VR,c&gtmOXst!U!V!Z#d%l&g&p&r&s&u,n,s2S2VR,j&mT%km,jR1c,SR,b&eQ&T|R+z&UR+p&OT&n!W&qT&o!W&qT2U,s2V",
  nodeNames: "⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList const TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast < ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate asserts is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 378,
  context: BE,
  nodeProps: [
    ["isolate", -8, 5, 6, 14, 35, 37, 49, 51, 53, ""],
    ["group", -26, 9, 17, 19, 66, 206, 210, 214, 215, 217, 220, 223, 233, 235, 241, 243, 245, 247, 250, 256, 262, 264, 266, 268, 270, 272, 273, "Statement", -34, 13, 14, 30, 33, 34, 40, 49, 52, 53, 55, 60, 68, 70, 74, 78, 80, 82, 83, 108, 109, 118, 119, 135, 138, 140, 141, 142, 143, 144, 146, 147, 166, 168, 170, "Expression", -23, 29, 31, 35, 39, 41, 43, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 200, 202, 204, 205, "Type", -3, 86, 101, 107, "ClassItem"],
    ["openedBy", 23, "<", 36, "InterpolationStart", 54, "[", 58, "{", 71, "(", 159, "JSXStartCloseTag"],
    ["closedBy", -2, 24, 167, ">", 38, "InterpolationEnd", 48, "]", 59, "}", 72, ")", 164, "JSXEndTag"]
  ],
  propSources: [KE],
  skippedNodes: [0, 5, 6, 276],
  repeatNodeCount: 37,
  tokenData: "$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Up(X!b'z0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(V#S$h&j'{0/lO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c07[.n_$h&j(Up(X!b'{0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)3p/x`$h&j!n),Q(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At3l_(T':f$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(X!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$c`(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Up(X!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__WS$h&j(Up(X!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]WS$h&j(X!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSWSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(X!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]WS$h&j(UpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWWS(UpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYWS(Up(X!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(m%1l(Up(X!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Up(X!b$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$h&j(Up(X!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Up(X!b#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,#xLva(x+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At! c_(W';W$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$c`$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(UpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$c`(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b/5|!'t_!j/.^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&U!)O_!i!Lf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z-!n!*[b$h&j(Up(X!b(S%&f#o(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW!+o`$h&j(Up(X!b#l(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;x!,|`$h&j(Up(X!bp+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,$U!.Z_!Z+Jf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!/ec$h&j(Up(X!b!O.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!0ya$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!2Z_!Y!L^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!3eg$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!5Vg$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!6wc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!8_c$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!9uf$h&j(Up(X!b#m(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z?O!;fb$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z>^!<w`$h&j(X!b!V7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;'S!<n;'S;=`!L]<%lO!<n<z!>Q^$h&j!V7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!?Td$h&j!V7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&c7`!@hX!V7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;'S!@c;'S;=`!CQ<%lO!@c7`!AYW!V7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;'S!Ar;'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;'S!Ar;'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;'S!@c;'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(X!b!V7`OY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}8r!GyZ(X!b!V7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;'S!Gr;'S;=`!J|<%lO!Gr8r!Hse(X!b!V7`OY'}Zw'}x#O'}#P#W'}#W#X!Hl#X#Z'}#Z#[!Hl#[#]'}#]#^!Hl#^#a'}#a#b!Hl#b#g'}#g#h!Hl#h#i'}#i#j!Hl#j#k!Hl#k#m'}#m#n!Hl#n;'S'};'S;=`(f<%lO'}8r!JZX(X!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;'S!JU;'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(X!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;'S!KS;'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Up!V7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;'S!Lc;'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Up!V7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r8Q# vZ(Up!V7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;'S# o;'S;=`#$y<%lO# o8Q#!pe(Up!V7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;'S)r;'S;=`*Z<%lO)r8Q#$WX(UpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;'S#$R;'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(UpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;'S#%P;'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Up(X!b!V7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z9d#(r](Up(X!b!V7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;'S#(i;'S;=`#,`<%lO#(i9d#)th(Up(X!b!V7`OY*gZr*grs'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;'S*g;'S;=`+Z<%lO*g9d#+gZ(Up(X!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;'S#+`;'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Up(X!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;'S#,f;'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Up(X!b'|0/l!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z07[#/o_$h&j(Up(X!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;'S#/d;'S;=`#6|<%lO#/d06j#0w]$h&j(X!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;'S#0n;'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;'S#1p;'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;'S#2d;'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(X!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;'S#3R;'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(UpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;'S#4O;'S;=`#5w<%lO#4O00^#5XW(UpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;'S#5Q;'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Up(X!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;'S#5};'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z'Ad#:Zp$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#<jk$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#>j_$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#?rd$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#A]f$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Bzc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Dbe$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#E|g$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Gpi$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x#Il_!e$b$h&j#})Lv(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Jv_al$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f#LS^h#)`#P-<U(Up(X!b$m7`OY*gZr*grs'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#MXX$j&j(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El#M}Z#p(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;'S*g;'S;=`+Z<%lO*g(El#NyX$P(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El$ oX#q(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g*)x$!ga#^*!Y$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(K[$#w_#i(Cl$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x$%Vag!*r#q(Ch$e#|$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$&g_#q(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$'qa#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$)R`#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(Kd$*`a(p(Ct$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`$,}_!z$Ip$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f$.X_!Q0,v$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;'S$0O;'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;'S&c;'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!W#)l$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;p$7c_$h&j(Up(X!b(_+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$8qk$h&j(Up(X!b(R,2j$^#t(c$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;'S$8b;'S;=`$<l<%lO$8b+d$:qk$h&j(Up(X!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;'S$:f;'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X!]#Hb(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g,#x$=sa(w+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;'S%Z;'S;=`+a<%lO%Z)>v$?V_![(CdtBr$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z?O$@a_!o7`$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$Aq|$h&j(Up(X!b'z0/l$[#t(R,2j(c$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Up(X!b'{0/l$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [NE, FE, GE, HE, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, IE, new $h("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOv~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!S~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(a~~", 141, 338), new $h("j~RQYZXz{^~^O(O~~aP!P!Qd~iO(P~~", 25, 321)],
  topRules: { Script: [0, 7], SingleExpression: [1, 274], SingleClassItem: [2, 275] },
  dialects: { jsx: 0, ts: 15091 },
  dynamicPrecedences: { 78: 1, 80: 1, 92: 1, 168: 1, 198: 1 },
  specialized: [{ term: 325, get: (i) => JE[i] || -1 }, { term: 341, get: (i) => e8[i] || -1 }, { term: 93, get: (i) => t8[i] || -1 }],
  tokenPrec: 15116
}), Aw = [
  /* @__PURE__ */ Zn("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], n8 = /* @__PURE__ */ Aw.concat([
  /* @__PURE__ */ Zn("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Zn("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), rb = /* @__PURE__ */ new jy(), Xw = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function nc(i) {
  return (e, t) => {
    let n = e.node.getChild("VariableDefinition");
    return n && t(n, i), !0;
  };
}
const r8 = ["FunctionDeclaration"], s8 = {
  FunctionDeclaration: /* @__PURE__ */ nc("function"),
  ClassDeclaration: /* @__PURE__ */ nc("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ nc("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ nc("type"),
  NamespaceDeclaration: /* @__PURE__ */ nc("namespace"),
  VariableDefinition(i, e) {
    i.matchContext(r8) || e(i, "variable");
  },
  TypeDefinition(i, e) {
    e(i, "type");
  },
  __proto__: null
};
function Mw(i, e) {
  let t = rb.get(e);
  if (t)
    return t;
  let n = [], r = !0;
  function s(o, a) {
    let c = i.sliceString(o.from, o.to);
    n.push({ label: c, type: a });
  }
  return e.cursor(Jt.IncludeAnonymous).iterate((o) => {
    if (r)
      r = !1;
    else if (o.name) {
      let a = s8[o.name];
      if (a && a(o, s) || Xw.has(o.name))
        return !1;
    } else if (o.to - o.from > 8192) {
      for (let a of Mw(i, o.node))
        n.push(a);
      return !1;
    }
  }), rb.set(e, n), n;
}
const sb = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, Ew = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  "JSXText",
  "JSXAttributeValue",
  "JSXOpenTag",
  "JSXCloseTag",
  "JSXSelfClosingTag",
  ".",
  "?."
];
function o8(i) {
  let e = ui(i.state).resolveInner(i.pos, -1);
  if (Ew.indexOf(e.name) > -1)
    return null;
  let t = e.name == "VariableName" || e.to - e.from < 20 && sb.test(i.state.sliceDoc(e.from, e.to));
  if (!t && !i.explicit)
    return null;
  let n = [];
  for (let r = e; r; r = r.parent)
    Xw.has(r.name) && (n = n.concat(Mw(i.state.doc, r)));
  return {
    options: n,
    from: t ? e.from : i.pos,
    validFor: sb
  };
}
const hs = /* @__PURE__ */ Ao.define({
  name: "javascript",
  parser: /* @__PURE__ */ i8.configure({
    props: [
      /* @__PURE__ */ Sa.add({
        IfStatement: /* @__PURE__ */ ea({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ ea({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: EA,
        SwitchBody: (i) => {
          let e = i.textAfter, t = /^\s*\}/.test(e), n = /^\s*(case|default)\b/.test(e);
          return i.baseIndent + (t ? 0 : n ? 1 : 2) * i.unit;
        },
        Block: /* @__PURE__ */ po({ closing: "}" }),
        ArrowFunction: (i) => i.baseIndent + i.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ ea({ except: /^{/ }),
        JSXElement(i) {
          let e = /^\s*<\//.test(i.textAfter);
          return i.lineIndent(i.node.from) + (e ? 0 : i.unit);
        },
        JSXEscape(i) {
          let e = /\s*\}/.test(i.textAfter);
          return i.lineIndent(i.node.from) + (e ? 0 : i.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(i) {
          return i.column(i.node.from) + i.unit;
        }
      }),
      /* @__PURE__ */ ba.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": is,
        BlockComment(i) {
          return { from: i.from + 2, to: i.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), qw = {
  test: (i) => /^JSX/.test(i.name),
  facet: /* @__PURE__ */ Hy({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, Lw = /* @__PURE__ */ hs.configure({ dialect: "ts" }, "typescript"), Dw = /* @__PURE__ */ hs.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ tm.add((i) => i.isTop ? [qw] : void 0)]
}), Vw = /* @__PURE__ */ hs.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ tm.add((i) => i.isTop ? [qw] : void 0)]
}, "typescript");
let Uw = (i) => ({ label: i, type: "keyword" });
const Yw = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(Uw), l8 = /* @__PURE__ */ Yw.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(Uw));
function a8(i = {}) {
  let e = i.jsx ? i.typescript ? Vw : Dw : i.typescript ? Lw : hs, t = i.typescript ? n8.concat(l8) : Aw.concat(Yw);
  return new ef(e, [
    hs.data.of({
      autocomplete: eM(Ew, nw(t))
    }),
    hs.data.of({
      autocomplete: o8
    }),
    i.jsx ? u8 : []
  ]);
}
function c8(i) {
  for (; ; ) {
    if (i.name == "JSXOpenTag" || i.name == "JSXSelfClosingTag" || i.name == "JSXFragmentTag")
      return i;
    if (i.name == "JSXEscape" || !i.parent)
      return null;
    i = i.parent;
  }
}
function ob(i, e, t = i.length) {
  for (let n = e == null ? void 0 : e.firstChild; n; n = n.nextSibling)
    if (n.name == "JSXIdentifier" || n.name == "JSXBuiltin" || n.name == "JSXNamespacedName" || n.name == "JSXMemberExpression")
      return i.sliceString(n.from, Math.min(n.to, t));
  return "";
}
const f8 = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), u8 = /* @__PURE__ */ me.inputHandler.of((i, e, t, n, r) => {
  if ((f8 ? i.composing : i.compositionStarted) || i.state.readOnly || e != t || n != ">" && n != "/" || !hs.isActiveAt(i.state, e, -1))
    return !1;
  let s = r(), { state: o } = s, a = o.changeByRange((c) => {
    var u;
    let { head: h } = c, d = ui(o).resolveInner(h - 1, -1), p;
    if (d.name == "JSXStartTag" && (d = d.parent), !(o.doc.sliceString(h - 1, h) != n || d.name == "JSXAttributeValue" && d.to > h)) {
      if (n == ">" && d.name == "JSXFragmentTag")
        return { range: c, changes: { from: h, insert: "</>" } };
      if (n == "/" && d.name == "JSXStartCloseTag") {
        let m = d.parent, b = m.parent;
        if (b && m.from == h - 2 && ((p = ob(o.doc, b.firstChild, h)) || ((u = b.firstChild) === null || u === void 0 ? void 0 : u.name) == "JSXFragmentTag")) {
          let y = `${p}>`;
          return { range: J.cursor(h + y.length, -1), changes: { from: h, insert: y } };
        }
      } else if (n == ">") {
        let m = c8(d);
        if (m && m.name == "JSXOpenTag" && !/^\/?>|^<\//.test(o.doc.sliceString(h, h + 2)) && (p = ob(o.doc, m, h)))
          return { range: c, changes: { from: h, insert: `</${p}>` } };
      }
    }
    return { range: c };
  });
  return a.changes.empty ? !1 : (i.dispatch([
    s,
    o.update(a, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
}), rc = ["_blank", "_self", "_top", "_parent"], np = ["ascii", "utf-8", "utf-16", "latin1", "latin1"], rp = ["get", "post", "put", "delete"], sp = ["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"], Nn = ["true", "false"], De = {}, h8 = {
  a: {
    attrs: {
      href: null,
      ping: null,
      type: null,
      media: null,
      target: rc,
      hreflang: null
    }
  },
  abbr: De,
  address: De,
  area: {
    attrs: {
      alt: null,
      coords: null,
      href: null,
      target: null,
      ping: null,
      media: null,
      hreflang: null,
      type: null,
      shape: ["default", "rect", "circle", "poly"]
    }
  },
  article: De,
  aside: De,
  audio: {
    attrs: {
      src: null,
      mediagroup: null,
      crossorigin: ["anonymous", "use-credentials"],
      preload: ["none", "metadata", "auto"],
      autoplay: ["autoplay"],
      loop: ["loop"],
      controls: ["controls"]
    }
  },
  b: De,
  base: { attrs: { href: null, target: rc } },
  bdi: De,
  bdo: De,
  blockquote: { attrs: { cite: null } },
  body: De,
  br: De,
  button: {
    attrs: {
      form: null,
      formaction: null,
      name: null,
      value: null,
      autofocus: ["autofocus"],
      disabled: ["autofocus"],
      formenctype: sp,
      formmethod: rp,
      formnovalidate: ["novalidate"],
      formtarget: rc,
      type: ["submit", "reset", "button"]
    }
  },
  canvas: { attrs: { width: null, height: null } },
  caption: De,
  center: De,
  cite: De,
  code: De,
  col: { attrs: { span: null } },
  colgroup: { attrs: { span: null } },
  command: {
    attrs: {
      type: ["command", "checkbox", "radio"],
      label: null,
      icon: null,
      radiogroup: null,
      command: null,
      title: null,
      disabled: ["disabled"],
      checked: ["checked"]
    }
  },
  data: { attrs: { value: null } },
  datagrid: { attrs: { disabled: ["disabled"], multiple: ["multiple"] } },
  datalist: { attrs: { data: null } },
  dd: De,
  del: { attrs: { cite: null, datetime: null } },
  details: { attrs: { open: ["open"] } },
  dfn: De,
  div: De,
  dl: De,
  dt: De,
  em: De,
  embed: { attrs: { src: null, type: null, width: null, height: null } },
  eventsource: { attrs: { src: null } },
  fieldset: { attrs: { disabled: ["disabled"], form: null, name: null } },
  figcaption: De,
  figure: De,
  footer: De,
  form: {
    attrs: {
      action: null,
      name: null,
      "accept-charset": np,
      autocomplete: ["on", "off"],
      enctype: sp,
      method: rp,
      novalidate: ["novalidate"],
      target: rc
    }
  },
  h1: De,
  h2: De,
  h3: De,
  h4: De,
  h5: De,
  h6: De,
  head: {
    children: ["title", "base", "link", "style", "meta", "script", "noscript", "command"]
  },
  header: De,
  hgroup: De,
  hr: De,
  html: {
    attrs: { manifest: null }
  },
  i: De,
  iframe: {
    attrs: {
      src: null,
      srcdoc: null,
      name: null,
      width: null,
      height: null,
      sandbox: ["allow-top-navigation", "allow-same-origin", "allow-forms", "allow-scripts"],
      seamless: ["seamless"]
    }
  },
  img: {
    attrs: {
      alt: null,
      src: null,
      ismap: null,
      usemap: null,
      width: null,
      height: null,
      crossorigin: ["anonymous", "use-credentials"]
    }
  },
  input: {
    attrs: {
      alt: null,
      dirname: null,
      form: null,
      formaction: null,
      height: null,
      list: null,
      max: null,
      maxlength: null,
      min: null,
      name: null,
      pattern: null,
      placeholder: null,
      size: null,
      src: null,
      step: null,
      value: null,
      width: null,
      accept: ["audio/*", "video/*", "image/*"],
      autocomplete: ["on", "off"],
      autofocus: ["autofocus"],
      checked: ["checked"],
      disabled: ["disabled"],
      formenctype: sp,
      formmethod: rp,
      formnovalidate: ["novalidate"],
      formtarget: rc,
      multiple: ["multiple"],
      readonly: ["readonly"],
      required: ["required"],
      type: [
        "hidden",
        "text",
        "search",
        "tel",
        "url",
        "email",
        "password",
        "datetime",
        "date",
        "month",
        "week",
        "time",
        "datetime-local",
        "number",
        "range",
        "color",
        "checkbox",
        "radio",
        "file",
        "submit",
        "image",
        "reset",
        "button"
      ]
    }
  },
  ins: { attrs: { cite: null, datetime: null } },
  kbd: De,
  keygen: {
    attrs: {
      challenge: null,
      form: null,
      name: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      keytype: ["RSA"]
    }
  },
  label: { attrs: { for: null, form: null } },
  legend: De,
  li: { attrs: { value: null } },
  link: {
    attrs: {
      href: null,
      type: null,
      hreflang: null,
      media: null,
      sizes: ["all", "16x16", "16x16 32x32", "16x16 32x32 64x64"]
    }
  },
  map: { attrs: { name: null } },
  mark: De,
  menu: { attrs: { label: null, type: ["list", "context", "toolbar"] } },
  meta: {
    attrs: {
      content: null,
      charset: np,
      name: ["viewport", "application-name", "author", "description", "generator", "keywords"],
      "http-equiv": ["content-language", "content-type", "default-style", "refresh"]
    }
  },
  meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },
  nav: De,
  noscript: De,
  object: {
    attrs: {
      data: null,
      type: null,
      name: null,
      usemap: null,
      form: null,
      width: null,
      height: null,
      typemustmatch: ["typemustmatch"]
    }
  },
  ol: {
    attrs: { reversed: ["reversed"], start: null, type: ["1", "a", "A", "i", "I"] },
    children: ["li", "script", "template", "ul", "ol"]
  },
  optgroup: { attrs: { disabled: ["disabled"], label: null } },
  option: { attrs: { disabled: ["disabled"], label: null, selected: ["selected"], value: null } },
  output: { attrs: { for: null, form: null, name: null } },
  p: De,
  param: { attrs: { name: null, value: null } },
  pre: De,
  progress: { attrs: { value: null, max: null } },
  q: { attrs: { cite: null } },
  rp: De,
  rt: De,
  ruby: De,
  samp: De,
  script: {
    attrs: {
      type: ["text/javascript"],
      src: null,
      async: ["async"],
      defer: ["defer"],
      charset: np
    }
  },
  section: De,
  select: {
    attrs: {
      form: null,
      name: null,
      size: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      multiple: ["multiple"]
    }
  },
  slot: { attrs: { name: null } },
  small: De,
  source: { attrs: { src: null, type: null, media: null } },
  span: De,
  strong: De,
  style: {
    attrs: {
      type: ["text/css"],
      media: null,
      scoped: null
    }
  },
  sub: De,
  summary: De,
  sup: De,
  table: De,
  tbody: De,
  td: { attrs: { colspan: null, rowspan: null, headers: null } },
  template: De,
  textarea: {
    attrs: {
      dirname: null,
      form: null,
      maxlength: null,
      name: null,
      placeholder: null,
      rows: null,
      cols: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      readonly: ["readonly"],
      required: ["required"],
      wrap: ["soft", "hard"]
    }
  },
  tfoot: De,
  th: { attrs: { colspan: null, rowspan: null, headers: null, scope: ["row", "col", "rowgroup", "colgroup"] } },
  thead: De,
  time: { attrs: { datetime: null } },
  title: De,
  tr: De,
  track: {
    attrs: {
      src: null,
      label: null,
      default: null,
      kind: ["subtitles", "captions", "descriptions", "chapters", "metadata"],
      srclang: null
    }
  },
  ul: { children: ["li", "script", "template", "ul", "ol"] },
  var: De,
  video: {
    attrs: {
      src: null,
      poster: null,
      width: null,
      height: null,
      crossorigin: ["anonymous", "use-credentials"],
      preload: ["auto", "metadata", "none"],
      autoplay: ["autoplay"],
      mediagroup: ["movie"],
      muted: ["muted"],
      controls: ["controls"]
    }
  },
  wbr: De
}, zw = {
  accesskey: null,
  class: null,
  contenteditable: Nn,
  contextmenu: null,
  dir: ["ltr", "rtl", "auto"],
  draggable: ["true", "false", "auto"],
  dropzone: ["copy", "move", "link", "string:", "file:"],
  hidden: ["hidden"],
  id: null,
  inert: ["inert"],
  itemid: null,
  itemprop: null,
  itemref: null,
  itemscope: ["itemscope"],
  itemtype: null,
  lang: ["ar", "bn", "de", "en-GB", "en-US", "es", "fr", "hi", "id", "ja", "pa", "pt", "ru", "tr", "zh"],
  spellcheck: Nn,
  autocorrect: Nn,
  autocapitalize: Nn,
  style: null,
  tabindex: null,
  title: null,
  translate: ["yes", "no"],
  rel: ["stylesheet", "alternate", "author", "bookmark", "help", "license", "next", "nofollow", "noreferrer", "prefetch", "prev", "search", "tag"],
  role: /* @__PURE__ */ "alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer".split(" "),
  "aria-activedescendant": null,
  "aria-atomic": Nn,
  "aria-autocomplete": ["inline", "list", "both", "none"],
  "aria-busy": Nn,
  "aria-checked": ["true", "false", "mixed", "undefined"],
  "aria-controls": null,
  "aria-describedby": null,
  "aria-disabled": Nn,
  "aria-dropeffect": null,
  "aria-expanded": ["true", "false", "undefined"],
  "aria-flowto": null,
  "aria-grabbed": ["true", "false", "undefined"],
  "aria-haspopup": Nn,
  "aria-hidden": Nn,
  "aria-invalid": ["true", "false", "grammar", "spelling"],
  "aria-label": null,
  "aria-labelledby": null,
  "aria-level": null,
  "aria-live": ["off", "polite", "assertive"],
  "aria-multiline": Nn,
  "aria-multiselectable": Nn,
  "aria-owns": null,
  "aria-posinset": null,
  "aria-pressed": ["true", "false", "mixed", "undefined"],
  "aria-readonly": Nn,
  "aria-relevant": null,
  "aria-required": Nn,
  "aria-selected": ["true", "false", "undefined"],
  "aria-setsize": null,
  "aria-sort": ["ascending", "descending", "none", "other"],
  "aria-valuemax": null,
  "aria-valuemin": null,
  "aria-valuenow": null,
  "aria-valuetext": null
}, jw = /* @__PURE__ */ "beforeunload copy cut dragstart dragover dragleave dragenter dragend drag paste focus blur change click load mousedown mouseenter mouseleave mouseup keydown keyup resize scroll unload".split(" ").map((i) => "on" + i);
for (let i of jw)
  zw[i] = null;
class Dh {
  constructor(e, t) {
    this.tags = Object.assign(Object.assign({}, h8), e), this.globalAttrs = Object.assign(Object.assign({}, zw), t), this.allTags = Object.keys(this.tags), this.globalAttrNames = Object.keys(this.globalAttrs);
  }
}
Dh.default = /* @__PURE__ */ new Dh();
function fa(i, e, t = i.length) {
  if (!e)
    return "";
  let n = e.firstChild, r = n && n.getChild("TagName");
  return r ? i.sliceString(r.from, Math.min(r.to, t)) : "";
}
function ua(i, e = !1) {
  for (; i; i = i.parent)
    if (i.name == "Element")
      if (e)
        e = !1;
      else
        return i;
  return null;
}
function Bw(i, e, t) {
  let n = t.tags[fa(i, ua(e))];
  return (n == null ? void 0 : n.children) || t.allTags;
}
function $m(i, e) {
  let t = [];
  for (let n = ua(e); n && !n.type.isTop; n = ua(n.parent)) {
    let r = fa(i, n);
    if (r && n.lastChild.name == "CloseTag")
      break;
    r && t.indexOf(r) < 0 && (e.name == "EndTag" || e.from >= n.firstChild.to) && t.push(r);
  }
  return t;
}
const Iw = /^[:\-\.\w\u00b7-\uffff]*$/;
function lb(i, e, t, n, r) {
  let s = /\s*>/.test(i.sliceDoc(r, r + 5)) ? "" : ">", o = ua(t, !0);
  return {
    from: n,
    to: r,
    options: Bw(i.doc, o, e).map((a) => ({ label: a, type: "type" })).concat($m(i.doc, t).map((a, c) => ({
      label: "/" + a,
      apply: "/" + a + s,
      type: "type",
      boost: 99 - c
    }))),
    validFor: /^\/?[:\-\.\w\u00b7-\uffff]*$/
  };
}
function ab(i, e, t, n) {
  let r = /\s*>/.test(i.sliceDoc(n, n + 5)) ? "" : ">";
  return {
    from: t,
    to: n,
    options: $m(i.doc, e).map((s, o) => ({ label: s, apply: s + r, type: "type", boost: 99 - o })),
    validFor: Iw
  };
}
function O8(i, e, t, n) {
  let r = [], s = 0;
  for (let o of Bw(i.doc, t, e))
    r.push({ label: "<" + o, type: "type" });
  for (let o of $m(i.doc, t))
    r.push({ label: "</" + o + ">", type: "type", boost: 99 - s++ });
  return { from: n, to: n, options: r, validFor: /^<\/?[:\-\.\w\u00b7-\uffff]*$/ };
}
function d8(i, e, t, n, r) {
  let s = ua(t), o = s ? e.tags[fa(i.doc, s)] : null, a = o && o.attrs ? Object.keys(o.attrs) : [], c = o && o.globalAttrs === !1 ? a : a.length ? a.concat(e.globalAttrNames) : e.globalAttrNames;
  return {
    from: n,
    to: r,
    options: c.map((u) => ({ label: u, type: "property" })),
    validFor: Iw
  };
}
function p8(i, e, t, n, r) {
  var s;
  let o = (s = t.parent) === null || s === void 0 ? void 0 : s.getChild("AttributeName"), a = [], c;
  if (o) {
    let u = i.sliceDoc(o.from, o.to), h = e.globalAttrs[u];
    if (!h) {
      let d = ua(t), p = d ? e.tags[fa(i.doc, d)] : null;
      h = (p == null ? void 0 : p.attrs) && p.attrs[u];
    }
    if (h) {
      let d = i.sliceDoc(n, r).toLowerCase(), p = '"', m = '"';
      /^['"]/.test(d) ? (c = d[0] == '"' ? /^[^"]*$/ : /^[^']*$/, p = "", m = i.sliceDoc(r, r + 1) == d[0] ? "" : d[0], d = d.slice(1), n++) : c = /^[^\s<>='"]*$/;
      for (let b of h)
        a.push({ label: b, apply: p + b + m, type: "constant" });
    }
  }
  return { from: n, to: r, options: a, validFor: c };
}
function g8(i, e) {
  let { state: t, pos: n } = e, r = ui(t).resolveInner(n, -1), s = r.resolve(n);
  for (let o = n, a; s == r && (a = r.childBefore(o)); ) {
    let c = a.lastChild;
    if (!c || !c.type.isError || c.from < c.to)
      break;
    s = r = a, o = c.from;
  }
  return r.name == "TagName" ? r.parent && /CloseTag$/.test(r.parent.name) ? ab(t, r, r.from, n) : lb(t, i, r, r.from, n) : r.name == "StartTag" ? lb(t, i, r, n, n) : r.name == "StartCloseTag" || r.name == "IncompleteCloseTag" ? ab(t, r, n, n) : r.name == "OpenTag" || r.name == "SelfClosingTag" || r.name == "AttributeName" ? d8(t, i, r, r.name == "AttributeName" ? r.from : n, n) : r.name == "Is" || r.name == "AttributeValue" || r.name == "UnquotedAttributeValue" ? p8(t, i, r, r.name == "Is" ? n : r.from, n) : e.explicit && (s.name == "Element" || s.name == "Text" || s.name == "Document") ? O8(t, i, r, n) : null;
}
function m8(i) {
  let { extraTags: e, extraGlobalAttributes: t } = i, n = t || e ? new Dh(e, t) : Dh.default;
  return (r) => g8(n, r);
}
const v8 = /* @__PURE__ */ hs.parser.configure({ top: "SingleExpression" }), Nw = [
  {
    tag: "script",
    attrs: (i) => i.type == "text/typescript" || i.lang == "ts",
    parser: Lw.parser
  },
  {
    tag: "script",
    attrs: (i) => i.type == "text/babel" || i.type == "text/jsx",
    parser: Dw.parser
  },
  {
    tag: "script",
    attrs: (i) => i.type == "text/typescript-jsx",
    parser: Vw.parser
  },
  {
    tag: "script",
    attrs(i) {
      return /^(importmap|speculationrules|application\/(.+\+)?json)$/i.test(i.type);
    },
    parser: v8
  },
  {
    tag: "script",
    attrs(i) {
      return !i.type || /^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(i.type);
    },
    parser: hs.parser
  },
  {
    tag: "style",
    attrs(i) {
      return (!i.lang || i.lang == "css") && (!i.type || /^(text\/)?(x-)?(stylesheet|css)$/i.test(i.type));
    },
    parser: Lh.parser
  }
], Fw = /* @__PURE__ */ [
  {
    name: "style",
    parser: /* @__PURE__ */ Lh.parser.configure({ top: "Styles" })
  }
].concat(/* @__PURE__ */ jw.map((i) => ({ name: i, parser: hs.parser }))), Gw = /* @__PURE__ */ Ao.define({
  name: "html",
  parser: /* @__PURE__ */ G7.configure({
    props: [
      /* @__PURE__ */ Sa.add({
        Element(i) {
          let e = /^(\s*)(<\/)?/.exec(i.textAfter);
          return i.node.to <= i.pos + e[0].length ? i.continue() : i.lineIndent(i.node.from) + (e[2] ? 0 : i.unit);
        },
        "OpenTag CloseTag SelfClosingTag"(i) {
          return i.column(i.node.from) + i.unit;
        },
        Document(i) {
          if (i.pos + /\s*/.exec(i.textAfter)[0].length < i.node.to)
            return i.continue();
          let e = null, t;
          for (let n = i.node; ; ) {
            let r = n.lastChild;
            if (!r || r.name != "Element" || r.to != n.to)
              break;
            e = n = r;
          }
          return e && !((t = e.lastChild) && (t.name == "CloseTag" || t.name == "SelfClosingTag")) ? i.lineIndent(e.from) + i.unit : null;
        }
      }),
      /* @__PURE__ */ ba.add({
        Element(i) {
          let e = i.firstChild, t = i.lastChild;
          return !e || e.name != "OpenTag" ? null : { from: e.to, to: t.name == "CloseTag" ? t.from : i.to };
        }
      }),
      /* @__PURE__ */ OQ.add({
        "OpenTag CloseTag": (i) => i.getChild("TagName")
      })
    ]
  }),
  languageData: {
    commentTokens: { block: { open: "<!--", close: "-->" } },
    indentOnInput: /^\s*<\/\w+\W$/,
    wordChars: "-._"
  }
}), Ku = /* @__PURE__ */ Gw.configure({
  wrap: /* @__PURE__ */ _w(Nw, Fw)
});
function S8(i = {}) {
  let e = "", t;
  i.matchClosingTags === !1 && (e = "noMatch"), i.selfClosingTags === !0 && (e = (e ? e + " " : "") + "selfClosing"), (i.nestedLanguages && i.nestedLanguages.length || i.nestedAttributes && i.nestedAttributes.length) && (t = _w((i.nestedLanguages || []).concat(Nw), (i.nestedAttributes || []).concat(Fw)));
  let n = t ? Gw.configure({ wrap: t, dialect: e }) : e ? Ku.configure({ dialect: e }) : Ku;
  return new ef(n, [
    Ku.data.of({ autocomplete: m8(i) }),
    i.autoCloseTags !== !1 ? b8 : [],
    a8().support,
    PE().support
  ]);
}
const cb = /* @__PURE__ */ new Set(/* @__PURE__ */ "area base br col command embed frame hr img input keygen link meta param source track wbr menuitem".split(" ")), b8 = /* @__PURE__ */ me.inputHandler.of((i, e, t, n, r) => {
  if (i.composing || i.state.readOnly || e != t || n != ">" && n != "/" || !Ku.isActiveAt(i.state, e, -1))
    return !1;
  let s = r(), { state: o } = s, a = o.changeByRange((c) => {
    var u, h, d;
    let p = o.doc.sliceString(c.from - 1, c.to) == n, { head: m } = c, b = ui(o).resolveInner(m, -1), y;
    if (p && n == ">" && b.name == "EndTag") {
      let w = b.parent;
      if (((h = (u = w.parent) === null || u === void 0 ? void 0 : u.lastChild) === null || h === void 0 ? void 0 : h.name) != "CloseTag" && (y = fa(o.doc, w.parent, m)) && !cb.has(y)) {
        let k = m + (o.doc.sliceString(m, m + 1) === ">" ? 1 : 0), A = `</${y}>`;
        return { range: c, changes: { from: m, to: k, insert: A } };
      }
    } else if (p && n == "/" && b.name == "IncompleteCloseTag") {
      let w = b.parent;
      if (b.from == m - 2 && ((d = w.lastChild) === null || d === void 0 ? void 0 : d.name) != "CloseTag" && (y = fa(o.doc, w, m)) && !cb.has(y)) {
        let k = m + (o.doc.sliceString(m, m + 1) === ">" ? 1 : 0), A = `${y}>`;
        return {
          range: J.cursor(m + A.length, -1),
          changes: { from: m, to: k, insert: A }
        };
      }
    }
    return { range: c };
  });
  return a.changes.empty ? !1 : (i.dispatch([
    s,
    o.update(a, {
      userEvent: "input.complete",
      scrollIntoView: !0
    })
  ]), !0);
});
var Xu = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function X9(i) {
  return i && i.__esModule && Object.prototype.hasOwnProperty.call(i, "default") ? i.default : i;
}
var hc = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var $8 = hc.exports, fb;
function y8() {
  return fb || (fb = 1, function(i, e) {
    (function() {
      var t, n = "4.17.21", r = 200, s = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", a = "Invalid `variable` option passed into `_.template`", c = "__lodash_hash_undefined__", u = 500, h = "__lodash_placeholder__", d = 1, p = 2, m = 4, b = 1, y = 2, w = 1, k = 2, A = 4, x = 8, _ = 16, W = 32, D = 64, q = 128, V = 256, U = 512, N = 30, j = "...", I = 800, Y = 16, se = 1, be = 2, ze = 3, Ve = 1 / 0, Xe = 9007199254740991, Ee = 17976931348623157e292, We = NaN, xe = 4294967295, re = xe - 1, Oe = xe >>> 1, Re = [
        ["ary", q],
        ["bind", w],
        ["bindKey", k],
        ["curry", x],
        ["curryRight", _],
        ["flip", U],
        ["partial", W],
        ["partialRight", D],
        ["rearg", V]
      ], Ye = "[object Arguments]", Ne = "[object Array]", He = "[object AsyncFunction]", ue = "[object Boolean]", H = "[object Date]", ce = "[object DOMException]", oe = "[object Error]", $e = "[object Function]", Ae = "[object GeneratorFunction]", Ze = "[object Map]", Ie = "[object Number]", yt = "[object Null]", pt = "[object Object]", Bi = "[object Promise]", mt = "[object Proxy]", je = "[object RegExp]", it = "[object Set]", he = "[object String]", Gt = "[object Symbol]", li = "[object Undefined]", Vt = "[object WeakMap]", hi = "[object WeakSet]", Ht = "[object ArrayBuffer]", mi = "[object DataView]", un = "[object Float32Array]", vi = "[object Float64Array]", Bt = "[object Int8Array]", Ot = "[object Int16Array]", tt = "[object Int32Array]", ai = "[object Uint8Array]", ci = "[object Uint8ClampedArray]", Qt = "[object Uint16Array]", Ei = "[object Uint32Array]", Ti = /\b__p \+= '';/g, $n = /\b(__p \+=) '' \+/g, qi = /(__e\(.*?\)|\b__t\)) \+\n'';/g, qn = /&(?:amp|lt|gt|quot|#39);/g, Qi = /[&<>"']/g, yn = RegExp(qn.source), vs = RegExp(Qi.source), Ss = /<%-([\s\S]+?)%>/g, bs = /<%([\s\S]+?)%>/g, Ii = /<%=([\s\S]+?)%>/g, er = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, tr = /^\w*$/, to = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, wr = /[\\^$.*+?()[\]{}|]/g, hn = RegExp(wr.source), Ln = /^\s+/, io = /\s/, Pr = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Et = /\{\n\/\* \[wrapped with (.+)\] \*/, Qn = /,? & /, ir = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, xr = /[()=,{}\[\]\/\s]/, $s = /\\(\\)?/g, wa = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, On = /\w*$/, Ni = /^[-+]0x[0-9a-f]+$/i, Ir = /^0b[01]+$/i, ys = /^\[object .+?Constructor\]$/, kr = /^0o[0-7]+$/i, Qs = /^(?:0|[1-9]\d*)$/, qo = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, _r = /($^)/, Ol = /['\n\r\u2028\u2029\\]/g, ws = "\\ud800-\\udfff", Ps = "\\u0300-\\u036f", dl = "\\ufe20-\\ufe2f", wn = "\\u20d0-\\u20ff", Dn = Ps + dl + wn, Wr = "\\u2700-\\u27bf", lf = "a-z\\xdf-\\xf6\\xf8-\\xff", af = "\\xac\\xb1\\xd7\\xf7", cf = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Pa = "\\u2000-\\u206f", xa = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", pl = "A-Z\\xc0-\\xd6\\xd8-\\xde", gl = "\\ufe0e\\ufe0f", ka = af + cf + Pa + xa, Lo = "['’]", ff = "[" + ws + "]", ml = "[" + ka + "]", Do = "[" + Dn + "]", vl = "\\d+", cO = "[" + Wr + "]", uf = "[" + lf + "]", hf = "[^" + ws + ka + vl + Wr + lf + pl + "]", Sl = "\\ud83c[\\udffb-\\udfff]", fO = "(?:" + Do + "|" + Sl + ")", _a = "[^" + ws + "]", Wa = "(?:\\ud83c[\\udde6-\\uddff]){2}", bl = "[\\ud800-\\udbff][\\udc00-\\udfff]", no = "[" + pl + "]", Of = "\\u200d", Ta = "(?:" + uf + "|" + hf + ")", df = "(?:" + no + "|" + hf + ")", pf = "(?:" + Lo + "(?:d|ll|m|re|s|t|ve))?", Za = "(?:" + Lo + "(?:D|LL|M|RE|S|T|VE))?", $l = fO + "?", yl = "[" + gl + "]?", gf = "(?:" + Of + "(?:" + [_a, Wa, bl].join("|") + ")" + yl + $l + ")*", mf = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", uO = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", vf = yl + $l + gf, hO = "(?:" + [cO, Wa, bl].join("|") + ")" + vf, Sf = "(?:" + [_a + Do + "?", Do, Wa, bl, ff].join("|") + ")", Ca = RegExp(Lo, "g"), OO = RegExp(Do, "g"), Ra = RegExp(Sl + "(?=" + Sl + ")|" + Sf + vf, "g"), bf = RegExp([
        no + "?" + uf + "+" + pf + "(?=" + [ml, no, "$"].join("|") + ")",
        df + "+" + Za + "(?=" + [ml, no + Ta, "$"].join("|") + ")",
        no + "?" + Ta + "+" + pf,
        no + "+" + Za,
        uO,
        mf,
        vl,
        hO
      ].join("|"), "g"), $f = RegExp("[" + Of + ws + Dn + gl + "]"), yf = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, dO = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], Qf = -1, Ut = {};
      Ut[un] = Ut[vi] = Ut[Bt] = Ut[Ot] = Ut[tt] = Ut[ai] = Ut[ci] = Ut[Qt] = Ut[Ei] = !0, Ut[Ye] = Ut[Ne] = Ut[Ht] = Ut[ue] = Ut[mi] = Ut[H] = Ut[oe] = Ut[$e] = Ut[Ze] = Ut[Ie] = Ut[pt] = Ut[je] = Ut[it] = Ut[he] = Ut[Vt] = !1;
      var qt = {};
      qt[Ye] = qt[Ne] = qt[Ht] = qt[mi] = qt[ue] = qt[H] = qt[un] = qt[vi] = qt[Bt] = qt[Ot] = qt[tt] = qt[Ze] = qt[Ie] = qt[pt] = qt[je] = qt[it] = qt[he] = qt[Gt] = qt[ai] = qt[ci] = qt[Qt] = qt[Ei] = !0, qt[oe] = qt[$e] = qt[Vt] = !1;
      var pO = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, gO = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, T = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, F = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, K = parseFloat, ae = parseInt, Se = typeof Xu == "object" && Xu && Xu.Object === Object && Xu, Ce = typeof self == "object" && self && self.Object === Object && self, de = Se || Ce || Function("return this")(), rt = e && !e.nodeType && e, Me = rt && !0 && i && !i.nodeType && i, Lt = Me && Me.exports === rt, kt = Lt && Se.process, _t = function() {
        try {
          var E = Me && Me.require && Me.require("util").types;
          return E || kt && kt.binding && kt.binding("util");
        } catch {
        }
      }(), wt = _t && _t.isArrayBuffer, ut = _t && _t.isDate, et = _t && _t.isMap, Pt = _t && _t.isRegExp, Yt = _t && _t.isSet, Nr = _t && _t.isTypedArray;
      function wi(E, G, B) {
        switch (B.length) {
          case 0:
            return E.call(G);
          case 1:
            return E.call(G, B[0]);
          case 2:
            return E.call(G, B[0], B[1]);
          case 3:
            return E.call(G, B[0], B[1], B[2]);
        }
        return E.apply(G, B);
      }
      function mO(E, G, B, Te) {
        for (var st = -1, Zt = E == null ? 0 : E.length; ++st < Zt; ) {
          var Pi = E[st];
          G(Te, Pi, B(Pi), E);
        }
        return Te;
      }
      function Fi(E, G) {
        for (var B = -1, Te = E == null ? 0 : E.length; ++B < Te && G(E[B], B, E) !== !1; )
          ;
        return E;
      }
      function Aa(E, G) {
        for (var B = E == null ? 0 : E.length; B-- && G(E[B], B, E) !== !1; )
          ;
        return E;
      }
      function Ql(E, G) {
        for (var B = -1, Te = E == null ? 0 : E.length; ++B < Te; )
          if (!G(E[B], B, E))
            return !1;
        return !0;
      }
      function Tr(E, G) {
        for (var B = -1, Te = E == null ? 0 : E.length, st = 0, Zt = []; ++B < Te; ) {
          var Pi = E[B];
          G(Pi, B, E) && (Zt[st++] = Pi);
        }
        return Zt;
      }
      function wl(E, G) {
        var B = E == null ? 0 : E.length;
        return !!B && Pl(E, G, 0) > -1;
      }
      function vO(E, G, B) {
        for (var Te = -1, st = E == null ? 0 : E.length; ++Te < st; )
          if (B(G, E[Te]))
            return !0;
        return !1;
      }
      function ni(E, G) {
        for (var B = -1, Te = E == null ? 0 : E.length, st = Array(Te); ++B < Te; )
          st[B] = G(E[B], B, E);
        return st;
      }
      function ro(E, G) {
        for (var B = -1, Te = G.length, st = E.length; ++B < Te; )
          E[st + B] = G[B];
        return E;
      }
      function SO(E, G, B, Te) {
        var st = -1, Zt = E == null ? 0 : E.length;
        for (Te && Zt && (B = E[++st]); ++st < Zt; )
          B = G(B, E[st], st, E);
        return B;
      }
      function fP(E, G, B, Te) {
        var st = E == null ? 0 : E.length;
        for (Te && st && (B = E[--st]); st--; )
          B = G(B, E[st], st, E);
        return B;
      }
      function bO(E, G) {
        for (var B = -1, Te = E == null ? 0 : E.length; ++B < Te; )
          if (G(E[B], B, E))
            return !0;
        return !1;
      }
      var uP = $O("length");
      function hP(E) {
        return E.split("");
      }
      function OP(E) {
        return E.match(ir) || [];
      }
      function Qm(E, G, B) {
        var Te;
        return B(E, function(st, Zt, Pi) {
          if (G(st, Zt, Pi))
            return Te = Zt, !1;
        }), Te;
      }
      function wf(E, G, B, Te) {
        for (var st = E.length, Zt = B + (Te ? 1 : -1); Te ? Zt-- : ++Zt < st; )
          if (G(E[Zt], Zt, E))
            return Zt;
        return -1;
      }
      function Pl(E, G, B) {
        return G === G ? PP(E, G, B) : wf(E, wm, B);
      }
      function dP(E, G, B, Te) {
        for (var st = B - 1, Zt = E.length; ++st < Zt; )
          if (Te(E[st], G))
            return st;
        return -1;
      }
      function wm(E) {
        return E !== E;
      }
      function Pm(E, G) {
        var B = E == null ? 0 : E.length;
        return B ? QO(E, G) / B : We;
      }
      function $O(E) {
        return function(G) {
          return G == null ? t : G[E];
        };
      }
      function yO(E) {
        return function(G) {
          return E == null ? t : E[G];
        };
      }
      function xm(E, G, B, Te, st) {
        return st(E, function(Zt, Pi, It) {
          B = Te ? (Te = !1, Zt) : G(B, Zt, Pi, It);
        }), B;
      }
      function pP(E, G) {
        var B = E.length;
        for (E.sort(G); B--; )
          E[B] = E[B].value;
        return E;
      }
      function QO(E, G) {
        for (var B, Te = -1, st = E.length; ++Te < st; ) {
          var Zt = G(E[Te]);
          Zt !== t && (B = B === t ? Zt : B + Zt);
        }
        return B;
      }
      function wO(E, G) {
        for (var B = -1, Te = Array(E); ++B < E; )
          Te[B] = G(B);
        return Te;
      }
      function gP(E, G) {
        return ni(G, function(B) {
          return [B, E[B]];
        });
      }
      function km(E) {
        return E && E.slice(0, Zm(E) + 1).replace(Ln, "");
      }
      function Vn(E) {
        return function(G) {
          return E(G);
        };
      }
      function PO(E, G) {
        return ni(G, function(B) {
          return E[B];
        });
      }
      function Xa(E, G) {
        return E.has(G);
      }
      function _m(E, G) {
        for (var B = -1, Te = E.length; ++B < Te && Pl(G, E[B], 0) > -1; )
          ;
        return B;
      }
      function Wm(E, G) {
        for (var B = E.length; B-- && Pl(G, E[B], 0) > -1; )
          ;
        return B;
      }
      function mP(E, G) {
        for (var B = E.length, Te = 0; B--; )
          E[B] === G && ++Te;
        return Te;
      }
      var vP = yO(pO), SP = yO(gO);
      function bP(E) {
        return "\\" + F[E];
      }
      function $P(E, G) {
        return E == null ? t : E[G];
      }
      function xl(E) {
        return $f.test(E);
      }
      function yP(E) {
        return yf.test(E);
      }
      function QP(E) {
        for (var G, B = []; !(G = E.next()).done; )
          B.push(G.value);
        return B;
      }
      function xO(E) {
        var G = -1, B = Array(E.size);
        return E.forEach(function(Te, st) {
          B[++G] = [st, Te];
        }), B;
      }
      function Tm(E, G) {
        return function(B) {
          return E(G(B));
        };
      }
      function so(E, G) {
        for (var B = -1, Te = E.length, st = 0, Zt = []; ++B < Te; ) {
          var Pi = E[B];
          (Pi === G || Pi === h) && (E[B] = h, Zt[st++] = B);
        }
        return Zt;
      }
      function Pf(E) {
        var G = -1, B = Array(E.size);
        return E.forEach(function(Te) {
          B[++G] = Te;
        }), B;
      }
      function wP(E) {
        var G = -1, B = Array(E.size);
        return E.forEach(function(Te) {
          B[++G] = [Te, Te];
        }), B;
      }
      function PP(E, G, B) {
        for (var Te = B - 1, st = E.length; ++Te < st; )
          if (E[Te] === G)
            return Te;
        return -1;
      }
      function xP(E, G, B) {
        for (var Te = B + 1; Te--; )
          if (E[Te] === G)
            return Te;
        return Te;
      }
      function kl(E) {
        return xl(E) ? _P(E) : uP(E);
      }
      function Zr(E) {
        return xl(E) ? WP(E) : hP(E);
      }
      function Zm(E) {
        for (var G = E.length; G-- && io.test(E.charAt(G)); )
          ;
        return G;
      }
      var kP = yO(T);
      function _P(E) {
        for (var G = Ra.lastIndex = 0; Ra.test(E); )
          ++G;
        return G;
      }
      function WP(E) {
        return E.match(Ra) || [];
      }
      function TP(E) {
        return E.match(bf) || [];
      }
      var ZP = function E(G) {
        G = G == null ? de : _l.defaults(de.Object(), G, _l.pick(de, dO));
        var B = G.Array, Te = G.Date, st = G.Error, Zt = G.Function, Pi = G.Math, It = G.Object, kO = G.RegExp, CP = G.String, nr = G.TypeError, xf = B.prototype, RP = Zt.prototype, Wl = It.prototype, kf = G["__core-js_shared__"], _f = RP.toString, Dt = Wl.hasOwnProperty, AP = 0, Cm = function() {
          var l = /[^.]+$/.exec(kf && kf.keys && kf.keys.IE_PROTO || "");
          return l ? "Symbol(src)_1." + l : "";
        }(), Wf = Wl.toString, XP = _f.call(It), MP = de._, EP = kO(
          "^" + _f.call(Dt).replace(wr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Tf = Lt ? G.Buffer : t, oo = G.Symbol, Zf = G.Uint8Array, Rm = Tf ? Tf.allocUnsafe : t, Cf = Tm(It.getPrototypeOf, It), Am = It.create, Xm = Wl.propertyIsEnumerable, Rf = xf.splice, Mm = oo ? oo.isConcatSpreadable : t, Ma = oo ? oo.iterator : t, Vo = oo ? oo.toStringTag : t, Af = function() {
          try {
            var l = Bo(It, "defineProperty");
            return l({}, "", {}), l;
          } catch {
          }
        }(), qP = G.clearTimeout !== de.clearTimeout && G.clearTimeout, LP = Te && Te.now !== de.Date.now && Te.now, DP = G.setTimeout !== de.setTimeout && G.setTimeout, Xf = Pi.ceil, Mf = Pi.floor, _O = It.getOwnPropertySymbols, VP = Tf ? Tf.isBuffer : t, Em = G.isFinite, UP = xf.join, YP = Tm(It.keys, It), xi = Pi.max, Gi = Pi.min, zP = Te.now, jP = G.parseInt, qm = Pi.random, BP = xf.reverse, WO = Bo(G, "DataView"), Ea = Bo(G, "Map"), TO = Bo(G, "Promise"), Tl = Bo(G, "Set"), qa = Bo(G, "WeakMap"), La = Bo(It, "create"), Ef = qa && new qa(), Zl = {}, IP = Io(WO), NP = Io(Ea), FP = Io(TO), GP = Io(Tl), HP = Io(qa), qf = oo ? oo.prototype : t, Da = qf ? qf.valueOf : t, Lm = qf ? qf.toString : t;
        function Q(l) {
          if (fi(l) && !ot(l) && !(l instanceof vt)) {
            if (l instanceof rr)
              return l;
            if (Dt.call(l, "__wrapped__"))
              return D0(l);
          }
          return new rr(l);
        }
        var Cl = /* @__PURE__ */ function() {
          function l() {
          }
          return function(f) {
            if (!si(f))
              return {};
            if (Am)
              return Am(f);
            l.prototype = f;
            var O = new l();
            return l.prototype = t, O;
          };
        }();
        function Lf() {
        }
        function rr(l, f) {
          this.__wrapped__ = l, this.__actions__ = [], this.__chain__ = !!f, this.__index__ = 0, this.__values__ = t;
        }
        Q.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: Ss,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: bs,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Ii,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: Q
          }
        }, Q.prototype = Lf.prototype, Q.prototype.constructor = Q, rr.prototype = Cl(Lf.prototype), rr.prototype.constructor = rr;
        function vt(l) {
          this.__wrapped__ = l, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = xe, this.__views__ = [];
        }
        function KP() {
          var l = new vt(this.__wrapped__);
          return l.__actions__ = Pn(this.__actions__), l.__dir__ = this.__dir__, l.__filtered__ = this.__filtered__, l.__iteratees__ = Pn(this.__iteratees__), l.__takeCount__ = this.__takeCount__, l.__views__ = Pn(this.__views__), l;
        }
        function JP() {
          if (this.__filtered__) {
            var l = new vt(this);
            l.__dir__ = -1, l.__filtered__ = !0;
          } else
            l = this.clone(), l.__dir__ *= -1;
          return l;
        }
        function ex() {
          var l = this.__wrapped__.value(), f = this.__dir__, O = ot(l), v = f < 0, $ = O ? l.length : 0, P = hk(0, $, this.__views__), Z = P.start, X = P.end, L = X - Z, ee = v ? X : Z - 1, te = this.__iteratees__, le = te.length, Qe = 0, qe = Gi(L, this.__takeCount__);
          if (!O || !v && $ == L && qe == L)
            return c0(l, this.__actions__);
          var Ke = [];
          e:
            for (; L-- && Qe < qe; ) {
              ee += f;
              for (var at = -1, Je = l[ee]; ++at < le; ) {
                var gt = te[at], bt = gt.iteratee, zn = gt.type, gn = bt(Je);
                if (zn == be)
                  Je = gn;
                else if (!gn) {
                  if (zn == se)
                    continue e;
                  break e;
                }
              }
              Ke[Qe++] = Je;
            }
          return Ke;
        }
        vt.prototype = Cl(Lf.prototype), vt.prototype.constructor = vt;
        function Uo(l) {
          var f = -1, O = l == null ? 0 : l.length;
          for (this.clear(); ++f < O; ) {
            var v = l[f];
            this.set(v[0], v[1]);
          }
        }
        function tx() {
          this.__data__ = La ? La(null) : {}, this.size = 0;
        }
        function ix(l) {
          var f = this.has(l) && delete this.__data__[l];
          return this.size -= f ? 1 : 0, f;
        }
        function nx(l) {
          var f = this.__data__;
          if (La) {
            var O = f[l];
            return O === c ? t : O;
          }
          return Dt.call(f, l) ? f[l] : t;
        }
        function rx(l) {
          var f = this.__data__;
          return La ? f[l] !== t : Dt.call(f, l);
        }
        function sx(l, f) {
          var O = this.__data__;
          return this.size += this.has(l) ? 0 : 1, O[l] = La && f === t ? c : f, this;
        }
        Uo.prototype.clear = tx, Uo.prototype.delete = ix, Uo.prototype.get = nx, Uo.prototype.has = rx, Uo.prototype.set = sx;
        function xs(l) {
          var f = -1, O = l == null ? 0 : l.length;
          for (this.clear(); ++f < O; ) {
            var v = l[f];
            this.set(v[0], v[1]);
          }
        }
        function ox() {
          this.__data__ = [], this.size = 0;
        }
        function lx(l) {
          var f = this.__data__, O = Df(f, l);
          if (O < 0)
            return !1;
          var v = f.length - 1;
          return O == v ? f.pop() : Rf.call(f, O, 1), --this.size, !0;
        }
        function ax(l) {
          var f = this.__data__, O = Df(f, l);
          return O < 0 ? t : f[O][1];
        }
        function cx(l) {
          return Df(this.__data__, l) > -1;
        }
        function fx(l, f) {
          var O = this.__data__, v = Df(O, l);
          return v < 0 ? (++this.size, O.push([l, f])) : O[v][1] = f, this;
        }
        xs.prototype.clear = ox, xs.prototype.delete = lx, xs.prototype.get = ax, xs.prototype.has = cx, xs.prototype.set = fx;
        function ks(l) {
          var f = -1, O = l == null ? 0 : l.length;
          for (this.clear(); ++f < O; ) {
            var v = l[f];
            this.set(v[0], v[1]);
          }
        }
        function ux() {
          this.size = 0, this.__data__ = {
            hash: new Uo(),
            map: new (Ea || xs)(),
            string: new Uo()
          };
        }
        function hx(l) {
          var f = Kf(this, l).delete(l);
          return this.size -= f ? 1 : 0, f;
        }
        function Ox(l) {
          return Kf(this, l).get(l);
        }
        function dx(l) {
          return Kf(this, l).has(l);
        }
        function px(l, f) {
          var O = Kf(this, l), v = O.size;
          return O.set(l, f), this.size += O.size == v ? 0 : 1, this;
        }
        ks.prototype.clear = ux, ks.prototype.delete = hx, ks.prototype.get = Ox, ks.prototype.has = dx, ks.prototype.set = px;
        function Yo(l) {
          var f = -1, O = l == null ? 0 : l.length;
          for (this.__data__ = new ks(); ++f < O; )
            this.add(l[f]);
        }
        function gx(l) {
          return this.__data__.set(l, c), this;
        }
        function mx(l) {
          return this.__data__.has(l);
        }
        Yo.prototype.add = Yo.prototype.push = gx, Yo.prototype.has = mx;
        function Cr(l) {
          var f = this.__data__ = new xs(l);
          this.size = f.size;
        }
        function vx() {
          this.__data__ = new xs(), this.size = 0;
        }
        function Sx(l) {
          var f = this.__data__, O = f.delete(l);
          return this.size = f.size, O;
        }
        function bx(l) {
          return this.__data__.get(l);
        }
        function $x(l) {
          return this.__data__.has(l);
        }
        function yx(l, f) {
          var O = this.__data__;
          if (O instanceof xs) {
            var v = O.__data__;
            if (!Ea || v.length < r - 1)
              return v.push([l, f]), this.size = ++O.size, this;
            O = this.__data__ = new ks(v);
          }
          return O.set(l, f), this.size = O.size, this;
        }
        Cr.prototype.clear = vx, Cr.prototype.delete = Sx, Cr.prototype.get = bx, Cr.prototype.has = $x, Cr.prototype.set = yx;
        function Dm(l, f) {
          var O = ot(l), v = !O && No(l), $ = !O && !v && uo(l), P = !O && !v && !$ && Ml(l), Z = O || v || $ || P, X = Z ? wO(l.length, CP) : [], L = X.length;
          for (var ee in l)
            (f || Dt.call(l, ee)) && !(Z && // Safari 9 has enumerable `arguments.length` in strict mode.
            (ee == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            $ && (ee == "offset" || ee == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            P && (ee == "buffer" || ee == "byteLength" || ee == "byteOffset") || // Skip index properties.
            Zs(ee, L))) && X.push(ee);
          return X;
        }
        function Vm(l) {
          var f = l.length;
          return f ? l[VO(0, f - 1)] : t;
        }
        function Qx(l, f) {
          return Jf(Pn(l), zo(f, 0, l.length));
        }
        function wx(l) {
          return Jf(Pn(l));
        }
        function ZO(l, f, O) {
          (O !== t && !Rr(l[f], O) || O === t && !(f in l)) && _s(l, f, O);
        }
        function Va(l, f, O) {
          var v = l[f];
          (!(Dt.call(l, f) && Rr(v, O)) || O === t && !(f in l)) && _s(l, f, O);
        }
        function Df(l, f) {
          for (var O = l.length; O--; )
            if (Rr(l[O][0], f))
              return O;
          return -1;
        }
        function Px(l, f, O, v) {
          return lo(l, function($, P, Z) {
            f(v, $, O($), Z);
          }), v;
        }
        function Um(l, f) {
          return l && Gr(f, Zi(f), l);
        }
        function xx(l, f) {
          return l && Gr(f, kn(f), l);
        }
        function _s(l, f, O) {
          f == "__proto__" && Af ? Af(l, f, {
            configurable: !0,
            enumerable: !0,
            value: O,
            writable: !0
          }) : l[f] = O;
        }
        function CO(l, f) {
          for (var O = -1, v = f.length, $ = B(v), P = l == null; ++O < v; )
            $[O] = P ? t : hd(l, f[O]);
          return $;
        }
        function zo(l, f, O) {
          return l === l && (O !== t && (l = l <= O ? l : O), f !== t && (l = l >= f ? l : f)), l;
        }
        function sr(l, f, O, v, $, P) {
          var Z, X = f & d, L = f & p, ee = f & m;
          if (O && (Z = $ ? O(l, v, $, P) : O(l)), Z !== t)
            return Z;
          if (!si(l))
            return l;
          var te = ot(l);
          if (te) {
            if (Z = dk(l), !X)
              return Pn(l, Z);
          } else {
            var le = Hi(l), Qe = le == $e || le == Ae;
            if (uo(l))
              return h0(l, X);
            if (le == pt || le == Ye || Qe && !$) {
              if (Z = L || Qe ? {} : Z0(l), !X)
                return L ? nk(l, xx(Z, l)) : ik(l, Um(Z, l));
            } else {
              if (!qt[le])
                return $ ? l : {};
              Z = pk(l, le, X);
            }
          }
          P || (P = new Cr());
          var qe = P.get(l);
          if (qe)
            return qe;
          P.set(l, Z), ov(l) ? l.forEach(function(Je) {
            Z.add(sr(Je, f, O, Je, l, P));
          }) : rv(l) && l.forEach(function(Je, gt) {
            Z.set(gt, sr(Je, f, O, gt, l, P));
          });
          var Ke = ee ? L ? KO : HO : L ? kn : Zi, at = te ? t : Ke(l);
          return Fi(at || l, function(Je, gt) {
            at && (gt = Je, Je = l[gt]), Va(Z, gt, sr(Je, f, O, gt, l, P));
          }), Z;
        }
        function kx(l) {
          var f = Zi(l);
          return function(O) {
            return Ym(O, l, f);
          };
        }
        function Ym(l, f, O) {
          var v = O.length;
          if (l == null)
            return !v;
          for (l = It(l); v--; ) {
            var $ = O[v], P = f[$], Z = l[$];
            if (Z === t && !($ in l) || !P(Z))
              return !1;
          }
          return !0;
        }
        function zm(l, f, O) {
          if (typeof l != "function")
            throw new nr(o);
          return Na(function() {
            l.apply(t, O);
          }, f);
        }
        function Ua(l, f, O, v) {
          var $ = -1, P = wl, Z = !0, X = l.length, L = [], ee = f.length;
          if (!X)
            return L;
          O && (f = ni(f, Vn(O))), v ? (P = vO, Z = !1) : f.length >= r && (P = Xa, Z = !1, f = new Yo(f));
          e:
            for (; ++$ < X; ) {
              var te = l[$], le = O == null ? te : O(te);
              if (te = v || te !== 0 ? te : 0, Z && le === le) {
                for (var Qe = ee; Qe--; )
                  if (f[Qe] === le)
                    continue e;
                L.push(te);
              } else P(f, le, v) || L.push(te);
            }
          return L;
        }
        var lo = m0(Fr), jm = m0(AO, !0);
        function _x(l, f) {
          var O = !0;
          return lo(l, function(v, $, P) {
            return O = !!f(v, $, P), O;
          }), O;
        }
        function Vf(l, f, O) {
          for (var v = -1, $ = l.length; ++v < $; ) {
            var P = l[v], Z = f(P);
            if (Z != null && (X === t ? Z === Z && !Yn(Z) : O(Z, X)))
              var X = Z, L = P;
          }
          return L;
        }
        function Wx(l, f, O, v) {
          var $ = l.length;
          for (O = lt(O), O < 0 && (O = -O > $ ? 0 : $ + O), v = v === t || v > $ ? $ : lt(v), v < 0 && (v += $), v = O > v ? 0 : av(v); O < v; )
            l[O++] = f;
          return l;
        }
        function Bm(l, f) {
          var O = [];
          return lo(l, function(v, $, P) {
            f(v, $, P) && O.push(v);
          }), O;
        }
        function Li(l, f, O, v, $) {
          var P = -1, Z = l.length;
          for (O || (O = mk), $ || ($ = []); ++P < Z; ) {
            var X = l[P];
            f > 0 && O(X) ? f > 1 ? Li(X, f - 1, O, v, $) : ro($, X) : v || ($[$.length] = X);
          }
          return $;
        }
        var RO = v0(), Im = v0(!0);
        function Fr(l, f) {
          return l && RO(l, f, Zi);
        }
        function AO(l, f) {
          return l && Im(l, f, Zi);
        }
        function Uf(l, f) {
          return Tr(f, function(O) {
            return Cs(l[O]);
          });
        }
        function jo(l, f) {
          f = co(f, l);
          for (var O = 0, v = f.length; l != null && O < v; )
            l = l[Hr(f[O++])];
          return O && O == v ? l : t;
        }
        function Nm(l, f, O) {
          var v = f(l);
          return ot(l) ? v : ro(v, O(l));
        }
        function dn(l) {
          return l == null ? l === t ? li : yt : Vo && Vo in It(l) ? uk(l) : wk(l);
        }
        function XO(l, f) {
          return l > f;
        }
        function Tx(l, f) {
          return l != null && Dt.call(l, f);
        }
        function Zx(l, f) {
          return l != null && f in It(l);
        }
        function Cx(l, f, O) {
          return l >= Gi(f, O) && l < xi(f, O);
        }
        function MO(l, f, O) {
          for (var v = O ? vO : wl, $ = l[0].length, P = l.length, Z = P, X = B(P), L = 1 / 0, ee = []; Z--; ) {
            var te = l[Z];
            Z && f && (te = ni(te, Vn(f))), L = Gi(te.length, L), X[Z] = !O && (f || $ >= 120 && te.length >= 120) ? new Yo(Z && te) : t;
          }
          te = l[0];
          var le = -1, Qe = X[0];
          e:
            for (; ++le < $ && ee.length < L; ) {
              var qe = te[le], Ke = f ? f(qe) : qe;
              if (qe = O || qe !== 0 ? qe : 0, !(Qe ? Xa(Qe, Ke) : v(ee, Ke, O))) {
                for (Z = P; --Z; ) {
                  var at = X[Z];
                  if (!(at ? Xa(at, Ke) : v(l[Z], Ke, O)))
                    continue e;
                }
                Qe && Qe.push(Ke), ee.push(qe);
              }
            }
          return ee;
        }
        function Rx(l, f, O, v) {
          return Fr(l, function($, P, Z) {
            f(v, O($), P, Z);
          }), v;
        }
        function Ya(l, f, O) {
          f = co(f, l), l = X0(l, f);
          var v = l == null ? l : l[Hr(lr(f))];
          return v == null ? t : wi(v, l, O);
        }
        function Fm(l) {
          return fi(l) && dn(l) == Ye;
        }
        function Ax(l) {
          return fi(l) && dn(l) == Ht;
        }
        function Xx(l) {
          return fi(l) && dn(l) == H;
        }
        function za(l, f, O, v, $) {
          return l === f ? !0 : l == null || f == null || !fi(l) && !fi(f) ? l !== l && f !== f : Mx(l, f, O, v, za, $);
        }
        function Mx(l, f, O, v, $, P) {
          var Z = ot(l), X = ot(f), L = Z ? Ne : Hi(l), ee = X ? Ne : Hi(f);
          L = L == Ye ? pt : L, ee = ee == Ye ? pt : ee;
          var te = L == pt, le = ee == pt, Qe = L == ee;
          if (Qe && uo(l)) {
            if (!uo(f))
              return !1;
            Z = !0, te = !1;
          }
          if (Qe && !te)
            return P || (P = new Cr()), Z || Ml(l) ? _0(l, f, O, v, $, P) : ck(l, f, L, O, v, $, P);
          if (!(O & b)) {
            var qe = te && Dt.call(l, "__wrapped__"), Ke = le && Dt.call(f, "__wrapped__");
            if (qe || Ke) {
              var at = qe ? l.value() : l, Je = Ke ? f.value() : f;
              return P || (P = new Cr()), $(at, Je, O, v, P);
            }
          }
          return Qe ? (P || (P = new Cr()), fk(l, f, O, v, $, P)) : !1;
        }
        function Ex(l) {
          return fi(l) && Hi(l) == Ze;
        }
        function EO(l, f, O, v) {
          var $ = O.length, P = $, Z = !v;
          if (l == null)
            return !P;
          for (l = It(l); $--; ) {
            var X = O[$];
            if (Z && X[2] ? X[1] !== l[X[0]] : !(X[0] in l))
              return !1;
          }
          for (; ++$ < P; ) {
            X = O[$];
            var L = X[0], ee = l[L], te = X[1];
            if (Z && X[2]) {
              if (ee === t && !(L in l))
                return !1;
            } else {
              var le = new Cr();
              if (v)
                var Qe = v(ee, te, L, l, f, le);
              if (!(Qe === t ? za(te, ee, b | y, v, le) : Qe))
                return !1;
            }
          }
          return !0;
        }
        function Gm(l) {
          if (!si(l) || Sk(l))
            return !1;
          var f = Cs(l) ? EP : ys;
          return f.test(Io(l));
        }
        function qx(l) {
          return fi(l) && dn(l) == je;
        }
        function Lx(l) {
          return fi(l) && Hi(l) == it;
        }
        function Dx(l) {
          return fi(l) && su(l.length) && !!Ut[dn(l)];
        }
        function Hm(l) {
          return typeof l == "function" ? l : l == null ? _n : typeof l == "object" ? ot(l) ? e0(l[0], l[1]) : Jm(l) : Sv(l);
        }
        function qO(l) {
          if (!Ia(l))
            return YP(l);
          var f = [];
          for (var O in It(l))
            Dt.call(l, O) && O != "constructor" && f.push(O);
          return f;
        }
        function Vx(l) {
          if (!si(l))
            return Qk(l);
          var f = Ia(l), O = [];
          for (var v in l)
            v == "constructor" && (f || !Dt.call(l, v)) || O.push(v);
          return O;
        }
        function LO(l, f) {
          return l < f;
        }
        function Km(l, f) {
          var O = -1, v = xn(l) ? B(l.length) : [];
          return lo(l, function($, P, Z) {
            v[++O] = f($, P, Z);
          }), v;
        }
        function Jm(l) {
          var f = ed(l);
          return f.length == 1 && f[0][2] ? R0(f[0][0], f[0][1]) : function(O) {
            return O === l || EO(O, l, f);
          };
        }
        function e0(l, f) {
          return id(l) && C0(f) ? R0(Hr(l), f) : function(O) {
            var v = hd(O, l);
            return v === t && v === f ? Od(O, l) : za(f, v, b | y);
          };
        }
        function Yf(l, f, O, v, $) {
          l !== f && RO(f, function(P, Z) {
            if ($ || ($ = new Cr()), si(P))
              Ux(l, f, Z, O, Yf, v, $);
            else {
              var X = v ? v(rd(l, Z), P, Z + "", l, f, $) : t;
              X === t && (X = P), ZO(l, Z, X);
            }
          }, kn);
        }
        function Ux(l, f, O, v, $, P, Z) {
          var X = rd(l, O), L = rd(f, O), ee = Z.get(L);
          if (ee) {
            ZO(l, O, ee);
            return;
          }
          var te = P ? P(X, L, O + "", l, f, Z) : t, le = te === t;
          if (le) {
            var Qe = ot(L), qe = !Qe && uo(L), Ke = !Qe && !qe && Ml(L);
            te = L, Qe || qe || Ke ? ot(X) ? te = X : Oi(X) ? te = Pn(X) : qe ? (le = !1, te = h0(L, !0)) : Ke ? (le = !1, te = O0(L, !0)) : te = [] : Fa(L) || No(L) ? (te = X, No(X) ? te = cv(X) : (!si(X) || Cs(X)) && (te = Z0(L))) : le = !1;
          }
          le && (Z.set(L, te), $(te, L, v, P, Z), Z.delete(L)), ZO(l, O, te);
        }
        function t0(l, f) {
          var O = l.length;
          if (O)
            return f += f < 0 ? O : 0, Zs(f, O) ? l[f] : t;
        }
        function i0(l, f, O) {
          f.length ? f = ni(f, function(P) {
            return ot(P) ? function(Z) {
              return jo(Z, P.length === 1 ? P[0] : P);
            } : P;
          }) : f = [_n];
          var v = -1;
          f = ni(f, Vn(Fe()));
          var $ = Km(l, function(P, Z, X) {
            var L = ni(f, function(ee) {
              return ee(P);
            });
            return { criteria: L, index: ++v, value: P };
          });
          return pP($, function(P, Z) {
            return tk(P, Z, O);
          });
        }
        function Yx(l, f) {
          return n0(l, f, function(O, v) {
            return Od(l, v);
          });
        }
        function n0(l, f, O) {
          for (var v = -1, $ = f.length, P = {}; ++v < $; ) {
            var Z = f[v], X = jo(l, Z);
            O(X, Z) && ja(P, co(Z, l), X);
          }
          return P;
        }
        function zx(l) {
          return function(f) {
            return jo(f, l);
          };
        }
        function DO(l, f, O, v) {
          var $ = v ? dP : Pl, P = -1, Z = f.length, X = l;
          for (l === f && (f = Pn(f)), O && (X = ni(l, Vn(O))); ++P < Z; )
            for (var L = 0, ee = f[P], te = O ? O(ee) : ee; (L = $(X, te, L, v)) > -1; )
              X !== l && Rf.call(X, L, 1), Rf.call(l, L, 1);
          return l;
        }
        function r0(l, f) {
          for (var O = l ? f.length : 0, v = O - 1; O--; ) {
            var $ = f[O];
            if (O == v || $ !== P) {
              var P = $;
              Zs($) ? Rf.call(l, $, 1) : zO(l, $);
            }
          }
          return l;
        }
        function VO(l, f) {
          return l + Mf(qm() * (f - l + 1));
        }
        function jx(l, f, O, v) {
          for (var $ = -1, P = xi(Xf((f - l) / (O || 1)), 0), Z = B(P); P--; )
            Z[v ? P : ++$] = l, l += O;
          return Z;
        }
        function UO(l, f) {
          var O = "";
          if (!l || f < 1 || f > Xe)
            return O;
          do
            f % 2 && (O += l), f = Mf(f / 2), f && (l += l);
          while (f);
          return O;
        }
        function ht(l, f) {
          return sd(A0(l, f, _n), l + "");
        }
        function Bx(l) {
          return Vm(El(l));
        }
        function Ix(l, f) {
          var O = El(l);
          return Jf(O, zo(f, 0, O.length));
        }
        function ja(l, f, O, v) {
          if (!si(l))
            return l;
          f = co(f, l);
          for (var $ = -1, P = f.length, Z = P - 1, X = l; X != null && ++$ < P; ) {
            var L = Hr(f[$]), ee = O;
            if (L === "__proto__" || L === "constructor" || L === "prototype")
              return l;
            if ($ != Z) {
              var te = X[L];
              ee = v ? v(te, L, X) : t, ee === t && (ee = si(te) ? te : Zs(f[$ + 1]) ? [] : {});
            }
            Va(X, L, ee), X = X[L];
          }
          return l;
        }
        var s0 = Ef ? function(l, f) {
          return Ef.set(l, f), l;
        } : _n, Nx = Af ? function(l, f) {
          return Af(l, "toString", {
            configurable: !0,
            enumerable: !1,
            value: pd(f),
            writable: !0
          });
        } : _n;
        function Fx(l) {
          return Jf(El(l));
        }
        function or(l, f, O) {
          var v = -1, $ = l.length;
          f < 0 && (f = -f > $ ? 0 : $ + f), O = O > $ ? $ : O, O < 0 && (O += $), $ = f > O ? 0 : O - f >>> 0, f >>>= 0;
          for (var P = B($); ++v < $; )
            P[v] = l[v + f];
          return P;
        }
        function Gx(l, f) {
          var O;
          return lo(l, function(v, $, P) {
            return O = f(v, $, P), !O;
          }), !!O;
        }
        function zf(l, f, O) {
          var v = 0, $ = l == null ? v : l.length;
          if (typeof f == "number" && f === f && $ <= Oe) {
            for (; v < $; ) {
              var P = v + $ >>> 1, Z = l[P];
              Z !== null && !Yn(Z) && (O ? Z <= f : Z < f) ? v = P + 1 : $ = P;
            }
            return $;
          }
          return YO(l, f, _n, O);
        }
        function YO(l, f, O, v) {
          var $ = 0, P = l == null ? 0 : l.length;
          if (P === 0)
            return 0;
          f = O(f);
          for (var Z = f !== f, X = f === null, L = Yn(f), ee = f === t; $ < P; ) {
            var te = Mf(($ + P) / 2), le = O(l[te]), Qe = le !== t, qe = le === null, Ke = le === le, at = Yn(le);
            if (Z)
              var Je = v || Ke;
            else ee ? Je = Ke && (v || Qe) : X ? Je = Ke && Qe && (v || !qe) : L ? Je = Ke && Qe && !qe && (v || !at) : qe || at ? Je = !1 : Je = v ? le <= f : le < f;
            Je ? $ = te + 1 : P = te;
          }
          return Gi(P, re);
        }
        function o0(l, f) {
          for (var O = -1, v = l.length, $ = 0, P = []; ++O < v; ) {
            var Z = l[O], X = f ? f(Z) : Z;
            if (!O || !Rr(X, L)) {
              var L = X;
              P[$++] = Z === 0 ? 0 : Z;
            }
          }
          return P;
        }
        function l0(l) {
          return typeof l == "number" ? l : Yn(l) ? We : +l;
        }
        function Un(l) {
          if (typeof l == "string")
            return l;
          if (ot(l))
            return ni(l, Un) + "";
          if (Yn(l))
            return Lm ? Lm.call(l) : "";
          var f = l + "";
          return f == "0" && 1 / l == -1 / 0 ? "-0" : f;
        }
        function ao(l, f, O) {
          var v = -1, $ = wl, P = l.length, Z = !0, X = [], L = X;
          if (O)
            Z = !1, $ = vO;
          else if (P >= r) {
            var ee = f ? null : lk(l);
            if (ee)
              return Pf(ee);
            Z = !1, $ = Xa, L = new Yo();
          } else
            L = f ? [] : X;
          e:
            for (; ++v < P; ) {
              var te = l[v], le = f ? f(te) : te;
              if (te = O || te !== 0 ? te : 0, Z && le === le) {
                for (var Qe = L.length; Qe--; )
                  if (L[Qe] === le)
                    continue e;
                f && L.push(le), X.push(te);
              } else $(L, le, O) || (L !== X && L.push(le), X.push(te));
            }
          return X;
        }
        function zO(l, f) {
          return f = co(f, l), l = X0(l, f), l == null || delete l[Hr(lr(f))];
        }
        function a0(l, f, O, v) {
          return ja(l, f, O(jo(l, f)), v);
        }
        function jf(l, f, O, v) {
          for (var $ = l.length, P = v ? $ : -1; (v ? P-- : ++P < $) && f(l[P], P, l); )
            ;
          return O ? or(l, v ? 0 : P, v ? P + 1 : $) : or(l, v ? P + 1 : 0, v ? $ : P);
        }
        function c0(l, f) {
          var O = l;
          return O instanceof vt && (O = O.value()), SO(f, function(v, $) {
            return $.func.apply($.thisArg, ro([v], $.args));
          }, O);
        }
        function jO(l, f, O) {
          var v = l.length;
          if (v < 2)
            return v ? ao(l[0]) : [];
          for (var $ = -1, P = B(v); ++$ < v; )
            for (var Z = l[$], X = -1; ++X < v; )
              X != $ && (P[$] = Ua(P[$] || Z, l[X], f, O));
          return ao(Li(P, 1), f, O);
        }
        function f0(l, f, O) {
          for (var v = -1, $ = l.length, P = f.length, Z = {}; ++v < $; ) {
            var X = v < P ? f[v] : t;
            O(Z, l[v], X);
          }
          return Z;
        }
        function BO(l) {
          return Oi(l) ? l : [];
        }
        function IO(l) {
          return typeof l == "function" ? l : _n;
        }
        function co(l, f) {
          return ot(l) ? l : id(l, f) ? [l] : L0(Xt(l));
        }
        var Hx = ht;
        function fo(l, f, O) {
          var v = l.length;
          return O = O === t ? v : O, !f && O >= v ? l : or(l, f, O);
        }
        var u0 = qP || function(l) {
          return de.clearTimeout(l);
        };
        function h0(l, f) {
          if (f)
            return l.slice();
          var O = l.length, v = Rm ? Rm(O) : new l.constructor(O);
          return l.copy(v), v;
        }
        function NO(l) {
          var f = new l.constructor(l.byteLength);
          return new Zf(f).set(new Zf(l)), f;
        }
        function Kx(l, f) {
          var O = f ? NO(l.buffer) : l.buffer;
          return new l.constructor(O, l.byteOffset, l.byteLength);
        }
        function Jx(l) {
          var f = new l.constructor(l.source, On.exec(l));
          return f.lastIndex = l.lastIndex, f;
        }
        function ek(l) {
          return Da ? It(Da.call(l)) : {};
        }
        function O0(l, f) {
          var O = f ? NO(l.buffer) : l.buffer;
          return new l.constructor(O, l.byteOffset, l.length);
        }
        function d0(l, f) {
          if (l !== f) {
            var O = l !== t, v = l === null, $ = l === l, P = Yn(l), Z = f !== t, X = f === null, L = f === f, ee = Yn(f);
            if (!X && !ee && !P && l > f || P && Z && L && !X && !ee || v && Z && L || !O && L || !$)
              return 1;
            if (!v && !P && !ee && l < f || ee && O && $ && !v && !P || X && O && $ || !Z && $ || !L)
              return -1;
          }
          return 0;
        }
        function tk(l, f, O) {
          for (var v = -1, $ = l.criteria, P = f.criteria, Z = $.length, X = O.length; ++v < Z; ) {
            var L = d0($[v], P[v]);
            if (L) {
              if (v >= X)
                return L;
              var ee = O[v];
              return L * (ee == "desc" ? -1 : 1);
            }
          }
          return l.index - f.index;
        }
        function p0(l, f, O, v) {
          for (var $ = -1, P = l.length, Z = O.length, X = -1, L = f.length, ee = xi(P - Z, 0), te = B(L + ee), le = !v; ++X < L; )
            te[X] = f[X];
          for (; ++$ < Z; )
            (le || $ < P) && (te[O[$]] = l[$]);
          for (; ee--; )
            te[X++] = l[$++];
          return te;
        }
        function g0(l, f, O, v) {
          for (var $ = -1, P = l.length, Z = -1, X = O.length, L = -1, ee = f.length, te = xi(P - X, 0), le = B(te + ee), Qe = !v; ++$ < te; )
            le[$] = l[$];
          for (var qe = $; ++L < ee; )
            le[qe + L] = f[L];
          for (; ++Z < X; )
            (Qe || $ < P) && (le[qe + O[Z]] = l[$++]);
          return le;
        }
        function Pn(l, f) {
          var O = -1, v = l.length;
          for (f || (f = B(v)); ++O < v; )
            f[O] = l[O];
          return f;
        }
        function Gr(l, f, O, v) {
          var $ = !O;
          O || (O = {});
          for (var P = -1, Z = f.length; ++P < Z; ) {
            var X = f[P], L = v ? v(O[X], l[X], X, O, l) : t;
            L === t && (L = l[X]), $ ? _s(O, X, L) : Va(O, X, L);
          }
          return O;
        }
        function ik(l, f) {
          return Gr(l, td(l), f);
        }
        function nk(l, f) {
          return Gr(l, W0(l), f);
        }
        function Bf(l, f) {
          return function(O, v) {
            var $ = ot(O) ? mO : Px, P = f ? f() : {};
            return $(O, l, Fe(v, 2), P);
          };
        }
        function Rl(l) {
          return ht(function(f, O) {
            var v = -1, $ = O.length, P = $ > 1 ? O[$ - 1] : t, Z = $ > 2 ? O[2] : t;
            for (P = l.length > 3 && typeof P == "function" ? ($--, P) : t, Z && pn(O[0], O[1], Z) && (P = $ < 3 ? t : P, $ = 1), f = It(f); ++v < $; ) {
              var X = O[v];
              X && l(f, X, v, P);
            }
            return f;
          });
        }
        function m0(l, f) {
          return function(O, v) {
            if (O == null)
              return O;
            if (!xn(O))
              return l(O, v);
            for (var $ = O.length, P = f ? $ : -1, Z = It(O); (f ? P-- : ++P < $) && v(Z[P], P, Z) !== !1; )
              ;
            return O;
          };
        }
        function v0(l) {
          return function(f, O, v) {
            for (var $ = -1, P = It(f), Z = v(f), X = Z.length; X--; ) {
              var L = Z[l ? X : ++$];
              if (O(P[L], L, P) === !1)
                break;
            }
            return f;
          };
        }
        function rk(l, f, O) {
          var v = f & w, $ = Ba(l);
          function P() {
            var Z = this && this !== de && this instanceof P ? $ : l;
            return Z.apply(v ? O : this, arguments);
          }
          return P;
        }
        function S0(l) {
          return function(f) {
            f = Xt(f);
            var O = xl(f) ? Zr(f) : t, v = O ? O[0] : f.charAt(0), $ = O ? fo(O, 1).join("") : f.slice(1);
            return v[l]() + $;
          };
        }
        function Al(l) {
          return function(f) {
            return SO(mv(gv(f).replace(Ca, "")), l, "");
          };
        }
        function Ba(l) {
          return function() {
            var f = arguments;
            switch (f.length) {
              case 0:
                return new l();
              case 1:
                return new l(f[0]);
              case 2:
                return new l(f[0], f[1]);
              case 3:
                return new l(f[0], f[1], f[2]);
              case 4:
                return new l(f[0], f[1], f[2], f[3]);
              case 5:
                return new l(f[0], f[1], f[2], f[3], f[4]);
              case 6:
                return new l(f[0], f[1], f[2], f[3], f[4], f[5]);
              case 7:
                return new l(f[0], f[1], f[2], f[3], f[4], f[5], f[6]);
            }
            var O = Cl(l.prototype), v = l.apply(O, f);
            return si(v) ? v : O;
          };
        }
        function sk(l, f, O) {
          var v = Ba(l);
          function $() {
            for (var P = arguments.length, Z = B(P), X = P, L = Xl($); X--; )
              Z[X] = arguments[X];
            var ee = P < 3 && Z[0] !== L && Z[P - 1] !== L ? [] : so(Z, L);
            if (P -= ee.length, P < O)
              return w0(
                l,
                f,
                If,
                $.placeholder,
                t,
                Z,
                ee,
                t,
                t,
                O - P
              );
            var te = this && this !== de && this instanceof $ ? v : l;
            return wi(te, this, Z);
          }
          return $;
        }
        function b0(l) {
          return function(f, O, v) {
            var $ = It(f);
            if (!xn(f)) {
              var P = Fe(O, 3);
              f = Zi(f), O = function(X) {
                return P($[X], X, $);
              };
            }
            var Z = l(f, O, v);
            return Z > -1 ? $[P ? f[Z] : Z] : t;
          };
        }
        function $0(l) {
          return Ts(function(f) {
            var O = f.length, v = O, $ = rr.prototype.thru;
            for (l && f.reverse(); v--; ) {
              var P = f[v];
              if (typeof P != "function")
                throw new nr(o);
              if ($ && !Z && Hf(P) == "wrapper")
                var Z = new rr([], !0);
            }
            for (v = Z ? v : O; ++v < O; ) {
              P = f[v];
              var X = Hf(P), L = X == "wrapper" ? JO(P) : t;
              L && nd(L[0]) && L[1] == (q | x | W | V) && !L[4].length && L[9] == 1 ? Z = Z[Hf(L[0])].apply(Z, L[3]) : Z = P.length == 1 && nd(P) ? Z[X]() : Z.thru(P);
            }
            return function() {
              var ee = arguments, te = ee[0];
              if (Z && ee.length == 1 && ot(te))
                return Z.plant(te).value();
              for (var le = 0, Qe = O ? f[le].apply(this, ee) : te; ++le < O; )
                Qe = f[le].call(this, Qe);
              return Qe;
            };
          });
        }
        function If(l, f, O, v, $, P, Z, X, L, ee) {
          var te = f & q, le = f & w, Qe = f & k, qe = f & (x | _), Ke = f & U, at = Qe ? t : Ba(l);
          function Je() {
            for (var gt = arguments.length, bt = B(gt), zn = gt; zn--; )
              bt[zn] = arguments[zn];
            if (qe)
              var gn = Xl(Je), jn = mP(bt, gn);
            if (v && (bt = p0(bt, v, $, qe)), P && (bt = g0(bt, P, Z, qe)), gt -= jn, qe && gt < ee) {
              var di = so(bt, gn);
              return w0(
                l,
                f,
                If,
                Je.placeholder,
                O,
                bt,
                di,
                X,
                L,
                ee - gt
              );
            }
            var Ar = le ? O : this, As = Qe ? Ar[l] : l;
            return gt = bt.length, X ? bt = Pk(bt, X) : Ke && gt > 1 && bt.reverse(), te && L < gt && (bt.length = L), this && this !== de && this instanceof Je && (As = at || Ba(As)), As.apply(Ar, bt);
          }
          return Je;
        }
        function y0(l, f) {
          return function(O, v) {
            return Rx(O, l, f(v), {});
          };
        }
        function Nf(l, f) {
          return function(O, v) {
            var $;
            if (O === t && v === t)
              return f;
            if (O !== t && ($ = O), v !== t) {
              if ($ === t)
                return v;
              typeof O == "string" || typeof v == "string" ? (O = Un(O), v = Un(v)) : (O = l0(O), v = l0(v)), $ = l(O, v);
            }
            return $;
          };
        }
        function FO(l) {
          return Ts(function(f) {
            return f = ni(f, Vn(Fe())), ht(function(O) {
              var v = this;
              return l(f, function($) {
                return wi($, v, O);
              });
            });
          });
        }
        function Ff(l, f) {
          f = f === t ? " " : Un(f);
          var O = f.length;
          if (O < 2)
            return O ? UO(f, l) : f;
          var v = UO(f, Xf(l / kl(f)));
          return xl(f) ? fo(Zr(v), 0, l).join("") : v.slice(0, l);
        }
        function ok(l, f, O, v) {
          var $ = f & w, P = Ba(l);
          function Z() {
            for (var X = -1, L = arguments.length, ee = -1, te = v.length, le = B(te + L), Qe = this && this !== de && this instanceof Z ? P : l; ++ee < te; )
              le[ee] = v[ee];
            for (; L--; )
              le[ee++] = arguments[++X];
            return wi(Qe, $ ? O : this, le);
          }
          return Z;
        }
        function Q0(l) {
          return function(f, O, v) {
            return v && typeof v != "number" && pn(f, O, v) && (O = v = t), f = Rs(f), O === t ? (O = f, f = 0) : O = Rs(O), v = v === t ? f < O ? 1 : -1 : Rs(v), jx(f, O, v, l);
          };
        }
        function Gf(l) {
          return function(f, O) {
            return typeof f == "string" && typeof O == "string" || (f = ar(f), O = ar(O)), l(f, O);
          };
        }
        function w0(l, f, O, v, $, P, Z, X, L, ee) {
          var te = f & x, le = te ? Z : t, Qe = te ? t : Z, qe = te ? P : t, Ke = te ? t : P;
          f |= te ? W : D, f &= ~(te ? D : W), f & A || (f &= -4);
          var at = [
            l,
            f,
            $,
            qe,
            le,
            Ke,
            Qe,
            X,
            L,
            ee
          ], Je = O.apply(t, at);
          return nd(l) && M0(Je, at), Je.placeholder = v, E0(Je, l, f);
        }
        function GO(l) {
          var f = Pi[l];
          return function(O, v) {
            if (O = ar(O), v = v == null ? 0 : Gi(lt(v), 292), v && Em(O)) {
              var $ = (Xt(O) + "e").split("e"), P = f($[0] + "e" + (+$[1] + v));
              return $ = (Xt(P) + "e").split("e"), +($[0] + "e" + (+$[1] - v));
            }
            return f(O);
          };
        }
        var lk = Tl && 1 / Pf(new Tl([, -0]))[1] == Ve ? function(l) {
          return new Tl(l);
        } : vd;
        function P0(l) {
          return function(f) {
            var O = Hi(f);
            return O == Ze ? xO(f) : O == it ? wP(f) : gP(f, l(f));
          };
        }
        function Ws(l, f, O, v, $, P, Z, X) {
          var L = f & k;
          if (!L && typeof l != "function")
            throw new nr(o);
          var ee = v ? v.length : 0;
          if (ee || (f &= -97, v = $ = t), Z = Z === t ? Z : xi(lt(Z), 0), X = X === t ? X : lt(X), ee -= $ ? $.length : 0, f & D) {
            var te = v, le = $;
            v = $ = t;
          }
          var Qe = L ? t : JO(l), qe = [
            l,
            f,
            O,
            v,
            $,
            te,
            le,
            P,
            Z,
            X
          ];
          if (Qe && yk(qe, Qe), l = qe[0], f = qe[1], O = qe[2], v = qe[3], $ = qe[4], X = qe[9] = qe[9] === t ? L ? 0 : l.length : xi(qe[9] - ee, 0), !X && f & (x | _) && (f &= -25), !f || f == w)
            var Ke = rk(l, f, O);
          else f == x || f == _ ? Ke = sk(l, f, X) : (f == W || f == (w | W)) && !$.length ? Ke = ok(l, f, O, v) : Ke = If.apply(t, qe);
          var at = Qe ? s0 : M0;
          return E0(at(Ke, qe), l, f);
        }
        function x0(l, f, O, v) {
          return l === t || Rr(l, Wl[O]) && !Dt.call(v, O) ? f : l;
        }
        function k0(l, f, O, v, $, P) {
          return si(l) && si(f) && (P.set(f, l), Yf(l, f, t, k0, P), P.delete(f)), l;
        }
        function ak(l) {
          return Fa(l) ? t : l;
        }
        function _0(l, f, O, v, $, P) {
          var Z = O & b, X = l.length, L = f.length;
          if (X != L && !(Z && L > X))
            return !1;
          var ee = P.get(l), te = P.get(f);
          if (ee && te)
            return ee == f && te == l;
          var le = -1, Qe = !0, qe = O & y ? new Yo() : t;
          for (P.set(l, f), P.set(f, l); ++le < X; ) {
            var Ke = l[le], at = f[le];
            if (v)
              var Je = Z ? v(at, Ke, le, f, l, P) : v(Ke, at, le, l, f, P);
            if (Je !== t) {
              if (Je)
                continue;
              Qe = !1;
              break;
            }
            if (qe) {
              if (!bO(f, function(gt, bt) {
                if (!Xa(qe, bt) && (Ke === gt || $(Ke, gt, O, v, P)))
                  return qe.push(bt);
              })) {
                Qe = !1;
                break;
              }
            } else if (!(Ke === at || $(Ke, at, O, v, P))) {
              Qe = !1;
              break;
            }
          }
          return P.delete(l), P.delete(f), Qe;
        }
        function ck(l, f, O, v, $, P, Z) {
          switch (O) {
            case mi:
              if (l.byteLength != f.byteLength || l.byteOffset != f.byteOffset)
                return !1;
              l = l.buffer, f = f.buffer;
            case Ht:
              return !(l.byteLength != f.byteLength || !P(new Zf(l), new Zf(f)));
            case ue:
            case H:
            case Ie:
              return Rr(+l, +f);
            case oe:
              return l.name == f.name && l.message == f.message;
            case je:
            case he:
              return l == f + "";
            case Ze:
              var X = xO;
            case it:
              var L = v & b;
              if (X || (X = Pf), l.size != f.size && !L)
                return !1;
              var ee = Z.get(l);
              if (ee)
                return ee == f;
              v |= y, Z.set(l, f);
              var te = _0(X(l), X(f), v, $, P, Z);
              return Z.delete(l), te;
            case Gt:
              if (Da)
                return Da.call(l) == Da.call(f);
          }
          return !1;
        }
        function fk(l, f, O, v, $, P) {
          var Z = O & b, X = HO(l), L = X.length, ee = HO(f), te = ee.length;
          if (L != te && !Z)
            return !1;
          for (var le = L; le--; ) {
            var Qe = X[le];
            if (!(Z ? Qe in f : Dt.call(f, Qe)))
              return !1;
          }
          var qe = P.get(l), Ke = P.get(f);
          if (qe && Ke)
            return qe == f && Ke == l;
          var at = !0;
          P.set(l, f), P.set(f, l);
          for (var Je = Z; ++le < L; ) {
            Qe = X[le];
            var gt = l[Qe], bt = f[Qe];
            if (v)
              var zn = Z ? v(bt, gt, Qe, f, l, P) : v(gt, bt, Qe, l, f, P);
            if (!(zn === t ? gt === bt || $(gt, bt, O, v, P) : zn)) {
              at = !1;
              break;
            }
            Je || (Je = Qe == "constructor");
          }
          if (at && !Je) {
            var gn = l.constructor, jn = f.constructor;
            gn != jn && "constructor" in l && "constructor" in f && !(typeof gn == "function" && gn instanceof gn && typeof jn == "function" && jn instanceof jn) && (at = !1);
          }
          return P.delete(l), P.delete(f), at;
        }
        function Ts(l) {
          return sd(A0(l, t, Y0), l + "");
        }
        function HO(l) {
          return Nm(l, Zi, td);
        }
        function KO(l) {
          return Nm(l, kn, W0);
        }
        var JO = Ef ? function(l) {
          return Ef.get(l);
        } : vd;
        function Hf(l) {
          for (var f = l.name + "", O = Zl[f], v = Dt.call(Zl, f) ? O.length : 0; v--; ) {
            var $ = O[v], P = $.func;
            if (P == null || P == l)
              return $.name;
          }
          return f;
        }
        function Xl(l) {
          var f = Dt.call(Q, "placeholder") ? Q : l;
          return f.placeholder;
        }
        function Fe() {
          var l = Q.iteratee || gd;
          return l = l === gd ? Hm : l, arguments.length ? l(arguments[0], arguments[1]) : l;
        }
        function Kf(l, f) {
          var O = l.__data__;
          return vk(f) ? O[typeof f == "string" ? "string" : "hash"] : O.map;
        }
        function ed(l) {
          for (var f = Zi(l), O = f.length; O--; ) {
            var v = f[O], $ = l[v];
            f[O] = [v, $, C0($)];
          }
          return f;
        }
        function Bo(l, f) {
          var O = $P(l, f);
          return Gm(O) ? O : t;
        }
        function uk(l) {
          var f = Dt.call(l, Vo), O = l[Vo];
          try {
            l[Vo] = t;
            var v = !0;
          } catch {
          }
          var $ = Wf.call(l);
          return v && (f ? l[Vo] = O : delete l[Vo]), $;
        }
        var td = _O ? function(l) {
          return l == null ? [] : (l = It(l), Tr(_O(l), function(f) {
            return Xm.call(l, f);
          }));
        } : Sd, W0 = _O ? function(l) {
          for (var f = []; l; )
            ro(f, td(l)), l = Cf(l);
          return f;
        } : Sd, Hi = dn;
        (WO && Hi(new WO(new ArrayBuffer(1))) != mi || Ea && Hi(new Ea()) != Ze || TO && Hi(TO.resolve()) != Bi || Tl && Hi(new Tl()) != it || qa && Hi(new qa()) != Vt) && (Hi = function(l) {
          var f = dn(l), O = f == pt ? l.constructor : t, v = O ? Io(O) : "";
          if (v)
            switch (v) {
              case IP:
                return mi;
              case NP:
                return Ze;
              case FP:
                return Bi;
              case GP:
                return it;
              case HP:
                return Vt;
            }
          return f;
        });
        function hk(l, f, O) {
          for (var v = -1, $ = O.length; ++v < $; ) {
            var P = O[v], Z = P.size;
            switch (P.type) {
              case "drop":
                l += Z;
                break;
              case "dropRight":
                f -= Z;
                break;
              case "take":
                f = Gi(f, l + Z);
                break;
              case "takeRight":
                l = xi(l, f - Z);
                break;
            }
          }
          return { start: l, end: f };
        }
        function Ok(l) {
          var f = l.match(Et);
          return f ? f[1].split(Qn) : [];
        }
        function T0(l, f, O) {
          f = co(f, l);
          for (var v = -1, $ = f.length, P = !1; ++v < $; ) {
            var Z = Hr(f[v]);
            if (!(P = l != null && O(l, Z)))
              break;
            l = l[Z];
          }
          return P || ++v != $ ? P : ($ = l == null ? 0 : l.length, !!$ && su($) && Zs(Z, $) && (ot(l) || No(l)));
        }
        function dk(l) {
          var f = l.length, O = new l.constructor(f);
          return f && typeof l[0] == "string" && Dt.call(l, "index") && (O.index = l.index, O.input = l.input), O;
        }
        function Z0(l) {
          return typeof l.constructor == "function" && !Ia(l) ? Cl(Cf(l)) : {};
        }
        function pk(l, f, O) {
          var v = l.constructor;
          switch (f) {
            case Ht:
              return NO(l);
            case ue:
            case H:
              return new v(+l);
            case mi:
              return Kx(l, O);
            case un:
            case vi:
            case Bt:
            case Ot:
            case tt:
            case ai:
            case ci:
            case Qt:
            case Ei:
              return O0(l, O);
            case Ze:
              return new v();
            case Ie:
            case he:
              return new v(l);
            case je:
              return Jx(l);
            case it:
              return new v();
            case Gt:
              return ek(l);
          }
        }
        function gk(l, f) {
          var O = f.length;
          if (!O)
            return l;
          var v = O - 1;
          return f[v] = (O > 1 ? "& " : "") + f[v], f = f.join(O > 2 ? ", " : " "), l.replace(Pr, `{
/* [wrapped with ` + f + `] */
`);
        }
        function mk(l) {
          return ot(l) || No(l) || !!(Mm && l && l[Mm]);
        }
        function Zs(l, f) {
          var O = typeof l;
          return f = f ?? Xe, !!f && (O == "number" || O != "symbol" && Qs.test(l)) && l > -1 && l % 1 == 0 && l < f;
        }
        function pn(l, f, O) {
          if (!si(O))
            return !1;
          var v = typeof f;
          return (v == "number" ? xn(O) && Zs(f, O.length) : v == "string" && f in O) ? Rr(O[f], l) : !1;
        }
        function id(l, f) {
          if (ot(l))
            return !1;
          var O = typeof l;
          return O == "number" || O == "symbol" || O == "boolean" || l == null || Yn(l) ? !0 : tr.test(l) || !er.test(l) || f != null && l in It(f);
        }
        function vk(l) {
          var f = typeof l;
          return f == "string" || f == "number" || f == "symbol" || f == "boolean" ? l !== "__proto__" : l === null;
        }
        function nd(l) {
          var f = Hf(l), O = Q[f];
          if (typeof O != "function" || !(f in vt.prototype))
            return !1;
          if (l === O)
            return !0;
          var v = JO(O);
          return !!v && l === v[0];
        }
        function Sk(l) {
          return !!Cm && Cm in l;
        }
        var bk = kf ? Cs : bd;
        function Ia(l) {
          var f = l && l.constructor, O = typeof f == "function" && f.prototype || Wl;
          return l === O;
        }
        function C0(l) {
          return l === l && !si(l);
        }
        function R0(l, f) {
          return function(O) {
            return O == null ? !1 : O[l] === f && (f !== t || l in It(O));
          };
        }
        function $k(l) {
          var f = nu(l, function(v) {
            return O.size === u && O.clear(), v;
          }), O = f.cache;
          return f;
        }
        function yk(l, f) {
          var O = l[1], v = f[1], $ = O | v, P = $ < (w | k | q), Z = v == q && O == x || v == q && O == V && l[7].length <= f[8] || v == (q | V) && f[7].length <= f[8] && O == x;
          if (!(P || Z))
            return l;
          v & w && (l[2] = f[2], $ |= O & w ? 0 : A);
          var X = f[3];
          if (X) {
            var L = l[3];
            l[3] = L ? p0(L, X, f[4]) : X, l[4] = L ? so(l[3], h) : f[4];
          }
          return X = f[5], X && (L = l[5], l[5] = L ? g0(L, X, f[6]) : X, l[6] = L ? so(l[5], h) : f[6]), X = f[7], X && (l[7] = X), v & q && (l[8] = l[8] == null ? f[8] : Gi(l[8], f[8])), l[9] == null && (l[9] = f[9]), l[0] = f[0], l[1] = $, l;
        }
        function Qk(l) {
          var f = [];
          if (l != null)
            for (var O in It(l))
              f.push(O);
          return f;
        }
        function wk(l) {
          return Wf.call(l);
        }
        function A0(l, f, O) {
          return f = xi(f === t ? l.length - 1 : f, 0), function() {
            for (var v = arguments, $ = -1, P = xi(v.length - f, 0), Z = B(P); ++$ < P; )
              Z[$] = v[f + $];
            $ = -1;
            for (var X = B(f + 1); ++$ < f; )
              X[$] = v[$];
            return X[f] = O(Z), wi(l, this, X);
          };
        }
        function X0(l, f) {
          return f.length < 2 ? l : jo(l, or(f, 0, -1));
        }
        function Pk(l, f) {
          for (var O = l.length, v = Gi(f.length, O), $ = Pn(l); v--; ) {
            var P = f[v];
            l[v] = Zs(P, O) ? $[P] : t;
          }
          return l;
        }
        function rd(l, f) {
          if (!(f === "constructor" && typeof l[f] == "function") && f != "__proto__")
            return l[f];
        }
        var M0 = q0(s0), Na = DP || function(l, f) {
          return de.setTimeout(l, f);
        }, sd = q0(Nx);
        function E0(l, f, O) {
          var v = f + "";
          return sd(l, gk(v, xk(Ok(v), O)));
        }
        function q0(l) {
          var f = 0, O = 0;
          return function() {
            var v = zP(), $ = Y - (v - O);
            if (O = v, $ > 0) {
              if (++f >= I)
                return arguments[0];
            } else
              f = 0;
            return l.apply(t, arguments);
          };
        }
        function Jf(l, f) {
          var O = -1, v = l.length, $ = v - 1;
          for (f = f === t ? v : f; ++O < f; ) {
            var P = VO(O, $), Z = l[P];
            l[P] = l[O], l[O] = Z;
          }
          return l.length = f, l;
        }
        var L0 = $k(function(l) {
          var f = [];
          return l.charCodeAt(0) === 46 && f.push(""), l.replace(to, function(O, v, $, P) {
            f.push($ ? P.replace($s, "$1") : v || O);
          }), f;
        });
        function Hr(l) {
          if (typeof l == "string" || Yn(l))
            return l;
          var f = l + "";
          return f == "0" && 1 / l == -1 / 0 ? "-0" : f;
        }
        function Io(l) {
          if (l != null) {
            try {
              return _f.call(l);
            } catch {
            }
            try {
              return l + "";
            } catch {
            }
          }
          return "";
        }
        function xk(l, f) {
          return Fi(Re, function(O) {
            var v = "_." + O[0];
            f & O[1] && !wl(l, v) && l.push(v);
          }), l.sort();
        }
        function D0(l) {
          if (l instanceof vt)
            return l.clone();
          var f = new rr(l.__wrapped__, l.__chain__);
          return f.__actions__ = Pn(l.__actions__), f.__index__ = l.__index__, f.__values__ = l.__values__, f;
        }
        function kk(l, f, O) {
          (O ? pn(l, f, O) : f === t) ? f = 1 : f = xi(lt(f), 0);
          var v = l == null ? 0 : l.length;
          if (!v || f < 1)
            return [];
          for (var $ = 0, P = 0, Z = B(Xf(v / f)); $ < v; )
            Z[P++] = or(l, $, $ += f);
          return Z;
        }
        function _k(l) {
          for (var f = -1, O = l == null ? 0 : l.length, v = 0, $ = []; ++f < O; ) {
            var P = l[f];
            P && ($[v++] = P);
          }
          return $;
        }
        function Wk() {
          var l = arguments.length;
          if (!l)
            return [];
          for (var f = B(l - 1), O = arguments[0], v = l; v--; )
            f[v - 1] = arguments[v];
          return ro(ot(O) ? Pn(O) : [O], Li(f, 1));
        }
        var Tk = ht(function(l, f) {
          return Oi(l) ? Ua(l, Li(f, 1, Oi, !0)) : [];
        }), Zk = ht(function(l, f) {
          var O = lr(f);
          return Oi(O) && (O = t), Oi(l) ? Ua(l, Li(f, 1, Oi, !0), Fe(O, 2)) : [];
        }), Ck = ht(function(l, f) {
          var O = lr(f);
          return Oi(O) && (O = t), Oi(l) ? Ua(l, Li(f, 1, Oi, !0), t, O) : [];
        });
        function Rk(l, f, O) {
          var v = l == null ? 0 : l.length;
          return v ? (f = O || f === t ? 1 : lt(f), or(l, f < 0 ? 0 : f, v)) : [];
        }
        function Ak(l, f, O) {
          var v = l == null ? 0 : l.length;
          return v ? (f = O || f === t ? 1 : lt(f), f = v - f, or(l, 0, f < 0 ? 0 : f)) : [];
        }
        function Xk(l, f) {
          return l && l.length ? jf(l, Fe(f, 3), !0, !0) : [];
        }
        function Mk(l, f) {
          return l && l.length ? jf(l, Fe(f, 3), !0) : [];
        }
        function Ek(l, f, O, v) {
          var $ = l == null ? 0 : l.length;
          return $ ? (O && typeof O != "number" && pn(l, f, O) && (O = 0, v = $), Wx(l, f, O, v)) : [];
        }
        function V0(l, f, O) {
          var v = l == null ? 0 : l.length;
          if (!v)
            return -1;
          var $ = O == null ? 0 : lt(O);
          return $ < 0 && ($ = xi(v + $, 0)), wf(l, Fe(f, 3), $);
        }
        function U0(l, f, O) {
          var v = l == null ? 0 : l.length;
          if (!v)
            return -1;
          var $ = v - 1;
          return O !== t && ($ = lt(O), $ = O < 0 ? xi(v + $, 0) : Gi($, v - 1)), wf(l, Fe(f, 3), $, !0);
        }
        function Y0(l) {
          var f = l == null ? 0 : l.length;
          return f ? Li(l, 1) : [];
        }
        function qk(l) {
          var f = l == null ? 0 : l.length;
          return f ? Li(l, Ve) : [];
        }
        function Lk(l, f) {
          var O = l == null ? 0 : l.length;
          return O ? (f = f === t ? 1 : lt(f), Li(l, f)) : [];
        }
        function Dk(l) {
          for (var f = -1, O = l == null ? 0 : l.length, v = {}; ++f < O; ) {
            var $ = l[f];
            v[$[0]] = $[1];
          }
          return v;
        }
        function z0(l) {
          return l && l.length ? l[0] : t;
        }
        function Vk(l, f, O) {
          var v = l == null ? 0 : l.length;
          if (!v)
            return -1;
          var $ = O == null ? 0 : lt(O);
          return $ < 0 && ($ = xi(v + $, 0)), Pl(l, f, $);
        }
        function Uk(l) {
          var f = l == null ? 0 : l.length;
          return f ? or(l, 0, -1) : [];
        }
        var Yk = ht(function(l) {
          var f = ni(l, BO);
          return f.length && f[0] === l[0] ? MO(f) : [];
        }), zk = ht(function(l) {
          var f = lr(l), O = ni(l, BO);
          return f === lr(O) ? f = t : O.pop(), O.length && O[0] === l[0] ? MO(O, Fe(f, 2)) : [];
        }), jk = ht(function(l) {
          var f = lr(l), O = ni(l, BO);
          return f = typeof f == "function" ? f : t, f && O.pop(), O.length && O[0] === l[0] ? MO(O, t, f) : [];
        });
        function Bk(l, f) {
          return l == null ? "" : UP.call(l, f);
        }
        function lr(l) {
          var f = l == null ? 0 : l.length;
          return f ? l[f - 1] : t;
        }
        function Ik(l, f, O) {
          var v = l == null ? 0 : l.length;
          if (!v)
            return -1;
          var $ = v;
          return O !== t && ($ = lt(O), $ = $ < 0 ? xi(v + $, 0) : Gi($, v - 1)), f === f ? xP(l, f, $) : wf(l, wm, $, !0);
        }
        function Nk(l, f) {
          return l && l.length ? t0(l, lt(f)) : t;
        }
        var Fk = ht(j0);
        function j0(l, f) {
          return l && l.length && f && f.length ? DO(l, f) : l;
        }
        function Gk(l, f, O) {
          return l && l.length && f && f.length ? DO(l, f, Fe(O, 2)) : l;
        }
        function Hk(l, f, O) {
          return l && l.length && f && f.length ? DO(l, f, t, O) : l;
        }
        var Kk = Ts(function(l, f) {
          var O = l == null ? 0 : l.length, v = CO(l, f);
          return r0(l, ni(f, function($) {
            return Zs($, O) ? +$ : $;
          }).sort(d0)), v;
        });
        function Jk(l, f) {
          var O = [];
          if (!(l && l.length))
            return O;
          var v = -1, $ = [], P = l.length;
          for (f = Fe(f, 3); ++v < P; ) {
            var Z = l[v];
            f(Z, v, l) && (O.push(Z), $.push(v));
          }
          return r0(l, $), O;
        }
        function od(l) {
          return l == null ? l : BP.call(l);
        }
        function e2(l, f, O) {
          var v = l == null ? 0 : l.length;
          return v ? (O && typeof O != "number" && pn(l, f, O) ? (f = 0, O = v) : (f = f == null ? 0 : lt(f), O = O === t ? v : lt(O)), or(l, f, O)) : [];
        }
        function t2(l, f) {
          return zf(l, f);
        }
        function i2(l, f, O) {
          return YO(l, f, Fe(O, 2));
        }
        function n2(l, f) {
          var O = l == null ? 0 : l.length;
          if (O) {
            var v = zf(l, f);
            if (v < O && Rr(l[v], f))
              return v;
          }
          return -1;
        }
        function r2(l, f) {
          return zf(l, f, !0);
        }
        function s2(l, f, O) {
          return YO(l, f, Fe(O, 2), !0);
        }
        function o2(l, f) {
          var O = l == null ? 0 : l.length;
          if (O) {
            var v = zf(l, f, !0) - 1;
            if (Rr(l[v], f))
              return v;
          }
          return -1;
        }
        function l2(l) {
          return l && l.length ? o0(l) : [];
        }
        function a2(l, f) {
          return l && l.length ? o0(l, Fe(f, 2)) : [];
        }
        function c2(l) {
          var f = l == null ? 0 : l.length;
          return f ? or(l, 1, f) : [];
        }
        function f2(l, f, O) {
          return l && l.length ? (f = O || f === t ? 1 : lt(f), or(l, 0, f < 0 ? 0 : f)) : [];
        }
        function u2(l, f, O) {
          var v = l == null ? 0 : l.length;
          return v ? (f = O || f === t ? 1 : lt(f), f = v - f, or(l, f < 0 ? 0 : f, v)) : [];
        }
        function h2(l, f) {
          return l && l.length ? jf(l, Fe(f, 3), !1, !0) : [];
        }
        function O2(l, f) {
          return l && l.length ? jf(l, Fe(f, 3)) : [];
        }
        var d2 = ht(function(l) {
          return ao(Li(l, 1, Oi, !0));
        }), p2 = ht(function(l) {
          var f = lr(l);
          return Oi(f) && (f = t), ao(Li(l, 1, Oi, !0), Fe(f, 2));
        }), g2 = ht(function(l) {
          var f = lr(l);
          return f = typeof f == "function" ? f : t, ao(Li(l, 1, Oi, !0), t, f);
        });
        function m2(l) {
          return l && l.length ? ao(l) : [];
        }
        function v2(l, f) {
          return l && l.length ? ao(l, Fe(f, 2)) : [];
        }
        function S2(l, f) {
          return f = typeof f == "function" ? f : t, l && l.length ? ao(l, t, f) : [];
        }
        function ld(l) {
          if (!(l && l.length))
            return [];
          var f = 0;
          return l = Tr(l, function(O) {
            if (Oi(O))
              return f = xi(O.length, f), !0;
          }), wO(f, function(O) {
            return ni(l, $O(O));
          });
        }
        function B0(l, f) {
          if (!(l && l.length))
            return [];
          var O = ld(l);
          return f == null ? O : ni(O, function(v) {
            return wi(f, t, v);
          });
        }
        var b2 = ht(function(l, f) {
          return Oi(l) ? Ua(l, f) : [];
        }), $2 = ht(function(l) {
          return jO(Tr(l, Oi));
        }), y2 = ht(function(l) {
          var f = lr(l);
          return Oi(f) && (f = t), jO(Tr(l, Oi), Fe(f, 2));
        }), Q2 = ht(function(l) {
          var f = lr(l);
          return f = typeof f == "function" ? f : t, jO(Tr(l, Oi), t, f);
        }), w2 = ht(ld);
        function P2(l, f) {
          return f0(l || [], f || [], Va);
        }
        function x2(l, f) {
          return f0(l || [], f || [], ja);
        }
        var k2 = ht(function(l) {
          var f = l.length, O = f > 1 ? l[f - 1] : t;
          return O = typeof O == "function" ? (l.pop(), O) : t, B0(l, O);
        });
        function I0(l) {
          var f = Q(l);
          return f.__chain__ = !0, f;
        }
        function _2(l, f) {
          return f(l), l;
        }
        function eu(l, f) {
          return f(l);
        }
        var W2 = Ts(function(l) {
          var f = l.length, O = f ? l[0] : 0, v = this.__wrapped__, $ = function(P) {
            return CO(P, l);
          };
          return f > 1 || this.__actions__.length || !(v instanceof vt) || !Zs(O) ? this.thru($) : (v = v.slice(O, +O + (f ? 1 : 0)), v.__actions__.push({
            func: eu,
            args: [$],
            thisArg: t
          }), new rr(v, this.__chain__).thru(function(P) {
            return f && !P.length && P.push(t), P;
          }));
        });
        function T2() {
          return I0(this);
        }
        function Z2() {
          return new rr(this.value(), this.__chain__);
        }
        function C2() {
          this.__values__ === t && (this.__values__ = lv(this.value()));
          var l = this.__index__ >= this.__values__.length, f = l ? t : this.__values__[this.__index__++];
          return { done: l, value: f };
        }
        function R2() {
          return this;
        }
        function A2(l) {
          for (var f, O = this; O instanceof Lf; ) {
            var v = D0(O);
            v.__index__ = 0, v.__values__ = t, f ? $.__wrapped__ = v : f = v;
            var $ = v;
            O = O.__wrapped__;
          }
          return $.__wrapped__ = l, f;
        }
        function X2() {
          var l = this.__wrapped__;
          if (l instanceof vt) {
            var f = l;
            return this.__actions__.length && (f = new vt(this)), f = f.reverse(), f.__actions__.push({
              func: eu,
              args: [od],
              thisArg: t
            }), new rr(f, this.__chain__);
          }
          return this.thru(od);
        }
        function M2() {
          return c0(this.__wrapped__, this.__actions__);
        }
        var E2 = Bf(function(l, f, O) {
          Dt.call(l, O) ? ++l[O] : _s(l, O, 1);
        });
        function q2(l, f, O) {
          var v = ot(l) ? Ql : _x;
          return O && pn(l, f, O) && (f = t), v(l, Fe(f, 3));
        }
        function L2(l, f) {
          var O = ot(l) ? Tr : Bm;
          return O(l, Fe(f, 3));
        }
        var D2 = b0(V0), V2 = b0(U0);
        function U2(l, f) {
          return Li(tu(l, f), 1);
        }
        function Y2(l, f) {
          return Li(tu(l, f), Ve);
        }
        function z2(l, f, O) {
          return O = O === t ? 1 : lt(O), Li(tu(l, f), O);
        }
        function N0(l, f) {
          var O = ot(l) ? Fi : lo;
          return O(l, Fe(f, 3));
        }
        function F0(l, f) {
          var O = ot(l) ? Aa : jm;
          return O(l, Fe(f, 3));
        }
        var j2 = Bf(function(l, f, O) {
          Dt.call(l, O) ? l[O].push(f) : _s(l, O, [f]);
        });
        function B2(l, f, O, v) {
          l = xn(l) ? l : El(l), O = O && !v ? lt(O) : 0;
          var $ = l.length;
          return O < 0 && (O = xi($ + O, 0)), ou(l) ? O <= $ && l.indexOf(f, O) > -1 : !!$ && Pl(l, f, O) > -1;
        }
        var I2 = ht(function(l, f, O) {
          var v = -1, $ = typeof f == "function", P = xn(l) ? B(l.length) : [];
          return lo(l, function(Z) {
            P[++v] = $ ? wi(f, Z, O) : Ya(Z, f, O);
          }), P;
        }), N2 = Bf(function(l, f, O) {
          _s(l, O, f);
        });
        function tu(l, f) {
          var O = ot(l) ? ni : Km;
          return O(l, Fe(f, 3));
        }
        function F2(l, f, O, v) {
          return l == null ? [] : (ot(f) || (f = f == null ? [] : [f]), O = v ? t : O, ot(O) || (O = O == null ? [] : [O]), i0(l, f, O));
        }
        var G2 = Bf(function(l, f, O) {
          l[O ? 0 : 1].push(f);
        }, function() {
          return [[], []];
        });
        function H2(l, f, O) {
          var v = ot(l) ? SO : xm, $ = arguments.length < 3;
          return v(l, Fe(f, 4), O, $, lo);
        }
        function K2(l, f, O) {
          var v = ot(l) ? fP : xm, $ = arguments.length < 3;
          return v(l, Fe(f, 4), O, $, jm);
        }
        function J2(l, f) {
          var O = ot(l) ? Tr : Bm;
          return O(l, ru(Fe(f, 3)));
        }
        function e_(l) {
          var f = ot(l) ? Vm : Bx;
          return f(l);
        }
        function t_(l, f, O) {
          (O ? pn(l, f, O) : f === t) ? f = 1 : f = lt(f);
          var v = ot(l) ? Qx : Ix;
          return v(l, f);
        }
        function i_(l) {
          var f = ot(l) ? wx : Fx;
          return f(l);
        }
        function n_(l) {
          if (l == null)
            return 0;
          if (xn(l))
            return ou(l) ? kl(l) : l.length;
          var f = Hi(l);
          return f == Ze || f == it ? l.size : qO(l).length;
        }
        function r_(l, f, O) {
          var v = ot(l) ? bO : Gx;
          return O && pn(l, f, O) && (f = t), v(l, Fe(f, 3));
        }
        var s_ = ht(function(l, f) {
          if (l == null)
            return [];
          var O = f.length;
          return O > 1 && pn(l, f[0], f[1]) ? f = [] : O > 2 && pn(f[0], f[1], f[2]) && (f = [f[0]]), i0(l, Li(f, 1), []);
        }), iu = LP || function() {
          return de.Date.now();
        };
        function o_(l, f) {
          if (typeof f != "function")
            throw new nr(o);
          return l = lt(l), function() {
            if (--l < 1)
              return f.apply(this, arguments);
          };
        }
        function G0(l, f, O) {
          return f = O ? t : f, f = l && f == null ? l.length : f, Ws(l, q, t, t, t, t, f);
        }
        function H0(l, f) {
          var O;
          if (typeof f != "function")
            throw new nr(o);
          return l = lt(l), function() {
            return --l > 0 && (O = f.apply(this, arguments)), l <= 1 && (f = t), O;
          };
        }
        var ad = ht(function(l, f, O) {
          var v = w;
          if (O.length) {
            var $ = so(O, Xl(ad));
            v |= W;
          }
          return Ws(l, v, f, O, $);
        }), K0 = ht(function(l, f, O) {
          var v = w | k;
          if (O.length) {
            var $ = so(O, Xl(K0));
            v |= W;
          }
          return Ws(f, v, l, O, $);
        });
        function J0(l, f, O) {
          f = O ? t : f;
          var v = Ws(l, x, t, t, t, t, t, f);
          return v.placeholder = J0.placeholder, v;
        }
        function ev(l, f, O) {
          f = O ? t : f;
          var v = Ws(l, _, t, t, t, t, t, f);
          return v.placeholder = ev.placeholder, v;
        }
        function tv(l, f, O) {
          var v, $, P, Z, X, L, ee = 0, te = !1, le = !1, Qe = !0;
          if (typeof l != "function")
            throw new nr(o);
          f = ar(f) || 0, si(O) && (te = !!O.leading, le = "maxWait" in O, P = le ? xi(ar(O.maxWait) || 0, f) : P, Qe = "trailing" in O ? !!O.trailing : Qe);
          function qe(di) {
            var Ar = v, As = $;
            return v = $ = t, ee = di, Z = l.apply(As, Ar), Z;
          }
          function Ke(di) {
            return ee = di, X = Na(gt, f), te ? qe(di) : Z;
          }
          function at(di) {
            var Ar = di - L, As = di - ee, bv = f - Ar;
            return le ? Gi(bv, P - As) : bv;
          }
          function Je(di) {
            var Ar = di - L, As = di - ee;
            return L === t || Ar >= f || Ar < 0 || le && As >= P;
          }
          function gt() {
            var di = iu();
            if (Je(di))
              return bt(di);
            X = Na(gt, at(di));
          }
          function bt(di) {
            return X = t, Qe && v ? qe(di) : (v = $ = t, Z);
          }
          function zn() {
            X !== t && u0(X), ee = 0, v = L = $ = X = t;
          }
          function gn() {
            return X === t ? Z : bt(iu());
          }
          function jn() {
            var di = iu(), Ar = Je(di);
            if (v = arguments, $ = this, L = di, Ar) {
              if (X === t)
                return Ke(L);
              if (le)
                return u0(X), X = Na(gt, f), qe(L);
            }
            return X === t && (X = Na(gt, f)), Z;
          }
          return jn.cancel = zn, jn.flush = gn, jn;
        }
        var l_ = ht(function(l, f) {
          return zm(l, 1, f);
        }), a_ = ht(function(l, f, O) {
          return zm(l, ar(f) || 0, O);
        });
        function c_(l) {
          return Ws(l, U);
        }
        function nu(l, f) {
          if (typeof l != "function" || f != null && typeof f != "function")
            throw new nr(o);
          var O = function() {
            var v = arguments, $ = f ? f.apply(this, v) : v[0], P = O.cache;
            if (P.has($))
              return P.get($);
            var Z = l.apply(this, v);
            return O.cache = P.set($, Z) || P, Z;
          };
          return O.cache = new (nu.Cache || ks)(), O;
        }
        nu.Cache = ks;
        function ru(l) {
          if (typeof l != "function")
            throw new nr(o);
          return function() {
            var f = arguments;
            switch (f.length) {
              case 0:
                return !l.call(this);
              case 1:
                return !l.call(this, f[0]);
              case 2:
                return !l.call(this, f[0], f[1]);
              case 3:
                return !l.call(this, f[0], f[1], f[2]);
            }
            return !l.apply(this, f);
          };
        }
        function f_(l) {
          return H0(2, l);
        }
        var u_ = Hx(function(l, f) {
          f = f.length == 1 && ot(f[0]) ? ni(f[0], Vn(Fe())) : ni(Li(f, 1), Vn(Fe()));
          var O = f.length;
          return ht(function(v) {
            for (var $ = -1, P = Gi(v.length, O); ++$ < P; )
              v[$] = f[$].call(this, v[$]);
            return wi(l, this, v);
          });
        }), cd = ht(function(l, f) {
          var O = so(f, Xl(cd));
          return Ws(l, W, t, f, O);
        }), iv = ht(function(l, f) {
          var O = so(f, Xl(iv));
          return Ws(l, D, t, f, O);
        }), h_ = Ts(function(l, f) {
          return Ws(l, V, t, t, t, f);
        });
        function O_(l, f) {
          if (typeof l != "function")
            throw new nr(o);
          return f = f === t ? f : lt(f), ht(l, f);
        }
        function d_(l, f) {
          if (typeof l != "function")
            throw new nr(o);
          return f = f == null ? 0 : xi(lt(f), 0), ht(function(O) {
            var v = O[f], $ = fo(O, 0, f);
            return v && ro($, v), wi(l, this, $);
          });
        }
        function p_(l, f, O) {
          var v = !0, $ = !0;
          if (typeof l != "function")
            throw new nr(o);
          return si(O) && (v = "leading" in O ? !!O.leading : v, $ = "trailing" in O ? !!O.trailing : $), tv(l, f, {
            leading: v,
            maxWait: f,
            trailing: $
          });
        }
        function g_(l) {
          return G0(l, 1);
        }
        function m_(l, f) {
          return cd(IO(f), l);
        }
        function v_() {
          if (!arguments.length)
            return [];
          var l = arguments[0];
          return ot(l) ? l : [l];
        }
        function S_(l) {
          return sr(l, m);
        }
        function b_(l, f) {
          return f = typeof f == "function" ? f : t, sr(l, m, f);
        }
        function $_(l) {
          return sr(l, d | m);
        }
        function y_(l, f) {
          return f = typeof f == "function" ? f : t, sr(l, d | m, f);
        }
        function Q_(l, f) {
          return f == null || Ym(l, f, Zi(f));
        }
        function Rr(l, f) {
          return l === f || l !== l && f !== f;
        }
        var w_ = Gf(XO), P_ = Gf(function(l, f) {
          return l >= f;
        }), No = Fm(/* @__PURE__ */ function() {
          return arguments;
        }()) ? Fm : function(l) {
          return fi(l) && Dt.call(l, "callee") && !Xm.call(l, "callee");
        }, ot = B.isArray, x_ = wt ? Vn(wt) : Ax;
        function xn(l) {
          return l != null && su(l.length) && !Cs(l);
        }
        function Oi(l) {
          return fi(l) && xn(l);
        }
        function k_(l) {
          return l === !0 || l === !1 || fi(l) && dn(l) == ue;
        }
        var uo = VP || bd, __ = ut ? Vn(ut) : Xx;
        function W_(l) {
          return fi(l) && l.nodeType === 1 && !Fa(l);
        }
        function T_(l) {
          if (l == null)
            return !0;
          if (xn(l) && (ot(l) || typeof l == "string" || typeof l.splice == "function" || uo(l) || Ml(l) || No(l)))
            return !l.length;
          var f = Hi(l);
          if (f == Ze || f == it)
            return !l.size;
          if (Ia(l))
            return !qO(l).length;
          for (var O in l)
            if (Dt.call(l, O))
              return !1;
          return !0;
        }
        function Z_(l, f) {
          return za(l, f);
        }
        function C_(l, f, O) {
          O = typeof O == "function" ? O : t;
          var v = O ? O(l, f) : t;
          return v === t ? za(l, f, t, O) : !!v;
        }
        function fd(l) {
          if (!fi(l))
            return !1;
          var f = dn(l);
          return f == oe || f == ce || typeof l.message == "string" && typeof l.name == "string" && !Fa(l);
        }
        function R_(l) {
          return typeof l == "number" && Em(l);
        }
        function Cs(l) {
          if (!si(l))
            return !1;
          var f = dn(l);
          return f == $e || f == Ae || f == He || f == mt;
        }
        function nv(l) {
          return typeof l == "number" && l == lt(l);
        }
        function su(l) {
          return typeof l == "number" && l > -1 && l % 1 == 0 && l <= Xe;
        }
        function si(l) {
          var f = typeof l;
          return l != null && (f == "object" || f == "function");
        }
        function fi(l) {
          return l != null && typeof l == "object";
        }
        var rv = et ? Vn(et) : Ex;
        function A_(l, f) {
          return l === f || EO(l, f, ed(f));
        }
        function X_(l, f, O) {
          return O = typeof O == "function" ? O : t, EO(l, f, ed(f), O);
        }
        function M_(l) {
          return sv(l) && l != +l;
        }
        function E_(l) {
          if (bk(l))
            throw new st(s);
          return Gm(l);
        }
        function q_(l) {
          return l === null;
        }
        function L_(l) {
          return l == null;
        }
        function sv(l) {
          return typeof l == "number" || fi(l) && dn(l) == Ie;
        }
        function Fa(l) {
          if (!fi(l) || dn(l) != pt)
            return !1;
          var f = Cf(l);
          if (f === null)
            return !0;
          var O = Dt.call(f, "constructor") && f.constructor;
          return typeof O == "function" && O instanceof O && _f.call(O) == XP;
        }
        var ud = Pt ? Vn(Pt) : qx;
        function D_(l) {
          return nv(l) && l >= -9007199254740991 && l <= Xe;
        }
        var ov = Yt ? Vn(Yt) : Lx;
        function ou(l) {
          return typeof l == "string" || !ot(l) && fi(l) && dn(l) == he;
        }
        function Yn(l) {
          return typeof l == "symbol" || fi(l) && dn(l) == Gt;
        }
        var Ml = Nr ? Vn(Nr) : Dx;
        function V_(l) {
          return l === t;
        }
        function U_(l) {
          return fi(l) && Hi(l) == Vt;
        }
        function Y_(l) {
          return fi(l) && dn(l) == hi;
        }
        var z_ = Gf(LO), j_ = Gf(function(l, f) {
          return l <= f;
        });
        function lv(l) {
          if (!l)
            return [];
          if (xn(l))
            return ou(l) ? Zr(l) : Pn(l);
          if (Ma && l[Ma])
            return QP(l[Ma]());
          var f = Hi(l), O = f == Ze ? xO : f == it ? Pf : El;
          return O(l);
        }
        function Rs(l) {
          if (!l)
            return l === 0 ? l : 0;
          if (l = ar(l), l === Ve || l === -1 / 0) {
            var f = l < 0 ? -1 : 1;
            return f * Ee;
          }
          return l === l ? l : 0;
        }
        function lt(l) {
          var f = Rs(l), O = f % 1;
          return f === f ? O ? f - O : f : 0;
        }
        function av(l) {
          return l ? zo(lt(l), 0, xe) : 0;
        }
        function ar(l) {
          if (typeof l == "number")
            return l;
          if (Yn(l))
            return We;
          if (si(l)) {
            var f = typeof l.valueOf == "function" ? l.valueOf() : l;
            l = si(f) ? f + "" : f;
          }
          if (typeof l != "string")
            return l === 0 ? l : +l;
          l = km(l);
          var O = Ir.test(l);
          return O || kr.test(l) ? ae(l.slice(2), O ? 2 : 8) : Ni.test(l) ? We : +l;
        }
        function cv(l) {
          return Gr(l, kn(l));
        }
        function B_(l) {
          return l ? zo(lt(l), -9007199254740991, Xe) : l === 0 ? l : 0;
        }
        function Xt(l) {
          return l == null ? "" : Un(l);
        }
        var I_ = Rl(function(l, f) {
          if (Ia(f) || xn(f)) {
            Gr(f, Zi(f), l);
            return;
          }
          for (var O in f)
            Dt.call(f, O) && Va(l, O, f[O]);
        }), fv = Rl(function(l, f) {
          Gr(f, kn(f), l);
        }), lu = Rl(function(l, f, O, v) {
          Gr(f, kn(f), l, v);
        }), N_ = Rl(function(l, f, O, v) {
          Gr(f, Zi(f), l, v);
        }), F_ = Ts(CO);
        function G_(l, f) {
          var O = Cl(l);
          return f == null ? O : Um(O, f);
        }
        var H_ = ht(function(l, f) {
          l = It(l);
          var O = -1, v = f.length, $ = v > 2 ? f[2] : t;
          for ($ && pn(f[0], f[1], $) && (v = 1); ++O < v; )
            for (var P = f[O], Z = kn(P), X = -1, L = Z.length; ++X < L; ) {
              var ee = Z[X], te = l[ee];
              (te === t || Rr(te, Wl[ee]) && !Dt.call(l, ee)) && (l[ee] = P[ee]);
            }
          return l;
        }), K_ = ht(function(l) {
          return l.push(t, k0), wi(uv, t, l);
        });
        function J_(l, f) {
          return Qm(l, Fe(f, 3), Fr);
        }
        function eW(l, f) {
          return Qm(l, Fe(f, 3), AO);
        }
        function tW(l, f) {
          return l == null ? l : RO(l, Fe(f, 3), kn);
        }
        function iW(l, f) {
          return l == null ? l : Im(l, Fe(f, 3), kn);
        }
        function nW(l, f) {
          return l && Fr(l, Fe(f, 3));
        }
        function rW(l, f) {
          return l && AO(l, Fe(f, 3));
        }
        function sW(l) {
          return l == null ? [] : Uf(l, Zi(l));
        }
        function oW(l) {
          return l == null ? [] : Uf(l, kn(l));
        }
        function hd(l, f, O) {
          var v = l == null ? t : jo(l, f);
          return v === t ? O : v;
        }
        function lW(l, f) {
          return l != null && T0(l, f, Tx);
        }
        function Od(l, f) {
          return l != null && T0(l, f, Zx);
        }
        var aW = y0(function(l, f, O) {
          f != null && typeof f.toString != "function" && (f = Wf.call(f)), l[f] = O;
        }, pd(_n)), cW = y0(function(l, f, O) {
          f != null && typeof f.toString != "function" && (f = Wf.call(f)), Dt.call(l, f) ? l[f].push(O) : l[f] = [O];
        }, Fe), fW = ht(Ya);
        function Zi(l) {
          return xn(l) ? Dm(l) : qO(l);
        }
        function kn(l) {
          return xn(l) ? Dm(l, !0) : Vx(l);
        }
        function uW(l, f) {
          var O = {};
          return f = Fe(f, 3), Fr(l, function(v, $, P) {
            _s(O, f(v, $, P), v);
          }), O;
        }
        function hW(l, f) {
          var O = {};
          return f = Fe(f, 3), Fr(l, function(v, $, P) {
            _s(O, $, f(v, $, P));
          }), O;
        }
        var OW = Rl(function(l, f, O) {
          Yf(l, f, O);
        }), uv = Rl(function(l, f, O, v) {
          Yf(l, f, O, v);
        }), dW = Ts(function(l, f) {
          var O = {};
          if (l == null)
            return O;
          var v = !1;
          f = ni(f, function(P) {
            return P = co(P, l), v || (v = P.length > 1), P;
          }), Gr(l, KO(l), O), v && (O = sr(O, d | p | m, ak));
          for (var $ = f.length; $--; )
            zO(O, f[$]);
          return O;
        });
        function pW(l, f) {
          return hv(l, ru(Fe(f)));
        }
        var gW = Ts(function(l, f) {
          return l == null ? {} : Yx(l, f);
        });
        function hv(l, f) {
          if (l == null)
            return {};
          var O = ni(KO(l), function(v) {
            return [v];
          });
          return f = Fe(f), n0(l, O, function(v, $) {
            return f(v, $[0]);
          });
        }
        function mW(l, f, O) {
          f = co(f, l);
          var v = -1, $ = f.length;
          for ($ || ($ = 1, l = t); ++v < $; ) {
            var P = l == null ? t : l[Hr(f[v])];
            P === t && (v = $, P = O), l = Cs(P) ? P.call(l) : P;
          }
          return l;
        }
        function vW(l, f, O) {
          return l == null ? l : ja(l, f, O);
        }
        function SW(l, f, O, v) {
          return v = typeof v == "function" ? v : t, l == null ? l : ja(l, f, O, v);
        }
        var Ov = P0(Zi), dv = P0(kn);
        function bW(l, f, O) {
          var v = ot(l), $ = v || uo(l) || Ml(l);
          if (f = Fe(f, 4), O == null) {
            var P = l && l.constructor;
            $ ? O = v ? new P() : [] : si(l) ? O = Cs(P) ? Cl(Cf(l)) : {} : O = {};
          }
          return ($ ? Fi : Fr)(l, function(Z, X, L) {
            return f(O, Z, X, L);
          }), O;
        }
        function $W(l, f) {
          return l == null ? !0 : zO(l, f);
        }
        function yW(l, f, O) {
          return l == null ? l : a0(l, f, IO(O));
        }
        function QW(l, f, O, v) {
          return v = typeof v == "function" ? v : t, l == null ? l : a0(l, f, IO(O), v);
        }
        function El(l) {
          return l == null ? [] : PO(l, Zi(l));
        }
        function wW(l) {
          return l == null ? [] : PO(l, kn(l));
        }
        function PW(l, f, O) {
          return O === t && (O = f, f = t), O !== t && (O = ar(O), O = O === O ? O : 0), f !== t && (f = ar(f), f = f === f ? f : 0), zo(ar(l), f, O);
        }
        function xW(l, f, O) {
          return f = Rs(f), O === t ? (O = f, f = 0) : O = Rs(O), l = ar(l), Cx(l, f, O);
        }
        function kW(l, f, O) {
          if (O && typeof O != "boolean" && pn(l, f, O) && (f = O = t), O === t && (typeof f == "boolean" ? (O = f, f = t) : typeof l == "boolean" && (O = l, l = t)), l === t && f === t ? (l = 0, f = 1) : (l = Rs(l), f === t ? (f = l, l = 0) : f = Rs(f)), l > f) {
            var v = l;
            l = f, f = v;
          }
          if (O || l % 1 || f % 1) {
            var $ = qm();
            return Gi(l + $ * (f - l + K("1e-" + (($ + "").length - 1))), f);
          }
          return VO(l, f);
        }
        var _W = Al(function(l, f, O) {
          return f = f.toLowerCase(), l + (O ? pv(f) : f);
        });
        function pv(l) {
          return dd(Xt(l).toLowerCase());
        }
        function gv(l) {
          return l = Xt(l), l && l.replace(qo, vP).replace(OO, "");
        }
        function WW(l, f, O) {
          l = Xt(l), f = Un(f);
          var v = l.length;
          O = O === t ? v : zo(lt(O), 0, v);
          var $ = O;
          return O -= f.length, O >= 0 && l.slice(O, $) == f;
        }
        function TW(l) {
          return l = Xt(l), l && vs.test(l) ? l.replace(Qi, SP) : l;
        }
        function ZW(l) {
          return l = Xt(l), l && hn.test(l) ? l.replace(wr, "\\$&") : l;
        }
        var CW = Al(function(l, f, O) {
          return l + (O ? "-" : "") + f.toLowerCase();
        }), RW = Al(function(l, f, O) {
          return l + (O ? " " : "") + f.toLowerCase();
        }), AW = S0("toLowerCase");
        function XW(l, f, O) {
          l = Xt(l), f = lt(f);
          var v = f ? kl(l) : 0;
          if (!f || v >= f)
            return l;
          var $ = (f - v) / 2;
          return Ff(Mf($), O) + l + Ff(Xf($), O);
        }
        function MW(l, f, O) {
          l = Xt(l), f = lt(f);
          var v = f ? kl(l) : 0;
          return f && v < f ? l + Ff(f - v, O) : l;
        }
        function EW(l, f, O) {
          l = Xt(l), f = lt(f);
          var v = f ? kl(l) : 0;
          return f && v < f ? Ff(f - v, O) + l : l;
        }
        function qW(l, f, O) {
          return O || f == null ? f = 0 : f && (f = +f), jP(Xt(l).replace(Ln, ""), f || 0);
        }
        function LW(l, f, O) {
          return (O ? pn(l, f, O) : f === t) ? f = 1 : f = lt(f), UO(Xt(l), f);
        }
        function DW() {
          var l = arguments, f = Xt(l[0]);
          return l.length < 3 ? f : f.replace(l[1], l[2]);
        }
        var VW = Al(function(l, f, O) {
          return l + (O ? "_" : "") + f.toLowerCase();
        });
        function UW(l, f, O) {
          return O && typeof O != "number" && pn(l, f, O) && (f = O = t), O = O === t ? xe : O >>> 0, O ? (l = Xt(l), l && (typeof f == "string" || f != null && !ud(f)) && (f = Un(f), !f && xl(l)) ? fo(Zr(l), 0, O) : l.split(f, O)) : [];
        }
        var YW = Al(function(l, f, O) {
          return l + (O ? " " : "") + dd(f);
        });
        function zW(l, f, O) {
          return l = Xt(l), O = O == null ? 0 : zo(lt(O), 0, l.length), f = Un(f), l.slice(O, O + f.length) == f;
        }
        function jW(l, f, O) {
          var v = Q.templateSettings;
          O && pn(l, f, O) && (f = t), l = Xt(l), f = lu({}, f, v, x0);
          var $ = lu({}, f.imports, v.imports, x0), P = Zi($), Z = PO($, P), X, L, ee = 0, te = f.interpolate || _r, le = "__p += '", Qe = kO(
            (f.escape || _r).source + "|" + te.source + "|" + (te === Ii ? wa : _r).source + "|" + (f.evaluate || _r).source + "|$",
            "g"
          ), qe = "//# sourceURL=" + (Dt.call(f, "sourceURL") ? (f.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Qf + "]") + `
`;
          l.replace(Qe, function(Je, gt, bt, zn, gn, jn) {
            return bt || (bt = zn), le += l.slice(ee, jn).replace(Ol, bP), gt && (X = !0, le += `' +
__e(` + gt + `) +
'`), gn && (L = !0, le += `';
` + gn + `;
__p += '`), bt && (le += `' +
((__t = (` + bt + `)) == null ? '' : __t) +
'`), ee = jn + Je.length, Je;
          }), le += `';
`;
          var Ke = Dt.call(f, "variable") && f.variable;
          if (!Ke)
            le = `with (obj) {
` + le + `
}
`;
          else if (xr.test(Ke))
            throw new st(a);
          le = (L ? le.replace(Ti, "") : le).replace($n, "$1").replace(qi, "$1;"), le = "function(" + (Ke || "obj") + `) {
` + (Ke ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (X ? ", __e = _.escape" : "") + (L ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + le + `return __p
}`;
          var at = vv(function() {
            return Zt(P, qe + "return " + le).apply(t, Z);
          });
          if (at.source = le, fd(at))
            throw at;
          return at;
        }
        function BW(l) {
          return Xt(l).toLowerCase();
        }
        function IW(l) {
          return Xt(l).toUpperCase();
        }
        function NW(l, f, O) {
          if (l = Xt(l), l && (O || f === t))
            return km(l);
          if (!l || !(f = Un(f)))
            return l;
          var v = Zr(l), $ = Zr(f), P = _m(v, $), Z = Wm(v, $) + 1;
          return fo(v, P, Z).join("");
        }
        function FW(l, f, O) {
          if (l = Xt(l), l && (O || f === t))
            return l.slice(0, Zm(l) + 1);
          if (!l || !(f = Un(f)))
            return l;
          var v = Zr(l), $ = Wm(v, Zr(f)) + 1;
          return fo(v, 0, $).join("");
        }
        function GW(l, f, O) {
          if (l = Xt(l), l && (O || f === t))
            return l.replace(Ln, "");
          if (!l || !(f = Un(f)))
            return l;
          var v = Zr(l), $ = _m(v, Zr(f));
          return fo(v, $).join("");
        }
        function HW(l, f) {
          var O = N, v = j;
          if (si(f)) {
            var $ = "separator" in f ? f.separator : $;
            O = "length" in f ? lt(f.length) : O, v = "omission" in f ? Un(f.omission) : v;
          }
          l = Xt(l);
          var P = l.length;
          if (xl(l)) {
            var Z = Zr(l);
            P = Z.length;
          }
          if (O >= P)
            return l;
          var X = O - kl(v);
          if (X < 1)
            return v;
          var L = Z ? fo(Z, 0, X).join("") : l.slice(0, X);
          if ($ === t)
            return L + v;
          if (Z && (X += L.length - X), ud($)) {
            if (l.slice(X).search($)) {
              var ee, te = L;
              for ($.global || ($ = kO($.source, Xt(On.exec($)) + "g")), $.lastIndex = 0; ee = $.exec(te); )
                var le = ee.index;
              L = L.slice(0, le === t ? X : le);
            }
          } else if (l.indexOf(Un($), X) != X) {
            var Qe = L.lastIndexOf($);
            Qe > -1 && (L = L.slice(0, Qe));
          }
          return L + v;
        }
        function KW(l) {
          return l = Xt(l), l && yn.test(l) ? l.replace(qn, kP) : l;
        }
        var JW = Al(function(l, f, O) {
          return l + (O ? " " : "") + f.toUpperCase();
        }), dd = S0("toUpperCase");
        function mv(l, f, O) {
          return l = Xt(l), f = O ? t : f, f === t ? yP(l) ? TP(l) : OP(l) : l.match(f) || [];
        }
        var vv = ht(function(l, f) {
          try {
            return wi(l, t, f);
          } catch (O) {
            return fd(O) ? O : new st(O);
          }
        }), eT = Ts(function(l, f) {
          return Fi(f, function(O) {
            O = Hr(O), _s(l, O, ad(l[O], l));
          }), l;
        });
        function tT(l) {
          var f = l == null ? 0 : l.length, O = Fe();
          return l = f ? ni(l, function(v) {
            if (typeof v[1] != "function")
              throw new nr(o);
            return [O(v[0]), v[1]];
          }) : [], ht(function(v) {
            for (var $ = -1; ++$ < f; ) {
              var P = l[$];
              if (wi(P[0], this, v))
                return wi(P[1], this, v);
            }
          });
        }
        function iT(l) {
          return kx(sr(l, d));
        }
        function pd(l) {
          return function() {
            return l;
          };
        }
        function nT(l, f) {
          return l == null || l !== l ? f : l;
        }
        var rT = $0(), sT = $0(!0);
        function _n(l) {
          return l;
        }
        function gd(l) {
          return Hm(typeof l == "function" ? l : sr(l, d));
        }
        function oT(l) {
          return Jm(sr(l, d));
        }
        function lT(l, f) {
          return e0(l, sr(f, d));
        }
        var aT = ht(function(l, f) {
          return function(O) {
            return Ya(O, l, f);
          };
        }), cT = ht(function(l, f) {
          return function(O) {
            return Ya(l, O, f);
          };
        });
        function md(l, f, O) {
          var v = Zi(f), $ = Uf(f, v);
          O == null && !(si(f) && ($.length || !v.length)) && (O = f, f = l, l = this, $ = Uf(f, Zi(f)));
          var P = !(si(O) && "chain" in O) || !!O.chain, Z = Cs(l);
          return Fi($, function(X) {
            var L = f[X];
            l[X] = L, Z && (l.prototype[X] = function() {
              var ee = this.__chain__;
              if (P || ee) {
                var te = l(this.__wrapped__), le = te.__actions__ = Pn(this.__actions__);
                return le.push({ func: L, args: arguments, thisArg: l }), te.__chain__ = ee, te;
              }
              return L.apply(l, ro([this.value()], arguments));
            });
          }), l;
        }
        function fT() {
          return de._ === this && (de._ = MP), this;
        }
        function vd() {
        }
        function uT(l) {
          return l = lt(l), ht(function(f) {
            return t0(f, l);
          });
        }
        var hT = FO(ni), OT = FO(Ql), dT = FO(bO);
        function Sv(l) {
          return id(l) ? $O(Hr(l)) : zx(l);
        }
        function pT(l) {
          return function(f) {
            return l == null ? t : jo(l, f);
          };
        }
        var gT = Q0(), mT = Q0(!0);
        function Sd() {
          return [];
        }
        function bd() {
          return !1;
        }
        function vT() {
          return {};
        }
        function ST() {
          return "";
        }
        function bT() {
          return !0;
        }
        function $T(l, f) {
          if (l = lt(l), l < 1 || l > Xe)
            return [];
          var O = xe, v = Gi(l, xe);
          f = Fe(f), l -= xe;
          for (var $ = wO(v, f); ++O < l; )
            f(O);
          return $;
        }
        function yT(l) {
          return ot(l) ? ni(l, Hr) : Yn(l) ? [l] : Pn(L0(Xt(l)));
        }
        function QT(l) {
          var f = ++AP;
          return Xt(l) + f;
        }
        var wT = Nf(function(l, f) {
          return l + f;
        }, 0), PT = GO("ceil"), xT = Nf(function(l, f) {
          return l / f;
        }, 1), kT = GO("floor");
        function _T(l) {
          return l && l.length ? Vf(l, _n, XO) : t;
        }
        function WT(l, f) {
          return l && l.length ? Vf(l, Fe(f, 2), XO) : t;
        }
        function TT(l) {
          return Pm(l, _n);
        }
        function ZT(l, f) {
          return Pm(l, Fe(f, 2));
        }
        function CT(l) {
          return l && l.length ? Vf(l, _n, LO) : t;
        }
        function RT(l, f) {
          return l && l.length ? Vf(l, Fe(f, 2), LO) : t;
        }
        var AT = Nf(function(l, f) {
          return l * f;
        }, 1), XT = GO("round"), MT = Nf(function(l, f) {
          return l - f;
        }, 0);
        function ET(l) {
          return l && l.length ? QO(l, _n) : 0;
        }
        function qT(l, f) {
          return l && l.length ? QO(l, Fe(f, 2)) : 0;
        }
        return Q.after = o_, Q.ary = G0, Q.assign = I_, Q.assignIn = fv, Q.assignInWith = lu, Q.assignWith = N_, Q.at = F_, Q.before = H0, Q.bind = ad, Q.bindAll = eT, Q.bindKey = K0, Q.castArray = v_, Q.chain = I0, Q.chunk = kk, Q.compact = _k, Q.concat = Wk, Q.cond = tT, Q.conforms = iT, Q.constant = pd, Q.countBy = E2, Q.create = G_, Q.curry = J0, Q.curryRight = ev, Q.debounce = tv, Q.defaults = H_, Q.defaultsDeep = K_, Q.defer = l_, Q.delay = a_, Q.difference = Tk, Q.differenceBy = Zk, Q.differenceWith = Ck, Q.drop = Rk, Q.dropRight = Ak, Q.dropRightWhile = Xk, Q.dropWhile = Mk, Q.fill = Ek, Q.filter = L2, Q.flatMap = U2, Q.flatMapDeep = Y2, Q.flatMapDepth = z2, Q.flatten = Y0, Q.flattenDeep = qk, Q.flattenDepth = Lk, Q.flip = c_, Q.flow = rT, Q.flowRight = sT, Q.fromPairs = Dk, Q.functions = sW, Q.functionsIn = oW, Q.groupBy = j2, Q.initial = Uk, Q.intersection = Yk, Q.intersectionBy = zk, Q.intersectionWith = jk, Q.invert = aW, Q.invertBy = cW, Q.invokeMap = I2, Q.iteratee = gd, Q.keyBy = N2, Q.keys = Zi, Q.keysIn = kn, Q.map = tu, Q.mapKeys = uW, Q.mapValues = hW, Q.matches = oT, Q.matchesProperty = lT, Q.memoize = nu, Q.merge = OW, Q.mergeWith = uv, Q.method = aT, Q.methodOf = cT, Q.mixin = md, Q.negate = ru, Q.nthArg = uT, Q.omit = dW, Q.omitBy = pW, Q.once = f_, Q.orderBy = F2, Q.over = hT, Q.overArgs = u_, Q.overEvery = OT, Q.overSome = dT, Q.partial = cd, Q.partialRight = iv, Q.partition = G2, Q.pick = gW, Q.pickBy = hv, Q.property = Sv, Q.propertyOf = pT, Q.pull = Fk, Q.pullAll = j0, Q.pullAllBy = Gk, Q.pullAllWith = Hk, Q.pullAt = Kk, Q.range = gT, Q.rangeRight = mT, Q.rearg = h_, Q.reject = J2, Q.remove = Jk, Q.rest = O_, Q.reverse = od, Q.sampleSize = t_, Q.set = vW, Q.setWith = SW, Q.shuffle = i_, Q.slice = e2, Q.sortBy = s_, Q.sortedUniq = l2, Q.sortedUniqBy = a2, Q.split = UW, Q.spread = d_, Q.tail = c2, Q.take = f2, Q.takeRight = u2, Q.takeRightWhile = h2, Q.takeWhile = O2, Q.tap = _2, Q.throttle = p_, Q.thru = eu, Q.toArray = lv, Q.toPairs = Ov, Q.toPairsIn = dv, Q.toPath = yT, Q.toPlainObject = cv, Q.transform = bW, Q.unary = g_, Q.union = d2, Q.unionBy = p2, Q.unionWith = g2, Q.uniq = m2, Q.uniqBy = v2, Q.uniqWith = S2, Q.unset = $W, Q.unzip = ld, Q.unzipWith = B0, Q.update = yW, Q.updateWith = QW, Q.values = El, Q.valuesIn = wW, Q.without = b2, Q.words = mv, Q.wrap = m_, Q.xor = $2, Q.xorBy = y2, Q.xorWith = Q2, Q.zip = w2, Q.zipObject = P2, Q.zipObjectDeep = x2, Q.zipWith = k2, Q.entries = Ov, Q.entriesIn = dv, Q.extend = fv, Q.extendWith = lu, md(Q, Q), Q.add = wT, Q.attempt = vv, Q.camelCase = _W, Q.capitalize = pv, Q.ceil = PT, Q.clamp = PW, Q.clone = S_, Q.cloneDeep = $_, Q.cloneDeepWith = y_, Q.cloneWith = b_, Q.conformsTo = Q_, Q.deburr = gv, Q.defaultTo = nT, Q.divide = xT, Q.endsWith = WW, Q.eq = Rr, Q.escape = TW, Q.escapeRegExp = ZW, Q.every = q2, Q.find = D2, Q.findIndex = V0, Q.findKey = J_, Q.findLast = V2, Q.findLastIndex = U0, Q.findLastKey = eW, Q.floor = kT, Q.forEach = N0, Q.forEachRight = F0, Q.forIn = tW, Q.forInRight = iW, Q.forOwn = nW, Q.forOwnRight = rW, Q.get = hd, Q.gt = w_, Q.gte = P_, Q.has = lW, Q.hasIn = Od, Q.head = z0, Q.identity = _n, Q.includes = B2, Q.indexOf = Vk, Q.inRange = xW, Q.invoke = fW, Q.isArguments = No, Q.isArray = ot, Q.isArrayBuffer = x_, Q.isArrayLike = xn, Q.isArrayLikeObject = Oi, Q.isBoolean = k_, Q.isBuffer = uo, Q.isDate = __, Q.isElement = W_, Q.isEmpty = T_, Q.isEqual = Z_, Q.isEqualWith = C_, Q.isError = fd, Q.isFinite = R_, Q.isFunction = Cs, Q.isInteger = nv, Q.isLength = su, Q.isMap = rv, Q.isMatch = A_, Q.isMatchWith = X_, Q.isNaN = M_, Q.isNative = E_, Q.isNil = L_, Q.isNull = q_, Q.isNumber = sv, Q.isObject = si, Q.isObjectLike = fi, Q.isPlainObject = Fa, Q.isRegExp = ud, Q.isSafeInteger = D_, Q.isSet = ov, Q.isString = ou, Q.isSymbol = Yn, Q.isTypedArray = Ml, Q.isUndefined = V_, Q.isWeakMap = U_, Q.isWeakSet = Y_, Q.join = Bk, Q.kebabCase = CW, Q.last = lr, Q.lastIndexOf = Ik, Q.lowerCase = RW, Q.lowerFirst = AW, Q.lt = z_, Q.lte = j_, Q.max = _T, Q.maxBy = WT, Q.mean = TT, Q.meanBy = ZT, Q.min = CT, Q.minBy = RT, Q.stubArray = Sd, Q.stubFalse = bd, Q.stubObject = vT, Q.stubString = ST, Q.stubTrue = bT, Q.multiply = AT, Q.nth = Nk, Q.noConflict = fT, Q.noop = vd, Q.now = iu, Q.pad = XW, Q.padEnd = MW, Q.padStart = EW, Q.parseInt = qW, Q.random = kW, Q.reduce = H2, Q.reduceRight = K2, Q.repeat = LW, Q.replace = DW, Q.result = mW, Q.round = XT, Q.runInContext = E, Q.sample = e_, Q.size = n_, Q.snakeCase = VW, Q.some = r_, Q.sortedIndex = t2, Q.sortedIndexBy = i2, Q.sortedIndexOf = n2, Q.sortedLastIndex = r2, Q.sortedLastIndexBy = s2, Q.sortedLastIndexOf = o2, Q.startCase = YW, Q.startsWith = zW, Q.subtract = MT, Q.sum = ET, Q.sumBy = qT, Q.template = jW, Q.times = $T, Q.toFinite = Rs, Q.toInteger = lt, Q.toLength = av, Q.toLower = BW, Q.toNumber = ar, Q.toSafeInteger = B_, Q.toString = Xt, Q.toUpper = IW, Q.trim = NW, Q.trimEnd = FW, Q.trimStart = GW, Q.truncate = HW, Q.unescape = KW, Q.uniqueId = QT, Q.upperCase = JW, Q.upperFirst = dd, Q.each = N0, Q.eachRight = F0, Q.first = z0, md(Q, function() {
          var l = {};
          return Fr(Q, function(f, O) {
            Dt.call(Q.prototype, O) || (l[O] = f);
          }), l;
        }(), { chain: !1 }), Q.VERSION = n, Fi(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(l) {
          Q[l].placeholder = Q;
        }), Fi(["drop", "take"], function(l, f) {
          vt.prototype[l] = function(O) {
            O = O === t ? 1 : xi(lt(O), 0);
            var v = this.__filtered__ && !f ? new vt(this) : this.clone();
            return v.__filtered__ ? v.__takeCount__ = Gi(O, v.__takeCount__) : v.__views__.push({
              size: Gi(O, xe),
              type: l + (v.__dir__ < 0 ? "Right" : "")
            }), v;
          }, vt.prototype[l + "Right"] = function(O) {
            return this.reverse()[l](O).reverse();
          };
        }), Fi(["filter", "map", "takeWhile"], function(l, f) {
          var O = f + 1, v = O == se || O == ze;
          vt.prototype[l] = function($) {
            var P = this.clone();
            return P.__iteratees__.push({
              iteratee: Fe($, 3),
              type: O
            }), P.__filtered__ = P.__filtered__ || v, P;
          };
        }), Fi(["head", "last"], function(l, f) {
          var O = "take" + (f ? "Right" : "");
          vt.prototype[l] = function() {
            return this[O](1).value()[0];
          };
        }), Fi(["initial", "tail"], function(l, f) {
          var O = "drop" + (f ? "" : "Right");
          vt.prototype[l] = function() {
            return this.__filtered__ ? new vt(this) : this[O](1);
          };
        }), vt.prototype.compact = function() {
          return this.filter(_n);
        }, vt.prototype.find = function(l) {
          return this.filter(l).head();
        }, vt.prototype.findLast = function(l) {
          return this.reverse().find(l);
        }, vt.prototype.invokeMap = ht(function(l, f) {
          return typeof l == "function" ? new vt(this) : this.map(function(O) {
            return Ya(O, l, f);
          });
        }), vt.prototype.reject = function(l) {
          return this.filter(ru(Fe(l)));
        }, vt.prototype.slice = function(l, f) {
          l = lt(l);
          var O = this;
          return O.__filtered__ && (l > 0 || f < 0) ? new vt(O) : (l < 0 ? O = O.takeRight(-l) : l && (O = O.drop(l)), f !== t && (f = lt(f), O = f < 0 ? O.dropRight(-f) : O.take(f - l)), O);
        }, vt.prototype.takeRightWhile = function(l) {
          return this.reverse().takeWhile(l).reverse();
        }, vt.prototype.toArray = function() {
          return this.take(xe);
        }, Fr(vt.prototype, function(l, f) {
          var O = /^(?:filter|find|map|reject)|While$/.test(f), v = /^(?:head|last)$/.test(f), $ = Q[v ? "take" + (f == "last" ? "Right" : "") : f], P = v || /^find/.test(f);
          $ && (Q.prototype[f] = function() {
            var Z = this.__wrapped__, X = v ? [1] : arguments, L = Z instanceof vt, ee = X[0], te = L || ot(Z), le = function(gt) {
              var bt = $.apply(Q, ro([gt], X));
              return v && Qe ? bt[0] : bt;
            };
            te && O && typeof ee == "function" && ee.length != 1 && (L = te = !1);
            var Qe = this.__chain__, qe = !!this.__actions__.length, Ke = P && !Qe, at = L && !qe;
            if (!P && te) {
              Z = at ? Z : new vt(this);
              var Je = l.apply(Z, X);
              return Je.__actions__.push({ func: eu, args: [le], thisArg: t }), new rr(Je, Qe);
            }
            return Ke && at ? l.apply(this, X) : (Je = this.thru(le), Ke ? v ? Je.value()[0] : Je.value() : Je);
          });
        }), Fi(["pop", "push", "shift", "sort", "splice", "unshift"], function(l) {
          var f = xf[l], O = /^(?:push|sort|unshift)$/.test(l) ? "tap" : "thru", v = /^(?:pop|shift)$/.test(l);
          Q.prototype[l] = function() {
            var $ = arguments;
            if (v && !this.__chain__) {
              var P = this.value();
              return f.apply(ot(P) ? P : [], $);
            }
            return this[O](function(Z) {
              return f.apply(ot(Z) ? Z : [], $);
            });
          };
        }), Fr(vt.prototype, function(l, f) {
          var O = Q[f];
          if (O) {
            var v = O.name + "";
            Dt.call(Zl, v) || (Zl[v] = []), Zl[v].push({ name: f, func: O });
          }
        }), Zl[If(t, k).name] = [{
          name: "wrapper",
          func: t
        }], vt.prototype.clone = KP, vt.prototype.reverse = JP, vt.prototype.value = ex, Q.prototype.at = W2, Q.prototype.chain = T2, Q.prototype.commit = Z2, Q.prototype.next = C2, Q.prototype.plant = A2, Q.prototype.reverse = X2, Q.prototype.toJSON = Q.prototype.valueOf = Q.prototype.value = M2, Q.prototype.first = Q.prototype.head, Ma && (Q.prototype[Ma] = R2), Q;
      }, _l = ZP();
      Me ? ((Me.exports = _l)._ = _l, rt._ = _l) : de._ = _l;
    }).call($8);
  }(hc, hc.exports)), hc.exports;
}
var Q8 = y8();
const w8 = Ao.define({
  parser: SA.configure({
    props: [
      Sa.add({
        ParenthesisedExpression: po({
          closing: ")",
          align: !1
        }),
        Application: po({ closing: ")", align: !1 }),
        GeneratorCallGenerators: po({
          closing: ")",
          align: !1
        }),
        LetItems: po({ closing: "}", align: !1 }),
        ArrayLiteral: po({ closing: "]", align: !1 }),
        ArrayLiteral2d: po({
          closing: "|]",
          align: !1
        }),
        SetLiteral: po({ closing: "}", align: !1 })
      }),
      ba.add({
        ParenthesisedExpression: is,
        Application: is,
        GeneratorCallGenerators: is,
        LetItems: is,
        ArrayLiteral: is,
        ArrayLiteral2d: is,
        SetLiteral: is
      }),
      va({
        Keyword: S.keyword,
        "Identifier QuotedIdentifier": S.variableName,
        "Call/Identifier Call/QuotedIdentifier GeneratorCall/Identifier GeneratorCall/QuotedIdentifier": S.name,
        Absent: S.null,
        Anonymous: S.null,
        BooleanLiteral: S.bool,
        Number: S.number,
        Infinity: S.number,
        StringLiteral: S.string,
        LineComment: S.comment,
        BlockComment: S.comment,
        "( )": S.paren,
        "{ }": S.paren,
        "[ ]": S.paren
      })
    ]
  }),
  languageData: {
    commentTokens: { line: "%" }
  }
});
function ub() {
  return new ef(w8);
}
const Hw = Mi({
  variant: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#000",
    selection: "#036dd626",
    gutterBackground: "#fcfcfc",
    gutterForeground: "#999",
    lineHighlight: "#90909020"
  },
  styles: [
    {
      tag: S.comment,
      color: "slategray"
    },
    {
      tag: S.string,
      color: "#690"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#905"
    },
    {
      tag: S.variableName,
      color: "#000000"
    },
    {
      tag: S.name,
      color: "#07a"
    },
    {
      tag: [S.keyword],
      color: "#07a"
    }
  ]
}), Kw = Mi({
  variant: "dark",
  settings: {
    background: "var(--bulma-scheme-main-bis)",
    foreground: "#F6F6F6",
    caret: "#EEE",
    selection: "#036dd626",
    gutterBackground: "var(--bulma-scheme-main-ter)",
    gutterForeground: "var(--bulma-text)",
    lineHighlight: "#90909014"
  },
  styles: [
    {
      tag: S.comment,
      color: "slategray"
    },
    {
      tag: S.string,
      color: "#e09177"
    },
    {
      tag: [S.number, S.bool, S.null],
      color: "#a9e07e"
    },
    {
      tag: S.variableName,
      color: "#FFFFFF"
    },
    {
      tag: S.name,
      color: "#e6cf77"
    },
    {
      tag: [S.keyword],
      color: "#54a2e3"
    }
  ]
}), ym = new ga(), Ko = new ga(), P8 = Ko.reconfigure(
  me.editable.of(!1)
), x8 = Ko.reconfigure(
  me.editable.of(!0)
), k8 = ym.reconfigure(Hw), _8 = ym.reconfigure(Kw);
function Mu(i, e, t, n = !1) {
  const r = [
    c7,
    Kc.of([
      {
        key: "Tab",
        preventDefault: !0,
        run: ({ state: s, dispatch: o }) => {
          if (s.selection.ranges.some((u) => !u.empty))
            return zQ({ state: s, dispatch: o });
          const a = s.selection.main.from, c = a - s.doc.lineAt(a).from;
          return o(
            s.update(
              s.replaceSelection(c % 2 === 0 ? "  " : " "),
              {
                scrollIntoView: !0,
                userEvent: "input"
              }
            )
          ), !0;
        }
      },
      {
        key: "Shift-Tab",
        preventDefault: !0,
        run: jQ
      }
    ]),
    ym.of(t ? Kw : Hw),
    me.theme({
      "&": { height: "100%" },
      "&.cm-editor.cm-focused": { outline: "none" },
      ".cm-content, .cm-gutter": { minHeight: "100%" },
      "&.cm-focused .cm-selectionBackground": {
        backgroundColor: "#036dd638"
      }
    })
  ];
  return i === ".json" || i === ".mpc" ? [
    ...r,
    Ko.of(me.editable.of(!n)),
    O7()
  ] : i === ".mzc" ? [...r, Ko.of(me.editable.of(!1))] : i === ".dzn" ? [
    ...r,
    Ko.of(me.editable.of(!n)),
    ub()
  ] : i === ".html" ? [
    ...r,
    Ko.of(me.editable.of(!n)),
    S8()
  ] : [
    ...r,
    Ko.of(me.editable.of(!n)),
    ub(),
    me.updateListener.of(Q8.debounce(e, 250))
  ];
}
var W8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9"><a> </a></pre> <br>', 1), T8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9">    with </pre>'), Z8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9">  in </pre>'), C8 = /* @__PURE__ */ ne('<!> <!> <pre class="svelte-w513p9"> </pre> <br>', 1), R8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9"><a> </a>:</pre> <br>', 1), A8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9"> </pre> <br>', 1), X8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9">MiniZinc:</pre>'), M8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9">Warning:</pre>'), E8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9"> </pre>'), q8 = /* @__PURE__ */ ne('<pre class="svelte-w513p9"> </pre> <br>', 1), L8 = /* @__PURE__ */ ne('<!> <!> <!> <!> <pre class="svelte-w513p9"> </pre> <!> <br>', 1);
function mg(i, e) {
  if (new.target) return on({ component: mg, ...i });
  zi(e, !1);
  let t = ve(e, "msg", 12);
  const n = Jn();
  function r(_) {
    return _.firstLine == _.lastLine ? _.firstColumn == _.lastColumn ? `${_.filename}:${_.firstLine}.${_.firstColumn}` : `${_.filename}:${_.firstLine}.${_.firstColumn}-${_.lastColumn}` : `${_.filename}:${_.firstLine}.${_.firstColumn}-${_.lastLine}.${_.lastColumn}`;
  }
  ln();
  var s = L8(), o = Le(s);
  {
    var a = (_) => {
      var W = Wt(), D = Le(W);
      _i(D, 1, () => t().stack, Ri, (q, V, U) => {
        var N = C8(), j = Le(N);
        {
          var I = (Xe) => {
            var Ee = W8(), We = Le(Ee), xe = R(We), re = R(xe, !0);
            C(xe), C(We), Ct(2), we(
              (Oe) => {
                Cv(xe, `mzn-link mzn-${t().type ?? ""} svelte-w513p9`), dt(re, Oe);
              },
              [
                () => r(g(V).location)
              ],
              gi
            ), Pe("click", xe, () => n("goto", { location: g(V).location })), z(Xe, Ee);
          };
          ge(j, (Xe) => {
            (U === 0 || g(V).location.filename !== t().stack[U - 1].location.filename || g(V).location.firstLine !== t().stack[U - 1].location.firstLine) && Xe(I);
          });
        }
        var Y = ie(j, 2);
        {
          var se = (Xe) => {
            var Ee = T8();
            z(Xe, Ee);
          }, be = (Xe) => {
            var Ee = Z8();
            z(Xe, Ee);
          };
          ge(Y, (Xe) => {
            g(V).isCompIter ? Xe(se) : Xe(be, !1);
          });
        }
        var ze = ie(Y, 2), Ve = R(ze, !0);
        C(ze), Ct(2), we(() => dt(Ve, g(V).description)), z(q, N);
      }), z(_, W);
    }, c = (_) => {
      var W = Wt(), D = Le(W);
      {
        var q = (V) => {
          var U = R8(), N = Le(U), j = R(N), I = R(j, !0);
          C(j), Ct(), C(N), Ct(2), we(
            (Y) => {
              Cv(j, `mzn-link mzn-${t().type ?? ""} svelte-w513p9`), dt(I, Y);
            },
            [() => r(t().location)],
            gi
          ), Pe("click", j, () => n("goto", { location: t().location })), z(V, U);
        };
        ge(
          D,
          (V) => {
            t().location && V(q);
          },
          !0
        );
      }
      z(_, W);
    };
    ge(o, (_) => {
      t().stack && t().stack.length > 0 ? _(a) : _(c, !1);
    });
  }
  var u = ie(o, 2);
  {
    var h = (_) => {
      var W = Wt(), D = Le(W);
      _i(D, 1, () => t().includedFrom, Ri, (q, V) => {
        var U = A8(), N = Le(U), j = R(N);
        C(N), Ct(2), we(() => dt(j, ` (included from ${g(V) ?? ""})`)), z(q, U);
      }), z(_, W);
    };
    ge(u, (_) => {
      t().includedFrom && _(h);
    });
  }
  var d = ie(u, 2);
  {
    var p = (_) => {
      var W = X8();
      z(_, W);
    }, m = (_) => {
      var W = M8();
      z(_, W);
    };
    ge(d, (_) => {
      t().type === "error" ? _(p) : _(m, !1);
    });
  }
  var b = ie(d, 2);
  {
    var y = (_) => {
      var W = E8(), D = R(W);
      C(W), we(() => dt(D, `${t().what ?? ""}: `)), z(_, W);
    };
    ge(b, (_) => {
      t().what && _(y);
    });
  }
  var w = ie(b, 2), k = R(w, !0);
  C(w);
  var A = ie(w, 2);
  {
    var x = (_) => {
      var W = Wt(), D = Le(W);
      _i(D, 1, () => t().cycle, Ri, (q, V) => {
        var U = q8(), N = Le(U), j = R(N);
        C(N), Ct(2), we(() => dt(j, ` ${g(V) ?? ""}`)), z(q, U);
      }), z(_, W);
    };
    ge(A, (_) => {
      t().cycle && _(x);
    });
  }
  return Ct(2), we(() => dt(k, t().message)), z(i, s), ji({
    get msg() {
      return t();
    },
    set msg(_) {
      t(_), pe();
    },
    $set: cn,
    $on: (_, W) => an(e, _, W)
  });
}
var D8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457"> </button>'), V8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457">Statistics</button>'), U8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457">Standard error</button>'), Y8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457">Timing</button>'), z8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457">Warnings</button>'), j8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457">Errors</button>'), B8 = /* @__PURE__ */ ne('<button class="button is-small section-toggle svelte-1290457"><!></button> <!> <div class="spacer svelte-1290457"></div> <!> <!> <!> <!> <!>', 1), I8 = /* @__PURE__ */ ne('<p class="control"><button class="button is-small" title="Clear output on each run"><span class="icon"><!></span></button></p>'), N8 = /* @__PURE__ */ ne('<p class="control"><button class="button is-small is-danger" title="Clear output"><span class="icon"><!></span></button></p>'), F8 = /* @__PURE__ */ ne('<div class="field has-addons svelte-1290457"><!> <!> <!></div>'), G8 = /* @__PURE__ */ ne("<pre> </pre> <br>", 1), H8 = /* @__PURE__ */ ne("<pre> </pre>"), K8 = /* @__PURE__ */ ne("<!> <pre>----------</pre> <br>", 1), J8 = /* @__PURE__ */ ne("<pre> </pre>"), e6 = /* @__PURE__ */ ne('<span class="mzn-checker svelte-1290457"><pre>% Solution checker report:</pre> <br> <!></span>'), t6 = /* @__PURE__ */ ne('<pre class="mzn-time"> </pre> <br>', 1), i6 = /* @__PURE__ */ ne("<pre> </pre> <br>", 1), n6 = /* @__PURE__ */ ne('<pre class="mzn-trace"> </pre>'), r6 = /* @__PURE__ */ ne('<pre class="mzn-comment"> </pre>'), s6 = /* @__PURE__ */ ne('<pre class="mzn-stderr"> </pre>'), o6 = /* @__PURE__ */ ne('<pre><span class="mzn-stat">%%%mzn-stat:</span> </pre> <br>', 1), l6 = /* @__PURE__ */ ne('<!> <pre><span class="mzn-stat">%%%mzn-stat-end</span></pre> <br>', 1), a6 = /* @__PURE__ */ ne('<pre class="mzn-runtime">Stopped.</pre> <br>', 1), c6 = /* @__PURE__ */ ne("<pre> </pre> <br>", 1), f6 = /* @__PURE__ */ ne('<pre class="mzn-error"> </pre> <br>', 1), u6 = /* @__PURE__ */ ne('<!> <pre class="mzn-runtime"> </pre>', 1), h6 = /* @__PURE__ */ ne('<details open class="svelte-1290457"><summary><!> </summary> <div class="messages svelte-1290457"></div></details>'), O6 = /* @__PURE__ */ ne('<div class="stack output-window svelte-1290457"><div class="top svelte-1290457"><!> <!></div> <div class="grow svelte-1290457"><div class="output-window-contents svelte-1290457"></div></div></div>');
function Jw(i, e) {
  if (new.target) return on({ component: Jw, ...i });
  zi(e, !1);
  const t = fe(), n = fe(), r = fe(), s = fe(), o = fe(), a = fe(), c = Jn();
  let u = ve(e, "output", 12), h = ve(e, "autoClearOutput", 12, !1), d = ve(e, "showClearOutput", 12, !0), p = ve(e, "showAutoClearOutput", 12, !0), m = ve(e, "showSectionToggles", 12, !0), b = ve(e, "showRightControls", 12, !0), y = ve(e, "isTab", 12, !1), w = fe(), k = fe(!0), A = fe(!0), x = fe(!0), _ = fe(!0), W = fe(!0);
  function D(re) {
    const Oe = re.flatMap((Ne) => Ne.output), Re = new Set([
      ...Oe.filter((Ne) => Ne.type === "solution" || Ne.type === "checker").flatMap((Ne) => Ne.sections.filter((He) => Ne.output[He].length > 0)),
      ...Oe.filter((Ne) => Ne.type === "trace").map((Ne) => Ne.section)
    ].filter((Ne) => Ne !== "raw" && !Ne.startsWith("mzn_vis_"))), Ye = [...Re.values()];
    return Ye.sort(), M(U, g(U).filter((Ne) => Re.has(Ne))), Ye;
  }
  function q(re) {
    g(U).indexOf(re) === -1 ? M(U, [...g(U), re]) : M(U, g(U).filter((Oe) => Oe !== re));
  }
  function V() {
    g(U).length === 0 ? M(U, [...g(a)]) : M(U, []);
  }
  let U = fe([]);
  const N = {
    ALL_SOLUTIONS: "==========",
    OPTIMAL_SOLUTION: "==========",
    UNSATISFIABLE: "=====UNSATISFIABLE=====",
    UNSAT_OR_UNBOUNDED: "=====UNSATorUNBOUNDED=====",
    UNBOUNDED: "=====UNBOUNDED=====",
    UNKNOWN: "=====UNKNOWN=====",
    ERROR: "=====ERROR====="
  };
  async function j(re) {
    g(w) && (await Dr(), g(w).scrollTo(0, g(w).scrollHeight));
  }
  function I(re) {
    const Oe = Math.floor(re / 36e5), Re = Math.floor(re % 36e5 / 6e4), Ye = Math.floor(re % 6e4 / 1e3), Ne = Math.floor(re % 1e3);
    let He = "";
    return Oe > 0 && (He += `${Oe}h `), (Oe > 0 || Re > 0) && (He += `${Re}m `), (Oe > 0 || Re > 0 || Ye > 0) && (He += `${Ye}s `), Oe == 0 && Re == 0 && (Ye > 0 && (He += " "), He += `${Ne}msec`), He.trimEnd();
  }
  function Y(re, Oe) {
    const Re = [];
    let Ye = [];
    const Ne = () => {
      if (Ye.length > 0) {
        const He = Ye.join("").split(`
`);
        He[He.length - 1] === "" && He.splice(He.length - 1, 1), Re.push({
          type: "text",
          message: He.map((ue) => `% ${ue}`).join(`
`)
        }), Ye = [];
      }
    };
    if (re.messages) {
      for (const He of re.messages)
        if (He.type === "solution")
          for (const ue of He.sections)
            Oe.indexOf(ue) === -1 && ue !== "raw" && Ye.push(re.output[ue]);
        else He.type === "trace" ? Oe.indexOf(He.section) === -1 && He.section !== "raw" && Ye.push(He.message) : (Ne(), Re.push(He));
      Ne();
    } else {
      for (const He of re.sections)
        Oe.indexOf(He) === -1 && He !== "raw" && Ye.push(re.output[He]);
      Ne();
    }
    return Re;
  }
  Be(() => Rt(u()), () => {
    M(t, u().some((re) => re.output.some((Oe) => Oe.type === "statistics")));
  }), Be(() => Rt(u()), () => {
    M(n, u().some((re) => re.output.some((Oe) => Oe.type === "stderr")));
  }), Be(() => Rt(u()), () => {
    M(r, u().some((re) => re.output.some((Oe) => Oe.type === "time")));
  }), Be(() => Rt(u()), () => {
    M(s, u().some((re) => re.output.some((Oe) => Oe.type === "warning" || Oe.type === "checker" && Oe.messages && Oe.messages.some((Re) => Re.type === "warning"))));
  }), Be(() => Rt(u()), () => {
    M(o, u().some((re) => re.output.some((Oe) => Oe.type === "error" || Oe.type === "checker" && Oe.messages && Oe.messages.some((Re) => Re.type === "error"))));
  }), Be(() => Rt(u()), () => {
    M(a, D(u()));
  }), Be(() => Rt(u()), () => {
    j(u());
  }), En(), ln();
  var se = O6(), be = R(se), ze = R(be);
  {
    var Ve = (re) => {
      var Oe = B8(), Re = Le(Oe), Ye = R(Re);
      {
        var Ne = (mt) => {
          var je = zl("Hide all");
          z(mt, je);
        }, He = (mt) => {
          var je = zl("Show all");
          z(mt, je);
        };
        ge(Ye, (mt) => {
          g(U).length === 0 ? mt(Ne) : mt(He, !1);
        });
      }
      C(Re);
      var ue = ie(Re, 2);
      _i(ue, 1, () => g(a), Ri, (mt, je) => {
        var it = D8(), he = R(it, !0);
        C(it), we(
          (Gt, li, Vt) => {
            ct(it, "title", Gt), Ge(it, "is-primary", li), Ge(it, "is-light", Vt), dt(he, g(je));
          },
          [
            () => `Click to ${g(U).indexOf(g(je)) === -1 ? "hide" : "show"} ${g(je)} output`,
            () => g(U).indexOf(g(je)) === -1,
            () => g(U).indexOf(g(je)) !== -1
          ],
          gi
        ), Pe("click", it, () => q(g(je))), z(mt, it);
      });
      var H = ie(ue, 4);
      {
        var ce = (mt) => {
          var je = V8();
          we(() => {
            ct(je, "title", `Click to ${g(k) ? "hide" : "show"} statistics information`), Ge(je, "is-primary", g(k)), Ge(je, "is-light", !g(k));
          }), Pe("click", je, () => M(k, !g(k))), z(mt, je);
        };
        ge(H, (mt) => {
          g(t) && mt(ce);
        });
      }
      var oe = ie(H, 2);
      {
        var $e = (mt) => {
          var je = U8();
          we(() => {
            ct(je, "title", `Click to ${g(A) ? "hide" : "show"} standard error output`), Ge(je, "is-primary", g(A)), Ge(je, "is-light", !g(A));
          }), Pe("click", je, () => M(A, !g(A))), z(mt, je);
        };
        ge(oe, (mt) => {
          g(n) && mt($e);
        });
      }
      var Ae = ie(oe, 2);
      {
        var Ze = (mt) => {
          var je = Y8();
          we(() => {
            ct(je, "title", `Click to ${g(x) ? "hide" : "show"} timing information`), Ge(je, "is-primary", g(x)), Ge(je, "is-light", !g(x));
          }), Pe("click", je, () => M(x, !g(x))), z(mt, je);
        };
        ge(Ae, (mt) => {
          g(r) && mt(Ze);
        });
      }
      var Ie = ie(Ae, 2);
      {
        var yt = (mt) => {
          var je = z8();
          we(() => {
            ct(je, "title", `Click to ${g(x) ? "hide" : "show"} warnings`), Ge(je, "is-primary", g(_)), Ge(je, "is-light", !g(_));
          }), Pe("click", je, () => M(_, !g(_))), z(mt, je);
        };
        ge(Ie, (mt) => {
          g(s) && mt(yt);
        });
      }
      var pt = ie(Ie, 2);
      {
        var Bi = (mt) => {
          var je = j8();
          we(() => {
            ct(je, "title", `Click to ${g(x) ? "hide" : "show"} errors`), Ge(je, "is-primary", g(W)), Ge(je, "is-light", !g(W));
          }), Pe("click", je, () => M(W, !g(W))), z(mt, je);
        };
        ge(pt, (mt) => {
          g(o) && mt(Bi);
        });
      }
      we(() => Re.disabled = g(a).length === 0), Pe("click", Re, () => V()), z(re, Oe);
    };
    ge(ze, (re) => {
      m() && re(Ve);
    });
  }
  var Xe = ie(ze, 2);
  {
    var Ee = (re) => {
      var Oe = F8(), Re = R(Oe);
      Ji(Re, e, "before-right-controls", {}, null);
      var Ye = ie(Re, 2);
      {
        var Ne = (H) => {
          var ce = I8(), oe = R(ce), $e = R(oe), Ae = R($e);
          zt(Ae, { icon: C3 }), C($e), C(oe), C(ce), we(() => {
            Ge(oe, "is-primary", h()), Ge(oe, "is-light", !h());
          }), Pe("click", oe, () => h(!h())), z(H, ce);
        };
        ge(Ye, (H) => {
          p() && H(Ne);
        });
      }
      var He = ie(Ye, 2);
      {
        var ue = (H) => {
          var ce = N8(), oe = R(ce), $e = R(oe), Ae = R($e);
          zt(Ae, { icon: Xy }), C($e), C(oe), C(ce), Pe("click", oe, () => c("clear")), z(H, ce);
        };
        ge(He, (H) => {
          d() && H(ue);
        });
      }
      C(Oe), z(re, Oe);
    };
    ge(Xe, (re) => {
      b() && re(Ee);
    });
  }
  C(be);
  var We = ie(be, 2), xe = R(We);
  return _i(xe, 5, u, Ri, (re, Oe) => {
    var Re = h6(), Ye = R(Re), Ne = R(Ye);
    {
      var He = (oe) => {
        var $e = zl("Compiling");
        z(oe, $e);
      }, ue = (oe) => {
        var $e = zl("Running");
        z(oe, $e);
      };
      ge(Ne, (oe) => {
        g(Oe).isCompile ? oe(He) : oe(ue, !1);
      });
    }
    var H = ie(Ne);
    C(Ye);
    var ce = ie(Ye, 2);
    _i(ce, 5, () => g(Oe).output, Ri, (oe, $e) => {
      var Ae = Wt(), Ze = Le(Ae);
      {
        var Ie = (pt) => {
          var Bi = K8(), mt = Le(Bi);
          _i(mt, 1, () => g($e).sections, Ri, (je, it) => {
            var he = Wt(), Gt = Le(he);
            {
              var li = (Vt) => {
                var hi = Wt(), Ht = Le(hi);
                {
                  var mi = (vi) => {
                    var Bt = G8(), Ot = Le(Bt), tt = R(Ot, !0);
                    C(Ot), Ct(2), we(
                      (ai) => dt(tt, ai),
                      [
                        () => JSON.stringify(g($e).output[g(it)], null, 2)
                      ],
                      gi
                    ), z(vi, Bt);
                  }, un = (vi) => {
                    var Bt = Wt(), Ot = Le(Bt);
                    {
                      var tt = (ai) => {
                        var ci = H8(), Qt = R(ci, !0);
                        C(ci), we(() => dt(Qt, g($e).output[g(it)])), z(ai, ci);
                      };
                      ge(
                        Ot,
                        (ai) => {
                          g(it) !== "raw" && ai(tt);
                        },
                        !0
                      );
                    }
                    z(vi, Bt);
                  };
                  ge(Ht, (vi) => {
                    typeof g($e).output[g(it)] != "string" ? vi(mi) : vi(un, !1);
                  });
                }
                z(Vt, hi);
              };
              ge(Gt, (Vt) => {
                g(U).indexOf(g(it)) === -1 && !g(it).startsWith("mzn_vis_") && Vt(li);
              });
            }
            z(je, he);
          }), Ct(4), z(pt, Bi);
        }, yt = (pt) => {
          var Bi = Wt(), mt = Le(Bi);
          {
            var je = (he) => {
              var Gt = e6(), li = ie(R(Gt), 4);
              _i(li, 1, () => Y(g($e), g(U)), Ri, (Vt, hi) => {
                var Ht = Wt(), mi = Le(Ht);
                {
                  var un = (Bt) => {
                    var Ot = J8(), tt = R(Ot, !0);
                    C(Ot), we(() => dt(tt, g(hi).message)), z(Bt, Ot);
                  }, vi = (Bt) => {
                    var Ot = Wt(), tt = Le(Ot);
                    {
                      var ai = (ci) => {
                        var Qt = Wt(), Ei = Le(Qt);
                        {
                          var Ti = ($n) => {
                            mg($n, {
                              get msg() {
                                return g(hi);
                              },
                              $$events: {
                                goto(qi) {
                                  Mv.call(this, e, qi);
                                }
                              }
                            });
                          };
                          ge(Ei, ($n) => {
                            (g(hi).type === "error" && g(W) || g(hi).type === "warning" && g(_)) && $n(Ti);
                          });
                        }
                        z(ci, Qt);
                      };
                      ge(
                        tt,
                        (ci) => {
                          (g(hi).type === "error" || g(hi).type === "warning") && ci(ai);
                        },
                        !0
                      );
                    }
                    z(Bt, Ot);
                  };
                  ge(mi, (Bt) => {
                    g(hi).type === "text" ? Bt(un) : Bt(vi, !1);
                  });
                }
                z(Vt, Ht);
              }), C(Gt), z(he, Gt);
            }, it = (he) => {
              var Gt = Wt(), li = Le(Gt);
              {
                var Vt = (Ht) => {
                  var mi = Wt(), un = Le(mi);
                  {
                    var vi = (Bt) => {
                      var Ot = t6(), tt = Le(Ot), ai = R(tt);
                      C(tt), Ct(2), we((ci) => dt(ai, `% time elapsed: ${ci ?? ""}`), [() => I(g($e).time)], gi), z(Bt, Ot);
                    };
                    ge(un, (Bt) => {
                      g(x) && Bt(vi);
                    });
                  }
                  z(Ht, mi);
                }, hi = (Ht) => {
                  var mi = Wt(), un = Le(mi);
                  {
                    var vi = (Ot) => {
                      var tt = Wt(), ai = Le(tt);
                      {
                        var ci = (Qt) => {
                          var Ei = Wt(), Ti = Le(Ei);
                          {
                            var $n = (qn) => {
                              var Qi = i6(), yn = Le(Qi), vs = R(yn, !0);
                              C(yn), Ct(2), we(
                                (Ss) => dt(vs, Ss),
                                [
                                  () => JSON.stringify(g($e).message, null, 2)
                                ],
                                gi
                              ), z(qn, Qi);
                            }, qi = (qn) => {
                              var Qi = n6(), yn = R(Qi, !0);
                              C(Qi), we(() => dt(yn, g($e).message)), z(qn, Qi);
                            };
                            ge(Ti, (qn) => {
                              typeof g($e).message != "string" ? qn($n) : qn(qi, !1);
                            });
                          }
                          z(Qt, Ei);
                        };
                        ge(ai, (Qt) => {
                          g(U).indexOf(g($e).section) === -1 && !g($e).section.startsWith("mzn_vis_") && Qt(ci);
                        });
                      }
                      z(Ot, tt);
                    }, Bt = (Ot) => {
                      var tt = Wt(), ai = Le(tt);
                      {
                        var ci = (Ei) => {
                          var Ti = r6(), $n = R(Ti, !0);
                          C(Ti), we(() => dt($n, g($e).comment)), z(Ei, Ti);
                        }, Qt = (Ei) => {
                          var Ti = Wt(), $n = Le(Ti);
                          {
                            var qi = (Qi) => {
                              var yn = Wt(), vs = Le(yn);
                              {
                                var Ss = (bs) => {
                                  var Ii = s6(), er = R(Ii, !0);
                                  C(Ii), we(() => dt(er, g($e).value)), z(bs, Ii);
                                };
                                ge(vs, (bs) => {
                                  g(A) && bs(Ss);
                                });
                              }
                              z(Qi, yn);
                            }, qn = (Qi) => {
                              var yn = Wt(), vs = Le(yn);
                              {
                                var Ss = (Ii) => {
                                  var er = Wt(), tr = Le(er);
                                  {
                                    var to = (wr) => {
                                      var hn = l6(), Ln = Le(hn);
                                      _i(Ln, 1, () => Object.keys(g($e).statistics), Ri, (io, Pr) => {
                                        var Et = o6(), Qn = Le(Et), ir = ie(R(Qn));
                                        C(Qn), Ct(2), we(() => dt(ir, ` ${g(Pr) ?? ""}=${g($e).statistics[g(Pr)] ?? ""}`)), z(io, Et);
                                      }), Ct(4), z(wr, hn);
                                    };
                                    ge(tr, (wr) => {
                                      g(k) && wr(to);
                                    });
                                  }
                                  z(Ii, er);
                                }, bs = (Ii) => {
                                  var er = Wt(), tr = Le(er);
                                  {
                                    var to = (hn) => {
                                      var Ln = a6();
                                      Ct(2), z(hn, Ln);
                                    }, wr = (hn) => {
                                      var Ln = Wt(), io = Le(Ln);
                                      {
                                        var Pr = (Qn) => {
                                          var ir = c6(), xr = Le(ir), $s = R(xr, !0);
                                          C(xr), Ct(2), we(() => dt($s, N[g($e).status])), z(Qn, ir);
                                        }, Et = (Qn) => {
                                          var ir = Wt(), xr = Le(ir);
                                          {
                                            var $s = (On) => {
                                              var Ni = Wt(), Ir = Le(Ni);
                                              {
                                                var ys = (kr) => {
                                                  mg(kr, {
                                                    get msg() {
                                                      return g($e);
                                                    },
                                                    $$events: {
                                                      goto(Qs) {
                                                        Mv.call(this, e, Qs);
                                                      }
                                                    }
                                                  });
                                                };
                                                ge(Ir, (kr) => {
                                                  (g($e).type === "error" && g(W) || g($e).type === "warning" && g(_)) && kr(ys);
                                                });
                                              }
                                              z(On, Ni);
                                            }, wa = (On) => {
                                              var Ni = Wt(), Ir = Le(Ni);
                                              {
                                                var ys = (kr) => {
                                                  var Qs = u6(), qo = Le(Qs);
                                                  {
                                                    var _r = (Ps) => {
                                                      var dl = f6(), wn = Le(dl), Dn = R(wn);
                                                      C(wn), Ct(2), we(() => dt(Dn, `Process finished with non-zero exit code ${g($e).code ?? ""}.`)), z(Ps, dl);
                                                    };
                                                    ge(qo, (Ps) => {
                                                      g($e).code && Ps(_r);
                                                    });
                                                  }
                                                  var Ol = ie(qo, 2), ws = R(Ol);
                                                  C(Ol), we(
                                                    (Ps) => dt(ws, `Finished in ${Ps ?? ""}.`),
                                                    [
                                                      () => I(g($e).runTime)
                                                    ],
                                                    gi
                                                  ), z(kr, Qs);
                                                };
                                                ge(
                                                  Ir,
                                                  (kr) => {
                                                    g($e).type === "exit" && kr(ys);
                                                  },
                                                  !0
                                                );
                                              }
                                              z(On, Ni);
                                            };
                                            ge(
                                              xr,
                                              (On) => {
                                                g($e).type === "error" || g($e).type === "warning" ? On($s) : On(wa, !1);
                                              },
                                              !0
                                            );
                                          }
                                          z(Qn, ir);
                                        };
                                        ge(
                                          io,
                                          (Qn) => {
                                            g($e).type === "status" ? Qn(Pr) : Qn(Et, !1);
                                          },
                                          !0
                                        );
                                      }
                                      z(hn, Ln);
                                    };
                                    ge(
                                      tr,
                                      (hn) => {
                                        g($e).type === "cancel" ? hn(to) : hn(wr, !1);
                                      },
                                      !0
                                    );
                                  }
                                  z(Ii, er);
                                };
                                ge(
                                  vs,
                                  (Ii) => {
                                    g($e).type === "statistics" ? Ii(Ss) : Ii(bs, !1);
                                  },
                                  !0
                                );
                              }
                              z(Qi, yn);
                            };
                            ge(
                              $n,
                              (Qi) => {
                                g($e).type === "stderr" ? Qi(qi) : Qi(qn, !1);
                              },
                              !0
                            );
                          }
                          z(Ei, Ti);
                        };
                        ge(
                          ai,
                          (Ei) => {
                            g($e).type === "comment" ? Ei(ci) : Ei(Qt, !1);
                          },
                          !0
                        );
                      }
                      z(Ot, tt);
                    };
                    ge(
                      un,
                      (Ot) => {
                        g($e).type === "trace" ? Ot(vi) : Ot(Bt, !1);
                      },
                      !0
                    );
                  }
                  z(Ht, mi);
                };
                ge(
                  li,
                  (Ht) => {
                    g($e).type === "time" ? Ht(Vt) : Ht(hi, !1);
                  },
                  !0
                );
              }
              z(he, Gt);
            };
            ge(
              mt,
              (he) => {
                g($e).type === "checker" ? he(je) : he(it, !1);
              },
              !0
            );
          }
          z(pt, Bi);
        };
        ge(Ze, (pt) => {
          g($e).type === "solution" ? pt(Ie) : pt(yt, !1);
        });
      }
      z(oe, Ae);
    }), C(ce), C(Re), we((oe) => dt(H, ` ${oe ?? ""}`), [() => g(Oe).files.join(", ")], gi), z(re, Re);
  }), C(xe), Xi(xe, (re) => M(w, re), () => g(w)), C(We), C(se), we(() => {
    Ge(be, "is-empty", !m() && !b()), Ge(be, "is-tab", y());
  }), z(i, se), ji({
    get output() {
      return u();
    },
    set output(re) {
      u(re), pe();
    },
    get autoClearOutput() {
      return h();
    },
    set autoClearOutput(re) {
      h(re), pe();
    },
    get showClearOutput() {
      return d();
    },
    set showClearOutput(re) {
      d(re), pe();
    },
    get showAutoClearOutput() {
      return p();
    },
    set showAutoClearOutput(re) {
      p(re), pe();
    },
    get showSectionToggles() {
      return m();
    },
    set showSectionToggles(re) {
      m(re), pe();
    },
    get showRightControls() {
      return b();
    },
    set showRightControls(re) {
      b(re), pe();
    },
    get isTab() {
      return y();
    },
    set isTab(re) {
      y(re), pe();
    },
    $set: cn,
    $on: (re, Oe) => an(e, re, Oe)
  });
}
const d6 = `const MiniZincIDE = (() => {
    const callbacks = {};
    const responses = [];
    const freeSlots = [];
    let userData;

    window.addEventListener('message', (e) => {
        switch (e.data.event) {
            case 'response': {
                resolveResponse(e.data.id, e.data.payload);
                break;
            }
            case 'error': {
                rejectResponse(e.data.id, e.data.message);
                break;
            }
            default:
                if (e.data.event in callbacks) {
                    callbacks[e.data.event].forEach((callback) => {
                        callback(e.data.payload);
                    });
                }
                break;
        }
    });

    function resolveResponse(index, payload) {
        const { resolve } = responses[index];
        resolve(payload);
        responses[index] = null;
        freeSlots.push(index);
    }

    function rejectResponse(index, message) {
        const { reject } = responses[index];
        reject(message);
        responses[index] = null;
        freeSlots.push(index);
    }

    function createPromise(message) {
        return new Promise((resolve, reject) => {
            const id =
                freeSlots.length > 0 ? freeSlots.pop() : responses.length;
            responses[id] = { resolve, reject };
            window.parent.postMessage(
                {
                    ...message,
                    id,
                },
                '*',
            );
        });
    }

    function on(event, callback) {
        if (!(event in callbacks)) {
            callbacks[event] = new Set();
        }
        callbacks[event].add(callback);
    }
    function off(event, callback) {
        if (event in callbacks) {
            callbacks[event].delete(callback);
        }
    }
    function getUserData() {
        return new Promise((resolve, reject) => {
            if (userData === undefined) {
                on('init', (data) => {
                    userData = data;
                    resolve(userData);
                });
            } else {
                resolve(userData);
            }
        });
    }
    function goToSolution(idx) {
        window.parent.postMessage(
            {
                event: 'rebroadcast',
                message: {
                    event: 'goToSolution',
                    payload: idx,
                },
            },
            '*',
        );
    }
    function solve(modelFile, dataFiles, options) {
        window.parent.postMessage(
            {
                event: 'solve',
                modelFile,
                dataFiles,
                options,
            },
            '*',
        );
    }
    function getNumSolutions() {
        return createPromise({
            event: 'getNumSolutions',
        });
    }
    function getSolution(index) {
        return createPromise({
            event: 'getSolution',
            index,
        });
    }
    function getAllSolutions() {
        return createPromise({
            event: 'getAllSolutions',
        });
    }
    function getStatus() {
        return createPromise({
            event: 'getStatus',
        });
    }
    function getFinishTime() {
        return createPromise({
            event: 'getFinishTime',
        });
    }

    return {
        getUserData,
        on,
        off,
        goToSolution,
        solve,
        getNumSolutions,
        getSolution,
        getAllSolutions,
        getStatus,
        getFinishTime,
    };
})();
`, p6 = URL.createObjectURL(new Blob([d6], { type: "text/html; charset=utf-8" }));
var g6 = /* @__PURE__ */ ne('<div class="top svelte-g2g7zr"><div class="solution-label svelte-g2g7zr"><span>Solution:</span></div> <div><input class="input is-small" type="number"></div> <div class="solution-slider svelte-g2g7zr"><input type="range" class="svelte-g2g7zr"></div> <div class="field has-addons svelte-g2g7zr"><p class="control"><button class="button is-small" title="Follow latest solution"><span class="icon"><!></span></button></p></div></div>'), m6 = /* @__PURE__ */ ne('<iframe class="vis-window svelte-g2g7zr" title="Visualisation"></iframe>'), v6 = /* @__PURE__ */ ne('<div class="stack svelte-g2g7zr"><!> <div class="grow svelte-g2g7zr"><div class="vis-grid svelte-g2g7zr"></div></div></div>');
function eP(i, e) {
  if (new.target) return on({ component: eP, ...i });
  zi(e, !1);
  const t = fe(), n = Jn();
  let r = ve(e, "files", 28, () => []), s = !0, o = fe(!0), a = 0, c = fe(0), u = fe(0), h = fe([]), d = null, p = null;
  function m() {
    for (const N of g(h)) {
      URL.revokeObjectURL(N.url);
      for (const j of N.extraUrls)
        URL.revokeObjectURL(j);
    }
    s = !0, M(o, !0), a = 0, M(c, 0), M(u, 0), M(h, []), d = null, p = null;
  }
  function b(N, j, I) {
    let Y;
    const se = new Promise((We, xe) => {
      Y = We;
    });
    se.then((We) => {
      We.contentWindow.postMessage({ event: "init", payload: I }, "*");
    });
    const be = r().reduce((We, xe) => ({ ...We, [xe.name]: xe.state.doc.toString() }), {}), ze = [], Ve = new DOMParser().parseFromString(j, "text/html");
    for (const We of Ve.getElementsByTagName("script")) {
      const xe = We.getAttribute("src");
      if (xe === "/minizinc-ide.js")
        We.src = p6;
      else if (xe in be && xe.endsWith(".js")) {
        const re = URL.createObjectURL(new Blob([be[xe]], { type: "text/javascript; charset=utf-8" }));
        We.src = re, ze.push(re);
      }
    }
    for (const We of Ve.getElementsByTagName("link")) {
      const xe = We.getAttribute("href");
      if (xe in be && xe.endsWith(".css")) {
        const re = URL.createObjectURL(new Blob([be[xe]], { type: "text/css; charset=utf-8" }));
        We.href = re, ze.push(re);
      }
    }
    const Xe = new XMLSerializer().serializeToString(Ve.doctype) + Ve.documentElement.outerHTML, Ee = URL.createObjectURL(new Blob([Xe], { type: "text/html; charset=utf-8" }));
    M(h, [
      ...g(h),
      {
        key: N,
        url: Ee,
        extraUrls: ze,
        makeReady: Y,
        ready: se,
        solutions: [],
        element: null
      }
    ]);
  }
  function y(N, j) {
    for (const I in N) {
      const Y = g(h).find((be) => be.key === I);
      if (!Y) {
        console.error(`Did not find visualisation for ${I}`);
        continue;
      }
      const se = { time: j, data: N[I] };
      Y.solutions.push(se), x({ event: "solution", payload: se }, Y);
    }
    Oo(u);
  }
  function w(N, j) {
    d = { status: N, time: j };
    for (let I = 0; I < g(h).length; I++)
      x({ event: "status", payload: d }, g(h)[I]);
  }
  function k(N) {
    p = N;
    for (let j = 0; j < g(h).length; j++)
      x({ event: "finish", payload: p }, g(h)[j]);
  }
  function A(N) {
    const j = N.data, I = g(h).find((Y) => Y.element.contentWindow === N.source);
    switch (j.event) {
      case "rebroadcast":
        for (const se of g(h))
          x(j.message, se);
        j.message.event === "goToSolution" && (s = j.message.payload === -1, M(o, j.message.payload === -1), a = j.message.payload + 1, M(c, j.message.payload + 1));
        break;
      case "solve":
        n("solve", {
          modelFile: j.modelFile,
          dataFiles: j.dataFiles,
          options: j.options
        });
        break;
      case "getNumSolutions":
        x(
          {
            event: "response",
            id: j.id,
            payload: I.solutions.length
          },
          I
        );
        break;
      case "getSolution":
        const Y = j.index < 0 ? j.index + I.solutions.length : j.index;
        if (Y < 0 || Y >= I.solutions.length)
          x(
            {
              event: "error",
              id: j.id,
              message: "Solution index out of range"
            },
            I
          );
        else {
          x(
            {
              event: "response",
              id: j.id,
              payload: I.solutions[j.index === -1 ? I.solutions.length - 1 : j.index]
            },
            I
          );
          break;
        }
      case "getAllSolutions":
        x(
          {
            event: "response",
            id: j.id,
            payload: I.solutions
          },
          I
        );
        break;
      case "getStatus":
        x(
          {
            event: "response",
            id: j.id,
            payload: d
          },
          I
        );
        break;
      case "getFinishTime":
        x(
          {
            event: "response",
            id: j.id,
            payload: p
          },
          I
        );
        break;
    }
  }
  async function x(N, j) {
    await j.ready, j.element.contentWindow.postMessage(N, "*");
  }
  function _(N, j, I) {
    if (g(o) && a === g(c) && (a = g(u), M(c, g(u))), g(o) !== s) {
      s = g(o);
      for (const Y of g(h))
        x(
          {
            event: "goToSolution",
            payload: g(o) ? -1 : g(c) - 1
          },
          Y
        );
    }
    if (a !== g(c)) {
      a = g(c), s = !1, M(o, !1);
      for (const Y of g(h))
        x(
          {
            event: "goToSolution",
            payload: g(c) - 1
          },
          Y
        );
    }
  }
  Be(() => g(h), () => {
    M(t, Math.ceil(Math.sqrt(g(h).length)));
  }), Be(
    () => (g(c), g(o), g(u)),
    () => {
      _(g(c), g(o), g(u));
    }
  ), En(), ln();
  var W = v6();
  Pe("message", fp, A);
  var D = R(W);
  {
    var q = (N) => {
      var j = g6(), I = ie(R(j), 2), Y = R(I);
      en(Y), C(I);
      var se = ie(I, 2), be = R(se);
      en(be), C(se);
      var ze = ie(se, 2), Ve = R(ze), Xe = R(Ve), Ee = R(Xe), We = R(Ee);
      zt(We, { icon: P3 }), C(Ee), C(Xe), C(Ve), C(ze), C(j), we(() => {
        ct(Y, "min", g(u) > 0 ? 1 : 0), ct(Y, "max", g(u)), ct(be, "min", g(u) > 0 ? 1 : 0), ct(be, "max", g(u)), Ge(Xe, "is-primary", g(o)), Ge(Xe, "is-light", !g(o));
      }), sl(Y, () => g(c), (xe) => M(c, xe)), sl(be, () => g(c), (xe) => M(c, xe)), Pe("click", Xe, () => M(o, !g(o))), z(N, j);
    };
    ge(D, (N) => {
      g(u) > 0 && N(q);
    });
  }
  var V = ie(D, 2), U = R(V);
  return _i(U, 5, () => g(h), Ri, (N, j, I) => {
    var Y = m6();
    Xi(
      Y,
      (se, be) => (be.element = se, nl(() => g(h))),
      (se) => se == null ? void 0 : se.element,
      () => [g(j)]
    ), we(() => ct(Y, "src", g(j).url)), Pe("load", Y, (se) => g(j).makeReady(se.target)), z(N, Y);
  }), C(U), C(V), C(W), we(() => HZ(U, "grid-template-columns", `repeat(${g(t)}, auto)`)), z(i, W), bi(e, "reset", m), bi(e, "addVisualisation", b), bi(e, "addSolution", y), bi(e, "status", w), bi(e, "finish", k), ji({
    reset: m,
    addVisualisation: b,
    addSolution: y,
    status: w,
    finish: k,
    get files() {
      return r();
    },
    set files(N) {
      r(N), pe();
    },
    $set: cn,
    $on: (N, j) => an(e, N, j)
  });
}
const hb = [
  ".mzn",
  ".mzc",
  ".dzn",
  ".json",
  ".html",
  ".js",
  ".css"
];
async function S6(i) {
  const e = i.startsWith("http://") || i.startsWith("https://") ? i : `http://${i}`, t = e.split("/").pop();
  if (!t.endsWith(".mzp") && hb.every((r) => !t.endsWith(r)))
    throw new Error("File type not recognised");
  const n = await fetch(new URL(e));
  if (!n.ok)
    throw new Error(
      `Request failed (${n.status} ${n.statusText})`
    );
  if (t.endsWith(".mzp")) {
    const r = await n.json(), s = [], o = r.openFiles[r.openTab];
    let a = 0;
    for (const u of r.projectFiles) {
      const h = u.split("/").pop();
      if (hb.every((m) => !h.endsWith(m)))
        continue;
      u === o && (a = s.length);
      const d = await fetch(new URL(u, e));
      if (!d.ok)
        throw new Error(
          `Request failed (${d.status} ${d.statusText})`
        );
      const p = await d.text();
      s.push({
        name: h,
        contents: p,
        hidden: r.openFiles.indexOf(u) === -1
      });
    }
    let c = r.selectedBuiltinConfigId;
    return c === "org.gecode.gecode" ? c = "org.minizinc.gecode_presolver" : c === "org.chuffed.chuffed" && (c = "org.minizinc.chuffed"), {
      files: s,
      tab: a,
      solverId: c,
      timestamp: Date.now()
    };
  } else {
    const r = await n.text();
    return { files: [{ name: t, contents: r }], timestamp: Date.now() };
  }
}
var b6 = /* @__PURE__ */ ne('<div class="error svelte-6l40ed"> </div>'), $6 = /* @__PURE__ */ ne('<!> <div class="field"><p class="control is-expanded"><input class="input" type="text" pattern=".+\\.(mzn|dzn|json|js|html|css|mzp|mzc)" required></p></div>', 1), y6 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-primary">OK</button> <button class="button" type="button">Cancel</button></div>'), Q6 = /* @__PURE__ */ ne('<aside class="menu"><p class="menu-label">Model</p> <ul class="menu-list"><li><button type="button">Model file (.mzn)</button></li> <li><button type="button">Solution checker model (.mzc.mzn)</button></li></ul> <p class="menu-label">Data</p> <ul class="menu-list"><li><button type="button">Data file (.dzn)</button></li> <li><button type="button">JSON data file (.json)</button></li></ul> <p class="menu-label">Visualisation</p> <ul class="menu-list"><li><button type="button">Custom visualisation (.html)</button></li></ul> <p class="menu-label">Import</p> <ul class="menu-list"><li><button type="button">Upload file(s)</button></li> <li><button type="button">Import from URL</button></li></ul></aside>'), w6 = /* @__PURE__ */ ne('<!> <input class="is-hidden svelte-6l40ed" type="file" multiple accept=".mzn,.mzc,.dzn,.json,.html,.js,.css">', 1);
function tP(i, e) {
  if (new.target) return on({ component: tP, ...i });
  zi(e, !1);
  let t = ve(e, "active", 12, !1);
  const n = Jn();
  let r = fe(), s = fe(), o = fe(), a = fe(""), c = fe(!1), u = fe(null);
  function h(x) {
    M(c, !1), M(a, ""), M(u, null);
  }
  async function d() {
    await Dr(), g(o) && g(o).focus();
  }
  async function p() {
    const x = [];
    for (const W of g(s))
      x.push(new Promise((D, q) => {
        const V = new FileReader();
        V.onload = () => {
          D({ name: W.name, contents: V.result });
        }, V.onerror = (U) => q(U), V.readAsText(W);
      }));
    const _ = await Promise.all(x);
    n("open", { files: _ });
  }
  async function m() {
    try {
      n("open", await S6(g(a)));
    } catch (x) {
      M(u, `Failed to import from URL: ${x.message || x}`), console.error(x);
    }
  }
  Be(() => Rt(t()), () => {
    h(t());
  }), En(), ln();
  var b = w6(), y = Le(b);
  {
    var w = (x) => {
      Zo(x, {
        get active() {
          return t();
        },
        title: "Import from URL",
        $$events: {
          activate: d,
          cancel: () => n("cancel"),
          submit: m
        },
        children: (_, W) => {
          var D = $6(), q = Le(D);
          {
            var V = (I) => {
              var Y = b6(), se = R(Y, !0);
              C(Y), we(() => dt(se, g(u))), z(I, Y);
            };
            ge(q, (I) => {
              g(u) && I(V);
            });
          }
          var U = ie(q, 2), N = R(U), j = R(N);
          en(j), Xi(j, (I) => M(o, I), () => g(o)), C(N), C(U), sl(j, () => g(a), (I) => M(a, I)), z(_, D);
        },
        $$slots: {
          default: !0,
          footer: (_, W) => {
            var D = y6(), q = ie(R(D), 2);
            C(D), Pe("click", q, () => n("cancel")), z(_, D);
          }
        }
      });
    }, k = (x) => {
      Zo(x, {
        get active() {
          return t();
        },
        title: "Create new file",
        $$events: {
          activate: d,
          cancel: () => n("cancel")
        },
        children: (_, W) => {
          var D = Q6(), q = ie(R(D), 2), V = R(q), U = R(V);
          Xi(U, (Ye) => M(o, Ye), () => g(o)), C(V);
          var N = ie(V, 2), j = R(N);
          C(N), C(q);
          var I = ie(q, 4), Y = R(I), se = R(Y);
          C(Y);
          var be = ie(Y, 2), ze = R(be);
          C(be), C(I);
          var Ve = ie(I, 4), Xe = R(Ve), Ee = R(Xe);
          C(Xe), C(Ve);
          var We = ie(Ve, 4), xe = R(We), re = R(xe);
          C(xe);
          var Oe = ie(xe, 2), Re = R(Oe);
          C(Oe), C(We), C(D), Pe("click", U, () => n("new", { type: ".mzn" })), Pe("click", j, () => n("new", { type: ".mzc.mzn" })), Pe("click", se, () => n("new", { type: ".dzn" })), Pe("click", ze, () => n("new", { type: ".json" })), Pe("click", Ee, () => n("new", { type: ".html" })), Pe("click", re, () => g(r).click()), Pe("click", Re, () => M(c, !0)), z(_, D);
        },
        $$slots: { default: !0 }
      });
    };
    ge(y, (x) => {
      g(c) ? x(w) : x(k, !1);
    });
  }
  var A = ie(y, 2);
  return Xi(A, (x) => M(r, x), () => g(r)), n5(A, () => g(s), (x) => M(s, x)), Pe("change", A, p), z(i, b), ji({
    get active() {
      return t();
    },
    set active(x) {
      t(x), pe();
    },
    $set: cn,
    $on: (x, _) => an(e, x, _)
  });
}
var P6 = /* @__PURE__ */ ne('<button class="button is-small is-light" title="Compiled checkers are read only" type="button" disabled><span class="icon"><!></span></button>'), x6 = /* @__PURE__ */ ne('<button class="button is-small" type="button"><span class="icon"><!></span></button>'), k6 = /* @__PURE__ */ ne('<tr><td> </td><td><div class="tool-buttons svelte-1bgv9sn"><div class="field is-grouped"><p class="control"><button class="button is-small" type="button"><span class="icon"><!></span></button></p> <p class="control"><!></p> <p class="control"><button class="button is-small is-danger" title="Delete this file" type="button"><span class="icon"><!></span></button></p></div></div></td></tr>'), _6 = /* @__PURE__ */ ne('<p> </p> <table class="table is-fullwidth"><tbody></tbody></table>', 1), W6 = /* @__PURE__ */ ne('<!> <div><button class="button is-fullwidth" type="button"><span class="icon"><!></span> <span>Add new</span></button></div>', 1), T6 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-primary">Accept</button></div>');
function iP(i, e) {
  if (new.target) return on({ component: iP, ...i });
  zi(e, !1);
  const t = fe(), n = fe(), r = fe(), s = fe(), o = fe(), a = fe();
  let c = ve(e, "active", 12, !1), u = ve(e, "files", 28, () => []);
  const h = Jn();
  function d() {
    h("close");
  }
  return Be(() => Rt(u()), () => {
    M(t, u().map((p, m) => ({ file: p, index: m })));
  }), Be(() => g(t), () => {
    M(n, g(t).filter((p) => p.file.name.endsWith(".mzn") && !p.file.name.endsWith(".mzc.mzn")).sort((p, m) => p.file.name.localeCompare(m.file.name)));
  }), Be(() => g(t), () => {
    M(r, g(t).filter((p) => p.file.name.endsWith(".dzn") || p.file.name.endsWith(".json")).sort((p, m) => p.file.name.localeCompare(m.file.name)));
  }), Be(() => g(t), () => {
    M(s, g(t).filter((p) => p.file.name.endsWith(".mzc") || p.file.name.endsWith(".mzc.mzn")).sort((p, m) => p.file.name.localeCompare(m.file.name)));
  }), Be(() => g(t), () => {
    M(o, g(t).filter((p) => !p.file.name.endsWith(".mzn") && !p.file.name.endsWith(".mzc") && !p.file.name.endsWith(".dzn") && !p.file.name.endsWith(".json")).sort((p, m) => p.file.name.localeCompare(m.file.name)));
  }), Be(
    () => (g(n), g(r), g(s), g(o)),
    () => {
      M(a, [
        {
          label: "Model files",
          files: g(n)
        },
        { label: "Data files", files: g(r) },
        {
          label: "Solution checkers",
          files: g(s)
        },
        { label: "Other files", files: g(o) }
      ].filter((p) => p.files.length > 0));
    }
  ), En(), ln(), Zo(i, {
    get active() {
      return c();
    },
    title: "Manage files",
    $$events: { submit: d, cancel: d },
    children: (p, m) => {
      var b = W6(), y = Le(b);
      _i(y, 1, () => g(a), Ri, (_, W) => {
        var D = _6(), q = Le(D), V = R(q, !0);
        C(q);
        var U = ie(q, 2), N = R(U);
        _i(N, 5, () => g(W).files, Ri, (j, I) => {
          let Y = () => g(I).file, se = () => g(I).index;
          var be = k6(), ze = R(be), Ve = R(ze, !0);
          C(ze);
          var Xe = ie(ze), Ee = R(Xe), We = R(Ee), xe = R(We), re = R(xe), Oe = R(re), Re = R(Oe);
          const Ye = /* @__PURE__ */ gi(() => Y().hidden ? $3 : x3);
          zt(Re, {
            get icon() {
              return g(Ye);
            }
          }), C(Oe), C(re), C(xe);
          var Ne = ie(xe, 2), He = R(Ne);
          {
            var ue = (Ze) => {
              var Ie = P6(), yt = R(Ie), pt = R(yt);
              zt(pt, { icon: z1 }), C(yt), C(Ie), z(Ze, Ie);
            }, H = (Ze) => {
              var Ie = x6(), yt = R(Ie), pt = R(yt);
              const Bi = /* @__PURE__ */ gi(() => Y().readOnly ? z1 : w3);
              zt(pt, {
                get icon() {
                  return g(Bi);
                }
              }), C(yt), C(Ie), we(() => {
                ct(Ie, "title", `Click to ${(Y().readOnly ? "unlock" : "lock") ?? ""} this file for editing`), Ge(Ie, "is-primary", !Y().readOnly), Ge(Ie, "is-light", Y().readOnly);
              }), Pe("click", Ie, () => h("modifyFile", {
                index: se(),
                options: { readOnly: !Y().readOnly }
              })), z(Ze, Ie);
            };
            ge(He, (Ze) => {
              Y().name.endsWith(".mzc") ? Ze(ue) : Ze(H, !1);
            });
          }
          C(Ne);
          var ce = ie(Ne, 2), oe = R(ce), $e = R(oe), Ae = R($e);
          zt(Ae, { icon: Xy }), C($e), C(oe), C(ce), C(We), C(Ee), C(Xe), C(be), we(() => {
            dt(Ve, Y().name), ct(re, "title", `Click to ${(Y().hidden ? "show" : "hide") ?? ""} this file`), Ge(re, "is-primary", !Y().hidden), Ge(re, "is-light", Y().hidden);
          }), Pe("click", re, () => h("modifyFile", {
            index: se(),
            options: { hidden: !Y().hidden }
          })), Pe("click", oe, () => h("delete", { index: se() })), z(j, be);
        }), C(N), C(U), we(() => dt(V, g(W).label)), z(_, D);
      });
      var w = ie(y, 2), k = R(w), A = R(k), x = R(A);
      zt(x, { icon: My }), C(A), Ct(2), C(k), C(w), Pe("click", k, () => h("newFile")), z(p, b);
    },
    $$slots: {
      default: !0,
      footer: (p, m) => {
        var b = T6();
        z(p, b);
      }
    }
  }), ji({
    get active() {
      return c();
    },
    set active(p) {
      c(p), pe();
    },
    get files() {
      return u();
    },
    set files(p) {
      u(p), pe();
    },
    $set: cn,
    $on: (p, m) => an(e, p, m)
  });
}
var Z6 = /* @__PURE__ */ ne('<option class="svelte-1x5266v"> </option>'), C6 = /* @__PURE__ */ ne('<div class="select is-fullwidth is-multiple svelte-1x5266v"><select class="svelte-1x5266v"></select></div>'), R6 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-primary">OK</button> <button type="button" class="button">Cancel</button></div>');
function nP(i, e) {
  if (new.target) return on({ component: nP, ...i });
  zi(e, !1);
  const t = Jn();
  let n = ve(e, "modelFiles", 12), r = ve(e, "active", 12, !1), s = fe(null);
  function o(c) {
    !g(s) && c && c.length > 0 && M(s, c[0]);
  }
  function a() {
    t("accept", { modelFile: g(s) });
  }
  return Be(() => Rt(n()), () => {
    o(n());
  }), En(), ln(), Zo(i, {
    get active() {
      return r();
    },
    title: "Select model to run",
    $$events: {
      submit: a,
      cancel: () => t("cancel")
    },
    children: (c, u) => {
      var h = C6(), d = R(h);
      we(() => {
        g(s), nl(() => {
          n();
        });
      }), _i(d, 5, n, Ri, (p, m) => {
        var b = Z6(), y = {}, w = R(b, !0);
        C(b), we(() => {
          y !== (y = g(m)) && (b.value = (b.__value = g(m)) == null ? "" : g(m)), dt(w, g(m));
        }), z(p, b);
      }), C(d), C(h), we((p) => ct(d, "size", p), [() => Math.min(8, n().length)], gi), ch(d, () => g(s), (p) => M(s, p)), z(c, h);
    },
    $$slots: {
      default: !0,
      footer: (c, u) => {
        var h = R6(), d = ie(R(h), 2);
        C(h), Pe("click", d, () => t("cancel")), z(c, h);
      }
    }
  }), ji({
    get modelFiles() {
      return n();
    },
    set modelFiles(c) {
      n(c), pe();
    },
    get active() {
      return r();
    },
    set active(c) {
      r(c), pe();
    },
    $set: cn,
    $on: (c, u) => an(e, c, u)
  });
}
var A6 = /* @__PURE__ */ ne('<div class="tabs"><ul><li><a>Enter parameters</a></li> <li><a>Select data file</a></li></ul></div>'), X6 = /* @__PURE__ */ ne("<option> </option>"), M6 = /* @__PURE__ */ ne('<div class="select is-fullwidth is-multiple"><select multiple></select></div>'), E6 = /* @__PURE__ */ ne('<input class="input svelte-7d5f7m">'), q6 = /* @__PURE__ */ ne('<input class="input svelte-7d5f7m">'), L6 = /* @__PURE__ */ ne('<div class="param svelte-7d5f7m"><span> </span> <!></div>'), D6 = /* @__PURE__ */ ne("<!> <!>", 1), V6 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-primary">OK</button> <button type="button" class="button">Cancel</button></div>');
function rP(i, e) {
  if (new.target) return on({ component: rP, ...i });
  zi(e, !1);
  const t = fe(), n = fe(), r = Jn();
  let s = ve(e, "active", 12, !1), o = ve(e, "parameters", 12), a = ve(e, "dataFiles", 12), c = fe(!0), u = fe([]), h = fe([]), d = fe();
  async function p() {
    await Dr(), g(d) && g(d).focus();
  }
  function m(y) {
    M(h, Object.keys(y).sort().map((w) => y[w] === void 0 ? { name: w, value: "" } : { name: w, value: y[w] }));
  }
  function b() {
    g(n) ? r("accept", { dataFiles: g(u) }) : r("accept", {
      parameters: g(h).reduce((y, w) => ({ ...y, [w.name]: w.value }), {})
    });
  }
  return Be(() => Rt(o()), () => {
    m(o());
  }), Be(() => Rt(a()), () => {
    M(t, a().length > 0);
  }), Be(() => (g(t), g(c)), () => {
    M(n, g(t) && g(c));
  }), En(), ln(), Zo(i, {
    get active() {
      return s();
    },
    title: "Model parameters",
    $$events: {
      activate: p,
      submit: b,
      cancel: () => r("cancel")
    },
    children: (y, w) => {
      var k = D6(), A = Le(k);
      {
        var x = (q) => {
          var V = A6(), U = R(V), N = R(U), j = R(N);
          C(N);
          var I = ie(N, 2), Y = R(I);
          C(I), C(U), C(V), we(() => {
            Ge(N, "is-active", !g(c)), Ge(I, "is-active", g(c));
          }), Pe("click", j, () => M(c, !1)), Pe("click", Y, () => M(c, !0)), z(q, V);
        };
        ge(A, (q) => {
          g(t) && q(x);
        });
      }
      var _ = ie(A, 2);
      {
        var W = (q) => {
          var V = M6(), U = R(V);
          we(() => {
            g(u), nl(() => {
              g(d), a();
            });
          }), _i(U, 5, a, Ri, (N, j) => {
            var I = X6(), Y = {}, se = R(I, !0);
            C(I), we(() => {
              Y !== (Y = g(j)) && (I.value = (I.__value = g(j)) == null ? "" : g(j)), dt(se, g(j));
            }), z(N, I);
          }), C(U), Xi(U, (N) => M(d, N), () => g(d)), C(V), we((N) => ct(U, "size", N), [() => Math.min(8, a().length)], gi), ch(U, () => g(u), (N) => M(u, N)), z(q, V);
        }, D = (q) => {
          var V = Wt(), U = Le(V);
          _i(U, 1, () => g(h), Ri, (N, j, I) => {
            var Y = L6(), se = R(Y), be = R(se);
            C(se);
            var ze = ie(se, 2);
            {
              var Ve = (Ee) => {
                var We = E6();
                en(We), Xi(We, (xe) => M(d, xe), () => g(d)), sl(We, () => g(j).value, (xe) => (g(j).value = xe, nl(() => g(h)))), z(Ee, We);
              }, Xe = (Ee) => {
                var We = q6();
                en(We), sl(We, () => g(j).value, (xe) => (g(j).value = xe, nl(() => g(h)))), z(Ee, We);
              };
              ge(ze, (Ee) => {
                I === 0 ? Ee(Ve) : Ee(Xe, !1);
              });
            }
            C(Y), we(() => dt(be, `${g(j).name ?? ""} =`)), z(N, Y);
          }), z(q, V);
        };
        ge(_, (q) => {
          g(n) ? q(W) : q(D, !1);
        });
      }
      z(y, k);
    },
    $$slots: {
      default: !0,
      footer: (y, w) => {
        var k = V6(), A = ie(R(k), 2);
        C(k), Pe("click", A, () => r("cancel")), z(y, k);
      }
    }
  }), ji({
    get active() {
      return s();
    },
    set active(y) {
      s(y), pe();
    },
    get parameters() {
      return o();
    },
    set parameters(y) {
      o(y), pe();
    },
    get dataFiles() {
      return a();
    },
    set dataFiles(y) {
      a(y), pe();
    },
    $set: cn,
    $on: (y, w) => an(e, y, w)
  });
}
var U6 = /* @__PURE__ */ ne('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-all-solutions" type="checkbox" class="svelte-makhy9"> <label for="enable-all-solutions" class="svelte-makhy9">All solutions (for satisfication problems)</label></p></div>'), Y6 = /* @__PURE__ */ ne('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-free-search" type="checkbox" class="svelte-makhy9"> <label for="enable-free-search" class="svelte-makhy9">Free search</label></p></div>'), z6 = /* @__PURE__ */ ne('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-verbose-solve" type="checkbox" class="svelte-makhy9"> <label for="enable-verbose-solve" class="svelte-makhy9">Verbose solving</label></p></div>'), j6 = /* @__PURE__ */ ne('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-solving-satistics" type="checkbox" class="svelte-makhy9"> <label for="enable-solving-satistics" class="svelte-makhy9">Solving statistics</label></p></div>'), B6 = /* @__PURE__ */ ne('<div class="config-window svelte-makhy9"><button class="button is-text is-small exit-button svelte-makhy9"><span class="icon"><!></span></button> <form><h5 class="title is-5 svelte-makhy9">Solving options</h5> <div class="field is-grouped"><p class="control checkbox-control svelte-makhy9"><input id="enable-timelimit" type="checkbox" class="svelte-makhy9"> <label for="enable-timelimit" class="svelte-makhy9">Time limit (s)</label></p> <p class="control is-expanded"><input class="input is-fullwidth" type="number" step="1"></p></div> <!> <!> <h5 class="title is-5 svelte-makhy9">Output options</h5> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-verbose-compile" type="checkbox" class="svelte-makhy9"> <label for="enable-verbose-compile" class="svelte-makhy9">Verbose compilation</label></p></div> <!> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-compilation-satistics" type="checkbox" class="svelte-makhy9"> <label for="enable-compilation-satistics" class="svelte-makhy9">Compilation statistics</label></p></div> <!> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-timing-information" type="checkbox" class="svelte-makhy9"> <label for="enable-timing-information" class="svelte-makhy9">Timing information</label></p></div> <div class="field is-grouped bottom-buttons svelte-makhy9"><p class="control"><button class="button is-primary">Accept</button></p> <p class="control"><button type="button" class="button is-danger">Reset to defaults</button></p></div></form></div>');
function sP(i, e) {
  if (new.target) return on({ component: sP, ...i });
  zi(e, !1);
  const t = Jn();
  let n = ve(e, "active", 12), r = ve(e, "stdFlags", 28, () => []);
  const s = {
    enableTimeLimit: !1,
    timeLimit: 1,
    allSolutions: !1,
    verboseCompilation: !1,
    verboseSolving: !1,
    compilerStatistics: !1,
    solvingStatistics: !1,
    outputTime: !1,
    freeSearch: !1
  };
  let o = fe({ ...s });
  function a(A) {
    const x = A * 1e3;
    x !== Math.floor(x) && Ci(o, g(o).timeLimit = Math.floor(x) / 1e3);
  }
  function c(A, x) {
    return A.indexOf(x) !== -1;
  }
  function u() {
    for (const A in g(o))
      if (s[A] !== g(o)[A])
        return !1;
    return !0;
  }
  function h() {
    M(o, { ...s });
  }
  function d(A) {
    const x = { ...s };
    for (const _ in s)
      _ in A && (x[_] = A[_]);
    M(o, x);
  }
  function p() {
    return { ...g(o) };
  }
  function m(A) {
    const x = { solver: A };
    return g(o).enableTimeLimit && g(o).timeLimit > 0 && (x["time-limit"] = g(o).timeLimit * 1e3), g(o).allSolutions && c(r(), "-a") && (x["all-satisfaction"] = !0), g(o).verboseCompilation && (x["verbose-compilation"] = !0), g(o).verboseSolving && c(r(), "-v") && (x["verbose-solving"] = !0), g(o).compilerStatistics && (x["compiler-statistics"] = !0), g(o).solvingStatistics && c(r(), "-s") && (x["solver-statistics"] = !0), g(o).outputTime && (x["output-time"] = !0), g(o).freeSearch && c(r(), "-f") && (x["free-search"] = !0), x;
  }
  function b(A) {
    const x = { solver: A };
    return g(o).verboseCompilation && (x["verbose-compilation"] = !0), g(o).compilerStatistics && (x["compiler-statistics"] = !0), x;
  }
  Be(() => g(o), () => {
    a(g(o).timeLimit);
  }), En(), ln();
  var y = Wt(), w = Le(y);
  {
    var k = (A) => {
      var x = B6(), _ = R(x), W = R(_), D = R(W);
      zt(D, { icon: Ey }), C(W), C(_);
      var q = ie(_, 2), V = ie(R(q), 2), U = R(V), N = R(U);
      en(N), Ct(2), C(U);
      var j = ie(U, 2), I = R(j);
      en(I), ct(I, "min", 0), C(j), C(V);
      var Y = ie(V, 2);
      {
        var se = (Ae) => {
          var Ze = U6(), Ie = R(Ze), yt = R(Ie);
          en(yt), Ct(2), C(Ie), C(Ze), ho(yt, () => g(o).allSolutions, (pt) => Ci(o, g(o).allSolutions = pt)), z(Ae, Ze);
        };
        ge(Y, (Ae) => {
          c(r(), "-a") && Ae(se);
        });
      }
      var be = ie(Y, 2);
      {
        var ze = (Ae) => {
          var Ze = Y6(), Ie = R(Ze), yt = R(Ie);
          en(yt), Ct(2), C(Ie), C(Ze), ho(yt, () => g(o).freeSearch, (pt) => Ci(o, g(o).freeSearch = pt)), z(Ae, Ze);
        };
        ge(be, (Ae) => {
          c(r(), "-f") && Ae(ze);
        });
      }
      var Ve = ie(be, 4), Xe = R(Ve), Ee = R(Xe);
      en(Ee), Ct(2), C(Xe), C(Ve);
      var We = ie(Ve, 2);
      {
        var xe = (Ae) => {
          var Ze = z6(), Ie = R(Ze), yt = R(Ie);
          en(yt), Ct(2), C(Ie), C(Ze), ho(yt, () => g(o).verboseSolving, (pt) => Ci(o, g(o).verboseSolving = pt)), z(Ae, Ze);
        };
        ge(We, (Ae) => {
          c(r(), "-v") && Ae(xe);
        });
      }
      var re = ie(We, 2), Oe = R(re), Re = R(Oe);
      en(Re), Ct(2), C(Oe), C(re);
      var Ye = ie(re, 2);
      {
        var Ne = (Ae) => {
          var Ze = j6(), Ie = R(Ze), yt = R(Ie);
          en(yt), Ct(2), C(Ie), C(Ze), ho(yt, () => g(o).solvingStatistics, (pt) => Ci(o, g(o).solvingStatistics = pt)), z(Ae, Ze);
        };
        ge(Ye, (Ae) => {
          c(r(), "-s") && Ae(Ne);
        });
      }
      var He = ie(Ye, 2), ue = R(He), H = R(ue);
      en(H), Ct(2), C(ue), C(He);
      var ce = ie(He, 2), oe = ie(R(ce), 2), $e = R(oe);
      C(oe), C(ce), C(q), C(x), we(() => I.disabled = !g(o).enableTimeLimit), Pe("click", _, () => t("close")), ho(N, () => g(o).enableTimeLimit, (Ae) => Ci(o, g(o).enableTimeLimit = Ae)), sl(I, () => g(o).timeLimit, (Ae) => Ci(o, g(o).timeLimit = Ae)), ho(Ee, () => g(o).verboseCompilation, (Ae) => Ci(o, g(o).verboseCompilation = Ae)), ho(Re, () => g(o).compilerStatistics, (Ae) => Ci(o, g(o).compilerStatistics = Ae)), ho(H, () => g(o).outputTime, (Ae) => Ci(o, g(o).outputTime = Ae)), Pe("click", $e, h), Pe("submit", q, Jb(() => t("close"))), gp(3, x, () => Dy, () => ({ x: 100, duration: 200 })), z(A, x);
    };
    ge(w, (A) => {
      n() && A(k);
    });
  }
  return z(i, y), bi(e, "isDefault", u), bi(e, "reset", h), bi(e, "load", d), bi(e, "save", p), bi(e, "getSolvingConfiguration", m), bi(e, "getCompilationConfiguration", b), ji({
    isDefault: u,
    reset: h,
    load: d,
    save: p,
    getSolvingConfiguration: m,
    getCompilationConfiguration: b,
    get active() {
      return n();
    },
    set active(A) {
      n(A), pe();
    },
    get stdFlags() {
      return r();
    },
    set stdFlags(A) {
      r(A), pe();
    },
    $set: cn,
    $on: (A, x) => an(e, A, x)
  });
}
var I6 = /* @__PURE__ */ ne('<a href="javascript:void(0);" class="dropdown-item"><!></a>'), N6 = /* @__PURE__ */ ne('<div class="dropdown"><div class="dropdown-trigger"><button class="button"><span><!></span> <span class="icon is-small"><!></span></button></div> <div class="dropdown-menu"><div class="dropdown-content"></div></div></div>');
function oP(i, e) {
  if (new.target) return on({ component: oP, ...i });
  zi(e, !1);
  const t = Jn();
  let n = ve(e, "title", 12, null), r = ve(e, "items", 28, () => []), s = ve(e, "currentItem", 12, null), o = ve(e, "active", 12, !1), a = ve(e, "disabled", 12, !1), c = fe();
  function u(W) {
    t("selectItem", { item: W }), o(!1);
  }
  function h(W) {
    g(c) && !g(c).contains(W.target) && o(!1);
  }
  ln();
  var d = N6();
  Pe("click", Zb.body, h);
  var p = R(d), m = R(p), b = R(m), y = R(b);
  {
    var w = (W) => {
      var D = Wt(), q = Le(D);
      Ji(
        q,
        e,
        "selected",
        {
          get item() {
            return s();
          }
        },
        (V) => {
          var U = zl();
          we(() => dt(U, s().label)), z(V, U);
        }
      ), z(W, D);
    };
    ge(y, (W) => {
      s() && W(w);
    });
  }
  C(b);
  var k = ie(b, 2), A = R(k);
  zt(A, { icon: Z3 }), C(k), C(m), C(p);
  var x = ie(p, 2), _ = R(x);
  return _i(_, 5, r, Ri, (W, D) => {
    var q = I6(), V = R(q);
    Ji(
      V,
      e,
      "item",
      {
        get item() {
          return g(D);
        }
      },
      (U) => {
        var N = zl();
        we(() => dt(N, g(D).label)), z(U, N);
      }
    ), C(q), we(() => Ge(q, "is-active", s() === g(D))), Pe("click", q, () => u(g(D))), z(W, q);
  }), C(_), C(x), C(d), Xi(d, (W) => M(c, W), () => g(c)), we(() => {
    ct(d, "title", n()), Ge(d, "is-active", o()), m.disabled = a();
  }), Pe("click", m, () => o(!o())), z(i, d), ji({
    get title() {
      return n();
    },
    set title(W) {
      n(W), pe();
    },
    get items() {
      return r();
    },
    set items(W) {
      r(W), pe();
    },
    get currentItem() {
      return s();
    },
    set currentItem(W) {
      s(W), pe();
    },
    get active() {
      return o();
    },
    set active(W) {
      o(W), pe();
    },
    get disabled() {
      return a();
    },
    set disabled(W) {
      a(W), pe();
    },
    $set: cn,
    $on: (W, D) => an(e, W, D)
  });
}
const lP = nt.define({
  /**
   * @param {{from: number, to: number, msg: string, type: string}} e
   */
  map: (i, e) => ({
    from: e.mapPos(i.from),
    to: e.mapPos(i.to),
    msg: i.msg,
    type: i.type
  })
}), aP = nt.define(), Ob = Wi.define({
  create() {
    return Ue.none;
  },
  update(i, e) {
    i = i.map(e.changes);
    for (const t of e.effects)
      t.is(aP) && (i = Ue.none), t.is(lP) && (i = i.update({
        add: [
          Ue.mark({
            class: `cm-mzn-underline-${t.value.type}`,
            attributes: { title: t.value.msg }
          }).range(t.value.from, t.value.to)
        ]
      }));
    return i;
  },
  provide: (i) => me.decorations.from(i)
});
function vg(i, e, t) {
  let n, r = 1, s = 1;
  for (n = 0; n < t.length; n++) {
    if (r >= i && s >= e)
      return n;
    s++, t[n] === `
` && (r++, s = 1);
  }
  return n;
}
function F6(i, e, t) {
  const n = e.map(
    (r) => lP.of({
      from: vg(
        r.location.firstLine,
        r.location.firstColumn,
        i
      ),
      to: vg(
        r.location.lastLine,
        r.location.lastColumn,
        i
      ) + 1,
      msg: `${r.type === "error" ? "Error" : "Warning"}: ${r.what}: ${r.message}`,
      type: r.type
    })
  );
  t.state.field(Ob, !1) || n.push(
    // @ts-ignore
    nt.appendConfig.of([Ob])
  ), t.dispatch({ effects: [aP.of(null), ...n] });
}
const cP = (i) => {
  const e = window.matchMedia(i);
  return a5(e.matches, (t) => {
    const n = () => t(window.matchMedia(i).matches);
    return e.addEventListener("change", n), () => e.removeEventListener("change", n);
  });
}, G6 = cP("(prefers-color-scheme: dark)"), H6 = cP("(max-width: 768px)");
var K6 = /* @__PURE__ */ ne('<button class="button is-danger" title="Cancel solving"><span>Stop</span> <span class="icon"><!></span></button>'), J6 = /* @__PURE__ */ ne('<button class="button is-primary" title="Run the current file"><span>Run</span> <span class="icon"><!></span></button>'), e9 = /* @__PURE__ */ ne('<div class="control"><button class="button" title="Compile the current file and show the resultant FlatZinc"><span>Compile</span></button></div>'), t9 = /* @__PURE__ */ ne('<span slot="item"> </span>'), i9 = /* @__PURE__ */ ne('<div class="control"><!></div>'), n9 = /* @__PURE__ */ ne("<option> </option>"), r9 = /* @__PURE__ */ ne('<div class="control is-expanded"><div class="select is-fullwidth"><select></select></div></div>'), s9 = /* @__PURE__ */ ne("<option> </option>"), o9 = /* @__PURE__ */ ne('<div class="control"><button class="button is-primary" title="Solver configuration"><span class="icon"><!></span></button></div>'), l9 = /* @__PURE__ */ ne('<div class="navbar-item is-hidden-mobile"><div class="field has-addons"><div class="control"><button class="button is-static">Solver:</button></div> <div class="control is-expanded"><div class="select is-fullwidth"><select></select></div></div> <!></div></div>'), a9 = /* @__PURE__ */ ne('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Compile current file</span></a>'), c9 = /* @__PURE__ */ ne('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Solver configuration</span></a>'), f9 = /* @__PURE__ */ ne('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span> </span></a>'), u9 = /* @__PURE__ */ ne('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Share this project</span></a>'), h9 = /* @__PURE__ */ ne('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Open in MiniZinc Playground</span></a>'), O9 = /* @__PURE__ */ ne("<!> <!> <!> <!> <!> <!>", 1), d9 = /* @__PURE__ */ ne('<div class="control"><button class="button is-primary" title="Share"><span class="icon"><!></span></button></div>'), p9 = /* @__PURE__ */ ne('<div class="control"><button class="button" title="Download project"><span class="icon"><!></span></button></div>'), g9 = /* @__PURE__ */ ne('<div class="control"><button class="button is-primary" title="Open in playground"><span class="icon"><!></span></button></div>'), m9 = /* @__PURE__ */ ne('<!> <div class="navbar-item"><div class="field has-addons"><!> <!> <!> <!></div></div>', 1), v9 = /* @__PURE__ */ ne('<div class="top svelte-hl0lfa"><!></div>'), S9 = /* @__PURE__ */ ne('<div class="panel stack svelte-hl0lfa" slot="panelA"><!> <div class="grow svelte-hl0lfa"><!></div></div>'), b9 = /* @__PURE__ */ ne('<li class="tab-end svelte-hl0lfa"><button class="button is-small" title="Switch orientation"><span class="icon"><!></span></button></li>'), $9 = /* @__PURE__ */ ne('<div class="top svelte-hl0lfa"><div class="tabs is-boxed"><ul><li><a href="javascript:void(0);">Output</a></li> <li><a href="javascript:void(0);">Visualisation</a></li> <!></ul></div></div>'), y9 = /* @__PURE__ */ ne('<button class="button is-small" title="Switch orientation"><span class="icon"><!></span></button>'), Q9 = /* @__PURE__ */ ne('<p class="control" slot="before-right-controls"><!></p>'), w9 = /* @__PURE__ */ ne('<div class="panel stack svelte-hl0lfa" slot="panelB"><!> <div class="grow svelte-hl0lfa"><div class="tab-window svelte-hl0lfa"><!></div> <div class="tab-window svelte-hl0lfa"><!></div></div></div>'), P9 = /* @__PURE__ */ ne("<p>Are you sure you wish to delete <code> </code>?</p> <p>This cannot be undone.</p>", 1), x9 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-danger">Delete</button> <button type="button" class="button">Cancel</button></div>'), k9 = /* @__PURE__ */ ne('<div class="field has-addons"><p class="control is-expanded"><input class="input" type="text" readonly=""></p> <p class="control"><button type="button" class="button"><span class="icon"><!></span></button></p></div>'), _9 = /* @__PURE__ */ ne('<div slot="footer"><button class="button is-primary">Done</button></div>'), W9 = /* @__PURE__ */ ne('<div class="mzn-playground svelte-hl0lfa"><div class="mzn-playground-wrapper svelte-hl0lfa"><div class="stack svelte-hl0lfa"><div class="top svelte-hl0lfa"><nav class="navbar"><div class="navbar-brand"><!> <div class="navbar-item is-expanded"><div class="field navbar-run-buttons has-addons svelte-hl0lfa"><div class="control"><!></div> <!> <!> <!> <!></div></div> <!> <!> <!>  <a role="button" class="navbar-burger" aria-label="menu"><span aria-hidden="true"></span> <span aria-hidden="true"></span> <span aria-hidden="true"></span></a></div> <div class="navbar-menu"><div class="navbar-start is-hidden-tablet"></div> <div class="navbar-end"><!> <!></div></div></nav></div> <div class="grow main-panel svelte-hl0lfa"><div class="left svelte-hl0lfa"><!></div> <!></div></div> <!> <!> <!> <!> <!> <!> <!></div></div>');
function T9(i, e) {
  if (new.target) return on({ component: T9, ...i });
  zi(e, !1);
  const [t, n] = f5(), r = () => Ev(G6, "$browserDarkMode", t), s = () => Ev(H6, "$screenMobile", t), o = fe(), a = fe(), c = fe(), u = fe(), h = fe(), d = fe(), p = fe(), m = fe(), b = fe(), y = fe(), w = fe(), k = fe(), A = fe(), x = fe(), _ = fe(), W = fe(), D = fe();
  let q = ve(e, "showVersionSwitcher", 12, !0), V = ve(e, "showSolverDropdown", 12, !0), U = ve(e, "edgeMiniZinc", 12, !1), N = ve(e, "autoClearOutput", 12, !1), j = ve(e, "showTabs", 12, !0), I = ve(e, "canEditTabs", 12, !0), Y = ve(e, "compilationEnabled", 12, !0), se = ve(e, "project", 12), be = ve(e, "enabledSolvers", 12, null), ze = ve(e, "canEditSolverSettings", 12, !0), Ve = ve(e, "showShareButton", 12, !0), Xe = ve(e, "showDownloadButton", 12, !0), Ee = ve(e, "externalPlaygroundURL", 12, null), We = ve(e, "splitterDirection", 12, "vertical"), xe = ve(e, "splitterSize", 12, 75), re = ve(e, "canSwitchOrientation", 12, !0), Oe = ve(e, "showClearOutput", 12, !0), Re = ve(e, "showAutoClearOutput", 12, !0), Ye = ve(e, "showOutputSectionToggles", 12, !0), Ne = ve(e, "showOutputRightControls", 12, !0), He = ve(e, "theme", 12, "auto"), ue = ve(e, "hideOutputOnStartup", 12, !0), H = ve(e, "autoFocus", 12, !0);
  const ce = Jn();
  let oe = fe(0), $e = fe([]), Ae, Ze, Ie = fe({
    latest: { label: "Latest", detail: "stable" },
    edge: { label: "Edge", detail: "development" }
  });
  function yt(T) {
    const F = U() ? DT : LT;
    if (Ze !== F) {
      Oo(oe);
      const K = Ae;
      Ae = new Promise(async (ae, Se) => {
        K && await K, Ze && Ze.shutdown(), Ze = F, Ze.shutdown(), await Ze.init();
        const [Ce] = /version \d+\.\d+\.\d+(?:, build .*)?$/m.exec(await Ze.version()), de = U() ? "edge" : "latest";
        M(Ie, {
          ...g(Ie),
          [de]: {
            ...g(Ie)[de],
            detail: Ce
          }
        }), M($e, await Ze.solvers()), await Dr(), Oo(oe, -1), ae();
      });
    }
    return Ae;
  }
  const pt = new Promise((T, F) => {
    Rg(() => {
      yt(), T();
    });
  });
  async function Bi(T) {
    U(T.minizincVersion === "edge"), await pt, M(he, []), Qi(T.files, H()), M(li, T.tab || 0), await yt(), T.solverId ? M(Qt, g(x).findIndex((F) => F.id === T.solverId)) : M(Qt, g(x).findIndex((F) => F.extraInfo && F.extraInfo.isDefault) || 0), T.solverConfig ? g(Vt).load(T.solverConfig) : g(Vt).reset();
  }
  async function mt(T) {
    const F = g(he).length;
    Qi(T.files), T.tab !== void 0 && T.tab !== null && T.tab >= 0 && qi(F + T.tab), T.solverId && (await yt(), M(Qt, g(x).findIndex((K) => K.id === T.solverId)));
  }
  function je() {
    return g(he).length > 0;
  }
  let it = fe(), he = fe([]), Gt = fe(!1), li = fe(0), Vt = fe(), hi = fe(!1), Ht = fe(null), mi = fe(!1), un = fe(!1), vi = fe(null), Bt = fe(!1), Ot = fe([]), tt = fe(null), ai = [], ci = fe({}), Qt = fe(-1);
  async function Ei(T, F) {
    if (await yt(), g(Qt) < 0 || g(Qt) >= g(x).length) {
      const K = g(x).findIndex((ae) => ae.extraInfo && ae.extraInfo.isDefault);
      K !== -1 && M(Qt, K);
    }
  }
  let Ti = fe(!1);
  function $n() {
    M(Ti, !g(Ti));
  }
  async function qi(T, F = !0) {
    for (g(it) && g(li) < g(he).length && (Ci(m, g(m).state = g(it).getState()), Ci(m, g(m).scrollTop = g(it).getView().scrollDOM.scrollTop), Ci(m, g(m).scrollLeft = g(it).getView().scrollDOM.scrollLeft)); T >= 0 && g(he)[T].hidden; )
      T--;
    T === -1 && (T = g(he).findIndex((K) => !K.hidden)), M(li, T), await Dr(), g(it) && g(m) && (F && g(it).focus(), g(m).scrollTop !== void 0 && g(it).getView().requestMeasure({
      read(K) {
        K.scrollDOM.scrollTo(g(m).scrollLeft, g(m).scrollTop);
      }
    }));
  }
  function qn(T) {
    let F = `Untitled${T}`, K = 2;
    for (; g(he).find((ae) => ae.name === F); )
      F = `Untitled-${K++}${T}`;
    M(he, [
      ...g(he),
      {
        name: F,
        state: St.create({
          extensions: Mu(T, _r, g(D))
        })
      }
    ]), qi(g(he).length - 1), M(hi, !1);
  }
  function Qi(T, F = !0) {
    let K = [];
    for (const ae of T) {
      const Se = ae.name.endsWith(".mzc.mzn") ? ae.name.length - 8 : ae.name.lastIndexOf("."), Ce = ae.name.substring(0, Se).replaceAll(/[\/\\\.]/g, ""), de = ae.name.substring(Se);
      let rt = `${Ce}${de}`, Me = 2;
      for (; g(he).find((kt) => kt.name === rt); )
        rt = `${Ce}-${Me++}${de}`;
      const Lt = Mu(de, _r, g(D), ae.readOnly);
      K.push({
        ...ae,
        hidden: ae.hidden || de === ".mzc",
        name: rt,
        state: St.create({
          doc: ae.contents,
          extensions: Lt,
          selection: { anchor: ae.anchor || 0 }
        })
      });
    }
    M(he, [...g(he), ...K]), qi(g(he).length - 1, F), M(hi, !1);
  }
  function yn(T) {
    const { index: F, name: K, suffix: ae } = T.detail;
    let Se = K, Ce = 2;
    for (; g(he).some((de) => de === Se + ae); )
      Se = `${K}-${Ce++}`;
    g(m) && Ci(m, g(m).state = g(it).getState()), M(he, [
      ...g(he).slice(0, F),
      {
        ...g(he)[F],
        name: K + ae
      },
      ...g(he).slice(F + 1)
    ]);
  }
  function vs(T) {
    const F = g(a) === 1 && !g(he)[T].hidden;
    M(he, [
      ...g(he).slice(0, T),
      ...g(he).slice(T + 1),
      ...F ? [
        {
          name: "Untitled.mzn",
          state: St.create({
            extensions: Mu(".mzn", _r, g(D))
          })
        }
      ] : []
    ]), g(li) >= g(he).length ? qi(g(he).length - 1) : qi(g(li)), M(Ht, null);
  }
  function Ss(T, F) {
    g(m) && Ci(m, g(m).state = g(it).getState());
    const K = { ...g(he)[T], ...F };
    "readOnly" in F && Ii(K, F.readOnly ? P8 : x8), M(he, [
      ...g(he).slice(0, T),
      K,
      ...g(he).slice(T + 1)
    ]), qi(g(li));
  }
  function bs(T, F) {
    let K;
    T < F ? K = [
      ...g(he).slice(0, T),
      ...g(he).slice(T + 1, F + 1),
      g(he)[T],
      ...g(he).slice(F + 1)
    ] : K = [
      ...g(he).slice(0, F),
      g(he)[T],
      ...g(he).slice(F, T),
      ...g(he).slice(T + 1)
    ];
    const ae = K.indexOf(g(m));
    M(he, K), M(li, ae);
  }
  function Ii(T, F) {
    T.effects = T.effects ? [...T.effects, F] : [F];
  }
  async function er(T) {
    if (g(it) && T && T.effects && T.effects.length > 0) {
      await Dr();
      const F = g(it).getView();
      F && F.state === T.state && (F.dispatch({ effects: T.effects }), T.effects = []);
    }
  }
  let tr = fe(null);
  async function to(T) {
    Oo(oe), Ci(m, g(m).state = g(it).getState());
    let F = g(b) ? g(m) : null;
    if (!F) {
      if (g(k).length === 0)
        return Oo(oe, -1), !1;
      if (g(k).length === 1)
        F = g(he).find((Se) => Se.name === g(k)[0]);
      else
        try {
          const Se = await new Promise((Ce, de) => {
            M(tr, Ce), M(un, !0);
          });
          if (!Se)
            return Oo(oe, -1), !1;
          F = g(he).find((Ce) => Ce.name === Se.modelFile);
        } finally {
          M(un, !1);
        }
    }
    const K = new Ze.Model(), ae = [F.name];
    {
      const Se = F.name.substring(0, F.name.length - 4), Ce = g(he).find((de) => de.name === `${Se}.mzc` || de.name === `${Se}.mzc.mzn`);
      Ce && ae.push(Ce.name);
    }
    F !== g(m) && ae.push(g(m).name);
    for (const Se of g(he))
      K.addFile(Se.name, Se.state.doc.toString(), ae.indexOf(Se.name) !== -1);
    try {
      const { input: Se } = await K.interface({
        options: g(Vt).getCompilationConfiguration(g(_).id)
      });
      if (Object.keys(Se).length > 0) {
        const Ce = {};
        for (const de in Se)
          Ce[de] = g(ci)[de];
        M(ci, Ce), g(y) && ai.indexOf(g(m).name) === -1 && (ai = [
          ...ai,
          g(m).name
        ]);
        try {
          const de = await new Promise((rt, Me) => {
            M(tr, rt), M(vi, !0);
          });
          if (!de)
            return Oo(oe, -1), !1;
          if (de.parameters) {
            let rt = "";
            for (const Me in de.parameters)
              de.parameters[Me].trim().length > 0 && (rt += `${Me} = ${de.parameters[Me]};
`);
            K.addDznString(rt), M(ci, de.parameters);
          } else {
            for (const rt of de.dataFiles)
              ae.indexOf(rt) === -1 && (K.addFile(rt), ae.push(rt));
            ai = de.dataFiles;
          }
        } finally {
          M(vi, !1);
        }
      }
    } catch (Se) {
      console.error(Se);
    }
    return Oo(oe, -1), { model: K, fileList: ae };
  }
  async function wr() {
    if (g(w)) {
      const Se = new Ze.Model();
      Se.addFile(g(m).name, g(m).state.doc.toString());
      const Ce = [g(m).name], de = g(Vt).getSolvingConfiguration(g(_).id);
      await hn(Se, Ce, de);
      return;
    }
    const T = await to();
    if (!T)
      return;
    const { model: F, fileList: K } = T, ae = g(Vt).getSolvingConfiguration(g(_).id);
    await hn(F, K, ae);
  }
  async function hn(T, F, K) {
    M(Bt, !0);
    const ae = Date.now();
    N() && M(Ot, []), M(Ot, [
      ...g(Ot),
      { files: F, output: [] }
    ]), M(tt, T.solve({ options: K, jsonOutput: !1 })), Qn(), g(tt).on("error", Et), g(tt).on("warning", Et), g(tt).on("solution", (Se) => Et(Se, Date.now() - ae)), g(tt).on("status", (Se) => Et(Se, Date.now() - ae)), g(tt).on("statistics", Et), g(tt).on("trace", (Se) => Et(Se, Date.now() - ae)), g(tt).on("statistics", Et), g(tt).on("comment", Et), g(tt).on("time", Et), g(tt).on("checker", Et), g(tt).on("stderr", Et);
    try {
      await g(tt), Et({
        type: "exit",
        code: 0,
        runTime: Date.now() - ae
      });
    } catch (Se) {
      Et({
        type: "exit",
        code: Se.code,
        runTime: Date.now() - ae
      });
    }
    M(tt, null);
  }
  async function Ln() {
    M(Bt, !0);
    const T = await to();
    if (!T)
      return;
    Qn();
    const { model: F, fileList: K } = T, ae = K[0], Se = Date.now();
    N() && M(Ot, []), M(Ot, [
      ...g(Ot),
      { files: K, isCompile: !0, output: [] }
    ]), M(tt, F.compile({
      options: g(Vt).getCompilationConfiguration(g(_).id)
    })), g(tt).on("error", Et), g(tt).on("warning", Et), g(tt).on("statistics", Et), g(tt).on("trace", Et), g(tt).on("statistics", Et), g(tt).on("stderr", Et);
    try {
      const Ce = await g(tt), de = ae.substring(0, ae.indexOf("."));
      let rt = `${de}.fzn`, Me = 1;
      for (; g(he).find((Lt) => Lt.name === rt); )
        rt = `${de}-${Me}.fzn`, Me++;
      M(he, [
        ...g(he),
        {
          name: rt,
          state: St.create({
            extensions: Mu(".fzn", _r, g(D)),
            doc: Ce
          })
        }
      ]), qi(g(he).length - 1), Et({
        type: "exit",
        code: 0,
        runTime: Date.now() - Se
      });
    } catch (Ce) {
      Et({
        type: "exit",
        code: Ce.code,
        runTime: Date.now() - Se
      });
    }
    M(tt, null);
  }
  function io() {
    Et({ type: "cancel" }), g(tt).cancel();
  }
  let Pr = null;
  function Et(T, F) {
    Pr ? Pr.then(() => {
      Pr = ir(T, F);
    }) : Pr = ir(T, F), g(Ot)[g(Ot).length - 1].output.push(T), M(Ot, g(Ot));
  }
  function Qn() {
    g(wn) && g(wn).reset(), M(Dn, !1), M(Wr, !1);
  }
  async function ir(T, F) {
    if (T.type === "trace" && T.section.startsWith("mzn_vis_")) {
      g(Dn) || (M(Dn, !0), M(Wr, !0)), await Dr();
      const K = g(he).find((Se) => Se.name === T.message.url);
      let ae = null;
      if (K)
        ae = K.state.doc.toString();
      else
        try {
          ae = await Ze.readStdlibFileContents(T.message.url);
        } catch (Se) {
          console.error(Se);
          return;
        }
      if (ae === null) {
        console.error(`Failed to get visualisation file ${T.message.url}`);
        return;
      }
      g(wn).addVisualisation(T.section, ae, T.message.userData);
      return;
    }
    if (g(Dn)) {
      for (; !g(wn); )
        await Dr();
      switch (T.type) {
        case "solution":
          g(wn).addSolution(T.sections.filter((K) => K.startsWith("mzn_vis_")).reduce((K, ae) => ({ ...K, [ae]: T.output[ae] }), {}), "time" in T ? T.time : F);
          break;
        case "status":
          g(wn).status(T.status, "time" in T ? T.time : F);
          break;
        case "exit":
          g(wn).status("time" in T ? T.time : F);
          break;
      }
    }
  }
  function xr() {
    return g(m) && Ci(m, g(m).state = g(it).getState()), {
      files: g(he).map((T) => ({
        name: T.name,
        contents: T.state.doc.toString(),
        ...T.hidden ? { hidden: !0 } : {},
        ...T.readOnly ? { readOnly: !0 } : {}
      })),
      tab: g(li),
      solverId: g(_).id,
      solverConfig: g(Vt).save(),
      minizincVersion: U() ? "edge" : "latest"
    };
  }
  let $s = fe(!1);
  async function wa() {
    M($s, !0);
    try {
      const T = (await import("./jszip.min-CBnMhcO6.js").then((Me) => Me.j)).default, F = (await import("./FileSaver.min-CxqCquJ9.js").then((Me) => Me.F)).default, K = xr(), ae = g(he).map((Me) => Me.name), Se = g(he).filter((Me) => !Me.hidden).map((Me) => Me.name);
      let Ce = g(_).id;
      Ce === "org.minizinc.gecode_presolver" ? Ce = "org.gecode.gecode" : Ce === "org.minizinc.chuffed" && (Ce = "org.chuffed.chuffed");
      const de = new T();
      for (const Me of K.files)
        de.file(Me.name, Me.contents);
      de.file("Project.mzp", JSON.stringify({
        version: 105,
        projectFiles: ae,
        openFiles: Se,
        openTab: K.tab,
        selectedBuiltinConfigId: Ce,
        selectedBuiltinConfigVersion: "default"
      }));
      const rt = await de.generateAsync({ type: "blob" });
      F.saveAs(rt, "Project.zip");
    } catch (T) {
      console.error(T);
    } finally {
      M($s, !1);
    }
  }
  let On = fe(), Ni = fe(null), Ir = fe(!1);
  function ys(T) {
    const F = xr(), K = new URL(T);
    return K.hash = `#project=${encodeURIComponent(JSON.stringify(F))}`, M(Ir, !1), K.toString();
  }
  function kr() {
    g(On).select(), g(On).setSelectionRange(0, g(Ni).length), navigator.clipboard.writeText(g(Ni)), M(Ir, !0);
  }
  function Qs() {
    Ee() && window.open(ys(Ee()), "_blank").focus();
  }
  let qo = null;
  async function _r(T) {
    const F = T.view;
    if (!(g(oe) !== 0 || !g(_) || !g(m) || !g(m).name.endsWith(".mzn")))
      try {
        const K = F.state.doc.toString();
        if (K === qo)
          return;
        qo = K;
        const ae = new Ze.Model();
        for (const de of g(he))
          ae.addFile(de.name, de.state.doc.toString(), !1);
        const Se = ae.addString(K), Ce = await ae.check({
          options: g(Vt).getCompilationConfiguration(g(_).id)
        });
        if (F.state.doc.toString() !== K)
          return;
        F6(K, Ce.filter((de) => de.location.filename === Se), F);
      } catch (K) {
        console.error(K);
      }
  }
  function Ol(T) {
    const F = g(he).findIndex((K) => K.name === T.filename);
    if (F !== -1) {
      qi(F);
      const K = g(he)[F].state.doc.toString(), ae = vg(T.firstLine, T.firstColumn, K);
      g(it).focus(), g(it).setCursor(ae);
    }
  }
  function ws() {
    We() === "horizontal" ? We("vertical") : We("horizontal");
  }
  function Ps(T) {
    U(T.detail.item === g(Ie).edge);
  }
  function dl(T) {
    g(m) && Ci(m, g(m).state = g(it).getState()), g(he).forEach((F) => Ii(F, T ? _8 : k8)), er(g(m));
  }
  let wn = fe(), Dn = fe(!1), Wr = fe(!1);
  function lf(T) {
    g(tt) && io();
    const F = [T.modelFile], K = T.modelFile.substring(0, T.modelFile.length - 4), ae = g(he).find((Ce) => Ce.name === `${K}.mzc` || Ce.name === `${K}.mzc.mzn`);
    if (ae && F.push(ae.name), T.dataFiles)
      for (const Ce of T.dataFiles)
        F.push(Ce);
    const Se = new Ze.Model();
    for (const Ce of g(he))
      Se.addFile(Ce.name, Ce.state.doc.toString(), F.indexOf(Ce.name) !== -1);
    hn(Se, F, T.options || g(Vt).getSolvingConfiguration(g(_).id));
  }
  function af() {
    return g(Qt) === (g(x).findIndex((T) => T.extraInfo && T.extraInfo.isDefault) || 0);
  }
  function cf() {
    return g(Vt).isDefault();
  }
  Be(() => g(Ie), () => {
    M(o, [
      g(Ie).latest,
      g(Ie).edge
    ]);
  }), Be(() => Rt(U()), () => {
    yt(U());
  }), Be(() => Rt(se()), () => {
    Bi(se());
  }), Be(() => g(he), () => {
    M(a, g(he).filter((T) => !T.hidden).length);
  }), Be(() => (g(li), g(he)), () => {
    M(m, g(li) < g(he).length ? g(he)[g(li)] : null);
  }), Be(() => g(m), () => {
    M(c, g(m) ? g(m).state : null);
  }), Be(
    () => (Rt(be()), g($e)),
    () => {
      M(x, be() ? g($e).filter((T) => be().indexOf(T.id) !== -1) : g($e));
    }
  ), Be(
    () => (g(Qt), g(x)),
    () => {
      M(_, g(Qt) >= 0 && g(Qt) < g(x).length ? g(x)[g(Qt)] : null);
    }
  ), Be(() => g(m), () => {
    M(b, g(m) && g(m).name.endsWith(".mzn") && !g(m).name.endsWith(".mzc.mzn"));
  }), Be(() => g(m), () => {
    M(y, g(m) && (g(m).name.endsWith(".dzn") || g(m).name.endsWith(".json")));
  }), Be(() => g(m), () => {
    M(w, g(m) && g(m).name.endsWith(".fzn"));
  }), Be(
    () => (g(oe), g(_), g(b), g(y), g(w)),
    () => {
      M(u, g(oe) === 0 && g(_) && (g(b) || g(y) || g(w)));
    }
  ), Be(
    () => (g(oe), g(_), g(b), g(y)),
    () => {
      M(h, g(oe) === 0 && g(_) && (g(b) || g(y)));
    }
  ), Be(
    () => (Rt(ue()), g(Bt)),
    () => {
      M(d, !ue() || g(Bt) ? "all" : "a");
    }
  ), Be(() => g(tt), () => {
    M(p, g(tt) !== null);
  }), Be(() => g(he), () => {
    M(k, g(he).filter((T) => T.name.endsWith(".mzn") && !T.name.endsWith(".mzc.mzn")).map((T) => T.name));
  }), Be(() => g(he), () => {
    M(A, g(he).filter((T) => T.name.endsWith(".dzn") || T.name.endsWith(".json")).map((T) => T.name));
  }), Be(
    () => (g(x), g(Qt)),
    () => {
      Ei(g(x), g(Qt));
    }
  ), Be(() => g(_), () => {
    M(W, g(_) ? g(_).stdFlags : []);
  }), Be(() => g(m), () => {
    er(g(m));
  }), Be(
    () => (r(), Rt(He())),
    () => {
      M(D, {
        dark: !0,
        light: !1,
        auto: r()
      }[He()]);
    }
  ), Be(() => g(D), () => {
    dl(g(D));
  }), Be(() => g(x), () => {
    ce("solversChanged", { solvers: g(x) });
  }), En(), ln();
  var Pa = W9(), xa = R(Pa), pl = R(xa), gl = R(pl), ka = R(gl), Lo = R(ka), ff = R(Lo);
  Ji(
    ff,
    e,
    "navbar-before-run-buttons",
    {
      get isMobile() {
        return s();
      }
    },
    null
  );
  var ml = ie(ff, 2), Do = R(ml), vl = R(Do), cO = R(vl);
  {
    var uf = (T) => {
      var F = K6(), K = ie(R(F), 2), ae = R(K);
      zt(ae, { icon: T3 }), C(K), C(F), Pe("click", F, io), z(T, F);
    }, hf = (T) => {
      var F = J6(), K = ie(R(F), 2), ae = R(K);
      zt(ae, { icon: R3 }), C(K), C(F), we(() => F.disabled = !g(u)), Pe("click", F, wr), z(T, F);
    };
    ge(cO, (T) => {
      g(p) ? T(uf) : T(hf, !1);
    });
  }
  C(vl);
  var Sl = ie(vl, 2);
  {
    var fO = (T) => {
      var F = e9(), K = R(F);
      C(F), we(() => K.disabled = g(p) || !g(h)), Pe("click", K, Ln), z(T, F);
    };
    ge(Sl, (T) => {
      !s() && Y() && T(fO);
    });
  }
  var _a = ie(Sl, 2);
  {
    var Wa = (T) => {
      var F = i9(), K = R(F);
      const ae = /* @__PURE__ */ gi(() => U() ? g(Ie).edge : g(Ie).latest);
      oP(K, {
        get items() {
          return g(o);
        },
        get currentItem() {
          return g(ae);
        },
        get disabled() {
          return g(p);
        },
        title: "Configure MiniZinc version",
        $$events: { selectItem: Ps },
        $$slots: {
          item: (Se, Ce) => {
            var de = t9();
            const rt = /* @__PURE__ */ gi(() => Ce.item);
            var Me = R(de);
            C(de), we(() => dt(Me, `${g(rt).label ?? ""} (${g(rt).detail ?? ""})`)), z(Se, de);
          }
        }
      }), C(F), z(T, F);
    };
    ge(_a, (T) => {
      !s() && q() && T(Wa);
    });
  }
  var bl = ie(_a, 2);
  Ji(
    bl,
    e,
    "navbar-run-buttons",
    {
      get isMobile() {
        return s();
      }
    },
    null
  );
  var no = ie(bl, 2);
  {
    var Of = (T) => {
      var F = r9(), K = R(F), ae = R(K);
      we(() => {
        g(Qt), nl(() => {
          g(x);
        });
      }), _i(ae, 5, () => g(x), Ri, (Se, Ce, de) => {
        var rt = n9();
        rt.value = (rt.__value = de) == null ? "" : de;
        var Me = R(rt);
        C(rt), we(() => dt(Me, `${g(Ce).name ?? ""}
                                                        ${g(Ce).version ?? ""}`)), z(Se, rt);
      }), C(ae), C(K), C(F), ch(ae, () => g(Qt), (Se) => M(Qt, Se)), z(T, F);
    };
    ge(no, (T) => {
      s() && V() && g(x).length > 0 && T(Of);
    });
  }
  C(Do), C(ml);
  var Ta = ie(ml, 2);
  Ji(
    Ta,
    e,
    "navbar-after-run-buttons",
    {
      get isMobile() {
        return s();
      }
    },
    null
  );
  var df = ie(Ta, 2);
  {
    var pf = (T) => {
      var F = l9(), K = R(F), ae = ie(R(K), 2), Se = R(ae), Ce = R(Se);
      we(() => {
        g(Qt), nl(() => {
          g(x);
        });
      }), _i(Ce, 5, () => g(x), Ri, (Me, Lt, kt) => {
        var _t = s9();
        _t.value = (_t.__value = kt) == null ? "" : kt;
        var wt = R(_t);
        C(_t), we(() => dt(wt, `${g(Lt).name ?? ""}
                                                        ${g(Lt).version ?? ""}`)), z(Me, _t);
      }), C(Ce), C(Se), C(ae);
      var de = ie(ae, 2);
      {
        var rt = (Me) => {
          var Lt = o9(), kt = R(Lt), _t = R(kt), wt = R(_t);
          zt(wt, { icon: I1 }), C(_t), C(kt), C(Lt), Pe("click", kt, $n), z(Me, Lt);
        };
        ge(de, (Me) => {
          ze() && Me(rt);
        });
      }
      C(K), C(F), ch(Ce, () => g(Qt), (Me) => M(Qt, Me)), z(T, F);
    };
    ge(df, (T) => {
      V() && g(x).length > 0 && T(pf);
    });
  }
  var Za = ie(df, 2);
  Ji(
    Za,
    e,
    "navbar-after-solver-selector",
    {
      get isMobile() {
        return s();
      }
    },
    null
  );
  var $l = ie(Za, 2);
  C(Lo);
  var yl = ie(Lo, 2), gf = ie(R(yl), 2), mf = R(gf);
  {
    var uO = (T) => {
      var F = O9(), K = Le(F);
      {
        var ae = (ut) => {
          var et = a9(), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: A3 }), C(Pt), Ct(2), C(et), Pe("click", et, () => {
            Ln(), M(Gt, !1);
          }), z(ut, et);
        };
        ge(K, (ut) => {
          Y() && !g(p) && g(h) && ut(ae);
        });
      }
      var Se = ie(K, 2);
      {
        var Ce = (ut) => {
          var et = c9(), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: I1 }), C(Pt), Ct(2), C(et), Pe("click", et, () => {
            $n(), M(Gt, !1);
          }), z(ut, et);
        };
        ge(Se, (ut) => {
          ze() && V() && g(x).length > 0 && ut(Ce);
        });
      }
      var de = ie(Se, 2);
      {
        var rt = (ut) => {
          var et = f9(), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: y3 }), C(Pt);
          var Nr = ie(Pt, 2), wi = R(Nr);
          C(Nr), C(et), we(() => dt(wi, `Switch to the ${(U() ? "latest" : "edge") ?? ""} version of MiniZinc`)), Pe("click", et, () => {
            U(!U()), M(Gt, !1);
          }), z(ut, et);
        };
        ge(de, (ut) => {
          q() && !g(p) && ut(rt);
        });
      }
      var Me = ie(de, 2);
      Ji(
        Me,
        e,
        "navbar-before-share-buttons",
        {
          get isMobile() {
            return s();
          }
        },
        null
      );
      var Lt = ie(Me, 2);
      {
        var kt = (ut) => {
          var et = u9(), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: j1 }), C(Pt), Ct(2), C(et), Pe("click", et, () => {
            M(Ni, ys(window.location.href)), M(Gt, !1);
          }), z(ut, et);
        };
        ge(Lt, (ut) => {
          Ve() && g(oe) === 0 && ut(kt);
        });
      }
      var _t = ie(Lt, 2);
      {
        var wt = (ut) => {
          var et = h9(), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: B1 }), C(Pt), Ct(2), C(et), Pe("click", et, () => {
            Qs(), M(Gt, !1);
          }), z(ut, et);
        };
        ge(_t, (ut) => {
          Ee() && g(oe) === 0 && ut(wt);
        });
      }
      z(T, F);
    }, vf = (T) => {
      var F = m9(), K = Le(F);
      Ji(
        K,
        e,
        "navbar-before-share-buttons",
        {
          get isMobile() {
            return s();
          }
        },
        null
      );
      var ae = ie(K, 2), Se = R(ae), Ce = R(Se);
      {
        var de = (wt) => {
          var ut = d9(), et = R(ut), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: j1 }), C(Pt), C(et), C(ut), we(() => et.disabled = g(oe) !== 0), Pe("click", et, () => M(Ni, ys(window.location.href))), z(wt, ut);
        };
        ge(Ce, (wt) => {
          Ve() && wt(de);
        });
      }
      var rt = ie(Ce, 2);
      {
        var Me = (wt) => {
          var ut = p9(), et = R(ut), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: W3 }), C(Pt), C(et), C(ut), we(() => et.disabled = g($s) || g(oe) !== 0), Pe("click", et, () => wa()), z(wt, ut);
        };
        ge(rt, (wt) => {
          Xe() && wt(Me);
        });
      }
      var Lt = ie(rt, 2);
      {
        var kt = (wt) => {
          var ut = g9(), et = R(ut), Pt = R(et), Yt = R(Pt);
          zt(Yt, { icon: B1 }), C(Pt), C(et), C(ut), we(() => et.disabled = g(oe) !== 0), Pe("click", et, Qs), z(wt, ut);
        };
        ge(Lt, (wt) => {
          Ee() && wt(kt);
        });
      }
      var _t = ie(Lt, 2);
      Ji(
        _t,
        e,
        "navbar-share-buttons",
        {
          get isMobile() {
            return s();
          }
        },
        null
      ), C(Se), C(ae), z(T, F);
    };
    ge(mf, (T) => {
      s() ? T(uO) : T(vf, !1);
    });
  }
  var hO = ie(mf, 2);
  Ji(
    hO,
    e,
    "navbar-after-share-buttons",
    {
      get isMobile() {
        return s();
      }
    },
    null
  ), C(gf), C(yl), C(ka), C(gl);
  var Sf = ie(gl, 2), Ca = R(Sf), OO = R(Ca);
  Ay(OO, {
    get direction() {
      return We();
    },
    get showPanels() {
      return g(d);
    },
    get split() {
      return xe();
    },
    set split(T) {
      xe(T);
    },
    $$slots: {
      panelA: (T, F) => {
        var K = S9(), ae = R(K);
        {
          var Se = (Me) => {
            var Lt = v9(), kt = R(Lt);
            const _t = /* @__PURE__ */ gi(() => !I());
            Ly(kt, {
              get files() {
                return g(he);
              },
              get currentIndex() {
                return g(li);
              },
              get readonly() {
                return g(_t);
              },
              $$events: {
                selectTab: (wt) => qi(wt.detail.index),
                reorder: (wt) => bs(wt.detail.src, wt.detail.dest),
                newFile: () => M(hi, !0),
                rename: yn,
                close: (wt) => M(Ht, wt.detail.index),
                manageFiles: () => M(mi, !0)
              }
            }), C(Lt), z(Me, Lt);
          };
          ge(ae, (Me) => {
            j() && Me(Se);
          });
        }
        var Ce = ie(ae, 2), de = R(Ce);
        {
          var rt = (Me) => {
            Xi(
              Cy(Me, {
                get state() {
                  return g(c);
                },
                $$legacy: !0
              }),
              (Lt) => M(it, Lt),
              () => g(it)
            );
          };
          ge(de, (Me) => {
            g(c) && Me(rt);
          });
        }
        C(Ce), C(K), z(T, K);
      },
      panelB: (T, F) => {
        var K = w9(), ae = R(K);
        {
          var Se = (kt) => {
            var _t = $9(), wt = R(_t), ut = R(wt), et = R(ut), Pt = R(et);
            C(et);
            var Yt = ie(et, 2), Nr = R(Yt);
            C(Yt);
            var wi = ie(Yt, 2);
            {
              var mO = (Fi) => {
                var Aa = b9(), Ql = R(Aa), Tr = R(Ql), wl = R(Tr);
                zt(wl, { icon: N1 }), C(Tr), C(Ql), C(Aa), Pe("click", Ql, ws), z(Fi, Aa);
              };
              ge(wi, (Fi) => {
                re() && Fi(mO);
              });
            }
            C(ut), C(wt), C(_t), we(() => {
              Ge(et, "is-active", !g(Wr)), Ge(Yt, "is-active", g(Wr));
            }), Pe("click", Pt, () => {
              M(Wr, !1);
            }), Pe("click", Nr, () => {
              M(Wr, !0);
            }), z(kt, _t);
          };
          ge(ae, (kt) => {
            g(Dn) && kt(Se);
          });
        }
        var Ce = ie(ae, 2), de = R(Ce), rt = R(de);
        Xi(
          eP(rt, {
            get files() {
              return g(he);
            },
            $$events: { solve: (kt) => lf(kt.detail) },
            $$legacy: !0
          }),
          (kt) => M(wn, kt),
          () => g(wn)
        ), C(de);
        var Me = ie(de, 2), Lt = R(Me);
        Jw(Lt, {
          get output() {
            return g(Ot);
          },
          get showClearOutput() {
            return Oe();
          },
          get showAutoClearOutput() {
            return Re();
          },
          get showSectionToggles() {
            return Ye();
          },
          get showRightControls() {
            return Ne();
          },
          get isTab() {
            return g(Dn);
          },
          get autoClearOutput() {
            return N();
          },
          set autoClearOutput(kt) {
            N(kt);
          },
          $$events: {
            clear: () => M(Ot, []),
            goto: (kt) => Ol(kt.detail.location)
          },
          $$slots: {
            "before-right-controls": (kt, _t) => {
              var wt = Q9(), ut = R(wt);
              {
                var et = (Pt) => {
                  var Yt = y9(), Nr = R(Yt), wi = R(Nr);
                  zt(wi, { icon: N1 }), C(Nr), C(Yt), Pe("click", Yt, ws), z(Pt, Yt);
                };
                ge(ut, (Pt) => {
                  re() && !g(Dn) && Pt(et);
                });
              }
              C(wt), z(kt, wt);
            }
          },
          $$legacy: !0
        }), C(Me), C(Ce), C(K), we(() => {
          Ge(de, "visible", g(Wr)), Ge(Me, "visible", !g(Dn) || !g(Wr));
        }), z(T, K);
      }
    },
    $$legacy: !0
  }), C(Ca);
  var Ra = ie(Ca, 2);
  Xi(
    sP(Ra, {
      get active() {
        return g(Ti);
      },
      get stdFlags() {
        return g(W);
      },
      $$events: {
        close: () => M(Ti, !1)
      },
      $$legacy: !0
    }),
    (T) => M(Vt, T),
    () => g(Vt)
  ), C(Sf), C(pl);
  var bf = ie(pl, 2);
  iP(bf, {
    get active() {
      return g(mi);
    },
    get files() {
      return g(he);
    },
    $$events: {
      close: () => M(mi, !1),
      delete: (T) => M(Ht, T.detail.index),
      modifyFile: (T) => Ss(T.detail.index, T.detail.options),
      newFile: () => M(hi, !0)
    }
  });
  var $f = ie(bf, 2);
  tP($f, {
    get active() {
      return g(hi);
    },
    $$events: {
      cancel: () => M(hi, !1),
      new: (T) => qn(T.detail.type),
      open: (T) => mt(T.detail)
    }
  });
  var yf = ie($f, 2);
  const dO = /* @__PURE__ */ gi(() => g(Ht) !== null);
  Zo(yf, {
    get active() {
      return g(dO);
    },
    title: "Delete file",
    $$events: {
      cancel: () => M(Ht, null)
    },
    children: (T, F) => {
      var K = P9(), ae = Le(K), Se = ie(R(ae)), Ce = R(Se, !0);
      C(Se), Ct(), C(ae), Ct(2), we(() => dt(Ce, g(he)[g(Ht)].name)), z(T, K);
    },
    $$slots: {
      default: !0,
      footer: (T, F) => {
        var K = x9(), ae = R(K), Se = ie(ae, 2);
        C(K), Pe("click", ae, () => vs(g(Ht))), Pe("click", Se, () => M(Ht, null)), z(T, K);
      }
    }
  });
  var Qf = ie(yf, 2);
  nP(Qf, {
    get active() {
      return g(un);
    },
    get modelFiles() {
      return g(k);
    },
    $$events: {
      accept: (T) => g(tr)(T.detail),
      cancel: () => g(tr)(!1)
    }
  });
  var Ut = ie(Qf, 2);
  rP(Ut, {
    get active() {
      return g(vi);
    },
    get dataFiles() {
      return g(A);
    },
    get parameters() {
      return g(ci);
    },
    $$events: {
      accept: (T) => g(tr)(T.detail),
      cancel: () => g(tr)(!1)
    }
  });
  var qt = ie(Ut, 2);
  Zo(qt, {
    get active() {
      return g(Ni);
    },
    title: "Share this project",
    $$events: { cancel: () => M(Ni, null) },
    children: (T, F) => {
      var K = k9(), ae = R(K), Se = R(ae);
      en(Se), Xi(Se, (Lt) => M(On, Lt), () => g(On)), C(ae);
      var Ce = ie(ae, 2), de = R(Ce), rt = R(de), Me = R(rt);
      zt(Me, { icon: Q3 }), C(rt), C(de), C(Ce), C(K), we(() => {
        NZ(Se, g(Ni)), Ge(de, "is-primary", !g(Ir)), Ge(de, "is-success", g(Ir));
      }), Pe("click", Se, () => g(On).select()), Pe("click", de, kr), z(T, K);
    },
    $$slots: {
      default: !0,
      footer: (T, F) => {
        var K = _9(), ae = R(K);
        C(K), Pe("click", ae, () => M(Ni, null)), z(T, K);
      }
    }
  });
  var pO = ie(qt, 2);
  Ji(pO, e, "default", {}, null), C(xa), C(Pa), we(() => {
    Ge(xa, "is-dark", g(D)), ct($l, "aria-expanded", g(Gt)), Ge($l, "is-active", g(Gt)), Ge(yl, "is-active", g(Gt));
  }), Pe("click", $l, () => {
    M(Gt, !g(Gt)), M(Ti, !1);
  }), z(i, Pa), bi(e, "loadProject", Bi), bi(e, "hasFiles", je), bi(e, "getProject", xr), bi(e, "isDefaultSolver", af), bi(e, "isDefaultSolverConfig", cf);
  var gO = ji({
    loadProject: Bi,
    hasFiles: je,
    getProject: xr,
    isDefaultSolver: af,
    isDefaultSolverConfig: cf,
    get showVersionSwitcher() {
      return q();
    },
    set showVersionSwitcher(T) {
      q(T), pe();
    },
    get showSolverDropdown() {
      return V();
    },
    set showSolverDropdown(T) {
      V(T), pe();
    },
    get edgeMiniZinc() {
      return U();
    },
    set edgeMiniZinc(T) {
      U(T), pe();
    },
    get autoClearOutput() {
      return N();
    },
    set autoClearOutput(T) {
      N(T), pe();
    },
    get showTabs() {
      return j();
    },
    set showTabs(T) {
      j(T), pe();
    },
    get canEditTabs() {
      return I();
    },
    set canEditTabs(T) {
      I(T), pe();
    },
    get compilationEnabled() {
      return Y();
    },
    set compilationEnabled(T) {
      Y(T), pe();
    },
    get project() {
      return se();
    },
    set project(T) {
      se(T), pe();
    },
    get enabledSolvers() {
      return be();
    },
    set enabledSolvers(T) {
      be(T), pe();
    },
    get canEditSolverSettings() {
      return ze();
    },
    set canEditSolverSettings(T) {
      ze(T), pe();
    },
    get showShareButton() {
      return Ve();
    },
    set showShareButton(T) {
      Ve(T), pe();
    },
    get showDownloadButton() {
      return Xe();
    },
    set showDownloadButton(T) {
      Xe(T), pe();
    },
    get externalPlaygroundURL() {
      return Ee();
    },
    set externalPlaygroundURL(T) {
      Ee(T), pe();
    },
    get splitterDirection() {
      return We();
    },
    set splitterDirection(T) {
      We(T), pe();
    },
    get splitterSize() {
      return xe();
    },
    set splitterSize(T) {
      xe(T), pe();
    },
    get canSwitchOrientation() {
      return re();
    },
    set canSwitchOrientation(T) {
      re(T), pe();
    },
    get showClearOutput() {
      return Oe();
    },
    set showClearOutput(T) {
      Oe(T), pe();
    },
    get showAutoClearOutput() {
      return Re();
    },
    set showAutoClearOutput(T) {
      Re(T), pe();
    },
    get showOutputSectionToggles() {
      return Ye();
    },
    set showOutputSectionToggles(T) {
      Ye(T), pe();
    },
    get showOutputRightControls() {
      return Ne();
    },
    set showOutputRightControls(T) {
      Ne(T), pe();
    },
    get theme() {
      return He();
    },
    set theme(T) {
      He(T), pe();
    },
    get hideOutputOnStartup() {
      return ue();
    },
    set hideOutputOnStartup(T) {
      ue(T), pe();
    },
    get autoFocus() {
      return H();
    },
    set autoFocus(T) {
      H(T), pe();
    },
    $set: cn,
    $on: (T, F) => an(e, T, F)
  });
  return n(), gO;
}
export {
  T9 as P,
  Xu as c,
  X9 as g
};
