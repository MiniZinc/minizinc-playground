import { createClassComponent as Qi } from "svelte/legacy";
import "svelte/internal/disclose-version";
import "svelte/internal/flags/legacy";
import * as s from "svelte/internal/client";
import { onMount as MO, tick as Yn, createEventDispatcher as an } from "svelte";
import { flip as Ck } from "svelte/animate";
import { fly as J0, fade as Rk } from "svelte/transition";
import * as Xk from "https://cdn.jsdelivr.net/npm/minizinc/dist/minizinc.mjs";
import * as Ak from "https://cdn.jsdelivr.net/npm/minizinc@edge/dist/minizinc.mjs";
import { writable as Mk } from "svelte/store";
let Au = [], e1 = [];
(() => {
  let n = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);
  for (let e = 0, t = 0; e < n.length; e++)
    (e % 2 ? e1 : Au).push(t = t + n[e]);
})();
function Ek(n) {
  if (n < 768) return !1;
  for (let e = 0, t = Au.length; ; ) {
    let i = e + t >> 1;
    if (n < Au[i]) t = i;
    else if (n >= e1[i]) e = i + 1;
    else return !0;
    if (e == t) return !1;
  }
}
function xg(n) {
  return n >= 127462 && n <= 127487;
}
const Pg = 8205;
function qk(n, e, t = !0, i = !0) {
  return (t ? t1 : Vk)(n, e, i);
}
function t1(n, e, t) {
  if (e == n.length) return e;
  e && i1(n.charCodeAt(e)) && n1(n.charCodeAt(e - 1)) && e--;
  let i = eu(n, e);
  for (e += wg(i); e < n.length; ) {
    let r = eu(n, e);
    if (i == Pg || r == Pg || t && Ek(r))
      e += wg(r), i = r;
    else if (xg(r)) {
      let l = 0, o = e - 2;
      for (; o >= 0 && xg(eu(n, o)); )
        l++, o -= 2;
      if (l % 2 == 0) break;
      e += 2;
    } else
      break;
  }
  return e;
}
function Vk(n, e, t) {
  for (; e > 0; ) {
    let i = t1(n, e - 2, t);
    if (i < e) return i;
    e--;
  }
  return 0;
}
function eu(n, e) {
  let t = n.charCodeAt(e);
  if (!n1(t) || e + 1 == n.length) return t;
  let i = n.charCodeAt(e + 1);
  return i1(i) ? (t - 55296 << 10) + (i - 56320) + 65536 : t;
}
function i1(n) {
  return n >= 56320 && n < 57344;
}
function n1(n) {
  return n >= 55296 && n < 56320;
}
function wg(n) {
  return n < 65536 ? 1 : 2;
}
class ot {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, t, i) {
    [e, t] = xl(this, e, t);
    let r = [];
    return this.decompose(
      0,
      e,
      r,
      2
      /* Open.To */
    ), i.length && i.decompose(
      0,
      i.length,
      r,
      3
      /* Open.To */
    ), this.decompose(
      t,
      this.length,
      r,
      1
      /* Open.From */
    ), nr.from(r, this.length - (t - e) + i.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, t = this.length) {
    [e, t] = xl(this, e, t);
    let i = [];
    return this.decompose(e, t, i, 0), nr.from(i, t - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let t = this.scanIdentical(e, 1), i = this.length - this.scanIdentical(e, -1), r = new Zo(this), l = new Zo(e);
    for (let o = t, c = t; ; ) {
      if (r.next(o), l.next(o), o = 0, r.lineBreak != l.lineBreak || r.done != l.done || r.value != l.value)
        return !1;
      if (c += r.value.length, r.done || c >= i)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new Zo(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, t = this.length) {
    return new r1(this, e, t);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, t) {
    let i;
    if (e == null)
      i = this.iter();
    else {
      t == null && (t = this.lines + 1);
      let r = this.line(e).from;
      i = this.iterRange(r, Math.max(r, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
    }
    return new s1(i);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? ot.empty : e.length <= 32 ? new zt(e) : nr.from(zt.split(e, []));
  }
}
class zt extends ot {
  constructor(e, t = Lk(e)) {
    super(), this.text = e, this.length = t;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, t, i, r) {
    for (let l = 0; ; l++) {
      let o = this.text[l], c = r + o.length;
      if ((t ? i : c) >= e)
        return new Uk(r, c, i, o);
      r = c + 1, i++;
    }
  }
  decompose(e, t, i, r) {
    let l = e <= 0 && t >= this.length ? this : new zt(kg(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
    if (r & 1) {
      let o = i.pop(), c = Vc(l.text, o.text.slice(), 0, l.length);
      if (c.length <= 32)
        i.push(new zt(c, o.length + l.length));
      else {
        let f = c.length >> 1;
        i.push(new zt(c.slice(0, f)), new zt(c.slice(f)));
      }
    } else
      i.push(l);
  }
  replace(e, t, i) {
    if (!(i instanceof zt))
      return super.replace(e, t, i);
    [e, t] = xl(this, e, t);
    let r = Vc(this.text, Vc(i.text, kg(this.text, 0, e)), t), l = this.length + i.length - (t - e);
    return r.length <= 32 ? new zt(r, l) : nr.from(zt.split(r, []), l);
  }
  sliceString(e, t = this.length, i = `
`) {
    [e, t] = xl(this, e, t);
    let r = "";
    for (let l = 0, o = 0; l <= t && o < this.text.length; o++) {
      let c = this.text[o], f = l + c.length;
      l > e && o && (r += i), e < f && t > l && (r += c.slice(Math.max(0, e - l), t - l)), l = f + 1;
    }
    return r;
  }
  flatten(e) {
    for (let t of this.text)
      e.push(t);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, t) {
    let i = [], r = -1;
    for (let l of e)
      i.push(l), r += l.length + 1, i.length == 32 && (t.push(new zt(i, r)), i = [], r = -1);
    return r > -1 && t.push(new zt(i, r)), t;
  }
}
class nr extends ot {
  constructor(e, t) {
    super(), this.children = e, this.length = t, this.lines = 0;
    for (let i of e)
      this.lines += i.lines;
  }
  lineInner(e, t, i, r) {
    for (let l = 0; ; l++) {
      let o = this.children[l], c = r + o.length, f = i + o.lines - 1;
      if ((t ? f : c) >= e)
        return o.lineInner(e, t, i, r);
      r = c + 1, i = f + 1;
    }
  }
  decompose(e, t, i, r) {
    for (let l = 0, o = 0; o <= t && l < this.children.length; l++) {
      let c = this.children[l], f = o + c.length;
      if (e <= f && t >= o) {
        let u = r & ((o <= e ? 1 : 0) | (f >= t ? 2 : 0));
        o >= e && f <= t && !u ? i.push(c) : c.decompose(e - o, t - o, i, u);
      }
      o = f + 1;
    }
  }
  replace(e, t, i) {
    if ([e, t] = xl(this, e, t), i.lines < this.lines)
      for (let r = 0, l = 0; r < this.children.length; r++) {
        let o = this.children[r], c = l + o.length;
        if (e >= l && t <= c) {
          let f = o.replace(e - l, t - l, i), u = this.lines - o.lines + f.lines;
          if (f.lines < u >> 4 && f.lines > u >> 6) {
            let O = this.children.slice();
            return O[r] = f, new nr(O, this.length - (t - e) + i.length);
          }
          return super.replace(l, c, f);
        }
        l = c + 1;
      }
    return super.replace(e, t, i);
  }
  sliceString(e, t = this.length, i = `
`) {
    [e, t] = xl(this, e, t);
    let r = "";
    for (let l = 0, o = 0; l < this.children.length && o <= t; l++) {
      let c = this.children[l], f = o + c.length;
      o > e && l && (r += i), e < f && t > o && (r += c.sliceString(e - o, t - o, i)), o = f + 1;
    }
    return r;
  }
  flatten(e) {
    for (let t of this.children)
      t.flatten(e);
  }
  scanIdentical(e, t) {
    if (!(e instanceof nr))
      return 0;
    let i = 0, [r, l, o, c] = t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; r += t, l += t) {
      if (r == o || l == c)
        return i;
      let f = this.children[r], u = e.children[l];
      if (f != u)
        return i + f.scanIdentical(u, t);
      i += f.length + 1;
    }
  }
  static from(e, t = e.reduce((i, r) => i + r.length + 1, -1)) {
    let i = 0;
    for (let b of e)
      i += b.lines;
    if (i < 32) {
      let b = [];
      for (let $ of e)
        $.flatten(b);
      return new zt(b, t);
    }
    let r = Math.max(
      32,
      i >> 5
      /* Tree.BranchShift */
    ), l = r << 1, o = r >> 1, c = [], f = 0, u = -1, O = [];
    function p(b) {
      let $;
      if (b.lines > l && b instanceof nr)
        for (let x of b.children)
          p(x);
      else b.lines > o && (f > o || !f) ? (g(), c.push(b)) : b instanceof zt && f && ($ = O[O.length - 1]) instanceof zt && b.lines + $.lines <= 32 ? (f += b.lines, u += b.length + 1, O[O.length - 1] = new zt($.text.concat(b.text), $.length + 1 + b.length)) : (f + b.lines > r && g(), f += b.lines, u += b.length + 1, O.push(b));
    }
    function g() {
      f != 0 && (c.push(O.length == 1 ? O[0] : nr.from(O, u)), u = -1, f = O.length = 0);
    }
    for (let b of e)
      p(b);
    return g(), c.length == 1 ? c[0] : new nr(c, t);
  }
}
ot.empty = /* @__PURE__ */ new zt([""], 0);
function Lk(n) {
  let e = -1;
  for (let t of n)
    e += t.length + 1;
  return e;
}
function Vc(n, e, t = 0, i = 1e9) {
  for (let r = 0, l = 0, o = !0; l < n.length && r <= i; l++) {
    let c = n[l], f = r + c.length;
    f >= t && (f > i && (c = c.slice(0, i - r)), r < t && (c = c.slice(t - r)), o ? (e[e.length - 1] += c, o = !1) : e.push(c)), r = f + 1;
  }
  return e;
}
function kg(n, e, t) {
  return Vc(n, [""], e, t);
}
class Zo {
  constructor(e, t = 1) {
    this.dir = t, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [t > 0 ? 1 : (e instanceof zt ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, t) {
    for (this.done = this.lineBreak = !1; ; ) {
      let i = this.nodes.length - 1, r = this.nodes[i], l = this.offsets[i], o = l >> 1, c = r instanceof zt ? r.text.length : r.children.length;
      if (o == (t > 0 ? c : 0)) {
        if (i == 0)
          return this.done = !0, this.value = "", this;
        t > 0 && this.offsets[i - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((l & 1) == (t > 0 ? 0 : 1)) {
        if (this.offsets[i] += t, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (r instanceof zt) {
        let f = r.text[o + (t < 0 ? -1 : 0)];
        if (this.offsets[i] += t, f.length > Math.max(0, e))
          return this.value = e == 0 ? f : t > 0 ? f.slice(e) : f.slice(0, f.length - e), this;
        e -= f.length;
      } else {
        let f = r.children[o + (t < 0 ? -1 : 0)];
        e > f.length ? (e -= f.length, this.offsets[i] += t) : (t < 0 && this.offsets[i]--, this.nodes.push(f), this.offsets.push(t > 0 ? 1 : (f instanceof zt ? f.text.length : f.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class r1 {
  constructor(e, t, i) {
    this.value = "", this.done = !1, this.cursor = new Zo(e, t > i ? -1 : 1), this.pos = t > i ? e.length : 0, this.from = Math.min(t, i), this.to = Math.max(t, i);
  }
  nextInner(e, t) {
    if (t < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
    let i = t < 0 ? this.pos - this.from : this.to - this.pos;
    e > i && (e = i), i -= e;
    let { value: r } = this.cursor.next(e);
    return this.pos += (r.length + e) * t, this.value = r.length <= i ? r : t < 0 ? r.slice(r.length - i) : r.slice(0, i), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class s1 {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: t, lineBreak: i, value: r } = this.inner.next(e);
    return t && this.afterBreak ? (this.value = "", this.afterBreak = !1) : t ? (this.done = !0, this.value = "") : i ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = r, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (ot.prototype[Symbol.iterator] = function() {
  return this.iter();
}, Zo.prototype[Symbol.iterator] = r1.prototype[Symbol.iterator] = s1.prototype[Symbol.iterator] = function() {
  return this;
});
class Uk {
  /**
  @internal
  */
  constructor(e, t, i, r) {
    this.from = e, this.to = t, this.number = i, this.text = r;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function xl(n, e, t) {
  return e = Math.max(0, Math.min(n.length, e)), [e, Math.max(e, Math.min(n.length, t))];
}
function ui(n, e, t = !0, i = !0) {
  return qk(n, e, t, i);
}
function Yk(n) {
  return n >= 56320 && n < 57344;
}
function Dk(n) {
  return n >= 55296 && n < 56320;
}
function Di(n, e) {
  let t = n.charCodeAt(e);
  if (!Dk(t) || e + 1 == n.length)
    return t;
  let i = n.charCodeAt(e + 1);
  return Yk(i) ? (t - 55296 << 10) + (i - 56320) + 65536 : t;
}
function EO(n) {
  return n <= 65535 ? String.fromCharCode(n) : (n -= 65536, String.fromCharCode((n >> 10) + 55296, (n & 1023) + 56320));
}
function rr(n) {
  return n < 65536 ? 1 : 2;
}
const Mu = /\r\n?|\n/;
var fi = /* @__PURE__ */ function(n) {
  return n[n.Simple = 0] = "Simple", n[n.TrackDel = 1] = "TrackDel", n[n.TrackBefore = 2] = "TrackBefore", n[n.TrackAfter = 3] = "TrackAfter", n;
}(fi || (fi = {}));
class cr {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2)
      e += this.sections[t];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2) {
      let i = this.sections[t + 1];
      e += i < 0 ? this.sections[t] : i;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let t = 0, i = 0, r = 0; t < this.sections.length; ) {
      let l = this.sections[t++], o = this.sections[t++];
      o < 0 ? (e(i, r, l), r += l) : r += o, i += l;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, t = !1) {
    Eu(this, e, t);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let t = 0; t < this.sections.length; ) {
      let i = this.sections[t++], r = this.sections[t++];
      r < 0 ? e.push(i, r) : e.push(r, i);
    }
    return new cr(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : l1(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `this` happened before the ones in `other`.
  */
  mapDesc(e, t = !1) {
    return e.empty ? this : qu(this, e, t);
  }
  mapPos(e, t = -1, i = fi.Simple) {
    let r = 0, l = 0;
    for (let o = 0; o < this.sections.length; ) {
      let c = this.sections[o++], f = this.sections[o++], u = r + c;
      if (f < 0) {
        if (u > e)
          return l + (e - r);
        l += c;
      } else {
        if (i != fi.Simple && u >= e && (i == fi.TrackDel && r < e && u > e || i == fi.TrackBefore && r < e || i == fi.TrackAfter && u > e))
          return null;
        if (u > e || u == e && t < 0 && !c)
          return e == r || t < 0 ? l : l + f;
        l += f;
      }
      r = u;
    }
    if (e > r)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${r}`);
    return l;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, t = e) {
    for (let i = 0, r = 0; i < this.sections.length && r <= t; ) {
      let l = this.sections[i++], o = this.sections[i++], c = r + l;
      if (o >= 0 && r <= t && c >= e)
        return r < e && c > t ? "cover" : !0;
      r = c;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let t = 0; t < this.sections.length; ) {
      let i = this.sections[t++], r = this.sections[t++];
      e += (e ? " " : "") + i + (r >= 0 ? ":" + r : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new cr(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new cr(e);
  }
}
class ei extends cr {
  constructor(e, t) {
    super(e), this.inserted = t;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return Eu(this, (t, i, r, l, o) => e = e.replace(r, r + (i - t), o), !1), e;
  }
  mapDesc(e, t = !1) {
    return qu(this, e, t, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let t = this.sections.slice(), i = [];
    for (let r = 0, l = 0; r < t.length; r += 2) {
      let o = t[r], c = t[r + 1];
      if (c >= 0) {
        t[r] = c, t[r + 1] = o;
        let f = r >> 1;
        for (; i.length < f; )
          i.push(ot.empty);
        i.push(o ? e.slice(l, l + o) : ot.empty);
      }
      l += o;
    }
    return new ei(t, i);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : l1(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, t = !1) {
    return e.empty ? this : qu(this, e, t, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, t = !1) {
    Eu(this, e, t);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return cr.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let t = [], i = [], r = [], l = new Ao(this);
    e: for (let o = 0, c = 0; ; ) {
      let f = o == e.length ? 1e9 : e[o++];
      for (; c < f || c == f && l.len == 0; ) {
        if (l.done)
          break e;
        let O = Math.min(l.len, f - c);
        Si(r, O, -1);
        let p = l.ins == -1 ? -1 : l.off == 0 ? l.ins : 0;
        Si(t, O, p), p > 0 && ns(i, t, l.text), l.forward(O), c += O;
      }
      let u = e[o++];
      for (; c < u; ) {
        if (l.done)
          break e;
        let O = Math.min(l.len, u - c);
        Si(t, O, -1), Si(r, O, l.ins == -1 ? -1 : l.off == 0 ? l.ins : 0), l.forward(O), c += O;
      }
    }
    return {
      changes: new ei(t, i),
      filtered: cr.create(r)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let t = 0; t < this.sections.length; t += 2) {
      let i = this.sections[t], r = this.sections[t + 1];
      r < 0 ? e.push(i) : r == 0 ? e.push([i]) : e.push([i].concat(this.inserted[t >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, t, i) {
    let r = [], l = [], o = 0, c = null;
    function f(O = !1) {
      if (!O && !r.length)
        return;
      o < t && Si(r, t - o, -1);
      let p = new ei(r, l);
      c = c ? c.compose(p.map(c)) : p, r = [], l = [], o = 0;
    }
    function u(O) {
      if (Array.isArray(O))
        for (let p of O)
          u(p);
      else if (O instanceof ei) {
        if (O.length != t)
          throw new RangeError(`Mismatched change set length (got ${O.length}, expected ${t})`);
        f(), c = c ? c.compose(O.map(c)) : O;
      } else {
        let { from: p, to: g = p, insert: b } = O;
        if (p > g || p < 0 || g > t)
          throw new RangeError(`Invalid change range ${p} to ${g} (in doc of length ${t})`);
        let $ = b ? typeof b == "string" ? ot.of(b.split(i || Mu)) : b : ot.empty, x = $.length;
        if (p == g && x == 0)
          return;
        p < o && f(), p > o && Si(r, p - o, -1), Si(r, g - p, x), ns(l, r, $), o = g;
      }
    }
    return u(e), f(!c), c;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new ei(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let t = [], i = [];
    for (let r = 0; r < e.length; r++) {
      let l = e[r];
      if (typeof l == "number")
        t.push(l, -1);
      else {
        if (!Array.isArray(l) || typeof l[0] != "number" || l.some((o, c) => c && typeof o != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (l.length == 1)
          t.push(l[0], 0);
        else {
          for (; i.length < r; )
            i.push(ot.empty);
          i[r] = ot.of(l.slice(1)), t.push(l[0], i[r].length);
        }
      }
    }
    return new ei(t, i);
  }
  /**
  @internal
  */
  static createSet(e, t) {
    return new ei(e, t);
  }
}
function Si(n, e, t, i = !1) {
  if (e == 0 && t <= 0)
    return;
  let r = n.length - 2;
  r >= 0 && t <= 0 && t == n[r + 1] ? n[r] += e : r >= 0 && e == 0 && n[r] == 0 ? n[r + 1] += t : i ? (n[r] += e, n[r + 1] += t) : n.push(e, t);
}
function ns(n, e, t) {
  if (t.length == 0)
    return;
  let i = e.length - 2 >> 1;
  if (i < n.length)
    n[n.length - 1] = n[n.length - 1].append(t);
  else {
    for (; n.length < i; )
      n.push(ot.empty);
    n.push(t);
  }
}
function Eu(n, e, t) {
  let i = n.inserted;
  for (let r = 0, l = 0, o = 0; o < n.sections.length; ) {
    let c = n.sections[o++], f = n.sections[o++];
    if (f < 0)
      r += c, l += c;
    else {
      let u = r, O = l, p = ot.empty;
      for (; u += c, O += f, f && i && (p = p.append(i[o - 2 >> 1])), !(t || o == n.sections.length || n.sections[o + 1] < 0); )
        c = n.sections[o++], f = n.sections[o++];
      e(r, u, l, O, p), r = u, l = O;
    }
  }
}
function qu(n, e, t, i = !1) {
  let r = [], l = i ? [] : null, o = new Ao(n), c = new Ao(e);
  for (let f = -1; ; ) {
    if (o.done && c.len || c.done && o.len)
      throw new Error("Mismatched change set lengths");
    if (o.ins == -1 && c.ins == -1) {
      let u = Math.min(o.len, c.len);
      Si(r, u, -1), o.forward(u), c.forward(u);
    } else if (c.ins >= 0 && (o.ins < 0 || f == o.i || o.off == 0 && (c.len < o.len || c.len == o.len && !t))) {
      let u = c.len;
      for (Si(r, c.ins, -1); u; ) {
        let O = Math.min(o.len, u);
        o.ins >= 0 && f < o.i && o.len <= O && (Si(r, 0, o.ins), l && ns(l, r, o.text), f = o.i), o.forward(O), u -= O;
      }
      c.next();
    } else if (o.ins >= 0) {
      let u = 0, O = o.len;
      for (; O; )
        if (c.ins == -1) {
          let p = Math.min(O, c.len);
          u += p, O -= p, c.forward(p);
        } else if (c.ins == 0 && c.len < O)
          O -= c.len, c.next();
        else
          break;
      Si(r, u, f < o.i ? o.ins : 0), l && f < o.i && ns(l, r, o.text), f = o.i, o.forward(o.len - O);
    } else {
      if (o.done && c.done)
        return l ? ei.createSet(r, l) : cr.create(r);
      throw new Error("Mismatched change set lengths");
    }
  }
}
function l1(n, e, t = !1) {
  let i = [], r = t ? [] : null, l = new Ao(n), o = new Ao(e);
  for (let c = !1; ; ) {
    if (l.done && o.done)
      return r ? ei.createSet(i, r) : cr.create(i);
    if (l.ins == 0)
      Si(i, l.len, 0, c), l.next();
    else if (o.len == 0 && !o.done)
      Si(i, 0, o.ins, c), r && ns(r, i, o.text), o.next();
    else {
      if (l.done || o.done)
        throw new Error("Mismatched change set lengths");
      {
        let f = Math.min(l.len2, o.len), u = i.length;
        if (l.ins == -1) {
          let O = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
          Si(i, f, O, c), r && O && ns(r, i, o.text);
        } else o.ins == -1 ? (Si(i, l.off ? 0 : l.len, f, c), r && ns(r, i, l.textBit(f))) : (Si(i, l.off ? 0 : l.len, o.off ? 0 : o.ins, c), r && !o.off && ns(r, i, o.text));
        c = (l.ins > f || o.ins >= 0 && o.len > f) && (c || i.length > u), l.forward2(f), o.forward(f);
      }
    }
  }
}
class Ao {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, t = this.i - 2 >> 1;
    return t >= e.length ? ot.empty : e[t];
  }
  textBit(e) {
    let { inserted: t } = this.set, i = this.i - 2 >> 1;
    return i >= t.length && !e ? ot.empty : t[i].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class Cs {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.flags = i;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, t = -1) {
    let i, r;
    return this.empty ? i = r = e.mapPos(this.from, t) : (i = e.mapPos(this.from, 1), r = e.mapPos(this.to, -1)), i == this.from && r == this.to ? this : new Cs(i, r, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, t = e) {
    if (e <= this.anchor && t >= this.anchor)
      return F.range(e, t);
    let i = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
    return F.range(this.anchor, i);
  }
  /**
  Compare this range to another range.
  */
  eq(e, t = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!t || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return F.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new Cs(e, t, i);
  }
}
class F {
  constructor(e, t) {
    this.ranges = e, this.mainIndex = t;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, t = -1) {
    return e.empty ? this : F.create(this.ranges.map((i) => i.map(e, t)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, t = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let i = 0; i < this.ranges.length; i++)
      if (!this.ranges[i].eq(e.ranges[i], t))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new F([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, t = !0) {
    return F.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, t = this.mainIndex) {
    let i = this.ranges.slice();
    return i[t] = e, F.create(i, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new F(e.ranges.map((t) => Cs.fromJSON(t)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, t = e) {
    return new F([F.range(e, t)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, t = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let i = 0, r = 0; r < e.length; r++) {
      let l = e[r];
      if (l.empty ? l.from <= i : l.from < i)
        return F.normalized(e.slice(), t);
      i = l.to;
    }
    return new F(e, t);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, t = 0, i, r) {
    return Cs.create(e, e, (t == 0 ? 0 : t < 0 ? 8 : 16) | (i == null ? 7 : Math.min(6, i)) | (r ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, t, i, r) {
    let l = (i ?? 16777215) << 6 | (r == null ? 7 : Math.min(6, r));
    return t < e ? Cs.create(t, e, 48 | l) : Cs.create(e, t, (t > e ? 8 : 0) | l);
  }
  /**
  @internal
  */
  static normalized(e, t = 0) {
    let i = e[t];
    e.sort((r, l) => r.from - l.from), t = e.indexOf(i);
    for (let r = 1; r < e.length; r++) {
      let l = e[r], o = e[r - 1];
      if (l.empty ? l.from <= o.to : l.from < o.to) {
        let c = o.from, f = Math.max(l.to, o.to);
        r <= t && t--, e.splice(--r, 2, l.anchor > l.head ? F.range(f, c) : F.range(c, f));
      }
    }
    return new F(e, t);
  }
}
function o1(n, e) {
  for (let t of n.ranges)
    if (t.to > e)
      throw new RangeError("Selection points outside of document");
}
let qO = 0;
class ge {
  constructor(e, t, i, r, l) {
    this.combine = e, this.compareInput = t, this.compare = i, this.isStatic = r, this.id = qO++, this.default = e([]), this.extensions = typeof l == "function" ? l(this) : l;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new ge(e.combine || ((t) => t), e.compareInput || ((t, i) => t === i), e.compare || (e.combine ? (t, i) => t === i : VO), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new Lc([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new Lc(e, this, 1, t);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new Lc(e, this, 2, t);
  }
  from(e, t) {
    return t || (t = (i) => i), this.compute([e], (i) => t(i.field(e)));
  }
}
function VO(n, e) {
  return n == e || n.length == e.length && n.every((t, i) => t === e[i]);
}
class Lc {
  constructor(e, t, i, r) {
    this.dependencies = e, this.facet = t, this.type = i, this.value = r, this.id = qO++;
  }
  dynamicSlot(e) {
    var t;
    let i = this.value, r = this.facet.compareInput, l = this.id, o = e[l] >> 1, c = this.type == 2, f = !1, u = !1, O = [];
    for (let p of this.dependencies)
      p == "doc" ? f = !0 : p == "selection" ? u = !0 : ((t = e[p.id]) !== null && t !== void 0 ? t : 1) & 1 || O.push(e[p.id]);
    return {
      create(p) {
        return p.values[o] = i(p), 1;
      },
      update(p, g) {
        if (f && g.docChanged || u && (g.docChanged || g.selection) || Vu(p, O)) {
          let b = i(p);
          if (c ? !_g(b, p.values[o], r) : !r(b, p.values[o]))
            return p.values[o] = b, 1;
        }
        return 0;
      },
      reconfigure: (p, g) => {
        let b, $ = g.config.address[l];
        if ($ != null) {
          let x = Jc(g, $);
          if (this.dependencies.every((P) => P instanceof ge ? g.facet(P) === p.facet(P) : P instanceof ti ? g.field(P, !1) == p.field(P, !1) : !0) || (c ? _g(b = i(p), x, r) : r(b = i(p), x)))
            return p.values[o] = x, 0;
        } else
          b = i(p);
        return p.values[o] = b, 1;
      }
    };
  }
}
function _g(n, e, t) {
  if (n.length != e.length)
    return !1;
  for (let i = 0; i < n.length; i++)
    if (!t(n[i], e[i]))
      return !1;
  return !0;
}
function Vu(n, e) {
  let t = !1;
  for (let i of e)
    To(n, i) & 1 && (t = !0);
  return t;
}
function zk(n, e, t) {
  let i = t.map((f) => n[f.id]), r = t.map((f) => f.type), l = i.filter((f) => !(f & 1)), o = n[e.id] >> 1;
  function c(f) {
    let u = [];
    for (let O = 0; O < i.length; O++) {
      let p = Jc(f, i[O]);
      if (r[O] == 2)
        for (let g of p)
          u.push(g);
      else
        u.push(p);
    }
    return e.combine(u);
  }
  return {
    create(f) {
      for (let u of i)
        To(f, u);
      return f.values[o] = c(f), 1;
    },
    update(f, u) {
      if (!Vu(f, l))
        return 0;
      let O = c(f);
      return e.compare(O, f.values[o]) ? 0 : (f.values[o] = O, 1);
    },
    reconfigure(f, u) {
      let O = Vu(f, i), p = u.config.facets[e.id], g = u.facet(e);
      if (p && !O && VO(t, p))
        return f.values[o] = g, 0;
      let b = c(f);
      return e.compare(b, g) ? (f.values[o] = g, 0) : (f.values[o] = b, 1);
    }
  };
}
const uc = /* @__PURE__ */ ge.define({ static: !0 });
class ti {
  constructor(e, t, i, r, l) {
    this.id = e, this.createF = t, this.updateF = i, this.compareF = r, this.spec = l, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let t = new ti(qO++, e.create, e.update, e.compare || ((i, r) => i === r), e);
    return e.provide && (t.provides = e.provide(t)), t;
  }
  create(e) {
    let t = e.facet(uc).find((i) => i.field == this);
    return ((t == null ? void 0 : t.create) || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let t = e[this.id] >> 1;
    return {
      create: (i) => (i.values[t] = this.create(i), 1),
      update: (i, r) => {
        let l = i.values[t], o = this.updateF(l, r);
        return this.compareF(l, o) ? 0 : (i.values[t] = o, 1);
      },
      reconfigure: (i, r) => {
        let l = i.facet(uc), o = r.facet(uc), c;
        return (c = l.find((f) => f.field == this)) && c != o.find((f) => f.field == this) ? (i.values[t] = c.create(i), 1) : r.config.address[this.id] != null ? (i.values[t] = r.field(this), 0) : (i.values[t] = this.create(i), 1);
      }
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, uc.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const Ws = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Oo(n) {
  return (e) => new a1(e, n);
}
const ps = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Oo(Ws.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Oo(Ws.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Oo(Ws.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Oo(Ws.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Oo(Ws.lowest)
};
class a1 {
  constructor(e, t) {
    this.inner = e, this.prec = t;
  }
}
class Rl {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new Lu(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return Rl.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class Lu {
  constructor(e, t) {
    this.compartment = e, this.inner = t;
  }
}
class Kc {
  constructor(e, t, i, r, l, o) {
    for (this.base = e, this.compartments = t, this.dynamicSlots = i, this.address = r, this.staticValues = l, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < i.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let t = this.address[e.id];
    return t == null ? e.default : this.staticValues[t >> 1];
  }
  static resolve(e, t, i) {
    let r = [], l = /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ new Map();
    for (let g of jk(e, t, o))
      g instanceof ti ? r.push(g) : (l[g.facet.id] || (l[g.facet.id] = [])).push(g);
    let c = /* @__PURE__ */ Object.create(null), f = [], u = [];
    for (let g of r)
      c[g.id] = u.length << 1, u.push((b) => g.slot(b));
    let O = i == null ? void 0 : i.config.facets;
    for (let g in l) {
      let b = l[g], $ = b[0].facet, x = O && O[g] || [];
      if (b.every(
        (P) => P.type == 0
        /* Provider.Static */
      ))
        if (c[$.id] = f.length << 1 | 1, VO(x, b))
          f.push(i.facet($));
        else {
          let P = $.combine(b.map((k) => k.value));
          f.push(i && $.compare(P, i.facet($)) ? i.facet($) : P);
        }
      else {
        for (let P of b)
          P.type == 0 ? (c[P.id] = f.length << 1 | 1, f.push(P.value)) : (c[P.id] = u.length << 1, u.push((k) => P.dynamicSlot(k)));
        c[$.id] = u.length << 1, u.push((P) => zk(P, $, b));
      }
    }
    let p = u.map((g) => g(c));
    return new Kc(e, o, p, c, f, l);
  }
}
function jk(n, e, t) {
  let i = [[], [], [], [], []], r = /* @__PURE__ */ new Map();
  function l(o, c) {
    let f = r.get(o);
    if (f != null) {
      if (f <= c)
        return;
      let u = i[f].indexOf(o);
      u > -1 && i[f].splice(u, 1), o instanceof Lu && t.delete(o.compartment);
    }
    if (r.set(o, c), Array.isArray(o))
      for (let u of o)
        l(u, c);
    else if (o instanceof Lu) {
      if (t.has(o.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let u = e.get(o.compartment) || o.inner;
      t.set(o.compartment, u), l(u, c);
    } else if (o instanceof a1)
      l(o.inner, o.prec);
    else if (o instanceof ti)
      i[c].push(o), o.provides && l(o.provides, c);
    else if (o instanceof Lc)
      i[c].push(o), o.facet.extensions && l(o.facet.extensions, Ws.default);
    else {
      let u = o.extension;
      if (!u)
        throw new Error(`Unrecognized extension value in extension set (${o}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      l(u, c);
    }
  }
  return l(n, Ws.default), i.reduce((o, c) => o.concat(c));
}
function To(n, e) {
  if (e & 1)
    return 2;
  let t = e >> 1, i = n.status[t];
  if (i == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (i & 2)
    return i;
  n.status[t] = 4;
  let r = n.computeSlot(n, n.config.dynamicSlots[t]);
  return n.status[t] = 2 | r;
}
function Jc(n, e) {
  return e & 1 ? n.config.staticValues[e >> 1] : n.values[e >> 1];
}
const c1 = /* @__PURE__ */ ge.define(), Uu = /* @__PURE__ */ ge.define({
  combine: (n) => n.some((e) => e),
  static: !0
}), h1 = /* @__PURE__ */ ge.define({
  combine: (n) => n.length ? n[0] : void 0,
  static: !0
}), f1 = /* @__PURE__ */ ge.define(), u1 = /* @__PURE__ */ ge.define(), O1 = /* @__PURE__ */ ge.define(), d1 = /* @__PURE__ */ ge.define({
  combine: (n) => n.length ? n[0] : !1
});
class Lr {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new Bk();
  }
}
class Bk {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new Lr(this, e);
  }
}
class Ik {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new Ye(this, e);
  }
}
class Ye {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let t = this.type.map(this.value, e);
    return t === void 0 ? void 0 : t == this.value ? this : new Ye(this.type, t);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new Ik(e.map || ((t) => t));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, t) {
    if (!e.length)
      return e;
    let i = [];
    for (let r of e) {
      let l = r.map(t);
      l && i.push(l);
    }
    return i;
  }
}
Ye.reconfigure = /* @__PURE__ */ Ye.define();
Ye.appendConfig = /* @__PURE__ */ Ye.define();
class Nt {
  constructor(e, t, i, r, l, o) {
    this.startState = e, this.changes = t, this.selection = i, this.effects = r, this.annotations = l, this.scrollIntoView = o, this._doc = null, this._state = null, i && o1(i, t.newLength), l.some((c) => c.type == Nt.time) || (this.annotations = l.concat(Nt.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, t, i, r, l, o) {
    return new Nt(e, t, i, r, l, o);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let t of this.annotations)
      if (t.type == e)
        return t.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let t = this.annotation(Nt.userEvent);
    return !!(t && (t == e || t.length > e.length && t.slice(0, e.length) == e && t[e.length] == "."));
  }
}
Nt.time = /* @__PURE__ */ Lr.define();
Nt.userEvent = /* @__PURE__ */ Lr.define();
Nt.addToHistory = /* @__PURE__ */ Lr.define();
Nt.remote = /* @__PURE__ */ Lr.define();
function Nk(n, e) {
  let t = [];
  for (let i = 0, r = 0; ; ) {
    let l, o;
    if (i < n.length && (r == e.length || e[r] >= n[i]))
      l = n[i++], o = n[i++];
    else if (r < e.length)
      l = e[r++], o = e[r++];
    else
      return t;
    !t.length || t[t.length - 1] < l ? t.push(l, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
  }
}
function p1(n, e, t) {
  var i;
  let r, l, o;
  return t ? (r = e.changes, l = ei.empty(e.changes.length), o = n.changes.compose(e.changes)) : (r = e.changes.map(n.changes), l = n.changes.mapDesc(e.changes, !0), o = n.changes.compose(r)), {
    changes: o,
    selection: e.selection ? e.selection.map(l) : (i = n.selection) === null || i === void 0 ? void 0 : i.map(r),
    effects: Ye.mapEffects(n.effects, r).concat(Ye.mapEffects(e.effects, l)),
    annotations: n.annotations.length ? n.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: n.scrollIntoView || e.scrollIntoView
  };
}
function Yu(n, e, t) {
  let i = e.selection, r = ml(e.annotations);
  return e.userEvent && (r = r.concat(Nt.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof ei ? e.changes : ei.of(e.changes || [], t, n.facet(h1)),
    selection: i && (i instanceof F ? i : F.single(i.anchor, i.head)),
    effects: ml(e.effects),
    annotations: r,
    scrollIntoView: !!e.scrollIntoView
  };
}
function g1(n, e, t) {
  let i = Yu(n, e.length ? e[0] : {}, n.doc.length);
  e.length && e[0].filter === !1 && (t = !1);
  for (let l = 1; l < e.length; l++) {
    e[l].filter === !1 && (t = !1);
    let o = !!e[l].sequential;
    i = p1(i, Yu(n, e[l], o ? i.changes.newLength : n.doc.length), o);
  }
  let r = Nt.create(n, i.changes, i.selection, i.effects, i.annotations, i.scrollIntoView);
  return Gk(t ? Fk(r) : r);
}
function Fk(n) {
  let e = n.startState, t = !0;
  for (let r of e.facet(f1)) {
    let l = r(n);
    if (l === !1) {
      t = !1;
      break;
    }
    Array.isArray(l) && (t = t === !0 ? l : Nk(t, l));
  }
  if (t !== !0) {
    let r, l;
    if (t === !1)
      l = n.changes.invertedDesc, r = ei.empty(e.doc.length);
    else {
      let o = n.changes.filter(t);
      r = o.changes, l = o.filtered.mapDesc(o.changes).invertedDesc;
    }
    n = Nt.create(e, r, n.selection && n.selection.map(l), Ye.mapEffects(n.effects, l), n.annotations, n.scrollIntoView);
  }
  let i = e.facet(u1);
  for (let r = i.length - 1; r >= 0; r--) {
    let l = i[r](n);
    l instanceof Nt ? n = l : Array.isArray(l) && l.length == 1 && l[0] instanceof Nt ? n = l[0] : n = g1(e, ml(l), !1);
  }
  return n;
}
function Gk(n) {
  let e = n.startState, t = e.facet(O1), i = n;
  for (let r = t.length - 1; r >= 0; r--) {
    let l = t[r](n);
    l && Object.keys(l).length && (i = p1(i, Yu(e, l, n.changes.newLength), !0));
  }
  return i == n ? n : Nt.create(e, n.changes, n.selection, i.effects, i.annotations, i.scrollIntoView);
}
const Hk = [];
function ml(n) {
  return n == null ? Hk : Array.isArray(n) ? n : [n];
}
var Rt = /* @__PURE__ */ function(n) {
  return n[n.Word = 0] = "Word", n[n.Space = 1] = "Space", n[n.Other = 2] = "Other", n;
}(Rt || (Rt = {}));
const Kk = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let Du;
try {
  Du = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function Jk(n) {
  if (Du)
    return Du.test(n);
  for (let e = 0; e < n.length; e++) {
    let t = n[e];
    if (/\w/.test(t) || t > "" && (t.toUpperCase() != t.toLowerCase() || Kk.test(t)))
      return !0;
  }
  return !1;
}
function e_(n) {
  return (e) => {
    if (!/\S/.test(e))
      return Rt.Space;
    if (Jk(e))
      return Rt.Word;
    for (let t = 0; t < n.length; t++)
      if (e.indexOf(n[t]) > -1)
        return Rt.Word;
    return Rt.Other;
  };
}
class it {
  constructor(e, t, i, r, l, o) {
    this.config = e, this.doc = t, this.selection = i, this.values = r, this.status = e.statusTemplate.slice(), this.computeSlot = l, o && (o._state = this);
    for (let c = 0; c < this.config.dynamicSlots.length; c++)
      To(this, c << 1);
    this.computeSlot = null;
  }
  field(e, t = !0) {
    let i = this.config.address[e.id];
    if (i == null) {
      if (t)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return To(this, i), Jc(this, i);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return g1(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let t = this.config, { base: i, compartments: r } = t;
    for (let c of e.effects)
      c.is(Rl.reconfigure) ? (t && (r = /* @__PURE__ */ new Map(), t.compartments.forEach((f, u) => r.set(u, f)), t = null), r.set(c.value.compartment, c.value.extension)) : c.is(Ye.reconfigure) ? (t = null, i = c.value) : c.is(Ye.appendConfig) && (t = null, i = ml(i).concat(c.value));
    let l;
    t ? l = e.startState.values.slice() : (t = Kc.resolve(i, r, this), l = new it(t, this.doc, this.selection, t.dynamicSlots.map(() => null), (f, u) => u.reconfigure(f, this), null).values);
    let o = e.startState.facet(Uu) ? e.newSelection : e.newSelection.asSingle();
    new it(t, e.newDoc, o, l, (c, f) => f.update(c, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({
      changes: { from: t.from, to: t.to, insert: e },
      range: F.cursor(t.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let t = this.selection, i = e(t.ranges[0]), r = this.changes(i.changes), l = [i.range], o = ml(i.effects);
    for (let c = 1; c < t.ranges.length; c++) {
      let f = e(t.ranges[c]), u = this.changes(f.changes), O = u.map(r);
      for (let g = 0; g < c; g++)
        l[g] = l[g].map(O);
      let p = r.mapDesc(u, !0);
      l.push(f.range.map(p)), r = r.compose(O), o = Ye.mapEffects(o, O).concat(Ye.mapEffects(ml(f.effects), p));
    }
    return {
      changes: r,
      selection: F.create(l, t.mainIndex),
      effects: o
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof ei ? e : ei.of(e, this.doc.length, this.facet(it.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return ot.of(e.split(this.facet(it.lineSeparator) || Mu));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, t = this.doc.length) {
    return this.doc.sliceString(e, t, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let t = this.config.address[e.id];
    return t == null ? e.default : (To(this, t), Jc(this, t));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let t = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let i in e) {
        let r = e[i];
        r instanceof ti && this.config.address[r.id] != null && (t[i] = r.spec.toJSON(this.field(e[i]), this));
      }
    return t;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, t = {}, i) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let r = [];
    if (i) {
      for (let l in i)
        if (Object.prototype.hasOwnProperty.call(e, l)) {
          let o = i[l], c = e[l];
          r.push(o.init((f) => o.spec.fromJSON(c, f)));
        }
    }
    return it.create({
      doc: e.doc,
      selection: F.fromJSON(e.selection),
      extensions: t.extensions ? r.concat([t.extensions]) : r
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let t = Kc.resolve(e.extensions || [], /* @__PURE__ */ new Map()), i = e.doc instanceof ot ? e.doc : ot.of((e.doc || "").split(t.staticFacet(it.lineSeparator) || Mu)), r = e.selection ? e.selection instanceof F ? e.selection : F.single(e.selection.anchor, e.selection.head) : F.single(0);
    return o1(r, i.length), t.staticFacet(Uu) || (r = r.asSingle()), new it(t, i, r, t.dynamicSlots.map(() => null), (l, o) => o.create(l), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(it.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(it.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(d1);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...t) {
    for (let i of this.facet(it.phrases))
      if (Object.prototype.hasOwnProperty.call(i, e)) {
        e = i[e];
        break;
      }
    return t.length && (e = e.replace(/\$(\$|\d*)/g, (i, r) => {
      if (r == "$")
        return "$";
      let l = +(r || 1);
      return !l || l > t.length ? i : t[l - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, t, i = -1) {
    let r = [];
    for (let l of this.facet(c1))
      for (let o of l(this, t, i))
        Object.prototype.hasOwnProperty.call(o, e) && r.push(o[e]);
    return r;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return e_(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: t, from: i, length: r } = this.doc.lineAt(e), l = this.charCategorizer(e), o = e - i, c = e - i;
    for (; o > 0; ) {
      let f = ui(t, o, !1);
      if (l(t.slice(f, o)) != Rt.Word)
        break;
      o = f;
    }
    for (; c < r; ) {
      let f = ui(t, c);
      if (l(t.slice(c, f)) != Rt.Word)
        break;
      c = f;
    }
    return o == c ? null : F.range(o + i, c + i);
  }
}
it.allowMultipleSelections = Uu;
it.tabSize = /* @__PURE__ */ ge.define({
  combine: (n) => n.length ? n[0] : 4
});
it.lineSeparator = h1;
it.readOnly = d1;
it.phrases = /* @__PURE__ */ ge.define({
  compare(n, e) {
    let t = Object.keys(n), i = Object.keys(e);
    return t.length == i.length && t.every((r) => n[r] == e[r]);
  }
});
it.languageData = c1;
it.changeFilter = f1;
it.transactionFilter = u1;
it.transactionExtender = O1;
Rl.reconfigure = /* @__PURE__ */ Ye.define();
function ur(n, e, t = {}) {
  let i = {};
  for (let r of n)
    for (let l of Object.keys(r)) {
      let o = r[l], c = i[l];
      if (c === void 0)
        i[l] = o;
      else if (!(c === o || o === void 0)) if (Object.hasOwnProperty.call(t, l))
        i[l] = t[l](c, o);
      else
        throw new Error("Config merge conflict for field " + l);
    }
  for (let r in e)
    i[r] === void 0 && (i[r] = e[r]);
  return i;
}
class As {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, t = e) {
    return zu.create(e, t, this);
  }
}
As.prototype.startSide = As.prototype.endSide = 0;
As.prototype.point = !1;
As.prototype.mapMode = fi.TrackDel;
let zu = class m1 {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.value = i;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new m1(e, t, i);
  }
};
function ju(n, e) {
  return n.from - e.from || n.value.startSide - e.value.startSide;
}
class LO {
  constructor(e, t, i, r) {
    this.from = e, this.to = t, this.value = i, this.maxPoint = r;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, t, i, r = 0) {
    let l = i ? this.to : this.from;
    for (let o = r, c = l.length; ; ) {
      if (o == c)
        return o;
      let f = o + c >> 1, u = l[f] - e || (i ? this.value[f].endSide : this.value[f].startSide) - t;
      if (f == o)
        return u >= 0 ? o : c;
      u >= 0 ? c = f : o = f + 1;
    }
  }
  between(e, t, i, r) {
    for (let l = this.findIndex(t, -1e9, !0), o = this.findIndex(i, 1e9, !1, l); l < o; l++)
      if (r(this.from[l] + e, this.to[l] + e, this.value[l]) === !1)
        return !1;
  }
  map(e, t) {
    let i = [], r = [], l = [], o = -1, c = -1;
    for (let f = 0; f < this.value.length; f++) {
      let u = this.value[f], O = this.from[f] + e, p = this.to[f] + e, g, b;
      if (O == p) {
        let $ = t.mapPos(O, u.startSide, u.mapMode);
        if ($ == null || (g = b = $, u.startSide != u.endSide && (b = t.mapPos(O, u.endSide), b < g)))
          continue;
      } else if (g = t.mapPos(O, u.startSide), b = t.mapPos(p, u.endSide), g > b || g == b && u.startSide > 0 && u.endSide <= 0)
        continue;
      (b - g || u.endSide - u.startSide) < 0 || (o < 0 && (o = g), u.point && (c = Math.max(c, b - g)), i.push(u), r.push(g - o), l.push(b - o));
    }
    return { mapped: i.length ? new LO(r, l, i, c) : null, pos: o };
  }
}
class ct {
  constructor(e, t, i, r) {
    this.chunkPos = e, this.chunk = t, this.nextLayer = i, this.maxPoint = r;
  }
  /**
  @internal
  */
  static create(e, t, i, r) {
    return new ct(e, t, i, r);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let t of this.chunk)
      e += t.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: t = [], sort: i = !1, filterFrom: r = 0, filterTo: l = this.length } = e, o = e.filter;
    if (t.length == 0 && !o)
      return this;
    if (i && (t = t.slice().sort(ju)), this.isEmpty)
      return t.length ? ct.of(t) : this;
    let c = new v1(this, null, -1).goto(0), f = 0, u = [], O = new Er();
    for (; c.value || f < t.length; )
      if (f < t.length && (c.from - t[f].from || c.startSide - t[f].value.startSide) >= 0) {
        let p = t[f++];
        O.addInner(p.from, p.to, p.value) || u.push(p);
      } else c.rangeIndex == 1 && c.chunkIndex < this.chunk.length && (f == t.length || this.chunkEnd(c.chunkIndex) < t[f].from) && (!o || r > this.chunkEnd(c.chunkIndex) || l < this.chunkPos[c.chunkIndex]) && O.addChunk(this.chunkPos[c.chunkIndex], this.chunk[c.chunkIndex]) ? c.nextChunk() : ((!o || r > c.to || l < c.from || o(c.from, c.to, c.value)) && (O.addInner(c.from, c.to, c.value) || u.push(zu.create(c.from, c.to, c.value))), c.next());
    return O.finishInner(this.nextLayer.isEmpty && !u.length ? ct.empty : this.nextLayer.update({ add: u, filter: o, filterFrom: r, filterTo: l }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let t = [], i = [], r = -1;
    for (let o = 0; o < this.chunk.length; o++) {
      let c = this.chunkPos[o], f = this.chunk[o], u = e.touchesRange(c, c + f.length);
      if (u === !1)
        r = Math.max(r, f.maxPoint), t.push(f), i.push(e.mapPos(c));
      else if (u === !0) {
        let { mapped: O, pos: p } = f.map(c, e);
        O && (r = Math.max(r, O.maxPoint), t.push(O), i.push(p));
      }
    }
    let l = this.nextLayer.map(e);
    return t.length == 0 ? l : new ct(i, t, l || ct.empty, r);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, t, i) {
    if (!this.isEmpty) {
      for (let r = 0; r < this.chunk.length; r++) {
        let l = this.chunkPos[r], o = this.chunk[r];
        if (t >= l && e <= l + o.length && o.between(l, e - l, t - l, i) === !1)
          return;
      }
      this.nextLayer.between(e, t, i);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return Mo.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, t = 0) {
    return Mo.from(e).goto(t);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, t, i, r, l = -1) {
    let o = e.filter((p) => p.maxPoint > 0 || !p.isEmpty && p.maxPoint >= l), c = t.filter((p) => p.maxPoint > 0 || !p.isEmpty && p.maxPoint >= l), f = Wg(o, c, i), u = new po(o, f, l), O = new po(c, f, l);
    i.iterGaps((p, g, b) => Zg(u, p, O, g, b, r)), i.empty && i.length == 0 && Zg(u, 0, O, 0, 0, r);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, t, i = 0, r) {
    r == null && (r = 999999999);
    let l = e.filter((O) => !O.isEmpty && t.indexOf(O) < 0), o = t.filter((O) => !O.isEmpty && e.indexOf(O) < 0);
    if (l.length != o.length)
      return !1;
    if (!l.length)
      return !0;
    let c = Wg(l, o), f = new po(l, c, 0).goto(i), u = new po(o, c, 0).goto(i);
    for (; ; ) {
      if (f.to != u.to || !Bu(f.active, u.active) || f.point && (!u.point || !f.point.eq(u.point)))
        return !1;
      if (f.to > r)
        return !0;
      f.next(), u.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, t, i, r, l = -1) {
    let o = new po(e, null, l).goto(t), c = t, f = o.openStart;
    for (; ; ) {
      let u = Math.min(o.to, i);
      if (o.point) {
        let O = o.activeForPoint(o.to), p = o.pointFrom < t ? O.length + 1 : o.point.startSide < 0 ? O.length : Math.min(O.length, f);
        r.point(c, u, o.point, O, p, o.pointRank), f = Math.min(o.openEnd(u), O.length);
      } else u > c && (r.span(c, u, o.active, f), f = o.openEnd(u));
      if (o.to > i)
        return f + (o.point && o.to > i ? 1 : 0);
      c = o.to, o.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, t = !1) {
    let i = new Er();
    for (let r of e instanceof zu ? [e] : t ? t_(e) : e)
      i.add(r.from, r.to, r.value);
    return i.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return ct.empty;
    let t = e[e.length - 1];
    for (let i = e.length - 2; i >= 0; i--)
      for (let r = e[i]; r != ct.empty; r = r.nextLayer)
        t = new ct(r.chunkPos, r.chunk, t, Math.max(r.maxPoint, t.maxPoint));
    return t;
  }
}
ct.empty = /* @__PURE__ */ new ct([], [], null, -1);
function t_(n) {
  if (n.length > 1)
    for (let e = n[0], t = 1; t < n.length; t++) {
      let i = n[t];
      if (ju(e, i) > 0)
        return n.slice().sort(ju);
      e = i;
    }
  return n;
}
ct.empty.nextLayer = ct.empty;
class Er {
  finishChunk(e) {
    this.chunks.push(new LO(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, t, i) {
    this.addInner(e, t, i) || (this.nextLayer || (this.nextLayer = new Er())).add(e, t, i);
  }
  /**
  @internal
  */
  addInner(e, t, i) {
    let r = e - this.lastTo || i.startSide - this.last.endSide;
    if (r <= 0 && (e - this.lastFrom || i.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return r < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), this.last = i, this.lastFrom = e, this.lastTo = t, this.value.push(i), i.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, t) {
    if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint), this.chunks.push(t), this.chunkPos.push(e);
    let i = t.value.length - 1;
    return this.last = t.value[i], this.lastFrom = t.from[i] + e, this.lastTo = t.to[i] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(ct.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let t = ct.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, t;
  }
}
function Wg(n, e, t) {
  let i = /* @__PURE__ */ new Map();
  for (let l of n)
    for (let o = 0; o < l.chunk.length; o++)
      l.chunk[o].maxPoint <= 0 && i.set(l.chunk[o], l.chunkPos[o]);
  let r = /* @__PURE__ */ new Set();
  for (let l of e)
    for (let o = 0; o < l.chunk.length; o++) {
      let c = i.get(l.chunk[o]);
      c != null && (t ? t.mapPos(c) : c) == l.chunkPos[o] && !(t != null && t.touchesRange(c, c + l.chunk[o].length)) && r.add(l.chunk[o]);
    }
  return r;
}
class v1 {
  constructor(e, t, i, r = 0) {
    this.layer = e, this.skip = t, this.minPoint = i, this.rank = r;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, t = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, t, !1), this;
  }
  gotoInner(e, t, i) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let r = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(r) || this.layer.chunkEnd(this.chunkIndex) < e || r.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, i = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let r = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
      (!i || this.rangeIndex < r) && this.setRangeIndex(r);
    }
    this.next();
  }
  forward(e, t) {
    (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], t = this.layer.chunk[this.chunkIndex], i = e + t.from[this.rangeIndex];
        if (this.from = i, this.to = e + t.to[this.rangeIndex], this.value = t.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class Mo {
  constructor(e) {
    this.heap = e;
  }
  static from(e, t = null, i = -1) {
    let r = [];
    for (let l = 0; l < e.length; l++)
      for (let o = e[l]; !o.isEmpty; o = o.nextLayer)
        o.maxPoint >= i && r.push(new v1(o, t, i, l));
    return r.length == 1 ? r[0] : new Mo(r);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, t = -1e9) {
    for (let i of this.heap)
      i.goto(e, t);
    for (let i = this.heap.length >> 1; i >= 0; i--)
      tu(this.heap, i);
    return this.next(), this;
  }
  forward(e, t) {
    for (let i of this.heap)
      i.forward(e, t);
    for (let i = this.heap.length >> 1; i >= 0; i--)
      tu(this.heap, i);
    (this.to - e || this.value.endSide - t) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), tu(this.heap, 0);
    }
  }
}
function tu(n, e) {
  for (let t = n[e]; ; ) {
    let i = (e << 1) + 1;
    if (i >= n.length)
      break;
    let r = n[i];
    if (i + 1 < n.length && r.compare(n[i + 1]) >= 0 && (r = n[i + 1], i++), t.compare(r) < 0)
      break;
    n[i] = t, n[e] = r, e = i;
  }
}
class po {
  constructor(e, t, i) {
    this.minPoint = i, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Mo.from(e, t, i);
  }
  goto(e, t = -1e9) {
    return this.cursor.goto(e, t), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = t, this.openStart = -1, this.next(), this;
  }
  forward(e, t) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, t);
  }
  removeActive(e) {
    Oc(this.active, e), Oc(this.activeTo, e), Oc(this.activeRank, e), this.minActive = Tg(this.active, this.activeTo);
  }
  addActive(e) {
    let t = 0, { value: i, to: r, rank: l } = this.cursor;
    for (; t < this.activeRank.length && (l - this.activeRank[t] || r - this.activeTo[t]) > 0; )
      t++;
    dc(this.active, t, i), dc(this.activeTo, t, r), dc(this.activeRank, t, l), e && dc(e, t, this.cursor.from), this.minActive = Tg(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, t = this.point;
    this.point = null;
    let i = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let r = this.minActive;
      if (r > -1 && (this.activeTo[r] - this.cursor.from || this.active[r].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[r] > e) {
          this.to = this.activeTo[r], this.endSide = this.active[r].endSide;
          break;
        }
        this.removeActive(r), i && Oc(i, r);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let l = this.cursor.value;
          if (!l.point)
            this.addActive(i), this.cursor.next();
          else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = l, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = l.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (i) {
      this.openStart = 0;
      for (let r = i.length - 1; r >= 0 && i[r] < e; r--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let t = [];
    for (let i = this.active.length - 1; i >= 0 && !(this.activeRank[i] < this.pointRank); i--)
      (this.activeTo[i] > e || this.activeTo[i] == e && this.active[i].endSide >= this.point.endSide) && t.push(this.active[i]);
    return t.reverse();
  }
  openEnd(e) {
    let t = 0;
    for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > e; i--)
      t++;
    return t;
  }
}
function Zg(n, e, t, i, r, l) {
  n.goto(e), t.goto(i);
  let o = i + r, c = i, f = i - e;
  for (; ; ) {
    let u = n.to + f - t.to, O = u || n.endSide - t.endSide, p = O < 0 ? n.to + f : t.to, g = Math.min(p, o);
    if (n.point || t.point ? n.point && t.point && (n.point == t.point || n.point.eq(t.point)) && Bu(n.activeForPoint(n.to), t.activeForPoint(t.to)) || l.comparePoint(c, g, n.point, t.point) : g > c && !Bu(n.active, t.active) && l.compareRange(c, g, n.active, t.active), p > o)
      break;
    (u || n.openEnd != t.openEnd) && l.boundChange && l.boundChange(p), c = p, O <= 0 && n.next(), O >= 0 && t.next();
  }
}
function Bu(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (n[t] != e[t] && !n[t].eq(e[t]))
      return !1;
  return !0;
}
function Oc(n, e) {
  for (let t = e, i = n.length - 1; t < i; t++)
    n[t] = n[t + 1];
  n.pop();
}
function dc(n, e, t) {
  for (let i = n.length - 1; i >= e; i--)
    n[i + 1] = n[i];
  n[e] = t;
}
function Tg(n, e) {
  let t = -1, i = 1e9;
  for (let r = 0; r < e.length; r++)
    (e[r] - i || n[r].endSide - n[t].endSide) < 0 && (t = r, i = e[r]);
  return t;
}
function Xl(n, e, t = n.length) {
  let i = 0;
  for (let r = 0; r < t && r < n.length; )
    n.charCodeAt(r) == 9 ? (i += e - i % e, r++) : (i++, r = ui(n, r));
  return i;
}
function Iu(n, e, t, i) {
  for (let r = 0, l = 0; ; ) {
    if (l >= e)
      return r;
    if (r == n.length)
      break;
    l += n.charCodeAt(r) == 9 ? t - l % t : 1, r = ui(n, r);
  }
  return i === !0 ? -1 : n.length;
}
const Nu = "ͼ", Cg = typeof Symbol > "u" ? "__" + Nu : Symbol.for(Nu), Fu = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Rg = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class os {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, t) {
    this.rules = [];
    let { finish: i } = t || {};
    function r(o) {
      return /^@/.test(o) ? [o] : o.split(/,\s*/);
    }
    function l(o, c, f, u) {
      let O = [], p = /^@(\w+)\b/.exec(o[0]), g = p && p[1] == "keyframes";
      if (p && c == null) return f.push(o[0] + ";");
      for (let b in c) {
        let $ = c[b];
        if (/&/.test(b))
          l(
            b.split(/,\s*/).map((x) => o.map((P) => x.replace(/&/, P))).reduce((x, P) => x.concat(P)),
            $,
            f
          );
        else if ($ && typeof $ == "object") {
          if (!p) throw new RangeError("The value of a property (" + b + ") should be a primitive value.");
          l(r(b), $, O, g);
        } else $ != null && O.push(b.replace(/_.*/, "").replace(/[A-Z]/g, (x) => "-" + x.toLowerCase()) + ": " + $ + ";");
      }
      (O.length || g) && f.push((i && !p && !u ? o.map(i) : o).join(", ") + " {" + O.join(" ") + "}");
    }
    for (let o in e) l(r(o), e[o], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = Rg[Cg] || 1;
    return Rg[Cg] = e + 1, Nu + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, t, i) {
    let r = e[Fu], l = i && i.nonce;
    r ? l && r.setNonce(l) : r = new i_(e, l), r.mount(Array.isArray(t) ? t : [t], e);
  }
}
let Xg = /* @__PURE__ */ new Map();
class i_ {
  constructor(e, t) {
    let i = e.ownerDocument || e, r = i.defaultView;
    if (!e.head && e.adoptedStyleSheets && r.CSSStyleSheet) {
      let l = Xg.get(i);
      if (l) return e[Fu] = l;
      this.sheet = new r.CSSStyleSheet(), Xg.set(i, this);
    } else
      this.styleTag = i.createElement("style"), t && this.styleTag.setAttribute("nonce", t);
    this.modules = [], e[Fu] = this;
  }
  mount(e, t) {
    let i = this.sheet, r = 0, l = 0;
    for (let o = 0; o < e.length; o++) {
      let c = e[o], f = this.modules.indexOf(c);
      if (f < l && f > -1 && (this.modules.splice(f, 1), l--, f = -1), f == -1) {
        if (this.modules.splice(l++, 0, c), i) for (let u = 0; u < c.rules.length; u++)
          i.insertRule(c.rules[u], r++);
      } else {
        for (; l < f; ) r += this.modules[l++].rules.length;
        r += c.rules.length, l++;
      }
    }
    if (i)
      t.adoptedStyleSheets.indexOf(this.sheet) < 0 && (t.adoptedStyleSheets = [this.sheet, ...t.adoptedStyleSheets]);
    else {
      let o = "";
      for (let f = 0; f < this.modules.length; f++)
        o += this.modules[f].getRules() + `
`;
      this.styleTag.textContent = o;
      let c = t.head || t;
      this.styleTag.parentNode != c && c.insertBefore(this.styleTag, c.firstChild);
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var as = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, Eo = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, n_ = typeof navigator < "u" && /Mac/.test(navigator.platform), r_ = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var hi = 0; hi < 10; hi++) as[48 + hi] = as[96 + hi] = String(hi);
for (var hi = 1; hi <= 24; hi++) as[hi + 111] = "F" + hi;
for (var hi = 65; hi <= 90; hi++)
  as[hi] = String.fromCharCode(hi + 32), Eo[hi] = String.fromCharCode(hi);
for (var iu in as) Eo.hasOwnProperty(iu) || (Eo[iu] = as[iu]);
function s_(n) {
  var e = n_ && n.metaKey && n.shiftKey && !n.ctrlKey && !n.altKey || r_ && n.shiftKey && n.key && n.key.length == 1 || n.key == "Unidentified", t = !e && n.key || (n.shiftKey ? Eo : as)[n.keyCode] || n.key || "Unidentified";
  return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
}
function qo(n) {
  let e;
  return n.nodeType == 11 ? e = n.getSelection ? n : n.ownerDocument : e = n, e.getSelection();
}
function Gu(n, e) {
  return e ? n == e || n.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function Uc(n, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return Gu(n, e.anchorNode);
  } catch {
    return !1;
  }
}
function Vo(n) {
  return n.nodeType == 3 ? Es(n, 0, n.nodeValue.length).getClientRects() : n.nodeType == 1 ? n.getClientRects() : [];
}
function Co(n, e, t, i) {
  return t ? Ag(n, e, t, i, -1) || Ag(n, e, t, i, 1) : !1;
}
function Ms(n) {
  for (var e = 0; ; e++)
    if (n = n.previousSibling, !n)
      return e;
}
function eh(n) {
  return n.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(n.nodeName);
}
function Ag(n, e, t, i, r) {
  for (; ; ) {
    if (n == t && e == i)
      return !0;
    if (e == (r < 0 ? 0 : fr(n))) {
      if (n.nodeName == "DIV")
        return !1;
      let l = n.parentNode;
      if (!l || l.nodeType != 1)
        return !1;
      e = Ms(n) + (r < 0 ? 0 : 1), n = l;
    } else if (n.nodeType == 1) {
      if (n = n.childNodes[e + (r < 0 ? -1 : 0)], n.nodeType == 1 && n.contentEditable == "false")
        return !1;
      e = r < 0 ? fr(n) : 0;
    } else
      return !1;
  }
}
function fr(n) {
  return n.nodeType == 3 ? n.nodeValue.length : n.childNodes.length;
}
function Wh(n, e) {
  let t = e ? n.left : n.right;
  return { left: t, right: t, top: n.top, bottom: n.bottom };
}
function l_(n) {
  let e = n.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: n.innerWidth,
    top: 0,
    bottom: n.innerHeight
  };
}
function b1(n, e) {
  let t = e.width / n.offsetWidth, i = e.height / n.offsetHeight;
  return (t > 0.995 && t < 1.005 || !isFinite(t) || Math.abs(e.width - n.offsetWidth) < 1) && (t = 1), (i > 0.995 && i < 1.005 || !isFinite(i) || Math.abs(e.height - n.offsetHeight) < 1) && (i = 1), { scaleX: t, scaleY: i };
}
function o_(n, e, t, i, r, l, o, c) {
  let f = n.ownerDocument, u = f.defaultView || window;
  for (let O = n, p = !1; O && !p; )
    if (O.nodeType == 1) {
      let g, b = O == f.body, $ = 1, x = 1;
      if (b)
        g = l_(u);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(O).position) && (p = !0), O.scrollHeight <= O.clientHeight && O.scrollWidth <= O.clientWidth) {
          O = O.assignedSlot || O.parentNode;
          continue;
        }
        let R = O.getBoundingClientRect();
        ({ scaleX: $, scaleY: x } = b1(O, R)), g = {
          left: R.left,
          right: R.left + O.clientWidth * $,
          top: R.top,
          bottom: R.top + O.clientHeight * x
        };
      }
      let P = 0, k = 0;
      if (r == "nearest")
        e.top < g.top ? (k = -(g.top - e.top + o), t > 0 && e.bottom > g.bottom + k && (k = e.bottom - g.bottom + k + o)) : e.bottom > g.bottom && (k = e.bottom - g.bottom + o, t < 0 && e.top - k < g.top && (k = -(g.top + k - e.top + o)));
      else {
        let R = e.bottom - e.top, w = g.bottom - g.top;
        k = (r == "center" && R <= w ? e.top + R / 2 - w / 2 : r == "start" || r == "center" && t < 0 ? e.top - o : e.bottom - w + o) - g.top;
      }
      if (i == "nearest" ? e.left < g.left ? (P = -(g.left - e.left + l), t > 0 && e.right > g.right + P && (P = e.right - g.right + P + l)) : e.right > g.right && (P = e.right - g.right + l, t < 0 && e.left < g.left + P && (P = -(g.left + P - e.left + l))) : P = (i == "center" ? e.left + (e.right - e.left) / 2 - (g.right - g.left) / 2 : i == "start" == c ? e.left - l : e.right - (g.right - g.left) + l) - g.left, P || k)
        if (b)
          u.scrollBy(P, k);
        else {
          let R = 0, w = 0;
          if (k) {
            let Z = O.scrollTop;
            O.scrollTop += k / x, w = (O.scrollTop - Z) * x;
          }
          if (P) {
            let Z = O.scrollLeft;
            O.scrollLeft += P / $, R = (O.scrollLeft - Z) * $;
          }
          e = {
            left: e.left - R,
            top: e.top - w,
            right: e.right - R,
            bottom: e.bottom - w
          }, R && Math.abs(R - P) < 1 && (i = "nearest"), w && Math.abs(w - k) < 1 && (r = "nearest");
        }
      if (b)
        break;
      O = O.assignedSlot || O.parentNode;
    } else if (O.nodeType == 11)
      O = O.host;
    else
      break;
}
function a_(n) {
  let e = n.ownerDocument, t, i;
  for (let r = n.parentNode; r && !(r == e.body || t && i); )
    if (r.nodeType == 1)
      !i && r.scrollHeight > r.clientHeight && (i = r), !t && r.scrollWidth > r.clientWidth && (t = r), r = r.assignedSlot || r.parentNode;
    else if (r.nodeType == 11)
      r = r.host;
    else
      break;
  return { x: t, y: i };
}
class c_ {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: t, focusNode: i } = e;
    this.set(t, Math.min(e.anchorOffset, t ? fr(t) : 0), i, Math.min(e.focusOffset, i ? fr(i) : 0));
  }
  set(e, t, i, r) {
    this.anchorNode = e, this.anchorOffset = t, this.focusNode = i, this.focusOffset = r;
  }
}
let fl = null;
function S1(n) {
  if (n.setActive)
    return n.setActive();
  if (fl)
    return n.focus(fl);
  let e = [];
  for (let t = n; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode)
    ;
  if (n.focus(fl == null ? {
    get preventScroll() {
      return fl = { preventScroll: !0 }, !0;
    }
  } : void 0), !fl) {
    fl = !1;
    for (let t = 0; t < e.length; ) {
      let i = e[t++], r = e[t++], l = e[t++];
      i.scrollTop != r && (i.scrollTop = r), i.scrollLeft != l && (i.scrollLeft = l);
    }
  }
}
let Mg;
function Es(n, e, t = e) {
  let i = Mg || (Mg = document.createRange());
  return i.setEnd(n, t), i.setStart(n, e), i;
}
function vl(n, e, t, i) {
  let r = { key: e, code: e, keyCode: t, which: t, cancelable: !0 };
  i && ({ altKey: r.altKey, ctrlKey: r.ctrlKey, shiftKey: r.shiftKey, metaKey: r.metaKey } = i);
  let l = new KeyboardEvent("keydown", r);
  l.synthetic = !0, n.dispatchEvent(l);
  let o = new KeyboardEvent("keyup", r);
  return o.synthetic = !0, n.dispatchEvent(o), l.defaultPrevented || o.defaultPrevented;
}
function h_(n) {
  for (; n; ) {
    if (n && (n.nodeType == 9 || n.nodeType == 11 && n.host))
      return n;
    n = n.assignedSlot || n.parentNode;
  }
  return null;
}
function $1(n) {
  for (; n.attributes.length; )
    n.removeAttributeNode(n.attributes[0]);
}
function f_(n, e) {
  let t = e.focusNode, i = e.focusOffset;
  if (!t || e.anchorNode != t || e.anchorOffset != i)
    return !1;
  for (i = Math.min(i, fr(t)); ; )
    if (i) {
      if (t.nodeType != 1)
        return !1;
      let r = t.childNodes[i - 1];
      r.contentEditable == "false" ? i-- : (t = r, i = fr(t));
    } else {
      if (t == n)
        return !0;
      i = Ms(t), t = t.parentNode;
    }
}
function y1(n) {
  return n.scrollTop > Math.max(1, n.scrollHeight - n.clientHeight - 4);
}
function Q1(n, e) {
  for (let t = n, i = e; ; ) {
    if (t.nodeType == 3 && i > 0)
      return { node: t, offset: i };
    if (t.nodeType == 1 && i > 0) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[i - 1], i = fr(t);
    } else if (t.parentNode && !eh(t))
      i = Ms(t), t = t.parentNode;
    else
      return null;
  }
}
function x1(n, e) {
  for (let t = n, i = e; ; ) {
    if (t.nodeType == 3 && i < t.nodeValue.length)
      return { node: t, offset: i };
    if (t.nodeType == 1 && i < t.childNodes.length) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[i], i = 0;
    } else if (t.parentNode && !eh(t))
      i = Ms(t) + 1, t = t.parentNode;
    else
      return null;
  }
}
class $i {
  constructor(e, t, i = !0) {
    this.node = e, this.offset = t, this.precise = i;
  }
  static before(e, t) {
    return new $i(e.parentNode, Ms(e), t);
  }
  static after(e, t) {
    return new $i(e.parentNode, Ms(e) + 1, t);
  }
}
const UO = [];
class Pt {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let t = this.posAtStart;
    for (let i of this.children) {
      if (i == e)
        return t;
      t += i.length + i.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, t) {
    if (this.flags & 2) {
      let i = this.dom, r = null, l;
      for (let o of this.children) {
        if (o.flags & 7) {
          if (!o.dom && (l = r ? r.nextSibling : i.firstChild)) {
            let c = Pt.get(l);
            (!c || !c.parent && c.canReuseDOM(o)) && o.reuseDOM(l);
          }
          o.sync(e, t), o.flags &= -8;
        }
        if (l = r ? r.nextSibling : i.firstChild, t && !t.written && t.node == i && l != o.dom && (t.written = !0), o.dom.parentNode == i)
          for (; l && l != o.dom; )
            l = Eg(l);
        else
          i.insertBefore(o.dom, l);
        r = o.dom;
      }
      for (l = r ? r.nextSibling : i.firstChild, l && t && t.node == i && (t.written = !0); l; )
        l = Eg(l);
    } else if (this.flags & 1)
      for (let i of this.children)
        i.flags & 7 && (i.sync(e, t), i.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, t) {
    let i;
    if (e == this.dom)
      i = this.dom.childNodes[t];
    else {
      let r = fr(e) == 0 ? 0 : t == 0 ? -1 : 1;
      for (; ; ) {
        let l = e.parentNode;
        if (l == this.dom)
          break;
        r == 0 && l.firstChild != l.lastChild && (e == l.firstChild ? r = -1 : r = 1), e = l;
      }
      r < 0 ? i = e : i = e.nextSibling;
    }
    if (i == this.dom.firstChild)
      return 0;
    for (; i && !Pt.get(i); )
      i = i.nextSibling;
    if (!i)
      return this.length;
    for (let r = 0, l = 0; ; r++) {
      let o = this.children[r];
      if (o.dom == i)
        return l;
      l += o.length + o.breakAfter;
    }
  }
  domBoundsAround(e, t, i = 0) {
    let r = -1, l = -1, o = -1, c = -1;
    for (let f = 0, u = i, O = i; f < this.children.length; f++) {
      let p = this.children[f], g = u + p.length;
      if (u < e && g > t)
        return p.domBoundsAround(e, t, u);
      if (g >= e && r == -1 && (r = f, l = u), u > t && p.dom.parentNode == this.dom) {
        o = f, c = O;
        break;
      }
      O = g, u = g + p.breakAfter;
    }
    return {
      from: l,
      to: c < 0 ? i + this.length : c,
      startDOM: (r ? this.children[r - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let t = this.parent; t; t = t.parent) {
      if (e && (t.flags |= 2), t.flags & 1)
        return;
      t.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let t = e.parent;
      if (!t)
        return e;
      e = t;
    }
  }
  replaceChildren(e, t, i = UO) {
    this.markDirty();
    for (let r = e; r < t; r++) {
      let l = this.children[r];
      l.parent == this && i.indexOf(l) < 0 && l.destroy();
    }
    i.length < 250 ? this.children.splice(e, t - e, ...i) : this.children = [].concat(this.children.slice(0, e), i, this.children.slice(t));
    for (let r = 0; r < i.length; r++)
      i[r].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new P1(this.children, e, this.children.length);
  }
  childPos(e, t = 1) {
    return this.childCursor().findPos(e, t);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, t, i, r, l, o) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
Pt.prototype.breakAfter = 0;
function Eg(n) {
  let e = n.nextSibling;
  return n.parentNode.removeChild(n), e;
}
class P1 {
  constructor(e, t, i) {
    this.children = e, this.pos = t, this.i = i, this.off = 0;
  }
  findPos(e, t = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let i = this.children[--this.i];
      this.pos -= i.length + i.breakAfter;
    }
  }
}
function w1(n, e, t, i, r, l, o, c, f) {
  let { children: u } = n, O = u.length ? u[e] : null, p = l.length ? l[l.length - 1] : null, g = p ? p.breakAfter : o;
  if (!(e == i && O && !o && !g && l.length < 2 && O.merge(t, r, l.length ? p : null, t == 0, c, f))) {
    if (i < u.length) {
      let b = u[i];
      b && (r < b.length || b.breakAfter && (p != null && p.breakAfter)) ? (e == i && (b = b.split(r), r = 0), !g && p && b.merge(0, r, p, !0, 0, f) ? l[l.length - 1] = b : ((r || b.children.length && !b.children[0].length) && b.merge(0, r, null, !1, 0, f), l.push(b))) : b != null && b.breakAfter && (p ? p.breakAfter = 1 : o = 1), i++;
    }
    for (O && (O.breakAfter = o, t > 0 && (!o && l.length && O.merge(t, O.length, l[0], !1, c, 0) ? O.breakAfter = l.shift().breakAfter : (t < O.length || O.children.length && O.children[O.children.length - 1].length == 0) && O.merge(t, O.length, null, !1, c, 0), e++)); e < i && l.length; )
      if (u[i - 1].become(l[l.length - 1]))
        i--, l.pop(), f = l.length ? 0 : c;
      else if (u[e].become(l[0]))
        e++, l.shift(), c = l.length ? 0 : f;
      else
        break;
    !l.length && e && i < u.length && !u[e - 1].breakAfter && u[i].merge(0, 0, u[e - 1], !1, c, f) && e--, (e < i || l.length) && n.replaceChildren(e, i, l);
  }
}
function k1(n, e, t, i, r, l) {
  let o = n.childCursor(), { i: c, off: f } = o.findPos(t, 1), { i: u, off: O } = o.findPos(e, -1), p = e - t;
  for (let g of i)
    p += g.length;
  n.length += p, w1(n, u, O, c, f, i, 0, r, l);
}
let zi = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, Hu = typeof document < "u" ? document : { documentElement: { style: {} } };
const Ku = /* @__PURE__ */ /Edge\/(\d+)/.exec(zi.userAgent), _1 = /* @__PURE__ */ /MSIE \d/.test(zi.userAgent), Ju = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(zi.userAgent), Zh = !!(_1 || Ju || Ku), qg = !Zh && /* @__PURE__ */ /gecko\/(\d+)/i.test(zi.userAgent), nu = !Zh && /* @__PURE__ */ /Chrome\/(\d+)/.exec(zi.userAgent), Vg = "webkitFontSmoothing" in Hu.documentElement.style, W1 = !Zh && /* @__PURE__ */ /Apple Computer/.test(zi.vendor), Lg = W1 && (/* @__PURE__ */ /Mobile\/\w+/.test(zi.userAgent) || zi.maxTouchPoints > 2);
var pe = {
  mac: Lg || /* @__PURE__ */ /Mac/.test(zi.platform),
  windows: /* @__PURE__ */ /Win/.test(zi.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(zi.platform),
  ie: Zh,
  ie_version: _1 ? Hu.documentMode || 6 : Ju ? +Ju[1] : Ku ? +Ku[1] : 0,
  gecko: qg,
  gecko_version: qg ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(zi.userAgent) || [0, 0])[1] : 0,
  chrome: !!nu,
  chrome_version: nu ? +nu[1] : 0,
  ios: Lg,
  android: /* @__PURE__ */ /Android\b/.test(zi.userAgent),
  webkit: Vg,
  safari: W1,
  webkit_version: Vg ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(zi.userAgent) || [0, 0])[1] : 0,
  tabSize: Hu.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const u_ = 256;
class zn extends Pt {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, t) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, t, i) {
    return this.flags & 8 || i && (!(i instanceof zn) || this.length - (t - e) + i.length > u_ || i.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (i ? i.text : "") + this.text.slice(t), this.markDirty(), !0);
  }
  split(e) {
    let t = new zn(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), t.flags |= this.flags & 8, t;
  }
  localPosFromDOM(e, t) {
    return e == this.dom ? t : t ? this.text.length : 0;
  }
  domAtPos(e) {
    return new $i(this.dom, e);
  }
  domBoundsAround(e, t, i) {
    return { from: i, to: i + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, t) {
    return O_(this.dom, e, t);
  }
}
class qr extends Pt {
  constructor(e, t = [], i = 0) {
    super(), this.mark = e, this.children = t, this.length = i;
    for (let r of t)
      r.setParent(this);
  }
  setAttrs(e) {
    if ($1(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let t in this.mark.attrs)
        e.setAttribute(t, this.mark.attrs[t]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
  }
  merge(e, t, i, r, l, o) {
    return i && (!(i instanceof qr && i.mark.eq(this.mark)) || e && l <= 0 || t < this.length && o <= 0) ? !1 : (k1(this, e, t, i ? i.children.slice() : [], l - 1, o - 1), this.markDirty(), !0);
  }
  split(e) {
    let t = [], i = 0, r = -1, l = 0;
    for (let c of this.children) {
      let f = i + c.length;
      f > e && t.push(i < e ? c.split(e - i) : c), r < 0 && i >= e && (r = l), i = f, l++;
    }
    let o = this.length - e;
    return this.length = e, r > -1 && (this.children.length = r, this.markDirty()), new qr(this.mark, t, o);
  }
  domAtPos(e) {
    return Z1(this, e);
  }
  coordsAt(e, t) {
    return C1(this, e, t);
  }
}
function O_(n, e, t) {
  let i = n.nodeValue.length;
  e > i && (e = i);
  let r = e, l = e, o = 0;
  e == 0 && t < 0 || e == i && t >= 0 ? pe.chrome || pe.gecko || (e ? (r--, o = 1) : l < i && (l++, o = -1)) : t < 0 ? r-- : l < i && l++;
  let c = Es(n, r, l).getClientRects();
  if (!c.length)
    return null;
  let f = c[(o ? o < 0 : t >= 0) ? 0 : c.length - 1];
  return pe.safari && !o && f.width == 0 && (f = Array.prototype.find.call(c, (u) => u.width) || f), o ? Wh(f, o < 0) : f || null;
}
class rs extends Pt {
  static create(e, t, i) {
    return new rs(e, t, i);
  }
  constructor(e, t, i) {
    super(), this.widget = e, this.length = t, this.side = i, this.prevWidget = null;
  }
  split(e) {
    let t = rs.create(this.widget, this.length - e, this.side);
    return this.length -= e, t;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, t, i, r, l, o) {
    return i && (!(i instanceof rs) || !this.widget.compare(i.widget) || e > 0 && l <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (i ? i.length : 0) + (this.length - t), !0);
  }
  become(e) {
    return e instanceof rs && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return ot.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: t } = e, i = t && t.state.doc, r = this.posAtStart;
    return i ? i.slice(r, r + this.length) : ot.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? $i.before(this.dom) : $i.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, t) {
    let i = this.widget.coordsAt(this.dom, e, t);
    if (i)
      return i;
    let r = this.dom.getClientRects(), l = null;
    if (!r.length)
      return null;
    let o = this.side ? this.side < 0 : e > 0;
    for (let c = o ? r.length - 1 : 0; l = r[c], !(e > 0 ? c == 0 : c == r.length - 1 || l.top < l.bottom); c += o ? -1 : 1)
      ;
    return Wh(l, !o);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class Pl extends Pt {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof Pl && e.side == this.side;
  }
  split() {
    return new Pl(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? $i.before(this.dom) : $i.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return ot.empty;
  }
  get isHidden() {
    return !0;
  }
}
zn.prototype.children = rs.prototype.children = Pl.prototype.children = UO;
function Z1(n, e) {
  let t = n.dom, { children: i } = n, r = 0;
  for (let l = 0; r < i.length; r++) {
    let o = i[r], c = l + o.length;
    if (!(c == l && o.getSide() <= 0)) {
      if (e > l && e < c && o.dom.parentNode == t)
        return o.domAtPos(e - l);
      if (e <= l)
        break;
      l = c;
    }
  }
  for (let l = r; l > 0; l--) {
    let o = i[l - 1];
    if (o.dom.parentNode == t)
      return o.domAtPos(o.length);
  }
  for (let l = r; l < i.length; l++) {
    let o = i[l];
    if (o.dom.parentNode == t)
      return o.domAtPos(0);
  }
  return new $i(t, 0);
}
function T1(n, e, t) {
  let i, { children: r } = n;
  t > 0 && e instanceof qr && r.length && (i = r[r.length - 1]) instanceof qr && i.mark.eq(e.mark) ? T1(i, e.children[0], t - 1) : (r.push(e), e.setParent(n)), n.length += e.length;
}
function C1(n, e, t) {
  let i = null, r = -1, l = null, o = -1;
  function c(u, O) {
    for (let p = 0, g = 0; p < u.children.length && g <= O; p++) {
      let b = u.children[p], $ = g + b.length;
      $ >= O && (b.children.length ? c(b, O - g) : (!l || l.isHidden && t > 0) && ($ > O || g == $ && b.getSide() > 0) ? (l = b, o = O - g) : (g < O || g == $ && b.getSide() < 0 && !b.isHidden) && (i = b, r = O - g)), g = $;
    }
  }
  c(n, e);
  let f = (t < 0 ? i : l) || i || l;
  return f ? f.coordsAt(Math.max(0, f == i ? r : o), t) : d_(n);
}
function d_(n) {
  let e = n.dom.lastChild;
  if (!e)
    return n.dom.getBoundingClientRect();
  let t = Vo(e);
  return t[t.length - 1] || null;
}
function eO(n, e) {
  for (let t in n)
    t == "class" && e.class ? e.class += " " + n.class : t == "style" && e.style ? e.style += ";" + n.style : e[t] = n[t];
  return e;
}
const Ug = /* @__PURE__ */ Object.create(null);
function th(n, e, t) {
  if (n == e)
    return !0;
  n || (n = Ug), e || (e = Ug);
  let i = Object.keys(n), r = Object.keys(e);
  if (i.length - (t && i.indexOf(t) > -1 ? 1 : 0) != r.length - (t && r.indexOf(t) > -1 ? 1 : 0))
    return !1;
  for (let l of i)
    if (l != t && (r.indexOf(l) == -1 || n[l] !== e[l]))
      return !1;
  return !0;
}
function tO(n, e, t) {
  let i = !1;
  if (e)
    for (let r in e)
      t && r in t || (i = !0, r == "style" ? n.style.cssText = "" : n.removeAttribute(r));
  if (t)
    for (let r in t)
      e && e[r] == t[r] || (i = !0, r == "style" ? n.style.cssText = t[r] : n.setAttribute(r, t[r]));
  return i;
}
function p_(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t = 0; t < n.attributes.length; t++) {
    let i = n.attributes[t];
    e[i.name] = i.value;
  }
  return e;
}
class Ur {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, t) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, t, i) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var Ti = /* @__PURE__ */ function(n) {
  return n[n.Text = 0] = "Text", n[n.WidgetBefore = 1] = "WidgetBefore", n[n.WidgetAfter = 2] = "WidgetAfter", n[n.WidgetRange = 3] = "WidgetRange", n;
}(Ti || (Ti = {}));
class _e extends As {
  constructor(e, t, i, r) {
    super(), this.startSide = e, this.endSide = t, this.widget = i, this.spec = r;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new ta(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let t = Math.max(-1e4, Math.min(1e4, e.side || 0)), i = !!e.block;
    return t += i && !e.inlineOrder ? t > 0 ? 3e8 : -4e8 : t > 0 ? 1e8 : -1e8, new cs(e, t, t, i, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let t = !!e.block, i, r;
    if (e.isBlockGap)
      i = -5e8, r = 4e8;
    else {
      let { start: l, end: o } = R1(e, t);
      i = (l ? t ? -3e8 : -1 : 5e8) - 1, r = (o ? t ? 2e8 : 1 : -6e8) + 1;
    }
    return new cs(e, i, r, t, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new ia(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, t = !1) {
    return ct.of(e, t);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
_e.none = ct.empty;
class ta extends _e {
  constructor(e) {
    let { start: t, end: i } = R1(e);
    super(t ? -1 : 5e8, i ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var t, i;
    return this == e || e instanceof ta && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((i = e.attrs) === null || i === void 0 ? void 0 : i.class)) && th(this.attrs, e.attrs, "class");
  }
  range(e, t = e) {
    if (e >= t)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, t);
  }
}
ta.prototype.point = !1;
class ia extends _e {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof ia && this.spec.class == e.spec.class && th(this.spec.attributes, e.spec.attributes);
  }
  range(e, t = e) {
    if (t != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, t);
  }
}
ia.prototype.mapMode = fi.TrackBefore;
ia.prototype.point = !0;
class cs extends _e {
  constructor(e, t, i, r, l, o) {
    super(t, i, l, e), this.block = r, this.isReplace = o, this.mapMode = r ? t <= 0 ? fi.TrackBefore : fi.TrackAfter : fi.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? Ti.WidgetRange : this.startSide <= 0 ? Ti.WidgetBefore : Ti.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof cs && g_(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, t = e) {
    if (this.isReplace && (e > t || e == t && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && t != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, t);
  }
}
cs.prototype.point = !0;
function R1(n, e = !1) {
  let { inclusiveStart: t, inclusiveEnd: i } = n;
  return t == null && (t = n.inclusive), i == null && (i = n.inclusive), { start: t ?? e, end: i ?? e };
}
function g_(n, e) {
  return n == e || !!(n && e && n.compare(e));
}
function Yc(n, e, t, i = 0) {
  let r = t.length - 1;
  r >= 0 && t[r] + i >= n ? t[r] = Math.max(t[r], e) : t.push(n, e);
}
class It extends Pt {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, t, i, r, l, o) {
    if (i) {
      if (!(i instanceof It))
        return !1;
      this.dom || i.transferDOM(this);
    }
    return r && this.setDeco(i ? i.attrs : null), k1(this, e, t, i ? i.children.slice() : [], l, o), !0;
  }
  split(e) {
    let t = new It();
    if (t.breakAfter = this.breakAfter, this.length == 0)
      return t;
    let { i, off: r } = this.childPos(e);
    r && (t.append(this.children[i].split(r), 0), this.children[i].merge(r, this.children[i].length, null, !1, 0, 0), i++);
    for (let l = i; l < this.children.length; l++)
      t.append(this.children[l], 0);
    for (; i > 0 && this.children[i - 1].length == 0; )
      this.children[--i].destroy();
    return this.children.length = i, this.markDirty(), this.length = e, t;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    th(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, t) {
    T1(this, e, t);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let t = e.spec.attributes, i = e.spec.class;
    t && (this.attrs = eO(t, this.attrs || {})), i && (this.attrs = eO({ class: i }, this.attrs || {}));
  }
  domAtPos(e) {
    return Z1(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    var i;
    this.dom ? this.flags & 4 && ($1(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (tO(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, t);
    let r = this.dom.lastChild;
    for (; r && Pt.get(r) instanceof qr; )
      r = r.lastChild;
    if (!r || !this.length || r.nodeName != "BR" && ((i = Pt.get(r)) === null || i === void 0 ? void 0 : i.isEditable) == !1 && (!pe.ios || !this.children.some((l) => l instanceof zn))) {
      let l = document.createElement("BR");
      l.cmIgnore = !0, this.dom.appendChild(l);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, t;
    for (let i of this.children) {
      if (!(i instanceof zn) || /[^ -~]/.test(i.text))
        return null;
      let r = Vo(i.dom);
      if (r.length != 1)
        return null;
      e += r[0].width, t = r[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: t
    } : null;
  }
  coordsAt(e, t) {
    let i = C1(this, e, t);
    if (!this.children.length && i && this.parent) {
      let { heightOracle: r } = this.parent.view.viewState, l = i.bottom - i.top;
      if (Math.abs(l - r.lineHeight) < 2 && r.textHeight < l) {
        let o = (l - r.textHeight) / 2;
        return { top: i.top + o, bottom: i.bottom - o, left: i.left, right: i.left };
      }
    }
    return i;
  }
  become(e) {
    return e instanceof It && this.children.length == 0 && e.children.length == 0 && th(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;
  }
  covers() {
    return !0;
  }
  static find(e, t) {
    for (let i = 0, r = 0; i < e.children.length; i++) {
      let l = e.children[i], o = r + l.length;
      if (o >= t) {
        if (l instanceof It)
          return l;
        if (o > t)
          break;
      }
      r = o + l.breakAfter;
    }
    return null;
  }
}
class Ar extends Pt {
  constructor(e, t, i) {
    super(), this.widget = e, this.length = t, this.deco = i, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, t, i, r, l, o) {
    return i && (!(i instanceof Ar) || !this.widget.compare(i.widget) || e > 0 && l <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (i ? i.length : 0) + (this.length - t), !0);
  }
  domAtPos(e) {
    return e == 0 ? $i.before(this.dom) : $i.after(this.dom, e == this.length);
  }
  split(e) {
    let t = this.length - e;
    this.length = e;
    let i = new Ar(this.widget, t, this.deco);
    return i.breakAfter = this.breakAfter, i;
  }
  get children() {
    return UO;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : ot.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof Ar && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, t) {
    let i = this.widget.coordsAt(this.dom, e, t);
    return i || (this.widget instanceof iO ? null : Wh(this.dom.getBoundingClientRect(), this.length ? e == 0 : t <= 0));
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: t, endSide: i } = this.deco;
    return t == i ? !1 : e < 0 ? t < 0 : i > 0;
  }
}
class iO extends Ur {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
class Ro {
  constructor(e, t, i, r) {
    this.doc = e, this.pos = t, this.end = i, this.disallowBlockEffectsFor = r, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = t;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof Ar && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new It()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(pc(new Pl(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof Ar) && this.getLine();
  }
  buildText(e, t, i) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: l, lineBreak: o, done: c } = this.cursor.next(this.skip);
        if (this.skip = 0, c)
          throw new Error("Ran out of text content when drawing inline views");
        if (o) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = l, this.textOff = 0;
      }
      let r = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(t.slice(t.length - i)), this.getLine().append(pc(new zn(this.text.slice(this.textOff, this.textOff + r)), t), i), this.atCursorPos = !0, this.textOff += r, e -= r, i = 0;
    }
  }
  span(e, t, i, r) {
    this.buildText(t - e, i, r), this.pos = t, this.openStart < 0 && (this.openStart = r);
  }
  point(e, t, i, r, l, o) {
    if (this.disallowBlockEffectsFor[o] && i instanceof cs) {
      if (i.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (t > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let c = t - e;
    if (i instanceof cs)
      if (i.block)
        i.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new Ar(i.widget || wl.block, c, i));
      else {
        let f = rs.create(i.widget || wl.inline, c, c ? 0 : i.startSide), u = this.atCursorPos && !f.isEditable && l <= r.length && (e < t || i.startSide > 0), O = !f.isEditable && (e < t || l > r.length || i.startSide <= 0), p = this.getLine();
        this.pendingBuffer == 2 && !u && !f.isEditable && (this.pendingBuffer = 0), this.flushBuffer(r), u && (p.append(pc(new Pl(1), r), l), l = r.length + Math.max(0, l - r.length)), p.append(pc(f, r), l), this.atCursorPos = O, this.pendingBuffer = O ? e < t || l > r.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = r.slice());
      }
    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(i);
    c && (this.textOff + c <= this.text.length ? this.textOff += c : (this.skip += c - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = t), this.openStart < 0 && (this.openStart = l);
  }
  static build(e, t, i, r, l) {
    let o = new Ro(e, t, i, l);
    return o.openEnd = ct.spans(r, t, i, o), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
  }
}
function pc(n, e) {
  for (let t of e)
    n = new qr(t, [n], n.length);
  return n;
}
class wl extends Ur {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
wl.inline = /* @__PURE__ */ new wl("span");
wl.block = /* @__PURE__ */ new wl("div");
var Tt = /* @__PURE__ */ function(n) {
  return n[n.LTR = 0] = "LTR", n[n.RTL = 1] = "RTL", n;
}(Tt || (Tt = {}));
const qs = Tt.LTR, YO = Tt.RTL;
function X1(n) {
  let e = [];
  for (let t = 0; t < n.length; t++)
    e.push(1 << +n[t]);
  return e;
}
const m_ = /* @__PURE__ */ X1("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), v_ = /* @__PURE__ */ X1("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), nO = /* @__PURE__ */ Object.create(null), Kn = [];
for (let n of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ n.charCodeAt(0), t = /* @__PURE__ */ n.charCodeAt(1);
  nO[e] = t, nO[t] = -e;
}
function A1(n) {
  return n <= 247 ? m_[n] : 1424 <= n && n <= 1524 ? 2 : 1536 <= n && n <= 1785 ? v_[n - 1536] : 1774 <= n && n <= 2220 ? 4 : 8192 <= n && n <= 8204 ? 256 : 64336 <= n && n <= 65023 ? 4 : 1;
}
const b_ = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class ss {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? YO : qs;
  }
  /**
  @internal
  */
  constructor(e, t, i) {
    this.from = e, this.to = t, this.level = i;
  }
  /**
  @internal
  */
  side(e, t) {
    return this.dir == t == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, t) {
    return e == (this.dir == t);
  }
  /**
  @internal
  */
  static find(e, t, i, r) {
    let l = -1;
    for (let o = 0; o < e.length; o++) {
      let c = e[o];
      if (c.from <= t && c.to >= t) {
        if (c.level == i)
          return o;
        (l < 0 || (r != 0 ? r < 0 ? c.from < t : c.to > t : e[l].level > c.level)) && (l = o);
      }
    }
    if (l < 0)
      throw new RangeError("Index out of range");
    return l;
  }
}
function M1(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++) {
    let i = n[t], r = e[t];
    if (i.from != r.from || i.to != r.to || i.direction != r.direction || !M1(i.inner, r.inner))
      return !1;
  }
  return !0;
}
const xt = [];
function S_(n, e, t, i, r) {
  for (let l = 0; l <= i.length; l++) {
    let o = l ? i[l - 1].to : e, c = l < i.length ? i[l].from : t, f = l ? 256 : r;
    for (let u = o, O = f, p = f; u < c; u++) {
      let g = A1(n.charCodeAt(u));
      g == 512 ? g = O : g == 8 && p == 4 && (g = 16), xt[u] = g == 4 ? 2 : g, g & 7 && (p = g), O = g;
    }
    for (let u = o, O = f, p = f; u < c; u++) {
      let g = xt[u];
      if (g == 128)
        u < c - 1 && O == xt[u + 1] && O & 24 ? g = xt[u] = O : xt[u] = 256;
      else if (g == 64) {
        let b = u + 1;
        for (; b < c && xt[b] == 64; )
          b++;
        let $ = u && O == 8 || b < t && xt[b] == 8 ? p == 1 ? 1 : 8 : 256;
        for (let x = u; x < b; x++)
          xt[x] = $;
        u = b - 1;
      } else g == 8 && p == 1 && (xt[u] = 1);
      O = g, g & 7 && (p = g);
    }
  }
}
function $_(n, e, t, i, r) {
  let l = r == 1 ? 2 : 1;
  for (let o = 0, c = 0, f = 0; o <= i.length; o++) {
    let u = o ? i[o - 1].to : e, O = o < i.length ? i[o].from : t;
    for (let p = u, g, b, $; p < O; p++)
      if (b = nO[g = n.charCodeAt(p)])
        if (b < 0) {
          for (let x = c - 3; x >= 0; x -= 3)
            if (Kn[x + 1] == -b) {
              let P = Kn[x + 2], k = P & 2 ? r : P & 4 ? P & 1 ? l : r : 0;
              k && (xt[p] = xt[Kn[x]] = k), c = x;
              break;
            }
        } else {
          if (Kn.length == 189)
            break;
          Kn[c++] = p, Kn[c++] = g, Kn[c++] = f;
        }
      else if (($ = xt[p]) == 2 || $ == 1) {
        let x = $ == r;
        f = x ? 0 : 1;
        for (let P = c - 3; P >= 0; P -= 3) {
          let k = Kn[P + 2];
          if (k & 2)
            break;
          if (x)
            Kn[P + 2] |= 2;
          else {
            if (k & 4)
              break;
            Kn[P + 2] |= 4;
          }
        }
      }
  }
}
function y_(n, e, t, i) {
  for (let r = 0, l = i; r <= t.length; r++) {
    let o = r ? t[r - 1].to : n, c = r < t.length ? t[r].from : e;
    for (let f = o; f < c; ) {
      let u = xt[f];
      if (u == 256) {
        let O = f + 1;
        for (; ; )
          if (O == c) {
            if (r == t.length)
              break;
            O = t[r++].to, c = r < t.length ? t[r].from : e;
          } else if (xt[O] == 256)
            O++;
          else
            break;
        let p = l == 1, g = (O < e ? xt[O] : i) == 1, b = p == g ? p ? 1 : 2 : i;
        for (let $ = O, x = r, P = x ? t[x - 1].to : n; $ > f; )
          $ == P && ($ = t[--x].from, P = x ? t[x - 1].to : n), xt[--$] = b;
        f = O;
      } else
        l = u, f++;
    }
  }
}
function rO(n, e, t, i, r, l, o) {
  let c = i % 2 ? 2 : 1;
  if (i % 2 == r % 2)
    for (let f = e, u = 0; f < t; ) {
      let O = !0, p = !1;
      if (u == l.length || f < l[u].from) {
        let x = xt[f];
        x != c && (O = !1, p = x == 16);
      }
      let g = !O && c == 1 ? [] : null, b = O ? i : i + 1, $ = f;
      e: for (; ; )
        if (u < l.length && $ == l[u].from) {
          if (p)
            break e;
          let x = l[u];
          if (!O)
            for (let P = x.to, k = u + 1; ; ) {
              if (P == t)
                break e;
              if (k < l.length && l[k].from == P)
                P = l[k++].to;
              else {
                if (xt[P] == c)
                  break e;
                break;
              }
            }
          if (u++, g)
            g.push(x);
          else {
            x.from > f && o.push(new ss(f, x.from, b));
            let P = x.direction == qs != !(b % 2);
            sO(n, P ? i + 1 : i, r, x.inner, x.from, x.to, o), f = x.to;
          }
          $ = x.to;
        } else {
          if ($ == t || (O ? xt[$] != c : xt[$] == c))
            break;
          $++;
        }
      g ? rO(n, f, $, i + 1, r, g, o) : f < $ && o.push(new ss(f, $, b)), f = $;
    }
  else
    for (let f = t, u = l.length; f > e; ) {
      let O = !0, p = !1;
      if (!u || f > l[u - 1].to) {
        let x = xt[f - 1];
        x != c && (O = !1, p = x == 16);
      }
      let g = !O && c == 1 ? [] : null, b = O ? i : i + 1, $ = f;
      e: for (; ; )
        if (u && $ == l[u - 1].to) {
          if (p)
            break e;
          let x = l[--u];
          if (!O)
            for (let P = x.from, k = u; ; ) {
              if (P == e)
                break e;
              if (k && l[k - 1].to == P)
                P = l[--k].from;
              else {
                if (xt[P - 1] == c)
                  break e;
                break;
              }
            }
          if (g)
            g.push(x);
          else {
            x.to < f && o.push(new ss(x.to, f, b));
            let P = x.direction == qs != !(b % 2);
            sO(n, P ? i + 1 : i, r, x.inner, x.from, x.to, o), f = x.from;
          }
          $ = x.from;
        } else {
          if ($ == e || (O ? xt[$ - 1] != c : xt[$ - 1] == c))
            break;
          $--;
        }
      g ? rO(n, $, f, i + 1, r, g, o) : $ < f && o.push(new ss($, f, b)), f = $;
    }
}
function sO(n, e, t, i, r, l, o) {
  let c = e % 2 ? 2 : 1;
  S_(n, r, l, i, c), $_(n, r, l, i, c), y_(r, l, i, c), rO(n, r, l, e, t, i, o);
}
function Q_(n, e, t) {
  if (!n)
    return [new ss(0, 0, e == YO ? 1 : 0)];
  if (e == qs && !t.length && !b_.test(n))
    return E1(n.length);
  if (t.length)
    for (; n.length > xt.length; )
      xt[xt.length] = 256;
  let i = [], r = e == qs ? 0 : 1;
  return sO(n, r, r, t, 0, n.length, i), i;
}
function E1(n) {
  return [new ss(0, n, 0)];
}
let q1 = "";
function x_(n, e, t, i, r) {
  var l;
  let o = i.head - n.from, c = ss.find(e, o, (l = i.bidiLevel) !== null && l !== void 0 ? l : -1, i.assoc), f = e[c], u = f.side(r, t);
  if (o == u) {
    let g = c += r ? 1 : -1;
    if (g < 0 || g >= e.length)
      return null;
    f = e[c = g], o = f.side(!r, t), u = f.side(r, t);
  }
  let O = ui(n.text, o, f.forward(r, t));
  (O < f.from || O > f.to) && (O = u), q1 = n.text.slice(Math.min(o, O), Math.max(o, O));
  let p = c == (r ? e.length - 1 : 0) ? null : e[c + (r ? 1 : -1)];
  return p && O == u && p.level + (r ? 0 : 1) < f.level ? F.cursor(p.side(!r, t) + n.from, p.forward(r, t) ? 1 : -1, p.level) : F.cursor(O + n.from, f.forward(r, t) ? -1 : 1, f.level);
}
function P_(n, e, t) {
  for (let i = e; i < t; i++) {
    let r = A1(n.charCodeAt(i));
    if (r == 1)
      return qs;
    if (r == 2 || r == 4)
      return YO;
  }
  return qs;
}
const V1 = /* @__PURE__ */ ge.define(), L1 = /* @__PURE__ */ ge.define(), U1 = /* @__PURE__ */ ge.define(), Y1 = /* @__PURE__ */ ge.define(), lO = /* @__PURE__ */ ge.define(), D1 = /* @__PURE__ */ ge.define(), z1 = /* @__PURE__ */ ge.define(), DO = /* @__PURE__ */ ge.define(), zO = /* @__PURE__ */ ge.define(), j1 = /* @__PURE__ */ ge.define({
  combine: (n) => n.some((e) => e)
}), B1 = /* @__PURE__ */ ge.define({
  combine: (n) => n.some((e) => e)
}), I1 = /* @__PURE__ */ ge.define();
class bl {
  constructor(e, t = "nearest", i = "nearest", r = 5, l = 5, o = !1) {
    this.range = e, this.y = t, this.x = i, this.yMargin = r, this.xMargin = l, this.isSnapshot = o;
  }
  map(e) {
    return e.empty ? this : new bl(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new bl(F.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const gc = /* @__PURE__ */ Ye.define({ map: (n, e) => n.map(e) }), N1 = /* @__PURE__ */ Ye.define();
function Bi(n, e, t) {
  let i = n.facet(Y1);
  i.length ? i[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
}
const Xr = /* @__PURE__ */ ge.define({ combine: (n) => n.length ? n[0] : !0 });
let w_ = 0;
const Qo = /* @__PURE__ */ ge.define();
class Ft {
  constructor(e, t, i, r, l) {
    this.id = e, this.create = t, this.domEventHandlers = i, this.domEventObservers = r, this.extension = l(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, t) {
    const { eventHandlers: i, eventObservers: r, provide: l, decorations: o } = t || {};
    return new Ft(w_++, e, i, r, (c) => {
      let f = [Qo.of(c)];
      return o && f.push(Lo.of((u) => {
        let O = u.plugin(c);
        return O ? o(O) : _e.none;
      })), l && f.push(l(c)), f;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, t) {
    return Ft.define((i) => new e(i), t);
  }
}
class ru {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let t = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(t);
          } catch (i) {
            if (Bi(t.state, i, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (t) {
        Bi(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var t;
    if (!((t = this.value) === null || t === void 0) && t.destroy)
      try {
        this.value.destroy();
      } catch (i) {
        Bi(e.state, i, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const F1 = /* @__PURE__ */ ge.define(), jO = /* @__PURE__ */ ge.define(), Lo = /* @__PURE__ */ ge.define(), G1 = /* @__PURE__ */ ge.define(), BO = /* @__PURE__ */ ge.define(), H1 = /* @__PURE__ */ ge.define();
function Yg(n, e) {
  let t = n.state.facet(H1);
  if (!t.length)
    return t;
  let i = t.map((l) => l instanceof Function ? l(n) : l), r = [];
  return ct.spans(i, e.from, e.to, {
    point() {
    },
    span(l, o, c, f) {
      let u = l - e.from, O = o - e.from, p = r;
      for (let g = c.length - 1; g >= 0; g--, f--) {
        let b = c[g].spec.bidiIsolate, $;
        if (b == null && (b = P_(e.text, u, O)), f > 0 && p.length && ($ = p[p.length - 1]).to == u && $.direction == b)
          $.to = O, p = $.inner;
        else {
          let x = { from: u, to: O, direction: b, inner: [] };
          p.push(x), p = x.inner;
        }
      }
    }
  }), r;
}
const K1 = /* @__PURE__ */ ge.define();
function IO(n) {
  let e = 0, t = 0, i = 0, r = 0;
  for (let l of n.state.facet(K1)) {
    let o = l(n);
    o && (o.left != null && (e = Math.max(e, o.left)), o.right != null && (t = Math.max(t, o.right)), o.top != null && (i = Math.max(i, o.top)), o.bottom != null && (r = Math.max(r, o.bottom)));
  }
  return { left: e, right: t, top: i, bottom: r };
}
const xo = /* @__PURE__ */ ge.define();
class Qn {
  constructor(e, t, i, r) {
    this.fromA = e, this.toA = t, this.fromB = i, this.toB = r;
  }
  join(e) {
    return new Qn(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let t = e.length, i = this;
    for (; t > 0; t--) {
      let r = e[t - 1];
      if (!(r.fromA > i.toA)) {
        if (r.toA < i.fromA)
          break;
        i = i.join(r), e.splice(t - 1, 1);
      }
    }
    return e.splice(t, 0, i), e;
  }
  static extendWithRanges(e, t) {
    if (t.length == 0)
      return e;
    let i = [];
    for (let r = 0, l = 0, o = 0, c = 0; ; r++) {
      let f = r == e.length ? null : e[r], u = o - c, O = f ? f.fromB : 1e9;
      for (; l < t.length && t[l] < O; ) {
        let p = t[l], g = t[l + 1], b = Math.max(c, p), $ = Math.min(O, g);
        if (b <= $ && new Qn(b + u, $ + u, b, $).addToSet(i), g > O)
          break;
        l += 2;
      }
      if (!f)
        return i;
      new Qn(f.fromA, f.toA, f.fromB, f.toB).addToSet(i), o = f.toA, c = f.toB;
    }
  }
}
class ih {
  constructor(e, t, i) {
    this.view = e, this.state = t, this.transactions = i, this.flags = 0, this.startState = e.state, this.changes = ei.empty(this.startState.doc.length);
    for (let l of i)
      this.changes = this.changes.compose(l.changes);
    let r = [];
    this.changes.iterChangedRanges((l, o, c, f) => r.push(new Qn(l, o, c, f))), this.changedRanges = r;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new ih(e, t, i);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Returns true when
  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true
  and the viewport change is not just the result of mapping it in
  response to document changes.
  */
  get viewportMoved() {
    return (this.flags & 8) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 18) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class Dg extends Pt {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = _e.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new It()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new Qn(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var t;
    let i = e.changedRanges;
    this.minWidth > 0 && i.length && (i.every(({ fromA: u, toA: O }) => O < this.minWidthFrom || u > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);
    let r = -1;
    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((t = this.domChanged) === null || t === void 0) && t.newSel ? r = this.domChanged.newSel.head : !R_(e.changes, this.hasComposition) && !e.selectionSet && (r = e.state.selection.main.head));
    let l = r > -1 ? __(this.view, e.changes, r) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: u, to: O } = this.hasComposition;
      i = new Qn(u, O, e.changes.mapPos(u, -1), e.changes.mapPos(O, 1)).addToSet(i.slice());
    }
    this.hasComposition = l ? { from: l.range.fromB, to: l.range.toB } : null, (pe.ie || pe.chrome) && !l && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let o = this.decorations, c = this.updateDeco(), f = T_(o, c, e.changes);
    return i = Qn.extendWithRanges(i, f), !(this.flags & 7) && i.length == 0 ? !1 : (this.updateInner(i, e.startState.doc.length, l), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, t, i) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, t, i);
    let { observer: r } = this.view;
    r.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let o = pe.chrome || pe.ios ? { node: r.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, o), this.flags &= -8, o && (o.written || r.selectionRange.focusNode != o.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (o) => o.flags &= -9
      /* ViewFlag.Composition */
    );
    let l = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let o of this.children)
        o instanceof Ar && o.widget instanceof iO && l.push(o.dom);
    r.updateGaps(l);
  }
  updateChildren(e, t, i) {
    let r = i ? i.range.addToSet(e.slice()) : e, l = this.childCursor(t);
    for (let o = r.length - 1; ; o--) {
      let c = o >= 0 ? r[o] : null;
      if (!c)
        break;
      let { fromA: f, toA: u, fromB: O, toB: p } = c, g, b, $, x;
      if (i && i.range.fromB < p && i.range.toB > O) {
        let Z = Ro.build(this.view.state.doc, O, i.range.fromB, this.decorations, this.dynamicDecorationMap), T = Ro.build(this.view.state.doc, i.range.toB, p, this.decorations, this.dynamicDecorationMap);
        b = Z.breakAtStart, $ = Z.openStart, x = T.openEnd;
        let E = this.compositionView(i);
        T.breakAtStart ? E.breakAfter = 1 : T.content.length && E.merge(E.length, E.length, T.content[0], !1, T.openStart, 0) && (E.breakAfter = T.content[0].breakAfter, T.content.shift()), Z.content.length && E.merge(0, 0, Z.content[Z.content.length - 1], !0, 0, Z.openEnd) && Z.content.pop(), g = Z.content.concat(E).concat(T.content);
      } else
        ({ content: g, breakAtStart: b, openStart: $, openEnd: x } = Ro.build(this.view.state.doc, O, p, this.decorations, this.dynamicDecorationMap));
      let { i: P, off: k } = l.findPos(u, 1), { i: R, off: w } = l.findPos(f, -1);
      w1(this, R, w, P, k, g, b, $, x);
    }
    i && this.fixCompositionDOM(i);
  }
  updateEditContextFormatting(e) {
    this.editContextFormatting = this.editContextFormatting.map(e.changes);
    for (let t of e.transactions)
      for (let i of t.effects)
        i.is(N1) && (this.editContextFormatting = i.value);
  }
  compositionView(e) {
    let t = new zn(e.text.nodeValue);
    t.flags |= 8;
    for (let { deco: r } of e.marks)
      t = new qr(r, [t], t.length);
    let i = new It();
    return i.append(t, 0), i;
  }
  fixCompositionDOM(e) {
    let t = (l, o) => {
      o.flags |= 8 | (o.children.some(
        (f) => f.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(o);
      let c = Pt.get(l);
      c && c != o && (c.dom = null), o.setDOM(l);
    }, i = this.childPos(e.range.fromB, 1), r = this.children[i.i];
    t(e.line, r);
    for (let l = e.marks.length - 1; l >= -1; l--)
      i = r.childPos(i.off, 1), r = r.children[i.i], t(l >= 0 ? e.marks[l].node : e.text, r);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, t = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let i = this.view.root.activeElement, r = i == this.dom, l = !r && !(this.view.state.facet(Xr) || this.dom.tabIndex > -1) && Uc(this.dom, this.view.observer.selectionRange) && !(i && this.dom.contains(i));
    if (!(r || t || l))
      return;
    let o = this.forceSelection;
    this.forceSelection = !1;
    let c = this.view.state.selection.main, f = this.moveToLine(this.domAtPos(c.anchor)), u = c.empty ? f : this.moveToLine(this.domAtPos(c.head));
    if (pe.gecko && c.empty && !this.hasComposition && k_(f)) {
      let p = document.createTextNode("");
      this.view.observer.ignore(() => f.node.insertBefore(p, f.node.childNodes[f.offset] || null)), f = u = new $i(p, 0), o = !0;
    }
    let O = this.view.observer.selectionRange;
    (o || !O.focusNode || (!Co(f.node, f.offset, O.anchorNode, O.anchorOffset) || !Co(u.node, u.offset, O.focusNode, O.focusOffset)) && !this.suppressWidgetCursorChange(O, c)) && (this.view.observer.ignore(() => {
      pe.android && pe.chrome && this.dom.contains(O.focusNode) && C_(O.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let p = qo(this.view.root);
      if (p) if (c.empty) {
        if (pe.gecko) {
          let g = W_(f.node, f.offset);
          if (g && g != 3) {
            let b = (g == 1 ? Q1 : x1)(f.node, f.offset);
            b && (f = new $i(b.node, b.offset));
          }
        }
        p.collapse(f.node, f.offset), c.bidiLevel != null && p.caretBidiLevel !== void 0 && (p.caretBidiLevel = c.bidiLevel);
      } else if (p.extend) {
        p.collapse(f.node, f.offset);
        try {
          p.extend(u.node, u.offset);
        } catch {
        }
      } else {
        let g = document.createRange();
        c.anchor > c.head && ([f, u] = [u, f]), g.setEnd(u.node, u.offset), g.setStart(f.node, f.offset), p.removeAllRanges(), p.addRange(g);
      }
      l && this.view.root.activeElement == this.dom && (this.dom.blur(), i && i.focus());
    }), this.view.observer.setSelectionRange(f, u)), this.impreciseAnchor = f.precise ? null : new $i(O.anchorNode, O.anchorOffset), this.impreciseHead = u.precise ? null : new $i(O.focusNode, O.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, t) {
    return this.hasComposition && t.empty && Co(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == t.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, t = e.state.selection.main, i = qo(e.root), { anchorNode: r, anchorOffset: l } = e.observer.selectionRange;
    if (!i || !t.empty || !t.assoc || !i.modify)
      return;
    let o = It.find(this, t.head);
    if (!o)
      return;
    let c = o.posAtStart;
    if (t.head == c || t.head == c + o.length)
      return;
    let f = this.coordsAt(t.head, -1), u = this.coordsAt(t.head, 1);
    if (!f || !u || f.bottom > u.top)
      return;
    let O = this.domAtPos(t.head + t.assoc);
    i.collapse(O.node, O.offset), i.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let p = e.observer.selectionRange;
    e.docView.posFromDOM(p.anchorNode, p.anchorOffset) != t.from && i.collapse(r, l);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let t = this.dom, i;
    if (e.node != t)
      return e;
    for (let r = e.offset; !i && r < t.childNodes.length; r++) {
      let l = Pt.get(t.childNodes[r]);
      l instanceof It && (i = l.domAtPos(0));
    }
    for (let r = e.offset - 1; !i && r >= 0; r--) {
      let l = Pt.get(t.childNodes[r]);
      l instanceof It && (i = l.domAtPos(l.length));
    }
    return i ? new $i(i.node, i.offset, !0) : e;
  }
  nearest(e) {
    for (let t = e; t; ) {
      let i = Pt.get(t);
      if (i && i.rootView == this)
        return i;
      t = t.parentNode;
    }
    return null;
  }
  posFromDOM(e, t) {
    let i = this.nearest(e);
    if (!i)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return i.localPosFromDOM(e, t) + i.posAtStart;
  }
  domAtPos(e) {
    let { i: t, off: i } = this.childCursor().findPos(e, -1);
    for (; t < this.children.length - 1; ) {
      let r = this.children[t];
      if (i < r.length || r instanceof It)
        break;
      t++, i = 0;
    }
    return this.children[t].domAtPos(i);
  }
  coordsAt(e, t) {
    let i = null, r = 0;
    for (let l = this.length, o = this.children.length - 1; o >= 0; o--) {
      let c = this.children[o], f = l - c.breakAfter, u = f - c.length;
      if (f < e)
        break;
      if (u <= e && (u < e || c.covers(-1)) && (f > e || c.covers(1)) && (!i || c instanceof It && !(i instanceof It && t >= 0)))
        i = c, r = u;
      else if (i && u == e && f == e && c instanceof Ar && Math.abs(t) < 2) {
        if (c.deco.startSide < 0)
          break;
        o && (i = null);
      }
      l = u;
    }
    return i ? i.coordsAt(e - r, t) : null;
  }
  coordsForChar(e) {
    let { i: t, off: i } = this.childPos(e, 1), r = this.children[t];
    if (!(r instanceof It))
      return null;
    for (; r.children.length; ) {
      let { i: c, off: f } = r.childPos(i, 1);
      for (; ; c++) {
        if (c == r.children.length)
          return null;
        if ((r = r.children[c]).length)
          break;
      }
      i = f;
    }
    if (!(r instanceof zn))
      return null;
    let l = ui(r.text, i);
    if (l == i)
      return null;
    let o = Es(r.dom, i, l).getClientRects();
    for (let c = 0; c < o.length; c++) {
      let f = o[c];
      if (c == o.length - 1 || f.top < f.bottom && f.left < f.right)
        return f;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let t = [], { from: i, to: r } = e, l = this.view.contentDOM.clientWidth, o = l > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, c = -1, f = this.view.textDirection == Tt.LTR;
    for (let u = 0, O = 0; O < this.children.length; O++) {
      let p = this.children[O], g = u + p.length;
      if (g > r)
        break;
      if (u >= i) {
        let b = p.dom.getBoundingClientRect();
        if (t.push(b.height), o) {
          let $ = p.dom.lastChild, x = $ ? Vo($) : [];
          if (x.length) {
            let P = x[x.length - 1], k = f ? P.right - b.left : b.right - P.left;
            k > c && (c = k, this.minWidth = l, this.minWidthFrom = u, this.minWidthTo = g);
          }
        }
      }
      u = g + p.breakAfter;
    }
    return t;
  }
  textDirectionAt(e) {
    let { i: t } = this.childPos(e, 1);
    return getComputedStyle(this.children[t].dom).direction == "rtl" ? Tt.RTL : Tt.LTR;
  }
  measureTextSize() {
    for (let l of this.children)
      if (l instanceof It) {
        let o = l.measureTextSize();
        if (o)
          return o;
      }
    let e = document.createElement("div"), t, i, r;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let l = Vo(e.firstChild)[0];
      t = e.getBoundingClientRect().height, i = l ? l.width / 27 : 7, r = l ? l.height : t, e.remove();
    }), { lineHeight: t, charWidth: i, textHeight: r };
  }
  childCursor(e = this.length) {
    let t = this.children.length;
    return t && (e -= this.children[--t].length), new P1(this.children, e, t);
  }
  computeBlockGapDeco() {
    let e = [], t = this.view.viewState;
    for (let i = 0, r = 0; ; r++) {
      let l = r == t.viewports.length ? null : t.viewports[r], o = l ? l.from - 1 : this.length;
      if (o > i) {
        let c = (t.lineBlockAt(o).bottom - t.lineBlockAt(i).top) / this.view.scaleY;
        e.push(_e.replace({
          widget: new iO(c),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(i, o));
      }
      if (!l)
        break;
      i = l.to + 1;
    }
    return _e.set(e);
  }
  updateDeco() {
    let e = 1, t = this.view.state.facet(Lo).map((l) => (this.dynamicDecorationMap[e++] = typeof l == "function") ? l(this.view) : l), i = !1, r = this.view.state.facet(G1).map((l, o) => {
      let c = typeof l == "function";
      return c && (i = !0), c ? l(this.view) : l;
    });
    for (r.length && (this.dynamicDecorationMap[e++] = i, t.push(ct.join(r))), this.decorations = [
      this.editContextFormatting,
      ...t,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ]; e < this.decorations.length; )
      this.dynamicDecorationMap[e++] = !1;
    return this.decorations;
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let u = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = u.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    for (let u of this.view.state.facet(I1))
      try {
        if (u(this.view, e.range, e))
          return !0;
      } catch (O) {
        Bi(this.view.state, O, "scroll handler");
      }
    let { range: t } = e, i = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1), r;
    if (!i)
      return;
    !t.empty && (r = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (i = {
      left: Math.min(i.left, r.left),
      top: Math.min(i.top, r.top),
      right: Math.max(i.right, r.right),
      bottom: Math.max(i.bottom, r.bottom)
    });
    let l = IO(this.view), o = {
      left: i.left - l.left,
      top: i.top - l.top,
      right: i.right + l.right,
      bottom: i.bottom + l.bottom
    }, { offsetWidth: c, offsetHeight: f } = this.view.scrollDOM;
    o_(this.view.scrollDOM, o, t.head < t.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, c), -c), Math.max(Math.min(e.yMargin, f), -f), this.view.textDirection == Tt.LTR);
  }
}
function k_(n) {
  return n.node.nodeType == 1 && n.node.firstChild && (n.offset == 0 || n.node.childNodes[n.offset - 1].contentEditable == "false") && (n.offset == n.node.childNodes.length || n.node.childNodes[n.offset].contentEditable == "false");
}
function J1(n, e) {
  let t = n.observer.selectionRange;
  if (!t.focusNode)
    return null;
  let i = Q1(t.focusNode, t.focusOffset), r = x1(t.focusNode, t.focusOffset), l = i || r;
  if (r && i && r.node != i.node) {
    let c = Pt.get(r.node);
    if (!c || c instanceof zn && c.text != r.node.nodeValue)
      l = r;
    else if (n.docView.lastCompositionAfterCursor) {
      let f = Pt.get(i.node);
      !f || f instanceof zn && f.text != i.node.nodeValue || (l = r);
    }
  }
  if (n.docView.lastCompositionAfterCursor = l != i, !l)
    return null;
  let o = e - l.offset;
  return { from: o, to: o + l.node.nodeValue.length, node: l.node };
}
function __(n, e, t) {
  let i = J1(n, t);
  if (!i)
    return null;
  let { node: r, from: l, to: o } = i, c = r.nodeValue;
  if (/[\n\r]/.test(c) || n.state.doc.sliceString(i.from, i.to) != c)
    return null;
  let f = e.invertedDesc, u = new Qn(f.mapPos(l), f.mapPos(o), l, o), O = [];
  for (let p = r.parentNode; ; p = p.parentNode) {
    let g = Pt.get(p);
    if (g instanceof qr)
      O.push({ node: p, deco: g.mark });
    else {
      if (g instanceof It || p.nodeName == "DIV" && p.parentNode == n.contentDOM)
        return { range: u, text: r, marks: O, line: p };
      if (p != n.contentDOM)
        O.push({ node: p, deco: new ta({
          inclusive: !0,
          attributes: p_(p),
          tagName: p.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function W_(n, e) {
  return n.nodeType != 1 ? 0 : (e && n.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < n.childNodes.length && n.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let Z_ = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, t) {
    Yc(e, t, this.changes);
  }
  comparePoint(e, t) {
    Yc(e, t, this.changes);
  }
  boundChange(e) {
    Yc(e, e, this.changes);
  }
};
function T_(n, e, t) {
  let i = new Z_();
  return ct.compare(n, e, t, i), i.changes;
}
function C_(n, e) {
  for (let t = n; t && t != e; t = t.assignedSlot || t.parentNode)
    if (t.nodeType == 1 && t.contentEditable == "false")
      return !0;
  return !1;
}
function R_(n, e) {
  let t = !1;
  return e && n.iterChangedRanges((i, r) => {
    i < e.to && r > e.from && (t = !0);
  }), t;
}
function X_(n, e, t = 1) {
  let i = n.charCategorizer(e), r = n.doc.lineAt(e), l = e - r.from;
  if (r.length == 0)
    return F.cursor(e);
  l == 0 ? t = 1 : l == r.length && (t = -1);
  let o = l, c = l;
  t < 0 ? o = ui(r.text, l, !1) : c = ui(r.text, l);
  let f = i(r.text.slice(o, c));
  for (; o > 0; ) {
    let u = ui(r.text, o, !1);
    if (i(r.text.slice(u, o)) != f)
      break;
    o = u;
  }
  for (; c < r.length; ) {
    let u = ui(r.text, c);
    if (i(r.text.slice(c, u)) != f)
      break;
    c = u;
  }
  return F.range(o + r.from, c + r.from);
}
function A_(n, e) {
  return e.left > n ? e.left - n : Math.max(0, n - e.right);
}
function M_(n, e) {
  return e.top > n ? e.top - n : Math.max(0, n - e.bottom);
}
function su(n, e) {
  return n.top < e.bottom - 1 && n.bottom > e.top + 1;
}
function zg(n, e) {
  return e < n.top ? { top: e, left: n.left, right: n.right, bottom: n.bottom } : n;
}
function jg(n, e) {
  return e > n.bottom ? { top: n.top, left: n.left, right: n.right, bottom: e } : n;
}
function oO(n, e, t) {
  let i, r, l, o, c = !1, f, u, O, p;
  for (let $ = n.firstChild; $; $ = $.nextSibling) {
    let x = Vo($);
    for (let P = 0; P < x.length; P++) {
      let k = x[P];
      r && su(r, k) && (k = zg(jg(k, r.bottom), r.top));
      let R = A_(e, k), w = M_(t, k);
      if (R == 0 && w == 0)
        return $.nodeType == 3 ? Bg($, e, t) : oO($, e, t);
      if (!i || o > w || o == w && l > R) {
        i = $, r = k, l = R, o = w;
        let Z = w ? t < k.top ? -1 : 1 : R ? e < k.left ? -1 : 1 : 0;
        c = !Z || (Z > 0 ? P < x.length - 1 : P > 0);
      }
      R == 0 ? t > k.bottom && (!O || O.bottom < k.bottom) ? (f = $, O = k) : t < k.top && (!p || p.top > k.top) && (u = $, p = k) : O && su(O, k) ? O = jg(O, k.bottom) : p && su(p, k) && (p = zg(p, k.top));
    }
  }
  if (O && O.bottom >= t ? (i = f, r = O) : p && p.top <= t && (i = u, r = p), !i)
    return { node: n, offset: 0 };
  let g = Math.max(r.left, Math.min(r.right, e));
  if (i.nodeType == 3)
    return Bg(i, g, t);
  if (c && i.contentEditable != "false")
    return oO(i, g, t);
  let b = Array.prototype.indexOf.call(n.childNodes, i) + (e >= (r.left + r.right) / 2 ? 1 : 0);
  return { node: n, offset: b };
}
function Bg(n, e, t) {
  let i = n.nodeValue.length, r = -1, l = 1e9, o = 0;
  for (let c = 0; c < i; c++) {
    let f = Es(n, c, c + 1).getClientRects();
    for (let u = 0; u < f.length; u++) {
      let O = f[u];
      if (O.top == O.bottom)
        continue;
      o || (o = e - O.left);
      let p = (O.top > t ? O.top - t : t - O.bottom) - 1;
      if (O.left - 1 <= e && O.right + 1 >= e && p < l) {
        let g = e >= (O.left + O.right) / 2, b = g;
        if ((pe.chrome || pe.gecko) && Es(n, c).getBoundingClientRect().left == O.right && (b = !g), p <= 0)
          return { node: n, offset: c + (b ? 1 : 0) };
        r = c + (b ? 1 : 0), l = p;
      }
    }
  }
  return { node: n, offset: r > -1 ? r : o > 0 ? n.nodeValue.length : 0 };
}
function ev(n, e, t, i = -1) {
  var r, l;
  let o = n.contentDOM.getBoundingClientRect(), c = o.top + n.viewState.paddingTop, f, { docHeight: u } = n.viewState, { x: O, y: p } = e, g = p - c;
  if (g < 0)
    return 0;
  if (g > u)
    return n.state.doc.length;
  for (let Z = n.viewState.heightOracle.textHeight / 2, T = !1; f = n.elementAtHeight(g), f.type != Ti.Text; )
    for (; g = i > 0 ? f.bottom + Z : f.top - Z, !(g >= 0 && g <= u); ) {
      if (T)
        return t ? null : 0;
      T = !0, i = -i;
    }
  p = c + g;
  let b = f.from;
  if (b < n.viewport.from)
    return n.viewport.from == 0 ? 0 : t ? null : Ig(n, o, f, O, p);
  if (b > n.viewport.to)
    return n.viewport.to == n.state.doc.length ? n.state.doc.length : t ? null : Ig(n, o, f, O, p);
  let $ = n.dom.ownerDocument, x = n.root.elementFromPoint ? n.root : $, P = x.elementFromPoint(O, p);
  P && !n.contentDOM.contains(P) && (P = null), P || (O = Math.max(o.left + 1, Math.min(o.right - 1, O)), P = x.elementFromPoint(O, p), P && !n.contentDOM.contains(P) && (P = null));
  let k, R = -1;
  if (P && ((r = n.docView.nearest(P)) === null || r === void 0 ? void 0 : r.isEditable) != !1) {
    if ($.caretPositionFromPoint) {
      let Z = $.caretPositionFromPoint(O, p);
      Z && ({ offsetNode: k, offset: R } = Z);
    } else if ($.caretRangeFromPoint) {
      let Z = $.caretRangeFromPoint(O, p);
      Z && ({ startContainer: k, startOffset: R } = Z, (!n.contentDOM.contains(k) || pe.safari && E_(k, R, O) || pe.chrome && q_(k, R, O)) && (k = void 0));
    }
    k && (R = Math.min(fr(k), R));
  }
  if (!k || !n.docView.dom.contains(k)) {
    let Z = It.find(n.docView, b);
    if (!Z)
      return g > f.top + f.height / 2 ? f.to : f.from;
    ({ node: k, offset: R } = oO(Z.dom, O, p));
  }
  let w = n.docView.nearest(k);
  if (!w)
    return null;
  if (w.isWidget && ((l = w.dom) === null || l === void 0 ? void 0 : l.nodeType) == 1) {
    let Z = w.dom.getBoundingClientRect();
    return e.y < Z.top || e.y <= Z.bottom && e.x <= (Z.left + Z.right) / 2 ? w.posAtStart : w.posAtEnd;
  } else
    return w.localPosFromDOM(k, R) + w.posAtStart;
}
function Ig(n, e, t, i, r) {
  let l = Math.round((i - e.left) * n.defaultCharacterWidth);
  if (n.lineWrapping && t.height > n.defaultLineHeight * 1.5) {
    let c = n.viewState.heightOracle.textHeight, f = Math.floor((r - t.top - (n.defaultLineHeight - c) * 0.5) / c);
    l += f * n.viewState.heightOracle.lineLength;
  }
  let o = n.state.sliceDoc(t.from, t.to);
  return t.from + Iu(o, l, n.state.tabSize);
}
function E_(n, e, t) {
  let i;
  if (n.nodeType != 3 || e != (i = n.nodeValue.length))
    return !1;
  for (let r = n.nextSibling; r; r = r.nextSibling)
    if (r.nodeType != 1 || r.nodeName != "BR")
      return !1;
  return Es(n, i - 1, i).getBoundingClientRect().left > t;
}
function q_(n, e, t) {
  if (e != 0)
    return !1;
  for (let r = n; ; ) {
    let l = r.parentNode;
    if (!l || l.nodeType != 1 || l.firstChild != r)
      return !1;
    if (l.classList.contains("cm-line"))
      break;
    r = l;
  }
  let i = n.nodeType == 1 ? n.getBoundingClientRect() : Es(n, 0, Math.max(n.nodeValue.length, 1)).getBoundingClientRect();
  return t - i.left > 5;
}
function aO(n, e) {
  let t = n.lineBlockAt(e);
  if (Array.isArray(t.type)) {
    for (let i of t.type)
      if (i.to > e || i.to == e && (i.to == t.to || i.type == Ti.Text))
        return i;
  }
  return t;
}
function V_(n, e, t, i) {
  let r = aO(n, e.head), l = !i || r.type != Ti.Text || !(n.lineWrapping || r.widgetLineBreaks) ? null : n.coordsAtPos(e.assoc < 0 && e.head > r.from ? e.head - 1 : e.head);
  if (l) {
    let o = n.dom.getBoundingClientRect(), c = n.textDirectionAt(r.from), f = n.posAtCoords({
      x: t == (c == Tt.LTR) ? o.right - 1 : o.left + 1,
      y: (l.top + l.bottom) / 2
    });
    if (f != null)
      return F.cursor(f, t ? -1 : 1);
  }
  return F.cursor(t ? r.to : r.from, t ? -1 : 1);
}
function Ng(n, e, t, i) {
  let r = n.state.doc.lineAt(e.head), l = n.bidiSpans(r), o = n.textDirectionAt(r.from);
  for (let c = e, f = null; ; ) {
    let u = x_(r, l, o, c, t), O = q1;
    if (!u) {
      if (r.number == (t ? n.state.doc.lines : 1))
        return c;
      O = `
`, r = n.state.doc.line(r.number + (t ? 1 : -1)), l = n.bidiSpans(r), u = n.visualLineSide(r, !t);
    }
    if (f) {
      if (!f(O))
        return c;
    } else {
      if (!i)
        return u;
      f = i(O);
    }
    c = u;
  }
}
function L_(n, e, t) {
  let i = n.state.charCategorizer(e), r = i(t);
  return (l) => {
    let o = i(l);
    return r == Rt.Space && (r = o), r == o;
  };
}
function U_(n, e, t, i) {
  let r = e.head, l = t ? 1 : -1;
  if (r == (t ? n.state.doc.length : 0))
    return F.cursor(r, e.assoc);
  let o = e.goalColumn, c, f = n.contentDOM.getBoundingClientRect(), u = n.coordsAtPos(r, e.assoc || -1), O = n.documentTop;
  if (u)
    o == null && (o = u.left - f.left), c = l < 0 ? u.top : u.bottom;
  else {
    let b = n.viewState.lineBlockAt(r);
    o == null && (o = Math.min(f.right - f.left, n.defaultCharacterWidth * (r - b.from))), c = (l < 0 ? b.top : b.bottom) + O;
  }
  let p = f.left + o, g = i ?? n.viewState.heightOracle.textHeight >> 1;
  for (let b = 0; ; b += 10) {
    let $ = c + (g + b) * l, x = ev(n, { x: p, y: $ }, !1, l);
    if ($ < f.top || $ > f.bottom || (l < 0 ? x < r : x > r)) {
      let P = n.docView.coordsForChar(x), k = !P || $ < P.top ? -1 : 1;
      return F.cursor(x, k, void 0, o);
    }
  }
}
function Dc(n, e, t) {
  for (; ; ) {
    let i = 0;
    for (let r of n)
      r.between(e - 1, e + 1, (l, o, c) => {
        if (e > l && e < o) {
          let f = i || t || (e - l < o - e ? -1 : 1);
          e = f < 0 ? l : o, i = f;
        }
      });
    if (!i)
      return e;
  }
}
function lu(n, e, t) {
  let i = Dc(n.state.facet(BO).map((r) => r(n)), t.from, e.head > t.from ? -1 : 1);
  return i == t.from ? t : F.cursor(i, i < t.from ? 1 : -1);
}
const Po = "￿";
class Y_ {
  constructor(e, t) {
    this.points = e, this.text = "", this.lineSeparator = t.facet(it.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += Po;
  }
  readRange(e, t) {
    if (!e)
      return this;
    let i = e.parentNode;
    for (let r = e; ; ) {
      this.findPointBefore(i, r);
      let l = this.text.length;
      this.readNode(r);
      let o = r.nextSibling;
      if (o == t)
        break;
      let c = Pt.get(r), f = Pt.get(o);
      (c && f ? c.breakAfter : (c ? c.breakAfter : eh(r)) || eh(o) && (r.nodeName != "BR" || r.cmIgnore) && this.text.length > l) && this.lineBreak(), r = o;
    }
    return this.findPointBefore(i, t), this;
  }
  readTextNode(e) {
    let t = e.nodeValue;
    for (let i of this.points)
      i.node == e && (i.pos = this.text.length + Math.min(i.offset, t.length));
    for (let i = 0, r = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let l = -1, o = 1, c;
      if (this.lineSeparator ? (l = t.indexOf(this.lineSeparator, i), o = this.lineSeparator.length) : (c = r.exec(t)) && (l = c.index, o = c[0].length), this.append(t.slice(i, l < 0 ? t.length : l)), l < 0)
        break;
      if (this.lineBreak(), o > 1)
        for (let f of this.points)
          f.node == e && f.pos > this.text.length && (f.pos -= o - 1);
      i = l + o;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let t = Pt.get(e), i = t && t.overrideDOMText;
    if (i != null) {
      this.findPointInside(e, i.length);
      for (let r = i.iter(); !r.next().done; )
        r.lineBreak ? this.lineBreak() : this.append(r.value);
    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, t) {
    for (let i of this.points)
      i.node == e && e.childNodes[i.offset] == t && (i.pos = this.text.length);
  }
  findPointInside(e, t) {
    for (let i of this.points)
      (e.nodeType == 3 ? i.node == e : e.contains(i.node)) && (i.pos = this.text.length + (D_(e, i.node, i.offset) ? t : 0));
  }
}
function D_(n, e, t) {
  for (; ; ) {
    if (!e || t < fr(e))
      return !1;
    if (e == n)
      return !0;
    t = Ms(e) + 1, e = e.parentNode;
  }
}
class Fg {
  constructor(e, t) {
    this.node = e, this.offset = t, this.pos = -1;
  }
}
class z_ {
  constructor(e, t, i, r) {
    this.typeOver = r, this.bounds = null, this.text = "", this.domChanged = t > -1;
    let { impreciseHead: l, impreciseAnchor: o } = e.docView;
    if (e.state.readOnly && t > -1)
      this.newSel = null;
    else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, i, 0))) {
      let c = l || o ? [] : I_(e), f = new Y_(c, e.state);
      f.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = f.text, this.newSel = N_(c, this.bounds.from);
    } else {
      let c = e.observer.selectionRange, f = l && l.node == c.focusNode && l.offset == c.focusOffset || !Gu(e.contentDOM, c.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(c.focusNode, c.focusOffset), u = o && o.node == c.anchorNode && o.offset == c.anchorOffset || !Gu(e.contentDOM, c.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(c.anchorNode, c.anchorOffset), O = e.viewport;
      if ((pe.ios || pe.chrome) && e.state.selection.main.empty && f != u && (O.from > 0 || O.to < e.state.doc.length)) {
        let p = Math.min(f, u), g = Math.max(f, u), b = O.from - p, $ = O.to - g;
        (b == 0 || b == 1 || p == 0) && ($ == 0 || $ == -1 || g == e.state.doc.length) && (f = 0, u = e.state.doc.length);
      }
      this.newSel = F.single(u, f);
    }
  }
}
function tv(n, e) {
  let t, { newSel: i } = e, r = n.state.selection.main, l = n.inputState.lastKeyTime > Date.now() - 100 ? n.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: o, to: c } = e.bounds, f = r.from, u = null;
    (l === 8 || pe.android && e.text.length < c - o) && (f = r.to, u = "end");
    let O = B_(n.state.doc.sliceString(o, c, Po), e.text, f - o, u);
    O && (pe.chrome && l == 13 && O.toB == O.from + 2 && e.text.slice(O.from, O.toB) == Po + Po && O.toB--, t = {
      from: o + O.from,
      to: o + O.toA,
      insert: ot.of(e.text.slice(O.from, O.toB).split(Po))
    });
  } else i && (!n.hasFocus && n.state.facet(Xr) || i.main.eq(r)) && (i = null);
  if (!t && !i)
    return !1;
  if (!t && e.typeOver && !r.empty && i && i.main.empty ? t = { from: r.from, to: r.to, insert: n.state.doc.slice(r.from, r.to) } : (pe.mac || pe.android) && t && t.from == t.to && t.from == r.head - 1 && /^\. ?$/.test(t.insert.toString()) && n.contentDOM.getAttribute("autocorrect") == "off" ? (i && t.insert.length == 2 && (i = F.single(i.main.anchor - 1, i.main.head - 1)), t = { from: t.from, to: t.to, insert: ot.of([t.insert.toString().replace(".", " ")]) }) : t && t.from >= r.from && t.to <= r.to && (t.from != r.from || t.to != r.to) && r.to - r.from - (t.to - t.from) <= 4 ? t = {
    from: r.from,
    to: r.to,
    insert: n.state.doc.slice(r.from, t.from).append(t.insert).append(n.state.doc.slice(t.to, r.to))
  } : pe.chrome && t && t.from == t.to && t.from == r.head && t.insert.toString() == `
 ` && n.lineWrapping && (i && (i = F.single(i.main.anchor - 1, i.main.head - 1)), t = { from: r.from, to: r.to, insert: ot.of([" "]) }), t)
    return NO(n, t, i, l);
  if (i && !i.main.eq(r)) {
    let o = !1, c = "select";
    return n.inputState.lastSelectionTime > Date.now() - 50 && (n.inputState.lastSelectionOrigin == "select" && (o = !0), c = n.inputState.lastSelectionOrigin), n.dispatch({ selection: i, scrollIntoView: o, userEvent: c }), !0;
  } else
    return !1;
}
function NO(n, e, t, i = -1) {
  if (pe.ios && n.inputState.flushIOSKey(e))
    return !0;
  let r = n.state.selection.main;
  if (pe.android && (e.to == r.to && // GBoard will sometimes remove a space it just inserted
  // after a completion when you press enter
  (e.from == r.from || e.from == r.from - 1 && n.state.sliceDoc(e.from, r.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && vl(n.contentDOM, "Enter", 13) || (e.from == r.from - 1 && e.to == r.to && e.insert.length == 0 || i == 8 && e.insert.length < e.to - e.from && e.to > r.head) && vl(n.contentDOM, "Backspace", 8) || e.from == r.from && e.to == r.to + 1 && e.insert.length == 0 && vl(n.contentDOM, "Delete", 46)))
    return !0;
  let l = e.insert.toString();
  n.inputState.composing >= 0 && n.inputState.composing++;
  let o, c = () => o || (o = j_(n, e, t));
  return n.state.facet(D1).some((f) => f(n, e.from, e.to, l, c)) || n.dispatch(c()), !0;
}
function j_(n, e, t) {
  let i, r = n.state, l = r.selection.main;
  if (e.from >= l.from && e.to <= l.to && e.to - e.from >= (l.to - l.from) / 3 && (!t || t.main.empty && t.main.from == e.from + e.insert.length) && n.inputState.composing < 0) {
    let c = l.from < e.from ? r.sliceDoc(l.from, e.from) : "", f = l.to > e.to ? r.sliceDoc(e.to, l.to) : "";
    i = r.replaceSelection(n.state.toText(c + e.insert.sliceString(0, void 0, n.state.lineBreak) + f));
  } else {
    let c = r.changes(e), f = t && t.main.to <= c.newLength ? t.main : void 0;
    if (r.selection.ranges.length > 1 && n.inputState.composing >= 0 && e.to <= l.to && e.to >= l.to - 10) {
      let u = n.state.sliceDoc(e.from, e.to), O, p = t && J1(n, t.main.head);
      if (p) {
        let $ = e.insert.length - (e.to - e.from);
        O = { from: p.from, to: p.to - $ };
      } else
        O = n.state.doc.lineAt(l.head);
      let g = l.to - e.to, b = l.to - l.from;
      i = r.changeByRange(($) => {
        if ($.from == l.from && $.to == l.to)
          return { changes: c, range: f || $.map(c) };
        let x = $.to - g, P = x - u.length;
        if ($.to - $.from != b || n.state.sliceDoc(P, x) != u || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        $.to >= O.from && $.from <= O.to)
          return { range: $ };
        let k = r.changes({ from: P, to: x, insert: e.insert }), R = $.to - l.to;
        return {
          changes: k,
          range: f ? F.range(Math.max(0, f.anchor + R), Math.max(0, f.head + R)) : $.map(k)
        };
      });
    } else
      i = {
        changes: c,
        selection: f && r.selection.replaceRange(f)
      };
  }
  let o = "input.type";
  return (n.composing || n.inputState.compositionPendingChange && n.inputState.compositionEndedAt > Date.now() - 50) && (n.inputState.compositionPendingChange = !1, o += ".compose", n.inputState.compositionFirstChange && (o += ".start", n.inputState.compositionFirstChange = !1)), r.update(i, { userEvent: o, scrollIntoView: !0 });
}
function B_(n, e, t, i) {
  let r = Math.min(n.length, e.length), l = 0;
  for (; l < r && n.charCodeAt(l) == e.charCodeAt(l); )
    l++;
  if (l == r && n.length == e.length)
    return null;
  let o = n.length, c = e.length;
  for (; o > 0 && c > 0 && n.charCodeAt(o - 1) == e.charCodeAt(c - 1); )
    o--, c--;
  if (i == "end") {
    let f = Math.max(0, l - Math.min(o, c));
    t -= o + f - l;
  }
  if (o < l && n.length < e.length) {
    let f = t <= l && t >= o ? l - t : 0;
    l -= f, c = l + (c - o), o = l;
  } else if (c < l) {
    let f = t <= l && t >= c ? l - t : 0;
    l -= f, o = l + (o - c), c = l;
  }
  return { from: l, toA: o, toB: c };
}
function I_(n) {
  let e = [];
  if (n.root.activeElement != n.contentDOM)
    return e;
  let { anchorNode: t, anchorOffset: i, focusNode: r, focusOffset: l } = n.observer.selectionRange;
  return t && (e.push(new Fg(t, i)), (r != t || l != i) && e.push(new Fg(r, l))), e;
}
function N_(n, e) {
  if (n.length == 0)
    return null;
  let t = n[0].pos, i = n.length == 2 ? n[1].pos : t;
  return t > -1 && i > -1 ? F.single(t + e, i + e) : null;
}
class F_ {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, pe.safari && e.contentDOM.addEventListener("input", () => null), pe.gecko && f2(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !n2(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, t) {
    let i = this.handlers[e];
    if (i) {
      for (let r of i.observers)
        r(this.view, t);
      for (let r of i.handlers) {
        if (t.defaultPrevented)
          break;
        if (r(this.view, t)) {
          t.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let t = G_(e), i = this.handlers, r = this.view.contentDOM;
    for (let l in t)
      if (l != "scroll") {
        let o = !t[l].handlers.length, c = i[l];
        c && o != !c.handlers.length && (r.removeEventListener(l, this.handleEvent), c = null), c || r.addEventListener(l, this.handleEvent, { passive: o });
      }
    for (let l in i)
      l != "scroll" && !t[l] && r.removeEventListener(l, this.handleEvent);
    this.handlers = t;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))
      return !0;
    if (this.tabFocusMode > 0 && e.keyCode != 27 && nv.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), pe.android && pe.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let t;
    return pe.ios && !e.synthetic && !e.altKey && !e.metaKey && ((t = iv.find((i) => i.keyCode == e.keyCode)) && !e.ctrlKey || H_.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = t || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey(e) {
    let t = this.pendingIOSKey;
    return !t || t.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, vl(this.view.contentDOM, t.key, t.keyCode, t instanceof KeyboardEvent ? t : void 0));
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : pe.safari && !pe.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function Gg(n, e) {
  return (t, i) => {
    try {
      return e.call(n, i, t);
    } catch (r) {
      Bi(t.state, r);
    }
  };
}
function G_(n) {
  let e = /* @__PURE__ */ Object.create(null);
  function t(i) {
    return e[i] || (e[i] = { observers: [], handlers: [] });
  }
  for (let i of n) {
    let r = i.spec;
    if (r && r.domEventHandlers)
      for (let l in r.domEventHandlers) {
        let o = r.domEventHandlers[l];
        o && t(l).handlers.push(Gg(i.value, o));
      }
    if (r && r.domEventObservers)
      for (let l in r.domEventObservers) {
        let o = r.domEventObservers[l];
        o && t(l).observers.push(Gg(i.value, o));
      }
  }
  for (let i in jn)
    t(i).handlers.push(jn[i]);
  for (let i in xn)
    t(i).observers.push(xn[i]);
  return e;
}
const iv = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], H_ = "dthko", nv = [16, 17, 18, 20, 91, 92, 224, 225], mc = 6;
function vc(n) {
  return Math.max(0, n) * 0.7 + 8;
}
function K_(n, e) {
  return Math.max(Math.abs(n.clientX - e.clientX), Math.abs(n.clientY - e.clientY));
}
class J_ {
  constructor(e, t, i, r) {
    this.view = e, this.startEvent = t, this.style = i, this.mustSelect = r, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = t, this.scrollParents = a_(e.contentDOM), this.atoms = e.state.facet(BO).map((o) => o(e));
    let l = e.contentDOM.ownerDocument;
    l.addEventListener("mousemove", this.move = this.move.bind(this)), l.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = t.shiftKey, this.multiple = e.state.facet(it.allowMultipleSelections) && e2(e, t), this.dragging = i2(e, t) && lv(t) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && K_(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let t = 0, i = 0, r = 0, l = 0, o = this.view.win.innerWidth, c = this.view.win.innerHeight;
    this.scrollParents.x && ({ left: r, right: o } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: l, bottom: c } = this.scrollParents.y.getBoundingClientRect());
    let f = IO(this.view);
    e.clientX - f.left <= r + mc ? t = -vc(r - e.clientX) : e.clientX + f.right >= o - mc && (t = vc(e.clientX - o)), e.clientY - f.top <= l + mc ? i = -vc(l - e.clientY) : e.clientY + f.bottom >= c - mc && (i = vc(e.clientY - c)), this.setScrollSpeed(t, i);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, t) {
    this.scrollSpeed = { x: e, y: t }, e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    let { x: e, y: t } = this.scrollSpeed;
    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), t && this.scrollParents.y && (this.scrollParents.y.scrollTop += t, t = 0), (e || t) && this.view.win.scrollBy(e, t), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let t = null;
    for (let i = 0; i < e.ranges.length; i++) {
      let r = e.ranges[i], l = null;
      if (r.empty) {
        let o = Dc(this.atoms, r.from, 0);
        o != r.from && (l = F.cursor(o, -1));
      } else {
        let o = Dc(this.atoms, r.from, -1), c = Dc(this.atoms, r.to, 1);
        (o != r.from || c != r.to) && (l = F.range(r.from == r.anchor ? o : c, r.from == r.head ? o : c));
      }
      l && (t || (t = e.ranges.slice()), t[i] = l);
    }
    return t ? F.create(t, e.mainIndex) : e;
  }
  select(e) {
    let { view: t } = this, i = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !i.eq(t.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: i,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    e.transactions.some((t) => t.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function e2(n, e) {
  let t = n.state.facet(V1);
  return t.length ? t[0](e) : pe.mac ? e.metaKey : e.ctrlKey;
}
function t2(n, e) {
  let t = n.state.facet(L1);
  return t.length ? t[0](e) : pe.mac ? !e.altKey : !e.ctrlKey;
}
function i2(n, e) {
  let { main: t } = n.state.selection;
  if (t.empty)
    return !1;
  let i = qo(n.root);
  if (!i || i.rangeCount == 0)
    return !0;
  let r = i.getRangeAt(0).getClientRects();
  for (let l = 0; l < r.length; l++) {
    let o = r[l];
    if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function n2(n, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let t = e.target, i; t != n.contentDOM; t = t.parentNode)
    if (!t || t.nodeType == 11 || (i = Pt.get(t)) && i.ignoreEvent(e))
      return !1;
  return !0;
}
const jn = /* @__PURE__ */ Object.create(null), xn = /* @__PURE__ */ Object.create(null), rv = pe.ie && pe.ie_version < 15 || pe.ios && pe.webkit_version < 604;
function r2(n) {
  let e = n.dom.parentNode;
  if (!e)
    return;
  let t = e.appendChild(document.createElement("textarea"));
  t.style.cssText = "position: fixed; left: -10000px; top: 10px", t.focus(), setTimeout(() => {
    n.focus(), t.remove(), sv(n, t.value);
  }, 50);
}
function Th(n, e, t) {
  for (let i of n.facet(e))
    t = i(t, n);
  return t;
}
function sv(n, e) {
  e = Th(n.state, DO, e);
  let { state: t } = n, i, r = 1, l = t.toText(e), o = l.lines == t.selection.ranges.length;
  if (cO != null && t.selection.ranges.every((f) => f.empty) && cO == l.toString()) {
    let f = -1;
    i = t.changeByRange((u) => {
      let O = t.doc.lineAt(u.from);
      if (O.from == f)
        return { range: u };
      f = O.from;
      let p = t.toText((o ? l.line(r++).text : e) + t.lineBreak);
      return {
        changes: { from: O.from, insert: p },
        range: F.cursor(u.from + p.length)
      };
    });
  } else o ? i = t.changeByRange((f) => {
    let u = l.line(r++);
    return {
      changes: { from: f.from, to: f.to, insert: u.text },
      range: F.cursor(f.from + u.length)
    };
  }) : i = t.replaceSelection(l);
  n.dispatch(i, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
xn.scroll = (n) => {
  n.inputState.lastScrollTop = n.scrollDOM.scrollTop, n.inputState.lastScrollLeft = n.scrollDOM.scrollLeft;
};
jn.keydown = (n, e) => (n.inputState.setSelectionOrigin("select"), e.keyCode == 27 && n.inputState.tabFocusMode != 0 && (n.inputState.tabFocusMode = Date.now() + 2e3), !1);
xn.touchstart = (n, e) => {
  n.inputState.lastTouchTime = Date.now(), n.inputState.setSelectionOrigin("select.pointer");
};
xn.touchmove = (n) => {
  n.inputState.setSelectionOrigin("select.pointer");
};
jn.mousedown = (n, e) => {
  if (n.observer.flush(), n.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let t = null;
  for (let i of n.state.facet(U1))
    if (t = i(n, e), t)
      break;
  if (!t && e.button == 0 && (t = o2(n, e)), t) {
    let i = !n.hasFocus;
    n.inputState.startMouseSelection(new J_(n, e, t, i)), i && n.observer.ignore(() => {
      S1(n.contentDOM);
      let l = n.root.activeElement;
      l && !l.contains(n.contentDOM) && l.blur();
    });
    let r = n.inputState.mouseSelection;
    if (r)
      return r.start(e), r.dragging === !1;
  }
  return !1;
};
function Hg(n, e, t, i) {
  if (i == 1)
    return F.cursor(e, t);
  if (i == 2)
    return X_(n.state, e, t);
  {
    let r = It.find(n.docView, e), l = n.state.doc.lineAt(r ? r.posAtEnd : e), o = r ? r.posAtStart : l.from, c = r ? r.posAtEnd : l.to;
    return c < n.state.doc.length && c == l.to && c++, F.range(o, c);
  }
}
let Kg = (n, e, t) => e >= t.top && e <= t.bottom && n >= t.left && n <= t.right;
function s2(n, e, t, i) {
  let r = It.find(n.docView, e);
  if (!r)
    return 1;
  let l = e - r.posAtStart;
  if (l == 0)
    return 1;
  if (l == r.length)
    return -1;
  let o = r.coordsAt(l, -1);
  if (o && Kg(t, i, o))
    return -1;
  let c = r.coordsAt(l, 1);
  return c && Kg(t, i, c) ? 1 : o && o.bottom >= i ? -1 : 1;
}
function Jg(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: t, bias: s2(n, t, e.clientX, e.clientY) };
}
const l2 = pe.ie && pe.ie_version <= 11;
let em = null, tm = 0, im = 0;
function lv(n) {
  if (!l2)
    return n.detail;
  let e = em, t = im;
  return em = n, im = Date.now(), tm = !e || t > Date.now() - 400 && Math.abs(e.clientX - n.clientX) < 2 && Math.abs(e.clientY - n.clientY) < 2 ? (tm + 1) % 3 : 1;
}
function o2(n, e) {
  let t = Jg(n, e), i = lv(e), r = n.state.selection;
  return {
    update(l) {
      l.docChanged && (t.pos = l.changes.mapPos(t.pos), r = r.map(l.changes));
    },
    get(l, o, c) {
      let f = Jg(n, l), u, O = Hg(n, f.pos, f.bias, i);
      if (t.pos != f.pos && !o) {
        let p = Hg(n, t.pos, t.bias, i), g = Math.min(p.from, O.from), b = Math.max(p.to, O.to);
        O = g < O.from ? F.range(g, b) : F.range(b, g);
      }
      return o ? r.replaceRange(r.main.extend(O.from, O.to)) : c && i == 1 && r.ranges.length > 1 && (u = a2(r, f.pos)) ? u : c ? r.addRange(O) : F.create([O]);
    }
  };
}
function a2(n, e) {
  for (let t = 0; t < n.ranges.length; t++) {
    let { from: i, to: r } = n.ranges[t];
    if (i <= e && r >= e)
      return F.create(n.ranges.slice(0, t).concat(n.ranges.slice(t + 1)), n.mainIndex == t ? 0 : n.mainIndex - (n.mainIndex > t ? 1 : 0));
  }
  return null;
}
jn.dragstart = (n, e) => {
  let { selection: { main: t } } = n.state;
  if (e.target.draggable) {
    let r = n.docView.nearest(e.target);
    if (r && r.isWidget) {
      let l = r.posAtStart, o = l + r.length;
      (l >= t.to || o <= t.from) && (t = F.range(l, o));
    }
  }
  let { inputState: i } = n;
  return i.mouseSelection && (i.mouseSelection.dragging = !0), i.draggedContent = t, e.dataTransfer && (e.dataTransfer.setData("Text", Th(n.state, zO, n.state.sliceDoc(t.from, t.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
jn.dragend = (n) => (n.inputState.draggedContent = null, !1);
function nm(n, e, t, i) {
  if (t = Th(n.state, DO, t), !t)
    return;
  let r = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: l } = n.inputState, o = i && l && t2(n, e) ? { from: l.from, to: l.to } : null, c = { from: r, insert: t }, f = n.state.changes(o ? [o, c] : c);
  n.focus(), n.dispatch({
    changes: f,
    selection: { anchor: f.mapPos(r, -1), head: f.mapPos(r, 1) },
    userEvent: o ? "move.drop" : "input.drop"
  }), n.inputState.draggedContent = null;
}
jn.drop = (n, e) => {
  if (!e.dataTransfer)
    return !1;
  if (n.state.readOnly)
    return !0;
  let t = e.dataTransfer.files;
  if (t && t.length) {
    let i = Array(t.length), r = 0, l = () => {
      ++r == t.length && nm(n, e, i.filter((o) => o != null).join(n.state.lineBreak), !1);
    };
    for (let o = 0; o < t.length; o++) {
      let c = new FileReader();
      c.onerror = l, c.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(c.result) || (i[o] = c.result), l();
      }, c.readAsText(t[o]);
    }
    return !0;
  } else {
    let i = e.dataTransfer.getData("Text");
    if (i)
      return nm(n, e, i, !0), !0;
  }
  return !1;
};
jn.paste = (n, e) => {
  if (n.state.readOnly)
    return !0;
  n.observer.flush();
  let t = rv ? null : e.clipboardData;
  return t ? (sv(n, t.getData("text/plain") || t.getData("text/uri-list")), !0) : (r2(n), !1);
};
function c2(n, e) {
  let t = n.dom.parentNode;
  if (!t)
    return;
  let i = t.appendChild(document.createElement("textarea"));
  i.style.cssText = "position: fixed; left: -10000px; top: 10px", i.value = e, i.focus(), i.selectionEnd = e.length, i.selectionStart = 0, setTimeout(() => {
    i.remove(), n.focus();
  }, 50);
}
function h2(n) {
  let e = [], t = [], i = !1;
  for (let r of n.selection.ranges)
    r.empty || (e.push(n.sliceDoc(r.from, r.to)), t.push(r));
  if (!e.length) {
    let r = -1;
    for (let { from: l } of n.selection.ranges) {
      let o = n.doc.lineAt(l);
      o.number > r && (e.push(o.text), t.push({ from: o.from, to: Math.min(n.doc.length, o.to + 1) })), r = o.number;
    }
    i = !0;
  }
  return { text: Th(n, zO, e.join(n.lineBreak)), ranges: t, linewise: i };
}
let cO = null;
jn.copy = jn.cut = (n, e) => {
  let { text: t, ranges: i, linewise: r } = h2(n.state);
  if (!t && !r)
    return !1;
  cO = r ? t : null, e.type == "cut" && !n.state.readOnly && n.dispatch({
    changes: i,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let l = rv ? null : e.clipboardData;
  return l ? (l.clearData(), l.setData("text/plain", t), !0) : (c2(n, t), !1);
};
const ov = /* @__PURE__ */ Lr.define();
function av(n, e) {
  let t = [];
  for (let i of n.facet(z1)) {
    let r = i(n, e);
    r && t.push(r);
  }
  return t ? n.update({ effects: t, annotations: ov.of(!0) }) : null;
}
function cv(n) {
  setTimeout(() => {
    let e = n.hasFocus;
    if (e != n.inputState.notifiedFocused) {
      let t = av(n.state, e);
      t ? n.dispatch(t) : n.update([]);
    }
  }, 10);
}
xn.focus = (n) => {
  n.inputState.lastFocusTime = Date.now(), !n.scrollDOM.scrollTop && (n.inputState.lastScrollTop || n.inputState.lastScrollLeft) && (n.scrollDOM.scrollTop = n.inputState.lastScrollTop, n.scrollDOM.scrollLeft = n.inputState.lastScrollLeft), cv(n);
};
xn.blur = (n) => {
  n.observer.clearSelectionRange(), cv(n);
};
xn.compositionstart = xn.compositionupdate = (n) => {
  n.observer.editContext || (n.inputState.compositionFirstChange == null && (n.inputState.compositionFirstChange = !0), n.inputState.composing < 0 && (n.inputState.composing = 0));
};
xn.compositionend = (n) => {
  n.observer.editContext || (n.inputState.composing = -1, n.inputState.compositionEndedAt = Date.now(), n.inputState.compositionPendingKey = !0, n.inputState.compositionPendingChange = n.observer.pendingRecords().length > 0, n.inputState.compositionFirstChange = null, pe.chrome && pe.android ? n.observer.flushSoon() : n.inputState.compositionPendingChange ? Promise.resolve().then(() => n.observer.flush()) : setTimeout(() => {
    n.inputState.composing < 0 && n.docView.hasComposition && n.update([]);
  }, 50));
};
xn.contextmenu = (n) => {
  n.inputState.lastContextMenu = Date.now();
};
jn.beforeinput = (n, e) => {
  var t, i;
  if (e.inputType == "insertReplacementText" && n.observer.editContext) {
    let l = (t = e.dataTransfer) === null || t === void 0 ? void 0 : t.getData("text/plain"), o = e.getTargetRanges();
    if (l && o.length) {
      let c = o[0], f = n.posAtDOM(c.startContainer, c.startOffset), u = n.posAtDOM(c.endContainer, c.endOffset);
      return NO(n, { from: f, to: u, insert: n.state.toText(l) }, null), !0;
    }
  }
  let r;
  if (pe.chrome && pe.android && (r = iv.find((l) => l.inputType == e.inputType)) && (n.observer.delayAndroidKey(r.key, r.keyCode), r.key == "Backspace" || r.key == "Delete")) {
    let l = ((i = window.visualViewport) === null || i === void 0 ? void 0 : i.height) || 0;
    setTimeout(() => {
      var o;
      (((o = window.visualViewport) === null || o === void 0 ? void 0 : o.height) || 0) > l + 10 && n.hasFocus && (n.contentDOM.blur(), n.focus());
    }, 100);
  }
  return pe.ios && e.inputType == "deleteContentForward" && n.observer.flushSoon(), pe.safari && e.inputType == "insertText" && n.inputState.composing >= 0 && setTimeout(() => xn.compositionend(n, e), 20), !1;
};
const rm = /* @__PURE__ */ new Set();
function f2(n) {
  rm.has(n) || (rm.add(n), n.addEventListener("copy", () => {
  }), n.addEventListener("cut", () => {
  }));
}
const sm = ["pre-wrap", "normal", "pre-line", "break-spaces"];
let kl = !1;
function lm() {
  kl = !1;
}
class u2 {
  constructor(e) {
    this.lineWrapping = e, this.doc = ot.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;
  }
  heightForGap(e, t) {
    let i = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (i += Math.max(0, Math.ceil((t - e - i * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * i;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return sm.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let t = !1;
    for (let i = 0; i < e.length; i++) {
      let r = e[i];
      r < 0 ? i++ : this.heightSamples[Math.floor(r * 10)] || (t = !0, this.heightSamples[Math.floor(r * 10)] = !0);
    }
    return t;
  }
  refresh(e, t, i, r, l, o) {
    let c = sm.indexOf(e) > -1, f = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != c;
    if (this.lineWrapping = c, this.lineHeight = t, this.charWidth = i, this.textHeight = r, this.lineLength = l, f) {
      this.heightSamples = {};
      for (let u = 0; u < o.length; u++) {
        let O = o[u];
        O < 0 ? u++ : this.heightSamples[Math.floor(O * 10)] = !0;
      }
    }
    return f;
  }
}
class O2 {
  constructor(e, t) {
    this.from = e, this.heights = t, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class sr {
  /**
  @internal
  */
  constructor(e, t, i, r, l) {
    this.from = e, this.length = t, this.top = i, this.height = r, this._content = l;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? Ti.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof cs ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new sr(this.from, this.length + e.length, this.top, this.height + e.height, t);
  }
}
var Zt = /* @__PURE__ */ function(n) {
  return n[n.ByPos = 0] = "ByPos", n[n.ByHeight = 1] = "ByHeight", n[n.ByPosNoHeight = 2] = "ByPosNoHeight", n;
}(Zt || (Zt = {}));
const zc = 1e-3;
class Ci {
  constructor(e, t, i = 2) {
    this.length = e, this.height = t, this.flags = i;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e) {
    this.height != e && (Math.abs(this.height - e) > zc && (kl = !0), this.height = e);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, t, i) {
    return Ci.of(i);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, t) {
    t.push(this);
  }
  decomposeRight(e, t) {
    t.push(this);
  }
  applyChanges(e, t, i, r) {
    let l = this, o = i.doc;
    for (let c = r.length - 1; c >= 0; c--) {
      let { fromA: f, toA: u, fromB: O, toB: p } = r[c], g = l.lineAt(f, Zt.ByPosNoHeight, i.setDoc(t), 0, 0), b = g.to >= u ? g : l.lineAt(u, Zt.ByPosNoHeight, i, 0, 0);
      for (p += b.to - u, u = b.to; c > 0 && g.from <= r[c - 1].toA; )
        f = r[c - 1].fromA, O = r[c - 1].fromB, c--, f < g.from && (g = l.lineAt(f, Zt.ByPosNoHeight, i, 0, 0));
      O += g.from - f, f = g.from;
      let $ = FO.build(i.setDoc(o), e, O, p);
      l = nh(l, l.replace(f, u, $));
    }
    return l.updateHeight(i, 0);
  }
  static empty() {
    return new ln(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let t = 0, i = e.length, r = 0, l = 0;
    for (; ; )
      if (t == i)
        if (r > l * 2) {
          let c = e[t - 1];
          c.break ? e.splice(--t, 1, c.left, null, c.right) : e.splice(--t, 1, c.left, c.right), i += 1 + c.break, r -= c.size;
        } else if (l > r * 2) {
          let c = e[i];
          c.break ? e.splice(i, 1, c.left, null, c.right) : e.splice(i, 1, c.left, c.right), i += 2 + c.break, l -= c.size;
        } else
          break;
      else if (r < l) {
        let c = e[t++];
        c && (r += c.size);
      } else {
        let c = e[--i];
        c && (l += c.size);
      }
    let o = 0;
    return e[t - 1] == null ? (o = 1, t--) : e[t] == null && (o = 1, i++), new d2(Ci.of(e.slice(0, t)), o, Ci.of(e.slice(i)));
  }
}
function nh(n, e) {
  return n == e ? n : (n.constructor != e.constructor && (kl = !0), e);
}
Ci.prototype.size = 1;
class hv extends Ci {
  constructor(e, t, i) {
    super(e, t), this.deco = i;
  }
  blockAt(e, t, i, r) {
    return new sr(r, this.length, i, this.height, this.deco || 0);
  }
  lineAt(e, t, i, r, l) {
    return this.blockAt(0, i, r, l);
  }
  forEachLine(e, t, i, r, l, o) {
    e <= l + this.length && t >= l && o(this.blockAt(0, i, r, l));
  }
  updateHeight(e, t = 0, i = !1, r) {
    return r && r.from <= t && r.more && this.setHeight(r.heights[r.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class ln extends hv {
  constructor(e, t) {
    super(e, t, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, t, i, r) {
    return new sr(r, this.length, i, this.height, this.breaks);
  }
  replace(e, t, i) {
    let r = i[0];
    return i.length == 1 && (r instanceof ln || r instanceof ci && r.flags & 4) && Math.abs(this.length - r.length) < 10 ? (r instanceof ci ? r = new ln(r.length, this.height) : r.height = this.height, this.outdated || (r.outdated = !1), r) : Ci.of(i);
  }
  updateHeight(e, t = 0, i = !1, r) {
    return r && r.from <= t && r.more ? this.setHeight(r.heights[r.index++]) : (i || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class ci extends Ci {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, t) {
    let i = e.doc.lineAt(t).number, r = e.doc.lineAt(t + this.length).number, l = r - i + 1, o, c = 0;
    if (e.lineWrapping) {
      let f = Math.min(this.height, e.lineHeight * l);
      o = f / l, this.length > l + 1 && (c = (this.height - f) / (this.length - l - 1));
    } else
      o = this.height / l;
    return { firstLine: i, lastLine: r, perLine: o, perChar: c };
  }
  blockAt(e, t, i, r) {
    let { firstLine: l, lastLine: o, perLine: c, perChar: f } = this.heightMetrics(t, r);
    if (t.lineWrapping) {
      let u = r + (e < t.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - i) / this.height)) * this.length)), O = t.doc.lineAt(u), p = c + O.length * f, g = Math.max(i, e - p / 2);
      return new sr(O.from, O.length, g, p, 0);
    } else {
      let u = Math.max(0, Math.min(o - l, Math.floor((e - i) / c))), { from: O, length: p } = t.doc.line(l + u);
      return new sr(O, p, i + c * u, c, 0);
    }
  }
  lineAt(e, t, i, r, l) {
    if (t == Zt.ByHeight)
      return this.blockAt(e, i, r, l);
    if (t == Zt.ByPosNoHeight) {
      let { from: b, to: $ } = i.doc.lineAt(e);
      return new sr(b, $ - b, 0, 0, 0);
    }
    let { firstLine: o, perLine: c, perChar: f } = this.heightMetrics(i, l), u = i.doc.lineAt(e), O = c + u.length * f, p = u.number - o, g = r + c * p + f * (u.from - l - p);
    return new sr(u.from, u.length, Math.max(r, Math.min(g, r + this.height - O)), O, 0);
  }
  forEachLine(e, t, i, r, l, o) {
    e = Math.max(e, l), t = Math.min(t, l + this.length);
    let { firstLine: c, perLine: f, perChar: u } = this.heightMetrics(i, l);
    for (let O = e, p = r; O <= t; ) {
      let g = i.doc.lineAt(O);
      if (O == e) {
        let $ = g.number - c;
        p += f * $ + u * (e - l - $);
      }
      let b = f + u * g.length;
      o(new sr(g.from, g.length, p, b, 0)), p += b, O = g.to + 1;
    }
  }
  replace(e, t, i) {
    let r = this.length - t;
    if (r > 0) {
      let l = i[i.length - 1];
      l instanceof ci ? i[i.length - 1] = new ci(l.length + r) : i.push(null, new ci(r - 1));
    }
    if (e > 0) {
      let l = i[0];
      l instanceof ci ? i[0] = new ci(e + l.length) : i.unshift(new ci(e - 1), null);
    }
    return Ci.of(i);
  }
  decomposeLeft(e, t) {
    t.push(new ci(e - 1), null);
  }
  decomposeRight(e, t) {
    t.push(null, new ci(this.length - e - 1));
  }
  updateHeight(e, t = 0, i = !1, r) {
    let l = t + this.length;
    if (r && r.from <= t + this.length && r.more) {
      let o = [], c = Math.max(t, r.from), f = -1;
      for (r.from > t && o.push(new ci(r.from - t - 1).updateHeight(e, t)); c <= l && r.more; ) {
        let O = e.doc.lineAt(c).length;
        o.length && o.push(null);
        let p = r.heights[r.index++];
        f == -1 ? f = p : Math.abs(p - f) >= zc && (f = -2);
        let g = new ln(O, p);
        g.outdated = !1, o.push(g), c += O + 1;
      }
      c <= l && o.push(null, new ci(l - c).updateHeight(e, c));
      let u = Ci.of(o);
      return (f < 0 || Math.abs(u.height - this.height) >= zc || Math.abs(f - this.heightMetrics(e, t).perLine) >= zc) && (kl = !0), nh(this, u);
    } else (i || this.outdated) && (this.setHeight(e.heightForGap(t, t + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class d2 extends Ci {
  constructor(e, t, i) {
    super(e.length + t + i.length, e.height + i.height, t | (e.outdated || i.outdated ? 2 : 0)), this.left = e, this.right = i, this.size = e.size + i.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, t, i, r) {
    let l = i + this.left.height;
    return e < l ? this.left.blockAt(e, t, i, r) : this.right.blockAt(e, t, l, r + this.left.length + this.break);
  }
  lineAt(e, t, i, r, l) {
    let o = r + this.left.height, c = l + this.left.length + this.break, f = t == Zt.ByHeight ? e < o : e < c, u = f ? this.left.lineAt(e, t, i, r, l) : this.right.lineAt(e, t, i, o, c);
    if (this.break || (f ? u.to < c : u.from > c))
      return u;
    let O = t == Zt.ByPosNoHeight ? Zt.ByPosNoHeight : Zt.ByPos;
    return f ? u.join(this.right.lineAt(c, O, i, o, c)) : this.left.lineAt(c, O, i, r, l).join(u);
  }
  forEachLine(e, t, i, r, l, o) {
    let c = r + this.left.height, f = l + this.left.length + this.break;
    if (this.break)
      e < f && this.left.forEachLine(e, t, i, r, l, o), t >= f && this.right.forEachLine(e, t, i, c, f, o);
    else {
      let u = this.lineAt(f, Zt.ByPos, i, r, l);
      e < u.from && this.left.forEachLine(e, u.from - 1, i, r, l, o), u.to >= e && u.from <= t && o(u), t > u.to && this.right.forEachLine(u.to + 1, t, i, c, f, o);
    }
  }
  replace(e, t, i) {
    let r = this.left.length + this.break;
    if (t < r)
      return this.balanced(this.left.replace(e, t, i), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - r, t - r, i));
    let l = [];
    e > 0 && this.decomposeLeft(e, l);
    let o = l.length;
    for (let c of i)
      l.push(c);
    if (e > 0 && om(l, o - 1), t < this.length) {
      let c = l.length;
      this.decomposeRight(t, l), om(l, c);
    }
    return Ci.of(l);
  }
  decomposeLeft(e, t) {
    let i = this.left.length;
    if (e <= i)
      return this.left.decomposeLeft(e, t);
    t.push(this.left), this.break && (i++, e >= i && t.push(null)), e > i && this.right.decomposeLeft(e - i, t);
  }
  decomposeRight(e, t) {
    let i = this.left.length, r = i + this.break;
    if (e >= r)
      return this.right.decomposeRight(e - r, t);
    e < i && this.left.decomposeRight(e, t), this.break && e < r && t.push(null), t.push(this.right);
  }
  balanced(e, t) {
    return e.size > 2 * t.size || t.size > 2 * e.size ? Ci.of(this.break ? [e, null, t] : [e, t]) : (this.left = nh(this.left, e), this.right = nh(this.right, t), this.setHeight(e.height + t.height), this.outdated = e.outdated || t.outdated, this.size = e.size + t.size, this.length = e.length + this.break + t.length, this);
  }
  updateHeight(e, t = 0, i = !1, r) {
    let { left: l, right: o } = this, c = t + l.length + this.break, f = null;
    return r && r.from <= t + l.length && r.more ? f = l = l.updateHeight(e, t, i, r) : l.updateHeight(e, t, i), r && r.from <= c + o.length && r.more ? f = o = o.updateHeight(e, c, i, r) : o.updateHeight(e, c, i), f ? this.balanced(l, o) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function om(n, e) {
  let t, i;
  n[e] == null && (t = n[e - 1]) instanceof ci && (i = n[e + 1]) instanceof ci && n.splice(e - 1, 3, new ci(t.length + 1 + i.length));
}
const p2 = 5;
class FO {
  constructor(e, t) {
    this.pos = e, this.oracle = t, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, t) {
    if (this.lineStart > -1) {
      let i = Math.min(t, this.lineEnd), r = this.nodes[this.nodes.length - 1];
      r instanceof ln ? r.length += i - this.pos : (i > this.pos || !this.isCovered) && this.nodes.push(new ln(i - this.pos, -1)), this.writtenTo = i, t > i && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = t;
  }
  point(e, t, i) {
    if (e < t || i.heightRelevant) {
      let r = i.widget ? i.widget.estimatedHeight : 0, l = i.widget ? i.widget.lineBreaks : 0;
      r < 0 && (r = this.oracle.lineHeight);
      let o = t - e;
      i.block ? this.addBlock(new hv(o, r, i)) : (o || l || r >= p2) && this.addLineDeco(r, l, o);
    } else t > e && this.span(e, t);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: t } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = t, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new ln(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, t) {
    let i = new ci(t - e);
    return this.oracle.doc.lineAt(e).to == t && (i.flags |= 4), i;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof ln)
      return e;
    let t = new ln(0, -1);
    return this.nodes.push(t), t;
  }
  addBlock(e) {
    this.enterLine();
    let t = e.deco;
    t && t.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, t && t.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, t, i) {
    let r = this.ensureLine();
    r.length += i, r.collapsed += i, r.widgetHeight = Math.max(r.widgetHeight, e), r.breaks += t, this.writtenTo = this.pos = this.pos + i;
  }
  finish(e) {
    let t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(t instanceof ln) && !this.isCovered ? this.nodes.push(new ln(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let i = e;
    for (let r of this.nodes)
      r instanceof ln && r.updateHeight(this.oracle, i), i += r ? r.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, t, i, r) {
    let l = new FO(i, e);
    return ct.spans(t, i, r, l, 0), l.finish(i);
  }
}
function g2(n, e, t) {
  let i = new m2();
  return ct.compare(n, e, t, i, 0), i.changes;
}
class m2 {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, t, i, r) {
    (e < t || i && i.heightRelevant || r && r.heightRelevant) && Yc(e, t, this.changes, 5);
  }
}
function v2(n, e) {
  let t = n.getBoundingClientRect(), i = n.ownerDocument, r = i.defaultView || window, l = Math.max(0, t.left), o = Math.min(r.innerWidth, t.right), c = Math.max(0, t.top), f = Math.min(r.innerHeight, t.bottom);
  for (let u = n.parentNode; u && u != i.body; )
    if (u.nodeType == 1) {
      let O = u, p = window.getComputedStyle(O);
      if ((O.scrollHeight > O.clientHeight || O.scrollWidth > O.clientWidth) && p.overflow != "visible") {
        let g = O.getBoundingClientRect();
        l = Math.max(l, g.left), o = Math.min(o, g.right), c = Math.max(c, g.top), f = Math.min(u == n.parentNode ? r.innerHeight : f, g.bottom);
      }
      u = p.position == "absolute" || p.position == "fixed" ? O.offsetParent : O.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
  return {
    left: l - t.left,
    right: Math.max(l, o) - t.left,
    top: c - (t.top + e),
    bottom: Math.max(c, f) - (t.top + e)
  };
}
function b2(n) {
  let e = n.getBoundingClientRect(), t = n.ownerDocument.defaultView || window;
  return e.left < t.innerWidth && e.right > 0 && e.top < t.innerHeight && e.bottom > 0;
}
function S2(n, e) {
  let t = n.getBoundingClientRect();
  return {
    left: 0,
    right: t.right - t.left,
    top: e,
    bottom: t.bottom - (t.top + e)
  };
}
class ou {
  constructor(e, t, i, r) {
    this.from = e, this.to = t, this.size = i, this.displaySize = r;
  }
  static same(e, t) {
    if (e.length != t.length)
      return !1;
    for (let i = 0; i < e.length; i++) {
      let r = e[i], l = t[i];
      if (r.from != l.from || r.to != l.to || r.size != l.size)
        return !1;
    }
    return !0;
  }
  draw(e, t) {
    return _e.replace({
      widget: new $2(this.displaySize * (t ? e.scaleY : e.scaleX), t)
    }).range(this.from, this.to);
  }
}
class $2 extends Ur {
  constructor(e, t) {
    super(), this.size = e, this.vertical = t;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class am {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = cm, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Tt.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let t = e.facet(jO).some((i) => typeof i != "function" && i.class == "cm-lineWrapping");
    this.heightOracle = new u2(t), this.stateDeco = e.facet(Lo).filter((i) => typeof i != "function"), this.heightMap = Ci.empty().applyChanges(this.stateDeco, ot.empty, this.heightOracle.setDoc(e.doc), [new Qn(0, 0, 0, e.doc.length)]);
    for (let i = 0; i < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); i++)
      ;
    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = _e.set(this.lineGaps.map((i) => i.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: t } = this.state.selection;
    for (let i = 0; i <= 1; i++) {
      let r = i ? t.head : t.anchor;
      if (!e.some(({ from: l, to: o }) => r >= l && r <= o)) {
        let { from: l, to: o } = this.lineBlockAt(r);
        e.push(new bc(l, o));
      }
    }
    return this.viewports = e.sort((i, r) => i.from - r.from), this.updateScaler();
  }
  updateScaler() {
    let e = this.scaler;
    return this.scaler = this.heightMap.height <= 7e6 ? cm : new GO(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(wo(e, this.scaler));
    });
  }
  update(e, t = null) {
    this.state = e.state;
    let i = this.stateDeco;
    this.stateDeco = this.state.facet(Lo).filter((O) => typeof O != "function");
    let r = e.changedRanges, l = Qn.extendWithRanges(r, g2(i, this.stateDeco, e ? e.changes : ei.empty(this.state.doc.length))), o = this.heightMap.height, c = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    lm(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), l), (this.heightMap.height != o || kl) && (e.flags |= 2), c ? (this.scrollAnchorPos = e.changes.mapPos(c.from, -1), this.scrollAnchorHeight = c.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let f = l.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (t && (t.range.head < f.from || t.range.head > f.to) || !this.viewportIsAppropriate(f)) && (f = this.getViewport(0, t));
    let u = f.from != this.viewport.from || f.to != this.viewport.to;
    this.viewport = f, e.flags |= this.updateForViewport(), (u || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), t && (this.scrollTarget = t), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(B1) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let t = e.contentDOM, i = window.getComputedStyle(t), r = this.heightOracle, l = i.whiteSpace;
    this.defaultTextDirection = i.direction == "rtl" ? Tt.RTL : Tt.LTR;
    let o = this.heightOracle.mustRefreshForWrapping(l), c = t.getBoundingClientRect(), f = o || this.mustMeasureContent || this.contentDOMHeight != c.height;
    this.contentDOMHeight = c.height, this.mustMeasureContent = !1;
    let u = 0, O = 0;
    if (c.width && c.height) {
      let { scaleX: Z, scaleY: T } = b1(t, c);
      (Z > 5e-3 && Math.abs(this.scaleX - Z) > 5e-3 || T > 5e-3 && Math.abs(this.scaleY - T) > 5e-3) && (this.scaleX = Z, this.scaleY = T, u |= 16, o = f = !0);
    }
    let p = (parseInt(i.paddingTop) || 0) * this.scaleY, g = (parseInt(i.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != p || this.paddingBottom != g) && (this.paddingTop = p, this.paddingBottom = g, u |= 18), this.editorWidth != e.scrollDOM.clientWidth && (r.lineWrapping && (f = !0), this.editorWidth = e.scrollDOM.clientWidth, u |= 16);
    let b = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != b && (this.scrollAnchorHeight = -1, this.scrollTop = b), this.scrolledToBottom = y1(e.scrollDOM);
    let $ = (this.printing ? S2 : v2)(t, this.paddingTop), x = $.top - this.pixelViewport.top, P = $.bottom - this.pixelViewport.bottom;
    this.pixelViewport = $;
    let k = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (k != this.inView && (this.inView = k, k && (f = !0)), !this.inView && !this.scrollTarget && !b2(e.dom))
      return 0;
    let R = c.width;
    if ((this.contentDOMWidth != R || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = c.width, this.editorHeight = e.scrollDOM.clientHeight, u |= 16), f) {
      let Z = e.docView.measureVisibleLineHeights(this.viewport);
      if (r.mustRefreshForHeights(Z) && (o = !0), o || r.lineWrapping && Math.abs(R - this.contentDOMWidth) > r.charWidth) {
        let { lineHeight: T, charWidth: E, textHeight: M } = e.docView.measureTextSize();
        o = T > 0 && r.refresh(l, T, E, M, R / E, Z), o && (e.docView.minWidth = 0, u |= 16);
      }
      x > 0 && P > 0 ? O = Math.max(x, P) : x < 0 && P < 0 && (O = Math.min(x, P)), lm();
      for (let T of this.viewports) {
        let E = T.from == this.viewport.from ? Z : e.docView.measureVisibleLineHeights(T);
        this.heightMap = (o ? Ci.empty().applyChanges(this.stateDeco, ot.empty, this.heightOracle, [new Qn(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(r, 0, o, new O2(T.from, E));
      }
      kl && (u |= 2);
    }
    let w = !this.viewportIsAppropriate(this.viewport, O) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return w && (u & 2 && (u |= this.updateScaler()), this.viewport = this.getViewport(O, this.scrollTarget), u |= this.updateForViewport()), (u & 2 || w) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)), u |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), u;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, t) {
    let i = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), r = this.heightMap, l = this.heightOracle, { visibleTop: o, visibleBottom: c } = this, f = new bc(r.lineAt(o - i * 1e3, Zt.ByHeight, l, 0, 0).from, r.lineAt(c + (1 - i) * 1e3, Zt.ByHeight, l, 0, 0).to);
    if (t) {
      let { head: u } = t.range;
      if (u < f.from || u > f.to) {
        let O = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), p = r.lineAt(u, Zt.ByPos, l, 0, 0), g;
        t.y == "center" ? g = (p.top + p.bottom) / 2 - O / 2 : t.y == "start" || t.y == "nearest" && u < f.from ? g = p.top : g = p.bottom - O, f = new bc(r.lineAt(g - 1e3 / 2, Zt.ByHeight, l, 0, 0).from, r.lineAt(g + O + 1e3 / 2, Zt.ByHeight, l, 0, 0).to);
      }
    }
    return f;
  }
  mapViewport(e, t) {
    let i = t.mapPos(e.from, -1), r = t.mapPos(e.to, 1);
    return new bc(this.heightMap.lineAt(i, Zt.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(r, Zt.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: t }, i = 0) {
    if (!this.inView)
      return !0;
    let { top: r } = this.heightMap.lineAt(e, Zt.ByPos, this.heightOracle, 0, 0), { bottom: l } = this.heightMap.lineAt(t, Zt.ByPos, this.heightOracle, 0, 0), { visibleTop: o, visibleBottom: c } = this;
    return (e == 0 || r <= o - Math.max(10, Math.min(
      -i,
      250
      /* VP.MaxCoverMargin */
    ))) && (t == this.state.doc.length || l >= c + Math.max(10, Math.min(
      i,
      250
      /* VP.MaxCoverMargin */
    ))) && r > o - 2 * 1e3 && l < c + 2 * 1e3;
  }
  mapLineGaps(e, t) {
    if (!e.length || t.empty)
      return e;
    let i = [];
    for (let r of e)
      t.touchesRange(r.from, r.to) || i.push(new ou(t.mapPos(r.from), t.mapPos(r.to), r.size, r.displaySize));
    return i;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, t) {
    let i = this.heightOracle.lineWrapping, r = i ? 1e4 : 2e3, l = r >> 1, o = r << 1;
    if (this.defaultTextDirection != Tt.LTR && !i)
      return [];
    let c = [], f = (O, p, g, b) => {
      if (p - O < l)
        return;
      let $ = this.state.selection.main, x = [$.from];
      $.empty || x.push($.to);
      for (let k of x)
        if (k > O && k < p) {
          f(O, k - 10, g, b), f(k + 10, p, g, b);
          return;
        }
      let P = Q2(e, (k) => k.from >= g.from && k.to <= g.to && Math.abs(k.from - O) < l && Math.abs(k.to - p) < l && !x.some((R) => k.from < R && k.to > R));
      if (!P) {
        if (p < g.to && t && i && t.visibleRanges.some((w) => w.from <= p && w.to >= p)) {
          let w = t.moveToLineBoundary(F.cursor(p), !1, !0).head;
          w > O && (p = w);
        }
        let k = this.gapSize(g, O, p, b), R = i || k < 2e6 ? k : 2e6;
        P = new ou(O, p, k, R);
      }
      c.push(P);
    }, u = (O) => {
      if (O.length < o || O.type != Ti.Text)
        return;
      let p = y2(O.from, O.to, this.stateDeco);
      if (p.total < o)
        return;
      let g = this.scrollTarget ? this.scrollTarget.range.head : null, b, $;
      if (i) {
        let x = r / this.heightOracle.lineLength * this.heightOracle.lineHeight, P, k;
        if (g != null) {
          let R = $c(p, g), w = ((this.visibleBottom - this.visibleTop) / 2 + x) / O.height;
          P = R - w, k = R + w;
        } else
          P = (this.visibleTop - O.top - x) / O.height, k = (this.visibleBottom - O.top + x) / O.height;
        b = Sc(p, P), $ = Sc(p, k);
      } else {
        let x = p.total * this.heightOracle.charWidth, P = r * this.heightOracle.charWidth, k = 0;
        if (x > 2e6)
          for (let E of e)
            E.from >= O.from && E.from < O.to && E.size != E.displaySize && E.from * this.heightOracle.charWidth + k < this.pixelViewport.left && (k = E.size - E.displaySize);
        let R = this.pixelViewport.left + k, w = this.pixelViewport.right + k, Z, T;
        if (g != null) {
          let E = $c(p, g), M = ((w - R) / 2 + P) / x;
          Z = E - M, T = E + M;
        } else
          Z = (R - P) / x, T = (w + P) / x;
        b = Sc(p, Z), $ = Sc(p, T);
      }
      b > O.from && f(O.from, b, O, p), $ < O.to && f($, O.to, O, p);
    };
    for (let O of this.viewportLines)
      Array.isArray(O.type) ? O.type.forEach(u) : u(O);
    return c;
  }
  gapSize(e, t, i, r) {
    let l = $c(r, i) - $c(r, t);
    return this.heightOracle.lineWrapping ? e.height * l : r.total * this.heightOracle.charWidth * l;
  }
  updateLineGaps(e) {
    ou.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = _e.set(e.map((t) => t.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges(e) {
    let t = this.stateDeco;
    this.lineGaps.length && (t = t.concat(this.lineGapDeco));
    let i = [];
    ct.spans(t, this.viewport.from, this.viewport.to, {
      span(l, o) {
        i.push({ from: l, to: o });
      },
      point() {
      }
    }, 20);
    let r = 0;
    if (i.length != this.visibleRanges.length)
      r = 12;
    else
      for (let l = 0; l < i.length && !(r & 8); l++) {
        let o = this.visibleRanges[l], c = i[l];
        (o.from != c.from || o.to != c.to) && (r |= 4, e && e.mapPos(o.from, -1) == c.from && e.mapPos(o.to, 1) == c.to || (r |= 8));
      }
    return this.visibleRanges = i, r;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e) || wo(this.heightMap.lineAt(e, Zt.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((t) => t.top <= e && t.bottom >= e) || wo(this.heightMap.lineAt(this.scaler.fromDOM(e), Zt.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let t = this.lineBlockAtHeight(e + 8);
    return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return wo(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class bc {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
function y2(n, e, t) {
  let i = [], r = n, l = 0;
  return ct.spans(t, n, e, {
    span() {
    },
    point(o, c) {
      o > r && (i.push({ from: r, to: o }), l += o - r), r = c;
    }
  }, 20), r < e && (i.push({ from: r, to: e }), l += e - r), { total: l, ranges: i };
}
function Sc({ total: n, ranges: e }, t) {
  if (t <= 0)
    return e[0].from;
  if (t >= 1)
    return e[e.length - 1].to;
  let i = Math.floor(n * t);
  for (let r = 0; ; r++) {
    let { from: l, to: o } = e[r], c = o - l;
    if (i <= c)
      return l + i;
    i -= c;
  }
}
function $c(n, e) {
  let t = 0;
  for (let { from: i, to: r } of n.ranges) {
    if (e <= r) {
      t += e - i;
      break;
    }
    t += r - i;
  }
  return t / n.total;
}
function Q2(n, e) {
  for (let t of n)
    if (e(t))
      return t;
}
const cm = {
  toDOM(n) {
    return n;
  },
  fromDOM(n) {
    return n;
  },
  scale: 1,
  eq(n) {
    return n == this;
  }
};
class GO {
  constructor(e, t, i) {
    let r = 0, l = 0, o = 0;
    this.viewports = i.map(({ from: c, to: f }) => {
      let u = t.lineAt(c, Zt.ByPos, e, 0, 0).top, O = t.lineAt(f, Zt.ByPos, e, 0, 0).bottom;
      return r += O - u, { from: c, to: f, top: u, bottom: O, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - r) / (t.height - r);
    for (let c of this.viewports)
      c.domTop = o + (c.top - l) * this.scale, o = c.domBottom = c.domTop + (c.bottom - c.top), l = c.bottom;
  }
  toDOM(e) {
    for (let t = 0, i = 0, r = 0; ; t++) {
      let l = t < this.viewports.length ? this.viewports[t] : null;
      if (!l || e < l.top)
        return r + (e - i) * this.scale;
      if (e <= l.bottom)
        return l.domTop + (e - l.top);
      i = l.bottom, r = l.domBottom;
    }
  }
  fromDOM(e) {
    for (let t = 0, i = 0, r = 0; ; t++) {
      let l = t < this.viewports.length ? this.viewports[t] : null;
      if (!l || e < l.domTop)
        return i + (e - r) / this.scale;
      if (e <= l.domBottom)
        return l.top + (e - l.domTop);
      i = l.bottom, r = l.domBottom;
    }
  }
  eq(e) {
    return e instanceof GO ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((t, i) => t.from == e.viewports[i].from && t.to == e.viewports[i].to) : !1;
  }
}
function wo(n, e) {
  if (e.scale == 1)
    return n;
  let t = e.toDOM(n.top), i = e.toDOM(n.bottom);
  return new sr(n.from, n.length, t, i - t, Array.isArray(n._content) ? n._content.map((r) => wo(r, e)) : n._content);
}
const yc = /* @__PURE__ */ ge.define({ combine: (n) => n.join(" ") }), hO = /* @__PURE__ */ ge.define({ combine: (n) => n.indexOf(!0) > -1 }), fO = /* @__PURE__ */ os.newName(), fv = /* @__PURE__ */ os.newName(), uv = /* @__PURE__ */ os.newName(), Ov = { "&light": "." + fv, "&dark": "." + uv };
function uO(n, e, t) {
  return new os(e, {
    finish(i) {
      return /&/.test(i) ? i.replace(/&\w*/, (r) => {
        if (r == "&")
          return n;
        if (!t || !t[r])
          throw new RangeError(`Unsupported selector: ${r}`);
        return t[r];
      }) : n + " " + i;
    }
  });
}
const x2 = /* @__PURE__ */ uO("." + fO, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0,
    overflowAnchor: "none"
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#ddd"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0,
    zIndex: 300
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace": {
    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",
    backgroundPosition: "center"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, Ov), P2 = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, au = pe.ie && pe.ie_version <= 11;
class w2 {
  constructor(e) {
    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new c_(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((t) => {
      for (let i of t)
        this.queue.push(i);
      (pe.ie && pe.ie_version <= 11 || pe.ios && e.composing) && t.some((i) => i.type == "childList" && i.removedNodes.length || i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), window.EditContext && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn't support inverted selections in edit context (#1392)
    !(pe.chrome && pe.chrome_version < 126) && (this.editContext = new _2(e), e.state.facet(Xr) && (e.contentDOM.editContext = this.editContext.editContext)), au && (this.onCharData = (t) => {
      this.queue.push({
        target: t.target,
        type: "characterData",
        oldValue: t.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var t;
      ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((t) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((t) => {
      t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint(e) {
    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500));
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, i) => t != e[i]))) {
      this.gapIntersection.disconnect();
      for (let t of e)
        this.gapIntersection.observe(t);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let t = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: i } = this, r = this.selectionRange;
    if (i.state.facet(Xr) ? i.root.activeElement != this.dom : !Uc(this.dom, r))
      return;
    let l = r.anchorNode && i.docView.nearest(r.anchorNode);
    if (l && l.ignoreEvent(e)) {
      t || (this.selectionChanged = !1);
      return;
    }
    (pe.ie && pe.ie_version <= 11 || pe.android && pe.chrome) && !i.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    r.focusNode && Co(r.focusNode, r.focusOffset, r.anchorNode, r.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, t = qo(e.root);
    if (!t)
      return !1;
    let i = pe.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && k2(this.view, t) || t;
    if (!i || this.selectionRange.eq(i))
      return !1;
    let r = Uc(this.dom, i);
    return r && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && f_(this.dom, i) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(i), r && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, t) {
    this.selectionRange.set(e.node, e.offset, t.node, t.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, t = null;
    for (let i = this.dom; i; )
      if (i.nodeType == 1)
        !t && e < this.scrollTargets.length && this.scrollTargets[e] == i ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(i), i = i.assignedSlot || i.parentNode;
      else if (i.nodeType == 11)
        i = i.host;
      else
        break;
    if (e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t) {
      for (let i of this.scrollTargets)
        i.removeEventListener("scroll", this.onScroll);
      for (let i of this.scrollTargets = t)
        i.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, P2), au && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), au && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, t) {
    var i;
    if (!this.delayedAndroidKey) {
      let r = () => {
        let l = this.delayedAndroidKey;
        l && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = l.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && l.force && vl(this.dom, l.key, l.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(r);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: t,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((i = this.delayedAndroidKey) === null || i === void 0) && i.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let t = -1, i = -1, r = !1;
    for (let l of e) {
      let o = this.readMutation(l);
      o && (o.typeOver && (r = !0), t == -1 ? { from: t, to: i } = o : (t = Math.min(o.from, t), i = Math.max(o.to, i)));
    }
    return { from: t, to: i, typeOver: r };
  }
  readChange() {
    let { from: e, to: t, typeOver: i } = this.processRecords(), r = this.selectionChanged && Uc(this.dom, this.selectionRange);
    if (e < 0 && !r)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let l = new z_(this.view, e, t, i);
    return this.view.docView.domChanged = { newSel: l.newSel ? l.newSel.main : null }, l;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let t = this.readChange();
    if (!t)
      return this.view.requestMeasure(), !1;
    let i = this.view.state, r = tv(this.view, t);
    return this.view.state == i && (t.domChanged || t.newSel && !t.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), r;
  }
  readMutation(e) {
    let t = this.view.docView.nearest(e.target);
    if (!t || t.ignoreMutation(e))
      return null;
    if (t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList") {
      let i = hm(t, e.previousSibling || e.target.previousSibling, -1), r = hm(t, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: i ? t.posAfter(i) : t.posAtStart,
        to: r ? t.posBefore(r) : t.posAtEnd,
        typeOver: !1
      };
    } else return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  update(e) {
    this.editContext && (this.editContext.update(e), e.startState.facet(Xr) != e.state.facet(Xr) && (e.view.contentDOM.editContext = e.state.facet(Xr) ? this.editContext.editContext : null));
  }
  destroy() {
    var e, t, i;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (i = this.resizeScroll) === null || i === void 0 || i.disconnect();
    for (let r of this.scrollTargets)
      r.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());
  }
}
function hm(n, e, t) {
  for (; e; ) {
    let i = Pt.get(e);
    if (i && i.parent == n)
      return i;
    let r = e.parentNode;
    e = r != n.dom ? r : t > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function fm(n, e) {
  let t = e.startContainer, i = e.startOffset, r = e.endContainer, l = e.endOffset, o = n.docView.domAtPos(n.state.selection.main.anchor);
  return Co(o.node, o.offset, r, l) && ([t, i, r, l] = [r, l, t, i]), { anchorNode: t, anchorOffset: i, focusNode: r, focusOffset: l };
}
function k2(n, e) {
  if (e.getComposedRanges) {
    let r = e.getComposedRanges(n.root)[0];
    if (r)
      return fm(n, r);
  }
  let t = null;
  function i(r) {
    r.preventDefault(), r.stopImmediatePropagation(), t = r.getTargetRanges()[0];
  }
  return n.contentDOM.addEventListener("beforeinput", i, !0), n.dom.ownerDocument.execCommand("indent"), n.contentDOM.removeEventListener("beforeinput", i, !0), t ? fm(n, t) : null;
}
class _2 {
  constructor(e) {
    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);
    let t = this.editContext = new window.EditContext({
      text: e.state.doc.sliceString(this.from, this.to),
      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),
      selectionEnd: this.toContextPos(e.state.selection.main.head)
    });
    this.handlers.textupdate = (i) => {
      let r = e.state.selection.main, { anchor: l, head: o } = r, c = this.toEditorPos(i.updateRangeStart), f = this.toEditorPos(i.updateRangeEnd);
      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: i.updateRangeStart, editorBase: c, drifted: !1 });
      let u = { from: c, to: f, insert: ot.of(i.text.split(`
`)) };
      if (u.from == this.from && l < this.from ? u.from = l : u.to == this.to && l > this.to && (u.to = l), u.from == u.to && !u.insert.length) {
        let O = F.single(this.toEditorPos(i.selectionStart), this.toEditorPos(i.selectionEnd));
        O.main.eq(r) || e.dispatch({ selection: O, userEvent: "select" });
        return;
      }
      if ((pe.mac || pe.android) && u.from == o - 1 && /^\. ?$/.test(i.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (u = { from: c, to: f, insert: ot.of([i.text.replace(".", " ")]) }), this.pendingContextChange = u, !e.state.readOnly) {
        let O = this.to - this.from + (u.to - u.from + u.insert.length);
        NO(e, u, F.single(this.toEditorPos(i.selectionStart, O), this.toEditorPos(i.selectionEnd, O)));
      }
      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));
    }, this.handlers.characterboundsupdate = (i) => {
      let r = [], l = null;
      for (let o = this.toEditorPos(i.rangeStart), c = this.toEditorPos(i.rangeEnd); o < c; o++) {
        let f = e.coordsForChar(o);
        l = f && new DOMRect(f.left, f.top, f.right - f.left, f.bottom - f.top) || l || new DOMRect(), r.push(l);
      }
      t.updateCharacterBounds(i.rangeStart, r);
    }, this.handlers.textformatupdate = (i) => {
      let r = [];
      for (let l of i.getTextFormats()) {
        let o = l.underlineStyle, c = l.underlineThickness;
        if (o != "None" && c != "None") {
          let f = this.toEditorPos(l.rangeStart), u = this.toEditorPos(l.rangeEnd);
          if (f < u) {
            let O = `text-decoration: underline ${o == "Dashed" ? "dashed " : o == "Squiggle" ? "wavy " : ""}${c == "Thin" ? 1 : 2}px`;
            r.push(_e.mark({ attributes: { style: O } }).range(f, u));
          }
        }
      }
      e.dispatch({ effects: N1.of(_e.set(r)) });
    }, this.handlers.compositionstart = () => {
      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);
    }, this.handlers.compositionend = () => {
      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {
        let { drifted: i } = this.composing;
        this.composing = null, i && this.reset(e.state);
      }
    };
    for (let i in this.handlers)
      t.addEventListener(i, this.handlers[i]);
    this.measureReq = { read: (i) => {
      this.editContext.updateControlBounds(i.contentDOM.getBoundingClientRect());
      let r = qo(i.root);
      r && r.rangeCount && this.editContext.updateSelectionBounds(r.getRangeAt(0).getBoundingClientRect());
    } };
  }
  applyEdits(e) {
    let t = 0, i = !1, r = this.pendingContextChange;
    return e.changes.iterChanges((l, o, c, f, u) => {
      if (i)
        return;
      let O = u.length - (o - l);
      if (r && o >= r.to)
        if (r.from == l && r.to == o && r.insert.eq(u)) {
          r = this.pendingContextChange = null, t += O, this.to += O;
          return;
        } else
          r = null, this.revertPending(e.state);
      if (l += t, o += t, o <= this.from)
        this.from += O, this.to += O;
      else if (l < this.to) {
        if (l < this.from || o > this.to || this.to - this.from + u.length > 3e4) {
          i = !0;
          return;
        }
        this.editContext.updateText(this.toContextPos(l), this.toContextPos(o), u.toString()), this.to += O;
      }
      t += O;
    }), r && !i && this.revertPending(e.state), !i;
  }
  update(e) {
    let t = this.pendingContextChange;
    this.composing && (this.composing.drifted || e.transactions.some((i) => !i.isUserEvent("input.type") && i.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || t) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);
  }
  resetRange(e) {
    let { head: t } = e.selection.main;
    this.from = Math.max(
      0,
      t - 1e4
      /* CxVp.Margin */
    ), this.to = Math.min(
      e.doc.length,
      t + 1e4
      /* CxVp.Margin */
    );
  }
  reset(e) {
    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);
  }
  revertPending(e) {
    let t = this.pendingContextChange;
    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(t.from), this.toContextPos(t.from + t.insert.length), e.doc.sliceString(t.from, t.to));
  }
  setSelection(e) {
    let { main: t } = e.selection, i = this.toContextPos(Math.max(this.from, Math.min(this.to, t.anchor))), r = this.toContextPos(t.head);
    (this.editContext.selectionStart != i || this.editContext.selectionEnd != r) && this.editContext.updateSelection(i, r);
  }
  rangeIsValid(e) {
    let { head: t } = e.selection.main;
    return !(this.from > 0 && t - this.from < 500 || this.to < e.doc.length && this.to - t < 500 || this.to - this.from > 1e4 * 3);
  }
  toEditorPos(e, t = this.to - this.from) {
    e = Math.min(e, t);
    let i = this.composing;
    return i && i.drifted ? i.editorBase + (e - i.contextBase) : e + this.from;
  }
  toContextPos(e) {
    let t = this.composing;
    return t && t.drifted ? t.contextBase + (e - t.editorBase) : e - this.from;
  }
  destroy() {
    for (let e in this.handlers)
      this.editContext.removeEventListener(e, this.handlers[e]);
  }
}
class ae {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    var t;
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: i } = e;
    this.dispatchTransactions = e.dispatchTransactions || i && ((r) => r.forEach((l) => i(l, this))) || ((r) => this.update(r)), this.dispatch = this.dispatch.bind(this), this._root = e.root || h_(e.parent) || document, this.viewState = new am(e.state || it.create(e)), e.scrollTo && e.scrollTo.is(gc) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(Qo).map((r) => new ru(r));
    for (let r of this.plugins)
      r.update(this);
    this.observer = new w2(this), this.inputState = new F_(this), this.inputState.ensureHandlers(this.plugins), this.docView = new Dg(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((t = document.fonts) === null || t === void 0) && t.ready && document.fonts.ready.then(() => this.requestMeasure());
  }
  dispatch(...e) {
    let t = e.length == 1 && e[0] instanceof Nt ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(t, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let t = !1, i = !1, r, l = this.state;
    for (let g of e) {
      if (g.startState != l)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      l = g.state;
    }
    if (this.destroyed) {
      this.viewState.state = l;
      return;
    }
    let o = this.hasFocus, c = 0, f = null;
    e.some((g) => g.annotation(ov)) ? (this.inputState.notifiedFocused = o, c = 1) : o != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = o, f = av(l, o), f || (c = 1));
    let u = this.observer.delayedAndroidKey, O = null;
    if (u ? (this.observer.clearDelayedAndroidKey(), O = this.observer.readChange(), (O && !this.state.doc.eq(l.doc) || !this.state.selection.eq(l.selection)) && (O = null)) : this.observer.clear(), l.facet(it.phrases) != this.state.facet(it.phrases))
      return this.setState(l);
    r = ih.create(this, l, e), r.flags |= c;
    let p = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let g of e) {
        if (p && (p = p.map(g.changes)), g.scrollIntoView) {
          let { main: b } = g.state.selection;
          p = new bl(b.empty ? b : F.cursor(b.head, b.head > b.anchor ? -1 : 1));
        }
        for (let b of g.effects)
          b.is(gc) && (p = b.value.clip(this.state));
      }
      this.viewState.update(r, p), this.bidiCache = rh.update(this.bidiCache, r.changes), r.empty || (this.updatePlugins(r), this.inputState.update(r)), t = this.docView.update(r), this.state.facet(xo) != this.styleModules && this.mountStyles(), i = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(t, e.some((g) => g.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (r.startState.facet(yc) != r.state.facet(yc) && (this.viewState.mustMeasureContent = !0), (t || i || p || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), t && this.docViewUpdate(), !r.empty)
      for (let g of this.state.facet(lO))
        try {
          g(r);
        } catch (b) {
          Bi(this.state, b, "update listener");
        }
    (f || O) && Promise.resolve().then(() => {
      f && this.state == f.startState && this.dispatch(f), O && !tv(this, O) && u.force && vl(this.contentDOM, u.key, u.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let t = this.hasFocus;
    try {
      for (let i of this.plugins)
        i.destroy(this);
      this.viewState = new am(e), this.plugins = e.facet(Qo).map((i) => new ru(i)), this.pluginMap.clear();
      for (let i of this.plugins)
        i.update(this);
      this.docView.destroy(), this.docView = new Dg(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    t && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let t = e.startState.facet(Qo), i = e.state.facet(Qo);
    if (t != i) {
      let r = [];
      for (let l of i) {
        let o = t.indexOf(l);
        if (o < 0)
          r.push(new ru(l));
        else {
          let c = this.plugins[o];
          c.mustUpdate = e, r.push(c);
        }
      }
      for (let l of this.plugins)
        l.mustUpdate != e && l.destroy(this);
      this.plugins = r, this.pluginMap.clear();
    } else
      for (let r of this.plugins)
        r.mustUpdate = e;
    for (let r = 0; r < this.plugins.length; r++)
      this.plugins[r].update(this);
    t != i && this.inputState.ensureHandlers(this.plugins);
  }
  docViewUpdate() {
    for (let e of this.plugins) {
      let t = e.value;
      if (t && t.docViewUpdate)
        try {
          t.docViewUpdate(this);
        } catch (i) {
          Bi(this.state, i, "doc view update listener");
        }
    }
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let t = null, i = this.scrollDOM, r = i.scrollTop * this.scaleY, { scrollAnchorPos: l, scrollAnchorHeight: o } = this.viewState;
    Math.abs(r - this.viewState.scrollTop) > 1 && (o = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let c = 0; ; c++) {
        if (o < 0)
          if (y1(i))
            l = -1, o = this.viewState.heightMap.height;
          else {
            let b = this.viewState.scrollAnchorAt(r);
            l = b.from, o = b.top;
          }
        this.updateState = 1;
        let f = this.viewState.measure(this);
        if (!f && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (c > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let u = [];
        f & 4 || ([this.measureRequests, u] = [u, this.measureRequests]);
        let O = u.map((b) => {
          try {
            return b.read(this);
          } catch ($) {
            return Bi(this.state, $), um;
          }
        }), p = ih.create(this, this.state, []), g = !1;
        p.flags |= f, t ? t.flags |= f : t = p, this.updateState = 2, p.empty || (this.updatePlugins(p), this.inputState.update(p), this.updateAttrs(), g = this.docView.update(p), g && this.docViewUpdate());
        for (let b = 0; b < u.length; b++)
          if (O[b] != um)
            try {
              let $ = u[b];
              $.write && $.write(O[b], this);
            } catch ($) {
              Bi(this.state, $);
            }
        if (g && this.docView.updateSelection(!0), !p.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, o = -1;
              continue;
            } else {
              let $ = (l < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(l).top) - o;
              if ($ > 1 || $ < -1) {
                r = r + $, i.scrollTop = r / this.scaleY, o = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (t && !t.empty)
      for (let c of this.state.facet(lO))
        c(t);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return fO + " " + (this.state.facet(hO) ? uv : fv) + " " + this.state.facet(yc);
  }
  updateAttrs() {
    let e = Om(this, F1, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), t = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      writingsuggestions: "false",
      translate: "no",
      contenteditable: this.state.facet(Xr) ? "true" : "false",
      class: "cm-content",
      style: `${pe.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (t["aria-readonly"] = "true"), Om(this, jO, t);
    let i = this.observer.ignore(() => {
      let r = tO(this.contentDOM, this.contentAttrs, t), l = tO(this.dom, this.editorAttrs, e);
      return r || l;
    });
    return this.editorAttrs = e, this.contentAttrs = t, i;
  }
  showAnnouncements(e) {
    let t = !0;
    for (let i of e)
      for (let r of i.effects)
        if (r.is(ae.announce)) {
          t && (this.announceDOM.textContent = ""), t = !1;
          let l = this.announceDOM.appendChild(document.createElement("div"));
          l.textContent = r.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(xo);
    let e = this.state.facet(ae.cspNonce);
    os.mount(this.root, this.styleModules.concat(x2).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let t = 0; t < this.measureRequests.length; t++)
          if (this.measureRequests[t].key === e.key) {
            this.measureRequests[t] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let t = this.pluginMap.get(e);
    return (t === void 0 || t && t.spec != e) && this.pluginMap.set(e, t = this.plugins.find((i) => i.spec == e) || null), t && t.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, t, i) {
    return lu(this, e, Ng(this, e, t, i));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, t) {
    return lu(this, e, Ng(this, e, t, (i) => L_(this, e.head, i)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, t) {
    let i = this.bidiSpans(e), r = this.textDirectionAt(e.from), l = i[t ? i.length - 1 : 0];
    return F.cursor(l.side(t, r) + e.from, l.forward(!t, r) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, t, i = !0) {
    return V_(this, e, t, i);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, t, i) {
    return lu(this, e, U_(this, e, t, i));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, t = 0) {
    return this.docView.posFromDOM(e, t);
  }
  posAtCoords(e, t = !0) {
    return this.readMeasured(), ev(this, e, t);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, t = 1) {
    this.readMeasured();
    let i = this.docView.coordsAt(e, t);
    if (!i || i.left == i.right)
      return i;
    let r = this.state.doc.lineAt(e), l = this.bidiSpans(r), o = l[ss.find(l, e - r.from, -1, t)];
    return Wh(i, o.dir == Tt.LTR == t > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(j1) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > W2)
      return E1(e.length);
    let t = this.textDirectionAt(e.from), i;
    for (let l of this.bidiCache)
      if (l.from == e.from && l.dir == t && (l.fresh || M1(l.isolates, i = Yg(this, e))))
        return l.order;
    i || (i = Yg(this, e));
    let r = Q_(e.text, t, i);
    return this.bidiCache.push(new rh(e.from, e.to, t, i, !0, r)), r;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || pe.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      S1(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    this.root.activeElement == this.contentDOM && this.contentDOM.blur();
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, t = {}) {
    return gc.of(new bl(typeof e == "number" ? F.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: t } = this.scrollDOM, i = this.viewState.scrollAnchorAt(e);
    return gc.of(new bl(F.cursor(i.from), "start", "start", i.top - e, t, !0));
  }
  /**
  Enable or disable tab-focus mode, which disables key bindings
  for Tab and Shift-Tab, letting the browser's default
  focus-changing behavior go through instead. This is useful to
  prevent trapping keyboard users in your editor.
  
  Without argument, this toggles the mode. With a boolean, it
  enables (true) or disables it (false). Given a number, it
  temporarily enables the mode until that number of milliseconds
  have passed or another non-Tab key is pressed.
  */
  setTabFocusMode(e) {
    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return Ft.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return Ft.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, t) {
    let i = os.newName(), r = [yc.of(i), xo.of(uO(`.${i}`, e))];
    return t && t.dark && r.push(hO.of(!0)), r;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return ps.lowest(xo.of(uO("." + fO, e, Ov)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var t;
    let i = e.querySelector(".cm-content"), r = i && Pt.get(i) || Pt.get(e);
    return ((t = r == null ? void 0 : r.rootView) === null || t === void 0 ? void 0 : t.view) || null;
  }
}
ae.styleModule = xo;
ae.inputHandler = D1;
ae.clipboardInputFilter = DO;
ae.clipboardOutputFilter = zO;
ae.scrollHandler = I1;
ae.focusChangeEffect = z1;
ae.perLineTextDirection = j1;
ae.exceptionSink = Y1;
ae.updateListener = lO;
ae.editable = Xr;
ae.mouseSelectionStyle = U1;
ae.dragMovesSelection = L1;
ae.clickAddsSelectionRange = V1;
ae.decorations = Lo;
ae.outerDecorations = G1;
ae.atomicRanges = BO;
ae.bidiIsolatedRanges = H1;
ae.scrollMargins = K1;
ae.darkTheme = hO;
ae.cspNonce = /* @__PURE__ */ ge.define({ combine: (n) => n.length ? n[0] : "" });
ae.contentAttributes = jO;
ae.editorAttributes = F1;
ae.lineWrapping = /* @__PURE__ */ ae.contentAttributes.of({ class: "cm-lineWrapping" });
ae.announce = /* @__PURE__ */ Ye.define();
const W2 = 4096, um = {};
class rh {
  constructor(e, t, i, r, l, o) {
    this.from = e, this.to = t, this.dir = i, this.isolates = r, this.fresh = l, this.order = o;
  }
  static update(e, t) {
    if (t.empty && !e.some((l) => l.fresh))
      return e;
    let i = [], r = e.length ? e[e.length - 1].dir : Tt.LTR;
    for (let l = Math.max(0, e.length - 10); l < e.length; l++) {
      let o = e[l];
      o.dir == r && !t.touchesRange(o.from, o.to) && i.push(new rh(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.isolates, !1, o.order));
    }
    return i;
  }
}
function Om(n, e, t) {
  for (let i = n.state.facet(e), r = i.length - 1; r >= 0; r--) {
    let l = i[r], o = typeof l == "function" ? l(n) : l;
    o && eO(o, t);
  }
  return t;
}
const Z2 = pe.mac ? "mac" : pe.windows ? "win" : pe.linux ? "linux" : "key";
function T2(n, e) {
  const t = n.split(/-(?!$)/);
  let i = t[t.length - 1];
  i == "Space" && (i = " ");
  let r, l, o, c;
  for (let f = 0; f < t.length - 1; ++f) {
    const u = t[f];
    if (/^(cmd|meta|m)$/i.test(u))
      c = !0;
    else if (/^a(lt)?$/i.test(u))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(u))
      l = !0;
    else if (/^s(hift)?$/i.test(u))
      o = !0;
    else if (/^mod$/i.test(u))
      e == "mac" ? c = !0 : l = !0;
    else
      throw new Error("Unrecognized modifier name: " + u);
  }
  return r && (i = "Alt-" + i), l && (i = "Ctrl-" + i), c && (i = "Meta-" + i), o && (i = "Shift-" + i), i;
}
function Qc(n, e, t) {
  return e.altKey && (n = "Alt-" + n), e.ctrlKey && (n = "Ctrl-" + n), e.metaKey && (n = "Meta-" + n), t !== !1 && e.shiftKey && (n = "Shift-" + n), n;
}
const C2 = /* @__PURE__ */ ps.default(/* @__PURE__ */ ae.domEventHandlers({
  keydown(n, e) {
    return pv(dv(e.state), n, e, "editor");
  }
})), na = /* @__PURE__ */ ge.define({ enables: C2 }), dm = /* @__PURE__ */ new WeakMap();
function dv(n) {
  let e = n.facet(na), t = dm.get(e);
  return t || dm.set(e, t = A2(e.reduce((i, r) => i.concat(r), []))), t;
}
function R2(n, e, t) {
  return pv(dv(n.state), e, n, t);
}
let is = null;
const X2 = 4e3;
function A2(n, e = Z2) {
  let t = /* @__PURE__ */ Object.create(null), i = /* @__PURE__ */ Object.create(null), r = (o, c) => {
    let f = i[o];
    if (f == null)
      i[o] = c;
    else if (f != c)
      throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
  }, l = (o, c, f, u, O) => {
    var p, g;
    let b = t[o] || (t[o] = /* @__PURE__ */ Object.create(null)), $ = c.split(/ (?!$)/).map((k) => T2(k, e));
    for (let k = 1; k < $.length; k++) {
      let R = $.slice(0, k).join(" ");
      r(R, !0), b[R] || (b[R] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(w) => {
          let Z = is = { view: w, prefix: R, scope: o };
          return setTimeout(() => {
            is == Z && (is = null);
          }, X2), !0;
        }]
      });
    }
    let x = $.join(" ");
    r(x, !1);
    let P = b[x] || (b[x] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((g = (p = b._any) === null || p === void 0 ? void 0 : p.run) === null || g === void 0 ? void 0 : g.slice()) || []
    });
    f && P.run.push(f), u && (P.preventDefault = !0), O && (P.stopPropagation = !0);
  };
  for (let o of n) {
    let c = o.scope ? o.scope.split(" ") : ["editor"];
    if (o.any)
      for (let u of c) {
        let O = t[u] || (t[u] = /* @__PURE__ */ Object.create(null));
        O._any || (O._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        let { any: p } = o;
        for (let g in O)
          O[g].run.push((b) => p(b, OO));
      }
    let f = o[e] || o.key;
    if (f)
      for (let u of c)
        l(u, f, o.run, o.preventDefault, o.stopPropagation), o.shift && l(u, "Shift-" + f, o.shift, o.preventDefault, o.stopPropagation);
  }
  return t;
}
let OO = null;
function pv(n, e, t, i) {
  OO = e;
  let r = s_(e), l = Di(r, 0), o = rr(l) == r.length && r != " ", c = "", f = !1, u = !1, O = !1;
  is && is.view == t && is.scope == i && (c = is.prefix + " ", nv.indexOf(e.keyCode) < 0 && (u = !0, is = null));
  let p = /* @__PURE__ */ new Set(), g = (P) => {
    if (P) {
      for (let k of P.run)
        if (!p.has(k) && (p.add(k), k(t)))
          return P.stopPropagation && (O = !0), !0;
      P.preventDefault && (P.stopPropagation && (O = !0), u = !0);
    }
    return !1;
  }, b = n[i], $, x;
  return b && (g(b[c + Qc(r, e, !o)]) ? f = !0 : o && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(pe.windows && e.ctrlKey && e.altKey) && ($ = as[e.keyCode]) && $ != r ? (g(b[c + Qc($, e, !0)]) || e.shiftKey && (x = Eo[e.keyCode]) != r && x != $ && g(b[c + Qc(x, e, !1)])) && (f = !0) : o && e.shiftKey && g(b[c + Qc(r, e, !0)]) && (f = !0), !f && g(b._any) && (f = !0)), u && (f = !0), f && O && e.stopPropagation(), OO = null, f;
}
class ra {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, t, i, r, l) {
    this.className = e, this.left = t, this.top = i, this.width = r, this.height = l;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, t) {
    return t.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, t, i) {
    if (i.empty) {
      let r = e.coordsAtPos(i.head, i.assoc || 1);
      if (!r)
        return [];
      let l = gv(e);
      return [new ra(t, r.left - l.left, r.top - l.top, null, r.bottom - r.top)];
    } else
      return M2(e, t, i);
  }
}
function gv(n) {
  let e = n.scrollDOM.getBoundingClientRect();
  return { left: (n.textDirection == Tt.LTR ? e.left : e.right - n.scrollDOM.clientWidth * n.scaleX) - n.scrollDOM.scrollLeft * n.scaleX, top: e.top - n.scrollDOM.scrollTop * n.scaleY };
}
function pm(n, e, t, i) {
  let r = n.coordsAtPos(e, t * 2);
  if (!r)
    return i;
  let l = n.dom.getBoundingClientRect(), o = (r.top + r.bottom) / 2, c = n.posAtCoords({ x: l.left + 1, y: o }), f = n.posAtCoords({ x: l.right - 1, y: o });
  return c == null || f == null ? i : { from: Math.max(i.from, Math.min(c, f)), to: Math.min(i.to, Math.max(c, f)) };
}
function M2(n, e, t) {
  if (t.to <= n.viewport.from || t.from >= n.viewport.to)
    return [];
  let i = Math.max(t.from, n.viewport.from), r = Math.min(t.to, n.viewport.to), l = n.textDirection == Tt.LTR, o = n.contentDOM, c = o.getBoundingClientRect(), f = gv(n), u = o.querySelector(".cm-line"), O = u && window.getComputedStyle(u), p = c.left + (O ? parseInt(O.paddingLeft) + Math.min(0, parseInt(O.textIndent)) : 0), g = c.right - (O ? parseInt(O.paddingRight) : 0), b = aO(n, i), $ = aO(n, r), x = b.type == Ti.Text ? b : null, P = $.type == Ti.Text ? $ : null;
  if (x && (n.lineWrapping || b.widgetLineBreaks) && (x = pm(n, i, 1, x)), P && (n.lineWrapping || $.widgetLineBreaks) && (P = pm(n, r, -1, P)), x && P && x.from == P.from && x.to == P.to)
    return R(w(t.from, t.to, x));
  {
    let T = x ? w(t.from, null, x) : Z(b, !1), E = P ? w(null, t.to, P) : Z($, !0), M = [];
    return (x || b).to < (P || $).from - (x && P ? 1 : 0) || b.widgetLineBreaks > 1 && T.bottom + n.defaultLineHeight / 2 < E.top ? M.push(k(p, T.bottom, g, E.top)) : T.bottom < E.top && n.elementAtHeight((T.bottom + E.top) / 2).type == Ti.Text && (T.bottom = E.top = (T.bottom + E.top) / 2), R(T).concat(M).concat(R(E));
  }
  function k(T, E, M, D) {
    return new ra(e, T - f.left, E - f.top, M - T, D - E);
  }
  function R({ top: T, bottom: E, horizontal: M }) {
    let D = [];
    for (let V = 0; V < M.length; V += 2)
      D.push(k(M[V], T, M[V + 1], E));
    return D;
  }
  function w(T, E, M) {
    let D = 1e9, V = -1e9, I = [];
    function U(te, ue, Ae, We, we) {
      let xe = n.coordsAtPos(te, te == M.to ? -2 : 2), me = n.coordsAtPos(Ae, Ae == M.from ? 2 : -2);
      !xe || !me || (D = Math.min(xe.top, me.top, D), V = Math.max(xe.bottom, me.bottom, V), we == Tt.LTR ? I.push(l && ue ? p : xe.left, l && We ? g : me.right) : I.push(!l && We ? p : me.left, !l && ue ? g : xe.right));
    }
    let Y = T ?? M.from, q = E ?? M.to;
    for (let te of n.visibleRanges)
      if (te.to > Y && te.from < q)
        for (let ue = Math.max(te.from, Y), Ae = Math.min(te.to, q); ; ) {
          let We = n.state.doc.lineAt(ue);
          for (let we of n.bidiSpans(We)) {
            let xe = we.from + We.from, me = we.to + We.from;
            if (xe >= Ae)
              break;
            me > ue && U(Math.max(xe, ue), T == null && xe <= Y, Math.min(me, Ae), E == null && me >= q, we.dir);
          }
          if (ue = We.to + 1, ue >= Ae)
            break;
        }
    return I.length == 0 && U(Y, T == null, q, E == null, n.textDirection), { top: D, bottom: V, horizontal: I };
  }
  function Z(T, E) {
    let M = c.top + (E ? T.top : T.bottom);
    return { top: M, bottom: M, horizontal: [] };
  }
}
function E2(n, e) {
  return n.constructor == e.constructor && n.eq(e);
}
class q2 {
  constructor(e, t) {
    this.view = e, this.layer = t, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), t.above && this.dom.classList.add("cm-layer-above"), t.class && this.dom.classList.add(t.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), t.mount && t.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(jc) != e.state.facet(jc) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  docViewUpdate(e) {
    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
  }
  setOrder(e) {
    let t = 0, i = e.facet(jc);
    for (; t < i.length && i[t] != this.layer; )
      t++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: t } = this.view;
    (e != this.scaleX || t != this.scaleY) && (this.scaleX = e, this.scaleY = t, this.dom.style.transform = `scale(${1 / e}, ${1 / t})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((t, i) => !E2(t, this.drawn[i]))) {
      let t = this.dom.firstChild, i = 0;
      for (let r of e)
        r.update && t && r.constructor && this.drawn[i].constructor && r.update(t, this.drawn[i]) ? (t = t.nextSibling, i++) : this.dom.insertBefore(r.draw(), t);
      for (; t; ) {
        let r = t.nextSibling;
        t.remove(), t = r;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const jc = /* @__PURE__ */ ge.define();
function mv(n) {
  return [
    Ft.define((e) => new q2(e, n)),
    jc.of(n)
  ];
}
const vv = !(pe.ios && pe.webkit && pe.webkit_version < 534), Uo = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, t) => Math.min(e, t),
      drawRangeCursor: (e, t) => e || t
    });
  }
});
function V2(n = {}) {
  return [
    Uo.of(n),
    L2,
    U2,
    Y2,
    B1.of(!0)
  ];
}
function bv(n) {
  return n.startState.facet(Uo) != n.state.facet(Uo);
}
const L2 = /* @__PURE__ */ mv({
  above: !0,
  markers(n) {
    let { state: e } = n, t = e.facet(Uo), i = [];
    for (let r of e.selection.ranges) {
      let l = r == e.selection.main;
      if (r.empty ? !l || vv : t.drawRangeCursor) {
        let o = l ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", c = r.empty ? r : F.cursor(r.head, r.head > r.anchor ? -1 : 1);
        for (let f of ra.forRange(n, o, c))
          i.push(f);
      }
    }
    return i;
  },
  update(n, e) {
    n.transactions.some((i) => i.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let t = bv(n);
    return t && gm(n.state, e), n.docChanged || n.selectionSet || t;
  },
  mount(n, e) {
    gm(e.state, n);
  },
  class: "cm-cursorLayer"
});
function gm(n, e) {
  e.style.animationDuration = n.facet(Uo).cursorBlinkRate + "ms";
}
const U2 = /* @__PURE__ */ mv({
  above: !1,
  markers(n) {
    return n.state.selection.ranges.map((e) => e.empty ? [] : ra.forRange(n, "cm-selectionBackground", e)).reduce((e, t) => e.concat(t));
  },
  update(n, e) {
    return n.docChanged || n.selectionSet || n.viewportChanged || bv(n);
  },
  class: "cm-selectionLayer"
}), dO = {
  ".cm-line": {
    "& ::selection, &::selection": { backgroundColor: "transparent !important" }
  },
  ".cm-content": {
    "& :focus": {
      caretColor: "initial !important",
      "&::selection, & ::selection": {
        backgroundColor: "Highlight !important"
      }
    }
  }
};
vv && (dO[".cm-line"].caretColor = dO[".cm-content"].caretColor = "transparent !important");
const Y2 = /* @__PURE__ */ ps.highest(/* @__PURE__ */ ae.theme(dO)), Sv = /* @__PURE__ */ Ye.define({
  map(n, e) {
    return n == null ? null : e.mapPos(n);
  }
}), ko = /* @__PURE__ */ ti.define({
  create() {
    return null;
  },
  update(n, e) {
    return n != null && (n = e.changes.mapPos(n)), e.effects.reduce((t, i) => i.is(Sv) ? i.value : t, n);
  }
}), D2 = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.view = n, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(n) {
    var e;
    let t = n.state.field(ko);
    t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (n.startState.field(ko) != t || n.docChanged || n.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: n } = this, e = n.state.field(ko), t = e != null && n.coordsAtPos(e);
    if (!t)
      return null;
    let i = n.scrollDOM.getBoundingClientRect();
    return {
      left: t.left - i.left + n.scrollDOM.scrollLeft * n.scaleX,
      top: t.top - i.top + n.scrollDOM.scrollTop * n.scaleY,
      height: t.bottom - t.top
    };
  }
  drawCursor(n) {
    if (this.cursor) {
      let { scaleX: e, scaleY: t } = this.view;
      n ? (this.cursor.style.left = n.left / e + "px", this.cursor.style.top = n.top / t + "px", this.cursor.style.height = n.height / t + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(n) {
    this.view.state.field(ko) != n && this.view.dispatch({ effects: Sv.of(n) });
  }
}, {
  eventObservers: {
    dragover(n) {
      this.setDropPos(this.view.posAtCoords({ x: n.clientX, y: n.clientY }));
    },
    dragleave(n) {
      (n.target == this.view.contentDOM || !this.view.contentDOM.contains(n.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function z2() {
  return [ko, D2];
}
function mm(n, e, t, i, r) {
  e.lastIndex = 0;
  for (let l = n.iterRange(t, i), o = t, c; !l.next().done; o += l.value.length)
    if (!l.lineBreak)
      for (; c = e.exec(l.value); )
        r(o + c.index, c);
}
function j2(n, e) {
  let t = n.visibleRanges;
  if (t.length == 1 && t[0].from == n.viewport.from && t[0].to == n.viewport.to)
    return t;
  let i = [];
  for (let { from: r, to: l } of t)
    r = Math.max(n.state.doc.lineAt(r).from, r - e), l = Math.min(n.state.doc.lineAt(l).to, l + e), i.length && i[i.length - 1].to >= r ? i[i.length - 1].to = l : i.push({ from: r, to: l });
  return i;
}
class B2 {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: t, decoration: i, decorate: r, boundary: l, maxLength: o = 1e3 } = e;
    if (!t.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = t, r)
      this.addMatch = (c, f, u, O) => r(O, u, u + c[0].length, c, f);
    else if (typeof i == "function")
      this.addMatch = (c, f, u, O) => {
        let p = i(c, f, u);
        p && O(u, u + c[0].length, p);
      };
    else if (i)
      this.addMatch = (c, f, u, O) => O(u, u + c[0].length, i);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = l, this.maxLength = o;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let t = new Er(), i = t.add.bind(t);
    for (let { from: r, to: l } of j2(e, this.maxLength))
      mm(e.state.doc, this.regexp, r, l, (o, c) => this.addMatch(c, e, o, i));
    return t.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, t) {
    let i = 1e9, r = -1;
    return e.docChanged && e.changes.iterChanges((l, o, c, f) => {
      f >= e.view.viewport.from && c <= e.view.viewport.to && (i = Math.min(c, i), r = Math.max(f, r));
    }), e.viewportMoved || r - i > 1e3 ? this.createDeco(e.view) : r > -1 ? this.updateRange(e.view, t.map(e.changes), i, r) : t;
  }
  updateRange(e, t, i, r) {
    for (let l of e.visibleRanges) {
      let o = Math.max(l.from, i), c = Math.min(l.to, r);
      if (c > o) {
        let f = e.state.doc.lineAt(o), u = f.to < c ? e.state.doc.lineAt(c) : f, O = Math.max(l.from, f.from), p = Math.min(l.to, u.to);
        if (this.boundary) {
          for (; o > f.from; o--)
            if (this.boundary.test(f.text[o - 1 - f.from])) {
              O = o;
              break;
            }
          for (; c < u.to; c++)
            if (this.boundary.test(u.text[c - u.from])) {
              p = c;
              break;
            }
        }
        let g = [], b, $ = (x, P, k) => g.push(k.range(x, P));
        if (f == u)
          for (this.regexp.lastIndex = O - f.from; (b = this.regexp.exec(f.text)) && b.index < p - f.from; )
            this.addMatch(b, e, b.index + f.from, $);
        else
          mm(e.state.doc, this.regexp, O, p, (x, P) => this.addMatch(P, e, x, $));
        t = t.update({ filterFrom: O, filterTo: p, filter: (x, P) => x < O || P > p, add: g });
      }
    }
    return t;
  }
}
const pO = /x/.unicode != null ? "gu" : "g", I2 = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, pO), N2 = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let cu = null;
function F2() {
  var n;
  if (cu == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    cu = ((n = e.tabSize) !== null && n !== void 0 ? n : e.MozTabSize) != null;
  }
  return cu || !1;
}
const Bc = /* @__PURE__ */ ge.define({
  combine(n) {
    let e = ur(n, {
      render: null,
      specialChars: I2,
      addSpecialChars: null
    });
    return (e.replaceTabs = !F2()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, pO)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, pO)), e;
  }
});
function G2(n = {}) {
  return [Bc.of(n), H2()];
}
let vm = null;
function H2() {
  return vm || (vm = Ft.fromClass(class {
    constructor(n) {
      this.view = n, this.decorations = _e.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(n.state.facet(Bc)), this.decorations = this.decorator.createDeco(n);
    }
    makeDecorator(n) {
      return new B2({
        regexp: n.specialChars,
        decoration: (e, t, i) => {
          let { doc: r } = t.state, l = Di(e[0], 0);
          if (l == 9) {
            let o = r.lineAt(i), c = t.state.tabSize, f = Xl(o.text, c, i - o.from);
            return _e.replace({
              widget: new tW((c - f % c) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[l] || (this.decorationCache[l] = _e.replace({ widget: new eW(n, l) }));
        },
        boundary: n.replaceTabs ? void 0 : /[^]/
      });
    }
    update(n) {
      let e = n.state.facet(Bc);
      n.startState.facet(Bc) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(n.view)) : this.decorations = this.decorator.updateDeco(n, this.decorations);
    }
  }, {
    decorations: (n) => n.decorations
  }));
}
const K2 = "•";
function J2(n) {
  return n >= 32 ? K2 : n == 10 ? "␤" : String.fromCharCode(9216 + n);
}
class eW extends Ur {
  constructor(e, t) {
    super(), this.options = e, this.code = t;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let t = J2(this.code), i = e.state.phrase("Control character") + " " + (N2[this.code] || "0x" + this.code.toString(16)), r = this.options.render && this.options.render(this.code, i, t);
    if (r)
      return r;
    let l = document.createElement("span");
    return l.textContent = t, l.title = i, l.setAttribute("aria-label", i), l.className = "cm-specialChar", l;
  }
  ignoreEvent() {
    return !1;
  }
}
class tW extends Ur {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function iW() {
  return rW;
}
const nW = /* @__PURE__ */ _e.line({ class: "cm-activeLine" }), rW = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.docChanged || n.selectionSet) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = -1, t = [];
    for (let i of n.state.selection.ranges) {
      let r = n.lineBlockAt(i.head);
      r.from > e && (t.push(nW.range(r.from)), e = r.from);
    }
    return _e.set(t);
  }
}, {
  decorations: (n) => n.decorations
}), gO = 2e3;
function sW(n, e, t) {
  let i = Math.min(e.line, t.line), r = Math.max(e.line, t.line), l = [];
  if (e.off > gO || t.off > gO || e.col < 0 || t.col < 0) {
    let o = Math.min(e.off, t.off), c = Math.max(e.off, t.off);
    for (let f = i; f <= r; f++) {
      let u = n.doc.line(f);
      u.length <= c && l.push(F.range(u.from + o, u.to + c));
    }
  } else {
    let o = Math.min(e.col, t.col), c = Math.max(e.col, t.col);
    for (let f = i; f <= r; f++) {
      let u = n.doc.line(f), O = Iu(u.text, o, n.tabSize, !0);
      if (O < 0)
        l.push(F.cursor(u.to));
      else {
        let p = Iu(u.text, c, n.tabSize);
        l.push(F.range(u.from + O, u.from + p));
      }
    }
  }
  return l;
}
function lW(n, e) {
  let t = n.coordsAtPos(n.viewport.from);
  return t ? Math.round(Math.abs((t.left - e) / n.defaultCharacterWidth)) : -1;
}
function bm(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), i = n.state.doc.lineAt(t), r = t - i.from, l = r > gO ? -1 : r == i.length ? lW(n, e.clientX) : Xl(i.text, n.state.tabSize, t - i.from);
  return { line: i.number, col: l, off: r };
}
function oW(n, e) {
  let t = bm(n, e), i = n.state.selection;
  return t ? {
    update(r) {
      if (r.docChanged) {
        let l = r.changes.mapPos(r.startState.doc.line(t.line).from), o = r.state.doc.lineAt(l);
        t = { line: o.number, col: t.col, off: Math.min(t.off, o.length) }, i = i.map(r.changes);
      }
    },
    get(r, l, o) {
      let c = bm(n, r);
      if (!c)
        return i;
      let f = sW(n.state, t, c);
      return f.length ? o ? F.create(f.concat(i.ranges)) : F.create(f) : i;
    }
  } : null;
}
function aW(n) {
  let e = (t) => t.altKey && t.button == 0;
  return ae.mouseSelectionStyle.of((t, i) => e(i) ? oW(t, i) : null);
}
const cW = {
  Alt: [18, (n) => !!n.altKey],
  Control: [17, (n) => !!n.ctrlKey],
  Shift: [16, (n) => !!n.shiftKey],
  Meta: [91, (n) => !!n.metaKey]
}, hW = { style: "cursor: crosshair" };
function fW(n = {}) {
  let [e, t] = cW[n.key || "Alt"], i = Ft.fromClass(class {
    constructor(r) {
      this.view = r, this.isDown = !1;
    }
    set(r) {
      this.isDown != r && (this.isDown = r, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(r) {
        this.set(r.keyCode == e || t(r));
      },
      keyup(r) {
        (r.keyCode == e || !t(r)) && this.set(!1);
      },
      mousemove(r) {
        this.set(t(r));
      }
    }
  });
  return [
    i,
    ae.contentAttributes.of((r) => {
      var l;
      return !((l = r.plugin(i)) === null || l === void 0) && l.isDown ? hW : null;
    })
  ];
}
const go = "-10000px";
class $v {
  constructor(e, t, i, r) {
    this.facet = t, this.createTooltipView = i, this.removeTooltipView = r, this.input = e.state.facet(t), this.tooltips = this.input.filter((o) => o);
    let l = null;
    this.tooltipViews = this.tooltips.map((o) => l = i(o, l));
  }
  update(e, t) {
    var i;
    let r = e.state.facet(this.facet), l = r.filter((f) => f);
    if (r === this.input) {
      for (let f of this.tooltipViews)
        f.update && f.update(e);
      return !1;
    }
    let o = [], c = t ? [] : null;
    for (let f = 0; f < l.length; f++) {
      let u = l[f], O = -1;
      if (u) {
        for (let p = 0; p < this.tooltips.length; p++) {
          let g = this.tooltips[p];
          g && g.create == u.create && (O = p);
        }
        if (O < 0)
          o[f] = this.createTooltipView(u, f ? o[f - 1] : null), c && (c[f] = !!u.above);
        else {
          let p = o[f] = this.tooltipViews[O];
          c && (c[f] = t[O]), p.update && p.update(e);
        }
      }
    }
    for (let f of this.tooltipViews)
      o.indexOf(f) < 0 && (this.removeTooltipView(f), (i = f.destroy) === null || i === void 0 || i.call(f));
    return t && (c.forEach((f, u) => t[u] = f), t.length = c.length), this.input = r, this.tooltips = l, this.tooltipViews = o, !0;
  }
}
function uW(n) {
  let { win: e } = n;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const hu = /* @__PURE__ */ ge.define({
  combine: (n) => {
    var e, t, i;
    return {
      position: pe.ios ? "absolute" : ((e = n.find((r) => r.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((t = n.find((r) => r.parent)) === null || t === void 0 ? void 0 : t.parent) || null,
      tooltipSpace: ((i = n.find((r) => r.tooltipSpace)) === null || i === void 0 ? void 0 : i.tooltipSpace) || uW
    };
  }
}), Sm = /* @__PURE__ */ new WeakMap(), HO = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.view = n, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = n.state.facet(hu);
    this.position = e.position, this.parent = e.parent, this.classes = n.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new $v(n, KO, (t, i) => this.createTooltip(t, i), (t) => {
      this.resizeObserver && this.resizeObserver.unobserve(t.dom), t.dom.remove();
    }), this.above = this.manager.tooltips.map((t) => !!t.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((t) => {
      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), n.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let n of this.manager.tooltipViews)
        this.intersectionObserver.observe(n.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(n) {
    n.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(n, this.above);
    e && this.observeIntersection();
    let t = e || n.geometryChanged, i = n.state.facet(hu);
    if (i.position != this.position && !this.madeAbsolute) {
      this.position = i.position;
      for (let r of this.manager.tooltipViews)
        r.dom.style.position = this.position;
      t = !0;
    }
    if (i.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = i.parent, this.createContainer();
      for (let r of this.manager.tooltipViews)
        this.container.appendChild(r.dom);
      t = !0;
    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    t && this.maybeMeasure();
  }
  createTooltip(n, e) {
    let t = n.create(this.view), i = e ? e.dom : null;
    if (t.dom.classList.add("cm-tooltip"), n.arrow && !t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let r = document.createElement("div");
      r.className = "cm-tooltip-arrow", t.dom.appendChild(r);
    }
    return t.dom.style.position = this.position, t.dom.style.top = go, t.dom.style.left = "0px", this.container.insertBefore(t.dom, i), t.mount && t.mount(this.view), this.resizeObserver && this.resizeObserver.observe(t.dom), t;
  }
  destroy() {
    var n, e, t;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let i of this.manager.tooltipViews)
      i.dom.remove(), (n = i.destroy) === null || n === void 0 || n.call(i);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (t = this.intersectionObserver) === null || t === void 0 || t.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let n = 1, e = 1, t = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: l } = this.manager.tooltipViews[0];
      if (pe.gecko)
        t = l.offsetParent != this.container.ownerDocument.body;
      else if (l.style.top == go && l.style.left == "0px") {
        let o = l.getBoundingClientRect();
        t = Math.abs(o.top + 1e4) > 1 || Math.abs(o.left) > 1;
      }
    }
    if (t || this.position == "absolute")
      if (this.parent) {
        let l = this.parent.getBoundingClientRect();
        l.width && l.height && (n = l.width / this.parent.offsetWidth, e = l.height / this.parent.offsetHeight);
      } else
        ({ scaleX: n, scaleY: e } = this.view.viewState);
    let i = this.view.scrollDOM.getBoundingClientRect(), r = IO(this.view);
    return {
      visible: {
        left: i.left + r.left,
        top: i.top + r.top,
        right: i.right - r.right,
        bottom: i.bottom - r.bottom
      },
      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),
      pos: this.manager.tooltips.map((l, o) => {
        let c = this.manager.tooltipViews[o];
        return c.getCoords ? c.getCoords(l.pos) : this.view.coordsAtPos(l.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: l }) => l.getBoundingClientRect()),
      space: this.view.state.facet(hu).tooltipSpace(this.view),
      scaleX: n,
      scaleY: e,
      makeAbsolute: t
    };
  }
  writeMeasure(n) {
    var e;
    if (n.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let c of this.manager.tooltipViews)
        c.dom.style.position = "absolute";
    }
    let { visible: t, space: i, scaleX: r, scaleY: l } = n, o = [];
    for (let c = 0; c < this.manager.tooltips.length; c++) {
      let f = this.manager.tooltips[c], u = this.manager.tooltipViews[c], { dom: O } = u, p = n.pos[c], g = n.size[c];
      if (!p || f.clip !== !1 && (p.bottom <= Math.max(t.top, i.top) || p.top >= Math.min(t.bottom, i.bottom) || p.right < Math.max(t.left, i.left) - 0.1 || p.left > Math.min(t.right, i.right) + 0.1)) {
        O.style.top = go;
        continue;
      }
      let b = f.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null, $ = b ? 7 : 0, x = g.right - g.left, P = (e = Sm.get(u)) !== null && e !== void 0 ? e : g.bottom - g.top, k = u.offset || dW, R = this.view.textDirection == Tt.LTR, w = g.width > i.right - i.left ? R ? i.left : i.right - g.width : R ? Math.max(i.left, Math.min(p.left - (b ? 14 : 0) + k.x, i.right - x)) : Math.min(Math.max(i.left, p.left - x + (b ? 14 : 0) - k.x), i.right - x), Z = this.above[c];
      !f.strictSide && (Z ? p.top - P - $ - k.y < i.top : p.bottom + P + $ + k.y > i.bottom) && Z == i.bottom - p.bottom > p.top - i.top && (Z = this.above[c] = !Z);
      let T = (Z ? p.top - i.top : i.bottom - p.bottom) - $;
      if (T < P && u.resize !== !1) {
        if (T < this.view.defaultLineHeight) {
          O.style.top = go;
          continue;
        }
        Sm.set(u, P), O.style.height = (P = T) / l + "px";
      } else O.style.height && (O.style.height = "");
      let E = Z ? p.top - P - $ - k.y : p.bottom + $ + k.y, M = w + x;
      if (u.overlap !== !0)
        for (let D of o)
          D.left < M && D.right > w && D.top < E + P && D.bottom > E && (E = Z ? D.top - P - 2 - $ : D.bottom + $ + 2);
      if (this.position == "absolute" ? (O.style.top = (E - n.parent.top) / l + "px", $m(O, (w - n.parent.left) / r)) : (O.style.top = E / l + "px", $m(O, w / r)), b) {
        let D = p.left + (R ? k.x : -k.x) - (w + 14 - 7);
        b.style.left = D / r + "px";
      }
      u.overlap !== !0 && o.push({ left: w, top: E, right: M, bottom: E + P }), O.classList.toggle("cm-tooltip-above", Z), O.classList.toggle("cm-tooltip-below", !Z), u.positioned && u.positioned(n.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let n of this.manager.tooltipViews)
        n.dom.style.top = go;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
});
function $m(n, e) {
  let t = parseInt(n.style.left, 10);
  (isNaN(t) || Math.abs(e - t) > 1) && (n.style.left = e + "px");
}
const OW = /* @__PURE__ */ ae.baseTheme({
  ".cm-tooltip": {
    zIndex: 500,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), dW = { x: 0, y: 0 }, KO = /* @__PURE__ */ ge.define({
  enables: [HO, OW]
}), sh = /* @__PURE__ */ ge.define({
  combine: (n) => n.reduce((e, t) => e.concat(t), [])
});
class Ch {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new Ch(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new $v(e, sh, (t, i) => this.createHostedView(t, i), (t) => t.dom.remove());
  }
  createHostedView(e, t) {
    let i = e.create(this.view);
    return i.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(i.dom, t ? t.dom.nextSibling : this.dom.firstChild), this.mounted && i.mount && i.mount(this.view), i;
  }
  mount(e) {
    for (let t of this.manager.tooltipViews)
      t.mount && t.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let t of this.manager.tooltipViews)
      t.positioned && t.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let t of this.manager.tooltipViews)
      (e = t.destroy) === null || e === void 0 || e.call(t);
  }
  passProp(e) {
    let t;
    for (let i of this.manager.tooltipViews) {
      let r = i[e];
      if (r !== void 0) {
        if (t === void 0)
          t = r;
        else if (t !== r)
          return;
      }
    }
    return t;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const pW = /* @__PURE__ */ KO.compute([sh], (n) => {
  let e = n.facet(sh);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((t) => t.pos)),
    end: Math.max(...e.map((t) => {
      var i;
      return (i = t.end) !== null && i !== void 0 ? i : t.pos;
    })),
    create: Ch.create,
    above: e[0].above,
    arrow: e.some((t) => t.arrow)
  };
});
class gW {
  constructor(e, t, i, r, l) {
    this.view = e, this.source = t, this.field = i, this.setHover = r, this.hoverTime = l, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: t } = this, i = e.docView.nearest(t.target);
    if (!i)
      return;
    let r, l = 1;
    if (i instanceof rs)
      r = i.posAtStart;
    else {
      if (r = e.posAtCoords(t), r == null)
        return;
      let c = e.coordsAtPos(r);
      if (!c || t.y < c.top || t.y > c.bottom || t.x < c.left - e.defaultCharacterWidth || t.x > c.right + e.defaultCharacterWidth)
        return;
      let f = e.bidiSpans(e.state.doc.lineAt(r)).find((O) => O.from <= r && O.to >= r), u = f && f.dir == Tt.RTL ? -1 : 1;
      l = t.x < c.left ? -u : u;
    }
    let o = this.source(e, r, l);
    if (o != null && o.then) {
      let c = this.pending = { pos: r };
      o.then((f) => {
        this.pending == c && (this.pending = null, f && !(Array.isArray(f) && !f.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(f) ? f : [f]) }));
      }, (f) => Bi(e.state, f, "hover tooltip"));
    } else o && !(Array.isArray(o) && !o.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(o) ? o : [o]) });
  }
  get tooltip() {
    let e = this.view.plugin(HO), t = e ? e.manager.tooltips.findIndex((i) => i.create == Ch.create) : -1;
    return t > -1 ? e.manager.tooltipViews[t] : null;
  }
  mousemove(e) {
    var t, i;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: r, tooltip: l } = this;
    if (r.length && l && !mW(l.dom, e) || this.pending) {
      let { pos: o } = r[0] || this.pending, c = (i = (t = r[0]) === null || t === void 0 ? void 0 : t.end) !== null && i !== void 0 ? i : o;
      (o == c ? this.view.posAtCoords(this.lastMove) != o : !vW(this.view, o, c, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: t } = this;
    if (t.length) {
      let { tooltip: i } = this;
      i && i.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(i.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let t = (i) => {
      e.removeEventListener("mouseleave", t), this.active.length && !this.view.dom.contains(i.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", t);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const xc = 4;
function mW(n, e) {
  let { left: t, right: i, top: r, bottom: l } = n.getBoundingClientRect(), o;
  if (o = n.querySelector(".cm-tooltip-arrow")) {
    let c = o.getBoundingClientRect();
    r = Math.min(c.top, r), l = Math.max(c.bottom, l);
  }
  return e.clientX >= t - xc && e.clientX <= i + xc && e.clientY >= r - xc && e.clientY <= l + xc;
}
function vW(n, e, t, i, r, l) {
  let o = n.scrollDOM.getBoundingClientRect(), c = n.documentTop + n.documentPadding.top + n.contentHeight;
  if (o.left > i || o.right < i || o.top > r || Math.min(o.bottom, c) < r)
    return !1;
  let f = n.posAtCoords({ x: i, y: r }, !1);
  return f >= e && f <= t;
}
function bW(n, e = {}) {
  let t = Ye.define(), i = ti.define({
    create() {
      return [];
    },
    update(r, l) {
      if (r.length && (e.hideOnChange && (l.docChanged || l.selection) ? r = [] : e.hideOn && (r = r.filter((o) => !e.hideOn(l, o))), l.docChanged)) {
        let o = [];
        for (let c of r) {
          let f = l.changes.mapPos(c.pos, -1, fi.TrackDel);
          if (f != null) {
            let u = Object.assign(/* @__PURE__ */ Object.create(null), c);
            u.pos = f, u.end != null && (u.end = l.changes.mapPos(u.end)), o.push(u);
          }
        }
        r = o;
      }
      for (let o of l.effects)
        o.is(t) && (r = o.value), o.is(SW) && (r = []);
      return r;
    },
    provide: (r) => sh.from(r)
  });
  return {
    active: i,
    extension: [
      i,
      Ft.define((r) => new gW(
        r,
        n,
        i,
        t,
        e.hoverTime || 300
        /* Hover.Time */
      )),
      pW
    ]
  };
}
function yv(n, e) {
  let t = n.plugin(HO);
  if (!t)
    return null;
  let i = t.manager.tooltips.indexOf(e);
  return i < 0 ? null : t.manager.tooltipViews[i];
}
const SW = /* @__PURE__ */ Ye.define(), ym = /* @__PURE__ */ ge.define({
  combine(n) {
    let e, t;
    for (let i of n)
      e = e || i.topContainer, t = t || i.bottomContainer;
    return { topContainer: e, bottomContainer: t };
  }
});
function Yo(n, e) {
  let t = n.plugin(Qv), i = t ? t.specs.indexOf(e) : -1;
  return i > -1 ? t.panels[i] : null;
}
const Qv = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.input = n.state.facet(Do), this.specs = this.input.filter((t) => t), this.panels = this.specs.map((t) => t(n));
    let e = n.state.facet(ym);
    this.top = new Pc(n, !0, e.topContainer), this.bottom = new Pc(n, !1, e.bottomContainer), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
    for (let t of this.panels)
      t.dom.classList.add("cm-panel"), t.mount && t.mount();
  }
  update(n) {
    let e = n.state.facet(ym);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new Pc(n.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new Pc(n.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let t = n.state.facet(Do);
    if (t != this.input) {
      let i = t.filter((f) => f), r = [], l = [], o = [], c = [];
      for (let f of i) {
        let u = this.specs.indexOf(f), O;
        u < 0 ? (O = f(n.view), c.push(O)) : (O = this.panels[u], O.update && O.update(n)), r.push(O), (O.top ? l : o).push(O);
      }
      this.specs = i, this.panels = r, this.top.sync(l), this.bottom.sync(o);
      for (let f of c)
        f.dom.classList.add("cm-panel"), f.mount && f.mount();
    } else
      for (let i of this.panels)
        i.update && i.update(n);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (n) => ae.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
  })
});
class Pc {
  constructor(e, t, i) {
    this.view = e, this.top = t, this.container = i, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let t of this.panels)
      t.destroy && e.indexOf(t) < 0 && t.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let t = this.container || this.view.dom;
      t.insertBefore(this.dom, this.top ? t.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let t of this.panels)
      if (t.dom.parentNode == this.dom) {
        for (; e != t.dom; )
          e = Qm(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(t.dom, e);
    for (; e; )
      e = Qm(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function Qm(n) {
  let e = n.nextSibling;
  return n.remove(), e;
}
const Do = /* @__PURE__ */ ge.define({
  enables: Qv
});
class Vr extends As {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
Vr.prototype.elementClass = "";
Vr.prototype.toDOM = void 0;
Vr.prototype.mapMode = fi.TrackBefore;
Vr.prototype.startSide = Vr.prototype.endSide = -1;
Vr.prototype.point = !0;
const Ic = /* @__PURE__ */ ge.define(), $W = /* @__PURE__ */ ge.define(), yW = {
  class: "",
  renderEmptyElements: !1,
  elementStyle: "",
  markers: () => ct.empty,
  lineMarker: () => null,
  widgetMarker: () => null,
  lineMarkerChange: null,
  initialSpacer: null,
  updateSpacer: null,
  domEventHandlers: {}
}, Xo = /* @__PURE__ */ ge.define();
function QW(n) {
  return [xv(), Xo.of(Object.assign(Object.assign({}, yW), n))];
}
const xm = /* @__PURE__ */ ge.define({
  combine: (n) => n.some((e) => e)
});
function xv(n) {
  return [
    xW
  ];
}
const xW = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.view = n, this.prevViewport = n.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = n.state.facet(Xo).map((e) => new wm(n, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !n.state.facet(xm), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), n.scrollDOM.insertBefore(this.dom, n.contentDOM);
  }
  update(n) {
    if (this.updateGutters(n)) {
      let e = this.prevViewport, t = n.view.viewport, i = Math.min(e.to, t.to) - Math.max(e.from, t.from);
      this.syncGutters(i < (t.to - t.from) * 0.8);
    }
    n.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(xm) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = n.view.viewport;
  }
  syncGutters(n) {
    let e = this.dom.nextSibling;
    n && this.dom.remove();
    let t = ct.iter(this.view.state.facet(Ic), this.view.viewport.from), i = [], r = this.gutters.map((l) => new PW(l, this.view.viewport, -this.view.documentPadding.top));
    for (let l of this.view.viewportLineBlocks)
      if (i.length && (i = []), Array.isArray(l.type)) {
        let o = !0;
        for (let c of l.type)
          if (c.type == Ti.Text && o) {
            mO(t, i, c.from);
            for (let f of r)
              f.line(this.view, c, i);
            o = !1;
          } else if (c.widget)
            for (let f of r)
              f.widget(this.view, c);
      } else if (l.type == Ti.Text) {
        mO(t, i, l.from);
        for (let o of r)
          o.line(this.view, l, i);
      } else if (l.widget)
        for (let o of r)
          o.widget(this.view, l);
    for (let l of r)
      l.finish();
    n && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(n) {
    let e = n.startState.facet(Xo), t = n.state.facet(Xo), i = n.docChanged || n.heightChanged || n.viewportChanged || !ct.eq(n.startState.facet(Ic), n.state.facet(Ic), n.view.viewport.from, n.view.viewport.to);
    if (e == t)
      for (let r of this.gutters)
        r.update(n) && (i = !0);
    else {
      i = !0;
      let r = [];
      for (let l of t) {
        let o = e.indexOf(l);
        o < 0 ? r.push(new wm(this.view, l)) : (this.gutters[o].update(n), r.push(this.gutters[o]));
      }
      for (let l of this.gutters)
        l.dom.remove(), r.indexOf(l) < 0 && l.destroy();
      for (let l of r)
        this.dom.appendChild(l.dom);
      this.gutters = r;
    }
    return i;
  }
  destroy() {
    for (let n of this.gutters)
      n.destroy();
    this.dom.remove();
  }
}, {
  provide: (n) => ae.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == Tt.LTR ? { left: t.dom.offsetWidth * e.scaleX } : { right: t.dom.offsetWidth * e.scaleX };
  })
});
function Pm(n) {
  return Array.isArray(n) ? n : [n];
}
function mO(n, e, t) {
  for (; n.value && n.from <= t; )
    n.from == t && e.push(n.value), n.next();
}
class PW {
  constructor(e, t, i) {
    this.gutter = e, this.height = i, this.i = 0, this.cursor = ct.iter(e.markers, t.from);
  }
  addElement(e, t, i) {
    let { gutter: r } = this, l = (t.top - this.height) / e.scaleY, o = t.height / e.scaleY;
    if (this.i == r.elements.length) {
      let c = new Pv(e, o, l, i);
      r.elements.push(c), r.dom.appendChild(c.dom);
    } else
      r.elements[this.i].update(e, o, l, i);
    this.height = t.bottom, this.i++;
  }
  line(e, t, i) {
    let r = [];
    mO(this.cursor, r, t.from), i.length && (r = r.concat(i));
    let l = this.gutter.config.lineMarker(e, t, r);
    l && r.unshift(l);
    let o = this.gutter;
    r.length == 0 && !o.config.renderEmptyElements || this.addElement(e, t, r);
  }
  widget(e, t) {
    let i = this.gutter.config.widgetMarker(e, t.widget, t), r = i ? [i] : null;
    for (let l of e.state.facet($W)) {
      let o = l(e, t.widget, t);
      o && (r || (r = [])).push(o);
    }
    r && this.addElement(e, t, r);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let t = e.elements.pop();
      e.dom.removeChild(t.dom), t.destroy();
    }
  }
}
class wm {
  constructor(e, t) {
    this.view = e, this.config = t, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let i in t.domEventHandlers)
      this.dom.addEventListener(i, (r) => {
        let l = r.target, o;
        if (l != this.dom && this.dom.contains(l)) {
          for (; l.parentNode != this.dom; )
            l = l.parentNode;
          let f = l.getBoundingClientRect();
          o = (f.top + f.bottom) / 2;
        } else
          o = r.clientY;
        let c = e.lineBlockAtHeight(o - e.documentTop);
        t.domEventHandlers[i](e, c, r) && r.preventDefault();
      });
    this.markers = Pm(t.markers(e)), t.initialSpacer && (this.spacer = new Pv(e, 0, 0, [t.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let t = this.markers;
    if (this.markers = Pm(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let r = this.config.updateSpacer(this.spacer.markers[0], e);
      r != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [r]);
    }
    let i = e.view.viewport;
    return !ct.eq(this.markers, t, i.from, i.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class Pv {
  constructor(e, t, i, r) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, t, i, r);
  }
  update(e, t, i, r) {
    this.height != t && (this.height = t, this.dom.style.height = t + "px"), this.above != i && (this.dom.style.marginTop = (this.above = i) ? i + "px" : ""), wW(this.markers, r) || this.setMarkers(e, r);
  }
  setMarkers(e, t) {
    let i = "cm-gutterElement", r = this.dom.firstChild;
    for (let l = 0, o = 0; ; ) {
      let c = o, f = l < t.length ? t[l++] : null, u = !1;
      if (f) {
        let O = f.elementClass;
        O && (i += " " + O);
        for (let p = o; p < this.markers.length; p++)
          if (this.markers[p].compare(f)) {
            c = p, u = !0;
            break;
          }
      } else
        c = this.markers.length;
      for (; o < c; ) {
        let O = this.markers[o++];
        if (O.toDOM) {
          O.destroy(r);
          let p = r.nextSibling;
          r.remove(), r = p;
        }
      }
      if (!f)
        break;
      f.toDOM && (u ? r = r.nextSibling : this.dom.insertBefore(f.toDOM(e), r)), u && o++;
    }
    this.dom.className = i, this.markers = t;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function wW(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (!n[t].compare(e[t]))
      return !1;
  return !0;
}
const kW = /* @__PURE__ */ ge.define(), _W = /* @__PURE__ */ ge.define(), dl = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, t) {
        let i = Object.assign({}, e);
        for (let r in t) {
          let l = i[r], o = t[r];
          i[r] = l ? (c, f, u) => l(c, f, u) || o(c, f, u) : o;
        }
        return i;
      }
    });
  }
});
class fu extends Vr {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function uu(n, e) {
  return n.state.facet(dl).formatNumber(e, n.state);
}
const WW = /* @__PURE__ */ Xo.compute([dl], (n) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(kW);
  },
  lineMarker(e, t, i) {
    return i.some((r) => r.toDOM) ? null : new fu(uu(e, e.state.doc.lineAt(t.from).number));
  },
  widgetMarker: (e, t, i) => {
    for (let r of e.state.facet(_W)) {
      let l = r(e, t, i);
      if (l)
        return l;
    }
    return null;
  },
  lineMarkerChange: (e) => e.startState.facet(dl) != e.state.facet(dl),
  initialSpacer(e) {
    return new fu(uu(e, km(e.state.doc.lines)));
  },
  updateSpacer(e, t) {
    let i = uu(t.view, km(t.view.state.doc.lines));
    return i == e.number ? e : new fu(i);
  },
  domEventHandlers: n.facet(dl).domEventHandlers
}));
function ZW(n = {}) {
  return [
    dl.of(n),
    xv(),
    WW
  ];
}
function km(n) {
  let e = 9;
  for (; e < n; )
    e = e * 10 + 9;
  return e;
}
const TW = /* @__PURE__ */ new class extends Vr {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), CW = /* @__PURE__ */ Ic.compute(["selection"], (n) => {
  let e = [], t = -1;
  for (let i of n.selection.ranges) {
    let r = n.doc.lineAt(i.head).from;
    r > t && (t = r, e.push(TW.range(r)));
  }
  return ct.of(e);
});
function RW() {
  return CW;
}
var XW = s.template('<div class="mzn-editor svelte-1fycn7h"></div>');
function wv(n, e) {
  if (new.target) return Qi({ component: wv, ...n });
  s.push(e, !1);
  let t = s.prop(e, "state", 12), i = s.mutable_state(), r = s.mutable_state();
  MO(() => {
    s.set(r, new ae({ parent: s.get(i) }));
  });
  function l() {
    return s.get(r) ? s.get(r) : null;
  }
  function o() {
    return s.get(r) ? s.get(r).state : null;
  }
  async function c(O) {
    s.get(r) && (await Yn(), s.get(r).dispatch({ selection: { anchor: O } }));
  }
  function f() {
    s.get(r).focus();
  }
  s.legacy_pre_effect(
    () => (s.get(r), s.deep_read_state(t())),
    () => {
      s.get(r) && t() && s.get(r).state !== t() && s.get(r).setState(t());
    }
  ), s.legacy_pre_effect_reset(), s.init();
  var u = XW();
  return s.bind_this(u, (O) => s.set(i, O), () => s.get(i)), s.append(n, u), s.bind_prop(e, "getView", l), s.bind_prop(e, "getState", o), s.bind_prop(e, "setCursor", c), s.bind_prop(e, "focus", f), s.pop({
    getView: l,
    getState: o,
    setCursor: c,
    focus: f,
    get state() {
      return t();
    },
    set state(O) {
      t(O), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (O, p) => s.add_legacy_event_listener(e, O, p)
  });
}
var vn = typeof window < "u" ? window : null, JO = vn === null, zo = JO ? void 0 : vn.document, qn = "addEventListener", Vn = "removeEventListener", Ou = "getBoundingClientRect", mo = "_a", Ln = "_b", Tr = "_c", wc = "horizontal", Un = function() {
  return !1;
}, AW = JO ? "calc" : ["", "-webkit-", "-moz-", "-o-"].filter(function(n) {
  var e = zo.createElement("div");
  return e.style.cssText = "width:" + n + "calc(9px)", !!e.style.length;
}).shift() + "calc", kv = function(n) {
  return typeof n == "string" || n instanceof String;
}, _m = function(n) {
  if (kv(n)) {
    var e = zo.querySelector(n);
    if (!e)
      throw new Error("Selector " + n + " did not match a DOM element");
    return e;
  }
  return n;
}, bi = function(n, e, t) {
  var i = n[e];
  return i !== void 0 ? i : t;
}, kc = function(n, e, t, i) {
  if (e) {
    if (i === "end")
      return 0;
    if (i === "center")
      return n / 2;
  } else if (t) {
    if (i === "start")
      return 0;
    if (i === "center")
      return n / 2;
  }
  return n;
}, MW = function(n, e) {
  var t = zo.createElement("div");
  return t.className = "gutter gutter-" + e, t;
}, EW = function(n, e, t) {
  var i = {};
  return kv(e) ? i[n] = e : i[n] = AW + "(" + e + "% - " + t + "px)", i;
}, qW = function(n, e) {
  var t;
  return t = {}, t[n] = e + "px", t;
}, VW = function(n, e) {
  if (e === void 0 && (e = {}), JO)
    return {};
  var t = n, i, r, l, o, c, f;
  Array.from && (t = Array.from(t));
  var u = _m(t[0]), O = u.parentNode, p = getComputedStyle ? getComputedStyle(O) : null, g = p ? p.flexDirection : null, b = bi(e, "sizes") || t.map(function() {
    return 100 / t.length;
  }), $ = bi(e, "minSize", 100), x = Array.isArray($) ? $ : t.map(function() {
    return $;
  }), P = bi(e, "maxSize", 1 / 0), k = Array.isArray(P) ? P : t.map(function() {
    return P;
  }), R = bi(e, "expandToMin", !1), w = bi(e, "gutterSize", 10), Z = bi(e, "gutterAlign", "center"), T = bi(e, "snapOffset", 30), E = Array.isArray(T) ? T : t.map(function() {
    return T;
  }), M = bi(e, "dragInterval", 1), D = bi(e, "direction", wc), V = bi(
    e,
    "cursor",
    D === wc ? "col-resize" : "row-resize"
  ), I = bi(e, "gutter", MW), U = bi(
    e,
    "elementStyle",
    EW
  ), Y = bi(e, "gutterStyle", qW);
  D === wc ? (i = "width", r = "clientX", l = "left", o = "right", c = "clientWidth") : D === "vertical" && (i = "height", r = "clientY", l = "top", o = "bottom", c = "clientHeight");
  function q(re, B, ne, J) {
    var he = U(i, B, ne, J);
    Object.keys(he).forEach(function(ye) {
      re.style[ye] = he[ye];
    });
  }
  function te(re, B, ne) {
    var J = Y(i, B, ne);
    Object.keys(J).forEach(function(he) {
      re.style[he] = J[he];
    });
  }
  function ue() {
    return f.map(function(re) {
      return re.size;
    });
  }
  function Ae(re) {
    return "touches" in re ? re.touches[0][r] : re[r];
  }
  function We(re) {
    var B = f[this.a], ne = f[this.b], J = B.size + ne.size;
    B.size = re / this.size * J, ne.size = J - re / this.size * J, q(B.element, B.size, this[Ln], B.i), q(ne.element, ne.size, this[Tr], ne.i);
  }
  function we(re) {
    var B, ne = f[this.a], J = f[this.b];
    this.dragging && (B = Ae(re) - this.start + (this[Ln] - this.dragOffset), M > 1 && (B = Math.round(B / M) * M), B <= ne.minSize + ne.snapOffset + this[Ln] ? B = ne.minSize + this[Ln] : B >= this.size - (J.minSize + J.snapOffset + this[Tr]) && (B = this.size - (J.minSize + this[Tr])), B >= ne.maxSize - ne.snapOffset + this[Ln] ? B = ne.maxSize + this[Ln] : B <= this.size - (J.maxSize - J.snapOffset + this[Tr]) && (B = this.size - (J.maxSize + this[Tr])), We.call(this, B), bi(e, "onDrag", Un)(ue()));
  }
  function xe() {
    var re = f[this.a].element, B = f[this.b].element, ne = re[Ou](), J = B[Ou]();
    this.size = ne[i] + J[i] + this[Ln] + this[Tr], this.start = ne[l], this.end = ne[o];
  }
  function me(re) {
    if (!getComputedStyle)
      return null;
    var B = getComputedStyle(re);
    if (!B)
      return null;
    var ne = re[c];
    return ne === 0 ? null : (D === wc ? ne -= parseFloat(B.paddingLeft) + parseFloat(B.paddingRight) : ne -= parseFloat(B.paddingTop) + parseFloat(B.paddingBottom), ne);
  }
  function de(re) {
    var B = me(O);
    if (B === null || x.reduce(function(ye, be) {
      return ye + be;
    }, 0) > B)
      return re;
    var ne = 0, J = [], he = re.map(function(ye, be) {
      var Ce = B * ye / 100, rt = kc(
        w,
        be === 0,
        be === re.length - 1,
        Z
      ), Ke = x[be] + rt;
      return Ce < Ke ? (ne += Ke - Ce, J.push(0), Ke) : (J.push(Ce - Ke), Ce);
    });
    return ne === 0 ? re : he.map(function(ye, be) {
      var Ce = ye;
      if (ne > 0 && J[be] - ne > 0) {
        var rt = Math.min(
          ne,
          J[be] - ne
        );
        ne -= rt, Ce = ye - rt;
      }
      return Ce / B * 100;
    });
  }
  function K() {
    var re = this, B = f[re.a].element, ne = f[re.b].element;
    re.dragging && bi(e, "onDragEnd", Un)(ue()), re.dragging = !1, vn[Vn]("mouseup", re.stop), vn[Vn]("touchend", re.stop), vn[Vn]("touchcancel", re.stop), vn[Vn]("mousemove", re.move), vn[Vn]("touchmove", re.move), re.stop = null, re.move = null, B[Vn]("selectstart", Un), B[Vn]("dragstart", Un), ne[Vn]("selectstart", Un), ne[Vn]("dragstart", Un), B.style.userSelect = "", B.style.webkitUserSelect = "", B.style.MozUserSelect = "", B.style.pointerEvents = "", ne.style.userSelect = "", ne.style.webkitUserSelect = "", ne.style.MozUserSelect = "", ne.style.pointerEvents = "", re.gutter.style.cursor = "", re.parent.style.cursor = "", zo.body.style.cursor = "";
  }
  function le(re) {
    if (!("button" in re && re.button !== 0)) {
      var B = this, ne = f[B.a].element, J = f[B.b].element;
      B.dragging || bi(e, "onDragStart", Un)(ue()), re.preventDefault(), B.dragging = !0, B.move = we.bind(B), B.stop = K.bind(B), vn[qn]("mouseup", B.stop), vn[qn]("touchend", B.stop), vn[qn]("touchcancel", B.stop), vn[qn]("mousemove", B.move), vn[qn]("touchmove", B.move), ne[qn]("selectstart", Un), ne[qn]("dragstart", Un), J[qn]("selectstart", Un), J[qn]("dragstart", Un), ne.style.userSelect = "none", ne.style.webkitUserSelect = "none", ne.style.MozUserSelect = "none", ne.style.pointerEvents = "none", J.style.userSelect = "none", J.style.webkitUserSelect = "none", J.style.MozUserSelect = "none", J.style.pointerEvents = "none", B.gutter.style.cursor = V, B.parent.style.cursor = V, zo.body.style.cursor = V, xe.call(B), B.dragOffset = Ae(re) - B.end;
    }
  }
  b = de(b);
  var $e = [];
  f = t.map(function(re, B) {
    var ne = {
      element: _m(re),
      size: b[B],
      minSize: x[B],
      maxSize: k[B],
      snapOffset: E[B],
      i: B
    }, J;
    if (B > 0 && (J = {
      a: B - 1,
      b: B,
      dragging: !1,
      direction: D,
      parent: O
    }, J[Ln] = kc(
      w,
      B - 1 === 0,
      !1,
      Z
    ), J[Tr] = kc(
      w,
      !1,
      B === t.length - 1,
      Z
    ), g === "row-reverse" || g === "column-reverse")) {
      var he = J.a;
      J.a = J.b, J.b = he;
    }
    if (B > 0) {
      var ye = I(B, D, ne.element);
      te(ye, w, B), J[mo] = le.bind(J), ye[qn](
        "mousedown",
        J[mo]
      ), ye[qn](
        "touchstart",
        J[mo]
      ), O.insertBefore(ye, ne.element), J.gutter = ye;
    }
    return q(
      ne.element,
      ne.size,
      kc(
        w,
        B === 0,
        B === t.length - 1,
        Z
      ),
      B
    ), B > 0 && $e.push(J), ne;
  });
  function Ze(re) {
    var B = re.i === $e.length, ne = B ? $e[re.i - 1] : $e[re.i];
    xe.call(ne);
    var J = B ? ne.size - re.minSize - ne[Tr] : re.minSize + ne[Ln];
    We.call(ne, J);
  }
  f.forEach(function(re) {
    var B = re.element[Ou]()[i];
    B < re.minSize && (R ? Ze(re) : re.minSize = B);
  });
  function Re(re) {
    var B = de(re);
    B.forEach(function(ne, J) {
      if (J > 0) {
        var he = $e[J - 1], ye = f[he.a], be = f[he.b];
        ye.size = B[J - 1], be.size = ne, q(ye.element, ye.size, he[Ln], ye.i), q(be.element, be.size, he[Tr], be.i);
      }
    });
  }
  function Me(re, B) {
    $e.forEach(function(ne) {
      if (B !== !0 ? ne.parent.removeChild(ne.gutter) : (ne.gutter[Vn](
        "mousedown",
        ne[mo]
      ), ne.gutter[Vn](
        "touchstart",
        ne[mo]
      )), re !== !0) {
        var J = U(
          i,
          ne.a.size,
          ne[Ln]
        );
        Object.keys(J).forEach(function(he) {
          f[ne.a].element.style[he] = "", f[ne.b].element.style[he] = "";
        });
      }
    });
  }
  return {
    setSizes: Re,
    getSizes: ue,
    collapse: function(B) {
      Ze(f[B]);
    },
    destroy: Me,
    parent: O,
    pairs: $e
  };
}, LW = s.template('<div class="split svelte-1k68mj4"><div class="split-panel svelte-1k68mj4"><!></div> <div class="split-panel svelte-1k68mj4"><!></div></div>');
function _v(n, e) {
  if (new.target) return Qi({ component: _v, ...n });
  s.push(e, !1);
  let t = s.prop(e, "direction", 12, "horizontal"), i = s.prop(e, "split", 12, 50), r = s.prop(e, "showPanels", 12, "all"), l = s.mutable_state(), o = s.mutable_state(), c = null;
  function f(k, R) {
    u(), R === "all" && s.get(l) && s.get(o) && (c = VW([s.get(l), s.get(o)], {
      direction: k,
      minSize: 0,
      sizes: [i(), 100 - i()],
      onDragEnd(w) {
        i(w[0]);
      }
    }));
  }
  function u() {
    c && (c.destroy(), c = null);
  }
  function O(k) {
    c && c.getSizes()[0] !== k && c.setSizes([k, 100 - k]);
  }
  function p(k, R) {
    return R === "all" || R === k;
  }
  MO(() => (f(t(), r()), u)), s.legacy_pre_effect(
    () => (s.deep_read_state(t()), s.deep_read_state(r())),
    () => {
      f(t(), r());
    }
  ), s.legacy_pre_effect(() => s.deep_read_state(i()), () => {
    O(i());
  }), s.legacy_pre_effect_reset(), s.init();
  var g = LW(), b = s.child(g), $ = s.child(b);
  s.slot($, e, "panelA", {}, null), s.reset(b), s.bind_this(b, (k) => s.set(l, k), () => s.get(l));
  var x = s.sibling(b, 2), P = s.child(x);
  return s.slot(P, e, "panelB", {}, null), s.reset(x), s.bind_this(x, (k) => s.set(o, k), () => s.get(o)), s.reset(g), s.template_effect(
    (k, R) => {
      s.toggle_class(g, "horizontal", t() === "horizontal"), s.toggle_class(b, "no-splitter", r() !== "all"), s.toggle_class(b, "is-hidden", k), s.toggle_class(x, "no-splitter", r() !== "all"), s.toggle_class(x, "is-hidden", R);
    },
    [
      () => !p("a", r()),
      () => !p("b", r())
    ],
    s.derived_safe_equal
  ), s.append(n, g), s.pop({
    get direction() {
      return t();
    },
    set direction(k) {
      t(k), s.flush_sync();
    },
    get split() {
      return i();
    },
    set split(k) {
      i(k), s.flush_sync();
    },
    get showPanels() {
      return r();
    },
    set showPanels(k) {
      r(k), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (k, R) => s.add_legacy_event_listener(e, k, R)
  });
}
function Wm(n, e) {
  e && e !== "lg" && e !== "sm" && e !== "xs" ? n.style.fontSize = e.replace("x", "em") : n.style.fontSize = "";
}
function UW(n, e, t, i, r, l = 1, o = "", c = "") {
  let f = 1, u = 1;
  r && (r == "horizontal" ? f = -1 : r == "vertical" ? u = -1 : f = u = -1), typeof n == "string" && (n = parseFloat(n)), typeof e == "string" && (e = parseFloat(e)), typeof t == "string" && (t = parseFloat(t));
  const O = `${e * l}${o}`, p = `${t * l}${o}`;
  let g = `translate(${O},${p}) scale(${f * n},${u * n})`;
  return i && (g += ` rotate(${i}${c})`), g;
}
var YW = s.ns_template('<title class="svelte-bvo74f"> </title>'), DW = s.ns_template('<path class="svelte-bvo74f"></path>'), zW = s.ns_template('<path class="svelte-bvo74f"></path><path class="svelte-bvo74f"></path>', 1), jW = s.ns_template('<svg aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><!><g class="svelte-bvo74f"><g class="svelte-bvo74f"><!></g></g></svg>');
function $t(n, e) {
  if (new.target) return Qi({ component: $t, ...n });
  s.push(e, !1);
  const t = s.mutable_state(), i = s.mutable_state();
  let r = s.prop(e, "class", 28, () => {
  }), l = s.prop(e, "id", 28, () => {
  }), o = s.prop(e, "style", 28, () => {
  }), c = s.prop(e, "icon", 12), f = s.prop(e, "title", 28, () => {
  }), u = s.prop(e, "size", 28, () => {
  }), O = s.prop(e, "color", 28, () => {
  }), p = s.prop(e, "fw", 12, !1), g = s.prop(e, "pull", 28, () => {
  }), b = s.prop(e, "scale", 12, 1), $ = s.prop(e, "translateX", 12, 0), x = s.prop(e, "translateY", 12, 0), P = s.prop(e, "rotate", 28, () => {
  }), k = s.prop(e, "flip", 28, () => {
  }), R = s.prop(e, "spin", 12, !1), w = s.prop(e, "pulse", 12, !1), Z = s.prop(e, "primaryColor", 12, ""), T = s.prop(e, "secondaryColor", 12, ""), E = s.prop(e, "primaryOpacity", 12, 1), M = s.prop(e, "secondaryOpacity", 12, 0.4), D = s.prop(e, "swapOpacity", 12, !1), V = s.mutable_state();
  s.legacy_pre_effect(
    () => (s.get(V), s.deep_read_state(u()), Wm),
    () => {
      s.get(V) && u() && Wm(s.get(V), u());
    }
  ), s.legacy_pre_effect(() => s.deep_read_state(c()), () => {
    s.set(t, c() && c().icon || [0, 0, "", [], ""]);
  }), s.legacy_pre_effect(
    () => (s.deep_read_state(b()), s.deep_read_state($()), s.deep_read_state(x()), s.deep_read_state(P()), s.deep_read_state(k())),
    () => {
      s.set(i, UW(b(), $(), x(), P(), k(), 512));
    }
  ), s.legacy_pre_effect_reset(), s.init();
  var I = s.comment(), U = s.first_child(I);
  {
    var Y = (q) => {
      var te = jW(), ue = s.child(te);
      {
        var Ae = (K) => {
          var le = YW(), $e = s.child(le, !0);
          s.reset(le), s.template_effect(() => s.set_text($e, f())), s.append(K, le);
        };
        s.if(ue, (K) => {
          f() && K(Ae);
        });
      }
      var We = s.sibling(ue), we = s.child(We), xe = s.child(we);
      {
        var me = (K) => {
          var le = DW();
          s.template_effect(() => {
            s.set_attribute(le, "d", s.get(t)[4]), s.set_attribute(le, "fill", O() || Z() || "currentColor"), s.set_attribute(le, "transform", `translate(${s.get(t)[0] / -2} ${s.get(t)[1] / -2})`);
          }), s.append(K, le);
        }, de = (K) => {
          var le = zW(), $e = s.first_child(le), Ze = s.sibling($e);
          s.template_effect(() => {
            s.set_attribute($e, "d", s.get(t)[4][0]), s.set_attribute($e, "fill", T() || O() || "currentColor"), s.set_attribute($e, "fill-opacity", D() != !1 ? E() : M()), s.set_attribute($e, "transform", `translate(${s.get(t)[0] / -2} ${s.get(t)[1] / -2})`), s.set_attribute(Ze, "d", s.get(t)[4][1]), s.set_attribute(Ze, "fill", Z() || O() || "currentColor"), s.set_attribute(Ze, "fill-opacity", D() != !1 ? M() : E()), s.set_attribute(Ze, "transform", `translate(${s.get(t)[0] / -2} ${s.get(t)[1] / -2})`);
          }), s.append(K, le);
        };
        s.if(xe, (K) => {
          typeof s.get(t)[4] == "string" ? K(me) : K(de, !1);
        });
      }
      s.reset(we), s.reset(We), s.reset(te), s.bind_this(te, (K) => s.set(V, K), () => s.get(V)), s.template_effect(() => {
        s.set_attribute(te, "id", l()), s.set_svg_class(te, `svelte-fa svelte-fa-base ${r() ?? ""} svelte-bvo74f`), s.set_attribute(te, "style", o()), s.set_attribute(te, "viewBox", `0 0 ${s.get(t)[0] ?? ""} ${s.get(t)[1] ?? ""}`), s.toggle_class(te, "pulse", w()), s.toggle_class(te, "svelte-fa-size-lg", u() === "lg"), s.toggle_class(te, "svelte-fa-size-sm", u() === "sm"), s.toggle_class(te, "svelte-fa-size-xs", u() === "xs"), s.toggle_class(te, "svelte-fa-fw", p()), s.toggle_class(te, "svelte-fa-pull-left", g() === "left"), s.toggle_class(te, "svelte-fa-pull-right", g() === "right"), s.toggle_class(te, "spin", R()), s.set_attribute(We, "transform", `translate(${s.get(t)[0] / 2} ${s.get(t)[1] / 2})`), s.set_attribute(We, "transform-origin", `${s.get(t)[0] / 4} 0`), s.set_attribute(we, "transform", s.get(i));
      }), s.append(q, te);
    };
    s.if(U, (q) => {
      s.get(t)[4] && q(Y);
    });
  }
  return s.append(n, I), s.pop({
    get class() {
      return r();
    },
    set class(q) {
      r(q), s.flush_sync();
    },
    get id() {
      return l();
    },
    set id(q) {
      l(q), s.flush_sync();
    },
    get style() {
      return o();
    },
    set style(q) {
      o(q), s.flush_sync();
    },
    get icon() {
      return c();
    },
    set icon(q) {
      c(q), s.flush_sync();
    },
    get title() {
      return f();
    },
    set title(q) {
      f(q), s.flush_sync();
    },
    get size() {
      return u();
    },
    set size(q) {
      u(q), s.flush_sync();
    },
    get color() {
      return O();
    },
    set color(q) {
      O(q), s.flush_sync();
    },
    get fw() {
      return p();
    },
    set fw(q) {
      p(q), s.flush_sync();
    },
    get pull() {
      return g();
    },
    set pull(q) {
      g(q), s.flush_sync();
    },
    get scale() {
      return b();
    },
    set scale(q) {
      b(q), s.flush_sync();
    },
    get translateX() {
      return $();
    },
    set translateX(q) {
      $(q), s.flush_sync();
    },
    get translateY() {
      return x();
    },
    set translateY(q) {
      x(q), s.flush_sync();
    },
    get rotate() {
      return P();
    },
    set rotate(q) {
      P(q), s.flush_sync();
    },
    get flip() {
      return k();
    },
    set flip(q) {
      k(q), s.flush_sync();
    },
    get spin() {
      return R();
    },
    set spin(q) {
      R(q), s.flush_sync();
    },
    get pulse() {
      return w();
    },
    set pulse(q) {
      w(q), s.flush_sync();
    },
    get primaryColor() {
      return Z();
    },
    set primaryColor(q) {
      Z(q), s.flush_sync();
    },
    get secondaryColor() {
      return T();
    },
    set secondaryColor(q) {
      T(q), s.flush_sync();
    },
    get primaryOpacity() {
      return E();
    },
    set primaryOpacity(q) {
      E(q), s.flush_sync();
    },
    get secondaryOpacity() {
      return M();
    },
    set secondaryOpacity(q) {
      M(q), s.flush_sync();
    },
    get swapOpacity() {
      return D();
    },
    set swapOpacity(q) {
      D(q), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (q, te) => s.add_legacy_event_listener(e, q, te)
  });
}
s.template("<span><!></span>");
s.template('<span><span class="svelte-fa-base container svelte-1x0c3df"><!></span></span>');
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
const Zm = {
  prefix: "fas",
  iconName: "lock",
  icon: [448, 512, [128274], "f023", "M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z"]
}, Tm = {
  prefix: "fas",
  iconName: "share-nodes",
  icon: [448, 512, ["share-alt"], "f1e0", "M352 224c53 0 96-43 96-96s-43-96-96-96s-96 43-96 96c0 4 .2 8 .7 11.9l-94.1 47C145.4 170.2 121.9 160 96 160c-53 0-96 43-96 96s43 96 96 96c25.9 0 49.4-10.2 66.6-26.9l94.1 47c-.5 3.9-.7 7.8-.7 11.9c0 53 43 96 96 96s96-43 96-96s-43-96-96-96c-25.9 0-49.4 10.2-66.6 26.9l-94.1-47c.5-3.9 .7-7.8 .7-11.9s-.2-8-.7-11.9l94.1-47C302.6 213.8 326.1 224 352 224z"]
}, BW = {
  prefix: "fas",
  iconName: "eye-slash",
  icon: [640, 512, [], "f070", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zM223.1 149.5C248.6 126.2 282.7 112 320 112c79.5 0 144 64.5 144 144c0 24.9-6.3 48.3-17.4 68.7L408 294.5c8.4-19.3 10.6-41.4 4.8-63.3c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3c0 10.2-2.4 19.8-6.6 28.3l-90.3-70.8zM373 389.9c-16.4 6.5-34.3 10.1-53 10.1c-79.5 0-144-64.5-144-144c0-6.9 .5-13.6 1.4-20.2L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5L373 389.9z"]
}, IW = {
  prefix: "fas",
  iconName: "shuffle",
  icon: [512, 512, [128256, "random"], "f074", "M403.8 34.4c12-5 25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6l0-32-32 0c-10.1 0-19.6 4.7-25.6 12.8L284 229.3 244 176l31.2-41.6C293.3 110.2 321.8 96 352 96l32 0 0-32c0-12.9 7.8-24.6 19.8-29.6zM164 282.7L204 336l-31.2 41.6C154.7 401.8 126.2 416 96 416l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64 0c10.1 0 19.6-4.7 25.6-12.8L164 282.7zm274.6 188c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6l0-32-32 0c-30.2 0-58.7-14.2-76.8-38.4L121.6 172.8c-6-8.1-15.5-12.8-25.6-12.8l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64 0c30.2 0 58.7 14.2 76.8 38.4L326.4 339.2c6 8.1 15.5 12.8 25.6 12.8l32 0 0-32c0-12.9 7.8-24.6 19.8-29.6s25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64z"]
}, NW = {
  prefix: "fas",
  iconName: "clipboard",
  icon: [384, 512, [128203], "f328", "M192 0c-41.8 0-77.4 26.7-90.5 64L64 64C28.7 64 0 92.7 0 128L0 448c0 35.3 28.7 64 64 64l256 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64l-37.5 0C269.4 26.7 233.8 0 192 0zm0 64a32 32 0 1 1 0 64 32 32 0 1 1 0-64zM112 192l160 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-160 0c-8.8 0-16-7.2-16-16s7.2-16 16-16z"]
}, Cm = {
  prefix: "fas",
  iconName: "arrow-up-right-from-square",
  icon: [512, 512, ["external-link"], "f08e", "M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l82.7 0L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3l0 82.7c0 17.7 14.3 32 32 32s32-14.3 32-32l0-160c0-17.7-14.3-32-32-32L320 0zM80 32C35.8 32 0 67.8 0 112L0 432c0 44.2 35.8 80 80 80l320 0c44.2 0 80-35.8 80-80l0-112c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 112c0 8.8-7.2 16-16 16L80 448c-8.8 0-16-7.2-16-16l0-320c0-8.8 7.2-16 16-16l112 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L80 32z"]
}, FW = {
  prefix: "fas",
  iconName: "lock-open",
  icon: [576, 512, [], "f3c1", "M352 144c0-44.2 35.8-80 80-80s80 35.8 80 80l0 48c0 17.7 14.3 32 32 32s32-14.3 32-32l0-48C576 64.5 511.5 0 432 0S288 64.5 288 144l0 48L64 192c-35.3 0-64 28.7-64 64L0 448c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-192c0-35.3-28.7-64-64-64l-32 0 0-48z"]
}, GW = {
  prefix: "fas",
  iconName: "forward-fast",
  icon: [512, 512, [9197, "fast-forward"], "f050", "M18.4 445c11.2 5.3 24.5 3.6 34.1-4.4L224 297.7 224 416c0 12.4 7.2 23.7 18.4 29s24.5 3.6 34.1-4.4L448 297.7 448 416c0 17.7 14.3 32 32 32s32-14.3 32-32l0-320c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 118.3L276.5 71.4c-9.5-7.9-22.8-9.7-34.1-4.4S224 83.6 224 96l0 118.3L52.5 71.4c-9.5-7.9-22.8-9.7-34.1-4.4S0 83.6 0 96L0 416c0 12.4 7.2 23.7 18.4 29z"]
}, HW = {
  prefix: "fas",
  iconName: "eye",
  icon: [576, 512, [128065], "f06e", "M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"]
}, Wv = {
  prefix: "fas",
  iconName: "trash",
  icon: [448, 512, [], "f1f8", "M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z"]
}, KW = {
  prefix: "fas",
  iconName: "gear",
  icon: [512, 512, [9881, "cog"], "f013", "M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"]
}, Rm = KW, JW = {
  prefix: "fas",
  iconName: "folder-tree",
  icon: [576, 512, [], "f802", "M64 32C64 14.3 49.7 0 32 0S0 14.3 0 32l0 96L0 384c0 35.3 28.7 64 64 64l192 0 0-64L64 384l0-224 192 0 0-64L64 96l0-64zM288 192c0 17.7 14.3 32 32 32l224 0c17.7 0 32-14.3 32-32l0-128c0-17.7-14.3-32-32-32l-98.7 0c-8.5 0-16.6-3.4-22.6-9.4L409.4 9.4c-6-6-14.1-9.4-22.6-9.4L320 0c-17.7 0-32 14.3-32 32l0 160zm0 288c0 17.7 14.3 32 32 32l224 0c17.7 0 32-14.3 32-32l0-128c0-17.7-14.3-32-32-32l-98.7 0c-8.5 0-16.6-3.4-22.6-9.4l-13.3-13.3c-6-6-14.1-9.4-22.6-9.4L320 288c-17.7 0-32 14.3-32 32l0 160z"]
}, eZ = {
  prefix: "fas",
  iconName: "download",
  icon: [512, 512, [], "f019", "M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 242.7-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7 288 32zM64 352c-35.3 0-64 28.7-64 64l0 32c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-32c0-35.3-28.7-64-64-64l-101.5 0-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352 64 352zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"]
}, tZ = {
  prefix: "fas",
  iconName: "stop",
  icon: [384, 512, [9209], "f04d", "M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z"]
}, iZ = {
  prefix: "fas",
  iconName: "angle-down",
  icon: [448, 512, [8964], "f107", "M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
}, nZ = {
  prefix: "fas",
  iconName: "eraser",
  icon: [576, 512, [], "f12d", "M290.7 57.4L57.4 290.7c-25 25-25 65.5 0 90.5l80 80c12 12 28.3 18.7 45.3 18.7L288 480l9.4 0L512 480c17.7 0 32-14.3 32-32s-14.3-32-32-32l-124.1 0L518.6 285.3c25-25 25-65.5 0-90.5L381.3 57.4c-25-25-65.5-25-90.5 0zM297.4 416l-9.4 0-105.4 0-80-80L227.3 211.3 364.7 348.7 297.4 416z"]
}, rZ = {
  prefix: "fas",
  iconName: "play",
  icon: [384, 512, [9654], "f04b", "M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80L0 432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"]
}, Zv = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"]
}, Tv = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
}, sZ = {
  prefix: "fas",
  iconName: "hammer",
  icon: [576, 512, [128296], "f6e3", "M413.5 237.5c-28.2 4.8-58.2-3.6-80-25.4l-38.1-38.1C280.4 159 272 138.8 272 117.6l0-12.1L192.3 62c-5.3-2.9-8.6-8.6-8.3-14.7s3.9-11.5 9.5-14l47.2-21C259.1 4.2 279 0 299.2 0l18.1 0c36.7 0 72 14 98.7 39.1l44.6 42c24.2 22.8 33.2 55.7 26.6 86L503 183l8-8c9.4-9.4 24.6-9.4 33.9 0l24 24c9.4 9.4 9.4 24.6 0 33.9l-88 88c-9.4 9.4-24.6 9.4-33.9 0l-24-24c-9.4-9.4-9.4-24.6 0-33.9l8-8-17.5-17.5zM27.4 377.1L260.9 182.6c3.5 4.9 7.5 9.6 11.8 14l38.1 38.1c6 6 12.4 11.2 19.2 15.7L134.9 484.6c-14.5 17.4-36 27.4-58.6 27.4C34.1 512 0 477.8 0 435.7c0-22.6 10.1-44.1 27.4-58.6z"]
}, Xm = {
  prefix: "fas",
  iconName: "rotate",
  icon: [512, 512, [128260, "sync-alt"], "f2f1", "M142.9 142.9c-17.5 17.5-30.1 38-37.8 59.8c-5.9 16.7-24.2 25.4-40.8 19.5s-25.4-24.2-19.5-40.8C55.6 150.7 73.2 122 97.6 97.6c87.2-87.2 228.3-87.5 315.8-1L455 55c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2l0 128c0 13.3-10.7 24-24 24l-8.4 0c0 0 0 0 0 0L344 224c-9.7 0-18.5-5.8-22.2-14.8s-1.7-19.3 5.2-26.2l41.1-41.1c-62.6-61.5-163.1-61.2-225.3 1zM16 312c0-13.3 10.7-24 24-24l7.6 0 .7 0L168 288c9.7 0 18.5 5.8 22.2 14.8s1.7 19.3-5.2 26.2l-41.1 41.1c62.6 61.5 163.1 61.2 225.3-1c17.5-17.5 30.1-38 37.8-59.8c5.9-16.7 24.2-25.4 40.8-19.5s25.4 24.2 19.5 40.8c-10.8 30.6-28.4 59.3-52.9 83.8c-87.2 87.2-228.3 87.5-315.8 1L57 457c-6.9 6.9-17.2 8.9-26.2 5.2S16 449.7 16 440l0-119.6 0-.7 0-7.6z"]
};
var lZ = s.template("<input> ", 1), oZ = s.template('<span class="close-tab svelte-1ul6ap"><!></span>'), aZ = s.template('<span class="filename svelte-1ul6ap"> </span> <!>', 1), cZ = s.template('<a class="filename-link svelte-1ul6ap"><!></a>');
function Cv(n, e) {
  if (new.target) return Qi({ component: Cv, ...n });
  s.push(e, !1);
  let t = s.prop(e, "active", 12, !1), i = s.prop(e, "name", 12, "Untitled"), r = s.prop(e, "suffix", 12, ".mzn"), l = s.prop(e, "readonly", 12, !1);
  const o = an();
  let c = s.mutable_state(!1), f = s.mutable_state(), u = s.mutable_state("");
  async function O() {
    !t() || l() || (s.set(c, !0), s.set(u, i()), await Yn(), s.get(f).focus());
  }
  function p(k) {
    k.key === "Enter" ? (k.preventDefault(), g()) : k.key === "Escape" && s.set(c, !1);
  }
  function g() {
    s.set(c, !1), s.get(u).length > 0 && o("rename", {
      name: s.get(u),
      suffix: r()
    });
  }
  s.legacy_pre_effect(() => s.get(u), () => {
    /[\/\\\.]/.test(s.get(u)) && s.set(u, s.get(u).replaceAll(/[\/\\\.]/g, ""));
  }), s.legacy_pre_effect_reset(), s.init();
  var b = cZ(), $ = s.child(b);
  {
    var x = (k) => {
      var R = lZ(), w = s.first_child(R);
      s.remove_input_defaults(w), s.bind_this(w, (T) => s.set(f, T), () => s.get(f));
      var Z = s.sibling(w, 1, !0);
      s.template_effect(() => {
        s.set_attribute(w, "size", s.get(u).length || i().length), s.set_attribute(w, "placeholder", i()), s.set_text(Z, r());
      }), s.bind_value(w, () => s.get(u), (T) => s.set(u, T)), s.event("blur", w, g), s.event("keyup", w, p), s.append(k, R);
    }, P = (k) => {
      var R = aZ(), w = s.first_child(R), Z = s.child(w);
      s.reset(w);
      var T = s.sibling(w, 2);
      {
        var E = (M) => {
          var D = oZ(), V = s.child(D);
          $t(V, { icon: Tv }), s.reset(D), s.event("click", D, () => o("close")), s.append(M, D);
        };
        s.if(T, (M) => {
          t() && !l() && M(E);
        });
      }
      s.template_effect(() => s.set_text(Z, `${i() ?? ""}${r() ?? ""}`)), s.event("click", w, O), s.append(k, R);
    };
    s.if($, (k) => {
      s.get(c) ? k(x) : k(P, !1);
    });
  }
  return s.reset(b), s.template_effect(() => {
    s.toggle_class(b, "active", t()), s.toggle_class(b, "readonly", l());
  }), s.event("click", b, () => {
    s.get(c) || o("click");
  }), s.append(n, b), s.pop({
    get active() {
      return t();
    },
    set active(k) {
      t(k), s.flush_sync();
    },
    get name() {
      return i();
    },
    set name(k) {
      i(k), s.flush_sync();
    },
    get suffix() {
      return r();
    },
    set suffix(k) {
      r(k), s.flush_sync();
    },
    get readonly() {
      return l();
    },
    set readonly(k) {
      l(k), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (k, R) => s.add_legacy_event_listener(e, k, R)
  });
}
var hZ = s.template("<li><!></li>"), fZ = s.template('<li><a title="Add new file"><span class="icon add-icon svelte-7ub6h4"><!></span></a></li> <li class="right svelte-7ub6h4"><button class="button is-small" title="Manage files"><span class="icon"><!></span></button></li>', 1), uZ = s.template('<div class="tabs is-boxed svelte-7ub6h4"><ul><!> <!></ul></div>');
function Rv(n, e) {
  if (new.target) return Qi({ component: Rv, ...n });
  s.push(e, !1);
  const t = s.mutable_state();
  let i = s.prop(e, "files", 28, () => []), r = s.prop(e, "currentIndex", 12, 0), l = s.prop(e, "readonly", 12, !1);
  const o = an();
  function c(w) {
    o("selectTab", { index: w });
  }
  function f(w, Z) {
    o("rename", { index: Z, ...w.detail });
  }
  let u = null;
  function O(w, Z) {
    w.dataTransfer.effectAllowed = "move", w.dataTransfer.dropEffect = "move", u = Z;
  }
  function p(w) {
    u !== null && w.preventDefault();
  }
  function g(w, Z) {
    u !== null && (w.preventDefault(), w.dataTransfer.dropEffect = "move", u !== Z && o("reorder", { src: u, dest: Z }), u = null);
  }
  function b(w) {
    o("close", { index: w });
  }
  s.legacy_pre_effect(() => s.deep_read_state(i()), () => {
    s.set(t, i().map((w, Z) => {
      const T = w.name.endsWith(".mzc.mzn") ? w.name.length - 8 : w.name.lastIndexOf(".");
      return {
        ...w,
        stem: w.name.substring(0, T),
        suffix: w.name.substring(T),
        index: Z
      };
    }).filter((w) => !w.hidden));
  }), s.legacy_pre_effect_reset(), s.init();
  var $ = uZ(), x = s.child($), P = s.child(x);
  s.each(P, 9, () => s.get(t), (w) => w.name, (w, Z) => {
    var T = hZ();
    s.set_attribute(T, "draggable", !0);
    var E = s.child(T);
    const M = s.derived_safe_equal(() => r() === s.get(Z).index), D = s.derived_safe_equal(() => l() || s.get(Z).readonlyTab);
    Cv(E, {
      get name() {
        return s.get(Z).stem;
      },
      get suffix() {
        return s.get(Z).suffix;
      },
      get active() {
        return s.get(M);
      },
      get readonly() {
        return s.get(D);
      },
      $$events: {
        click: () => c(s.get(Z).index),
        rename: (V) => f(V, s.get(Z).index),
        close: (V) => b(s.get(Z).index)
      }
    }), s.reset(T), s.template_effect(() => s.toggle_class(T, "is-active", r() === s.get(Z).index)), s.animation(T, () => Ck, () => ({ duration: 200 })), s.event("dragstart", T, (V) => O(V, s.get(Z).index)), s.event("dragover", T, p), s.event("drop", T, (V) => g(V, s.get(Z).index)), s.append(w, T);
  });
  var k = s.sibling(P, 2);
  {
    var R = (w) => {
      var Z = fZ(), T = s.first_child(Z), E = s.child(T), M = s.child(E), D = s.child(M);
      $t(D, { icon: Zv }), s.reset(M), s.reset(E), s.reset(T);
      var V = s.sibling(T, 2), I = s.child(V), U = s.child(I), Y = s.child(U);
      $t(Y, { icon: JW }), s.reset(U), s.reset(I), s.reset(V), s.event("click", E, () => o("newFile")), s.event("click", I, () => o("manageFiles")), s.append(w, Z);
    };
    s.if(k, (w) => {
      l() || w(R);
    });
  }
  return s.reset(x), s.reset($), s.append(n, $), s.pop({
    get files() {
      return i();
    },
    set files(w) {
      i(w), s.flush_sync();
    },
    get currentIndex() {
      return r();
    },
    set currentIndex(w) {
      r(w), s.flush_sync();
    },
    get readonly() {
      return l();
    },
    set readonly(w) {
      l(w), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (w, Z) => s.add_legacy_event_listener(e, w, Z)
  });
}
var OZ = s.template('<button class="button">Cancel</button>'), dZ = s.template('<form tabindex="0" class="modal is-active"><div class="modal-background"></div> <div class="modal-card"><header class="modal-card-head"><p class="modal-card-title"> </p> <button type="button" class="delete" aria-label="close"></button></header> <section class="modal-card-body"><!></section> <footer class="modal-card-foot"><!></footer></div></form>');
function hs(n, e) {
  if (new.target) return Qi({ component: hs, ...n });
  s.push(e, !1);
  let t = s.prop(e, "title", 12), i = s.prop(e, "active", 12, !1);
  const r = an();
  let l = s.mutable_state();
  async function o(p) {
    p && (await Yn(), s.get(l) && s.get(l).focus(), r("activate"));
  }
  function c() {
    r("cancel");
  }
  s.legacy_pre_effect(() => s.deep_read_state(i()), () => {
    o(i());
  }), s.legacy_pre_effect_reset(), s.init();
  var f = s.comment(), u = s.first_child(f);
  {
    var O = (p) => {
      var g = dZ(), b = s.child(g), $ = s.sibling(b, 2), x = s.child($), P = s.child(x), k = s.child(P, !0);
      s.reset(P);
      var R = s.sibling(P, 2);
      s.reset(x);
      var w = s.sibling(x, 2), Z = s.child(w);
      s.slot(Z, e, "default", {}, null), s.reset(w);
      var T = s.sibling(w, 2), E = s.child(T);
      s.slot(E, e, "footer", {}, (M) => {
        var D = OZ();
        s.event("click", D, c), s.append(M, D);
      }), s.reset(T), s.reset($), s.reset(g), s.bind_this(g, (M) => s.set(l, M), () => s.get(l)), s.template_effect(() => s.set_text(k, t())), s.event("click", b, c), s.event("click", R, c), s.transition(3, $, () => J0, () => ({ y: -200, duration: 200 })), s.transition(3, g, () => Rk, () => ({ duration: 200 })), s.event("submit", g, s.preventDefault(() => r("submit"))), s.append(p, g);
    };
    s.if(u, (p) => {
      i() && p(O);
    });
  }
  return s.append(n, f), s.pop({
    get title() {
      return t();
    },
    set title(p) {
      t(p), s.flush_sync();
    },
    get active() {
      return i();
    },
    set active(p) {
      i(p), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (p, g) => s.add_legacy_event_listener(e, p, g)
  });
}
const Xv = 1024;
let pZ = 0;
class Sn {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
class Ne {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = pZ++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = Ri.match(e)), (t) => {
      let i = e(t);
      return i === void 0 ? null : [this, i];
    };
  }
}
Ne.closedBy = new Ne({ deserialize: (n) => n.split(" ") });
Ne.openedBy = new Ne({ deserialize: (n) => n.split(" ") });
Ne.group = new Ne({ deserialize: (n) => n.split(" ") });
Ne.isolate = new Ne({ deserialize: (n) => {
  if (n && n != "rtl" && n != "ltr" && n != "auto")
    throw new RangeError("Invalid value for isolate: " + n);
  return n || "auto";
} });
Ne.contextHash = new Ne({ perNode: !0 });
Ne.lookAhead = new Ne({ perNode: !0 });
Ne.mounted = new Ne({ perNode: !0 });
class jo {
  constructor(e, t, i) {
    this.tree = e, this.overlay = t, this.parser = i;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[Ne.mounted.id];
  }
}
const gZ = /* @__PURE__ */ Object.create(null);
class Ri {
  /**
  @internal
  */
  constructor(e, t, i, r = 0) {
    this.name = e, this.props = t, this.id = i, this.flags = r;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let t = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : gZ, i = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), r = new Ri(e.name || "", t, e.id, i);
    if (e.props) {
      for (let l of e.props)
        if (Array.isArray(l) || (l = l(r)), l) {
          if (l[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          t[l[0].id] = l[1];
        }
    }
    return r;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let t = this.prop(Ne.group);
      return t ? t.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let i in e)
      for (let r of i.split(" "))
        t[r] = e[i];
    return (i) => {
      for (let r = i.prop(Ne.group), l = -1; l < (r ? r.length : 0); l++) {
        let o = t[l < 0 ? i.name : r[l]];
        if (o)
          return o;
      }
    };
  }
}
Ri.none = new Ri(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class ed {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let t = 0; t < e.length; t++)
      if (e[t].id != t)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let t = [];
    for (let i of this.types) {
      let r = null;
      for (let l of e) {
        let o = l(i);
        o && (r || (r = Object.assign({}, i.props)), r[o[0].id] = o[1]);
      }
      t.push(r ? new Ri(i.name, r, i.id, i.flags) : i);
    }
    return new ed(t);
  }
}
const _c = /* @__PURE__ */ new WeakMap(), Am = /* @__PURE__ */ new WeakMap();
var Wt;
(function(n) {
  n[n.ExcludeBuffers = 1] = "ExcludeBuffers", n[n.IncludeAnonymous = 2] = "IncludeAnonymous", n[n.IgnoreMounts = 4] = "IgnoreMounts", n[n.IgnoreOverlays = 8] = "IgnoreOverlays";
})(Wt || (Wt = {}));
class At {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, t, i, r, l) {
    if (this.type = e, this.children = t, this.positions = i, this.length = r, this.props = null, l && l.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [o, c] of l)
        this.props[typeof o == "number" ? o : o.id] = c;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = jo.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let t = "";
    for (let i of this.children) {
      let r = i.toString();
      r && (t && (t += ","), t += r);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new lh(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, t = 0, i = 0) {
    let r = _c.get(this) || this.topNode, l = new lh(r);
    return l.moveTo(e, t), _c.set(this, l._tree), l;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new yi(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, t = 0) {
    let i = Bo(_c.get(this) || this.topNode, e, t, !1);
    return _c.set(this, i), i;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, t = 0) {
    let i = Bo(Am.get(this) || this.topNode, e, t, !0);
    return Am.set(this, i), i;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, t = 0) {
    return bZ(this, e, t);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: t, leave: i, from: r = 0, to: l = this.length } = e, o = e.mode || 0, c = (o & Wt.IncludeAnonymous) > 0;
    for (let f = this.cursor(o | Wt.IncludeAnonymous); ; ) {
      let u = !1;
      if (f.from <= l && f.to >= r && (!c && f.type.isAnonymous || t(f) !== !1)) {
        if (f.firstChild())
          continue;
        u = !0;
      }
      for (; u && i && (c || !f.type.isAnonymous) && i(f), !f.nextSibling(); ) {
        if (!f.parent())
          return;
        u = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let t in this.props)
        e.push([+t, this.props[t]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : nd(Ri.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, i, r) => new At(this.type, t, i, r, this.propValues), e.makeTree || ((t, i, r) => new At(Ri.none, t, i, r)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return SZ(e);
  }
}
At.empty = new At(Ri.none, [], [], 0);
class td {
  constructor(e, t) {
    this.buffer = e, this.index = t;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new td(this.buffer, this.index);
  }
}
class fs {
  /**
  Create a tree buffer.
  */
  constructor(e, t, i) {
    this.buffer = e, this.length = t, this.set = i;
  }
  /**
  @internal
  */
  get type() {
    return Ri.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let t = 0; t < this.buffer.length; )
      e.push(this.childString(t)), t = this.buffer[t + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let t = this.buffer[e], i = this.buffer[e + 3], r = this.set.types[t], l = r.name;
    if (/\W/.test(l) && !r.isError && (l = JSON.stringify(l)), e += 4, i == e)
      return l;
    let o = [];
    for (; e < i; )
      o.push(this.childString(e)), e = this.buffer[e + 3];
    return l + "(" + o.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, t, i, r, l) {
    let { buffer: o } = this, c = -1;
    for (let f = e; f != t && !(Av(l, r, o[f + 1], o[f + 2]) && (c = f, i > 0)); f = o[f + 3])
      ;
    return c;
  }
  /**
  @internal
  */
  slice(e, t, i) {
    let r = this.buffer, l = new Uint16Array(t - e), o = 0;
    for (let c = e, f = 0; c < t; ) {
      l[f++] = r[c++], l[f++] = r[c++] - i;
      let u = l[f++] = r[c++] - i;
      l[f++] = r[c++] - e, o = Math.max(o, u);
    }
    return new fs(l, o, this.set);
  }
}
function Av(n, e, t, i) {
  switch (n) {
    case -2:
      return t < e;
    case -1:
      return i >= e && t < e;
    case 0:
      return t < e && i > e;
    case 1:
      return t <= e && i > e;
    case 2:
      return i > e;
    case 4:
      return !0;
  }
}
function Bo(n, e, t, i) {
  for (var r; n.from == n.to || (t < 1 ? n.from >= e : n.from > e) || (t > -1 ? n.to <= e : n.to < e); ) {
    let o = !i && n instanceof yi && n.index < 0 ? null : n.parent;
    if (!o)
      return n;
    n = o;
  }
  let l = i ? 0 : Wt.IgnoreOverlays;
  if (i)
    for (let o = n, c = o.parent; c; o = c, c = o.parent)
      o instanceof yi && o.index < 0 && ((r = c.enter(e, t, l)) === null || r === void 0 ? void 0 : r.from) != o.from && (n = c);
  for (; ; ) {
    let o = n.enter(e, t, l);
    if (!o)
      return n;
    n = o;
  }
}
class Mv {
  cursor(e = 0) {
    return new lh(this, e);
  }
  getChild(e, t = null, i = null) {
    let r = Mm(this, e, t, i);
    return r.length ? r[0] : null;
  }
  getChildren(e, t = null, i = null) {
    return Mm(this, e, t, i);
  }
  resolve(e, t = 0) {
    return Bo(this, e, t, !1);
  }
  resolveInner(e, t = 0) {
    return Bo(this, e, t, !0);
  }
  matchContext(e) {
    return vO(this.parent, e);
  }
  enterUnfinishedNodesBefore(e) {
    let t = this.childBefore(e), i = this;
    for (; t; ) {
      let r = t.lastChild;
      if (!r || r.to != t.to)
        break;
      r.type.isError && r.from == r.to ? (i = t, t = r.prevSibling) : t = r;
    }
    return i;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class yi extends Mv {
  constructor(e, t, i, r) {
    super(), this._tree = e, this.from = t, this.index = i, this._parent = r;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, t, i, r, l = 0) {
    for (let o = this; ; ) {
      for (let { children: c, positions: f } = o._tree, u = t > 0 ? c.length : -1; e != u; e += t) {
        let O = c[e], p = f[e] + o.from;
        if (Av(r, i, p, p + O.length)) {
          if (O instanceof fs) {
            if (l & Wt.ExcludeBuffers)
              continue;
            let g = O.findChild(0, O.buffer.length, t, i - p, r);
            if (g > -1)
              return new lr(new mZ(o, O, e, p), null, g);
          } else if (l & Wt.IncludeAnonymous || !O.type.isAnonymous || id(O)) {
            let g;
            if (!(l & Wt.IgnoreMounts) && (g = jo.get(O)) && !g.overlay)
              return new yi(g.tree, p, e, o);
            let b = new yi(O, p, e, o);
            return l & Wt.IncludeAnonymous || !b.type.isAnonymous ? b : b.nextChild(t < 0 ? O.children.length - 1 : 0, t, i, r);
          }
        }
      }
      if (l & Wt.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? e = o.index + t : e = t < 0 ? -1 : o._parent._tree.children.length, o = o._parent, !o))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, i = 0) {
    let r;
    if (!(i & Wt.IgnoreOverlays) && (r = jo.get(this._tree)) && r.overlay) {
      let l = e - this.from;
      for (let { from: o, to: c } of r.overlay)
        if ((t > 0 ? o <= l : o < l) && (t < 0 ? c >= l : c > l))
          return new yi(r.tree, r.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, t, i);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function Mm(n, e, t, i) {
  let r = n.cursor(), l = [];
  if (!r.firstChild())
    return l;
  if (t != null) {
    for (let o = !1; !o; )
      if (o = r.type.is(t), !r.nextSibling())
        return l;
  }
  for (; ; ) {
    if (i != null && r.type.is(i))
      return l;
    if (r.type.is(e) && l.push(r.node), !r.nextSibling())
      return i == null ? l : [];
  }
}
function vO(n, e, t = e.length - 1) {
  for (let i = n; t >= 0; i = i.parent) {
    if (!i)
      return !1;
    if (!i.type.isAnonymous) {
      if (e[t] && e[t] != i.name)
        return !1;
      t--;
    }
  }
  return !0;
}
class mZ {
  constructor(e, t, i, r) {
    this.parent = e, this.buffer = t, this.index = i, this.start = r;
  }
}
class lr extends Mv {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, t, i) {
    super(), this.context = e, this._parent = t, this.index = i, this.type = e.buffer.set.types[e.buffer.buffer[i]];
  }
  child(e, t, i) {
    let { buffer: r } = this.context, l = r.findChild(this.index + 4, r.buffer[this.index + 3], e, t - this.context.start, i);
    return l < 0 ? null : new lr(this.context, this, l);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, i = 0) {
    if (i & Wt.ExcludeBuffers)
      return null;
    let { buffer: r } = this.context, l = r.findChild(this.index + 4, r.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
    return l < 0 ? null : new lr(this.context, this, l);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, t = e.buffer[this.index + 3];
    return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new lr(this.context, this._parent, t) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, t = this._parent ? this._parent.index + 4 : 0;
    return this.index == t ? this.externalSibling(-1) : new lr(this.context, this._parent, e.findChild(
      t,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], t = [], { buffer: i } = this.context, r = this.index + 4, l = i.buffer[this.index + 3];
    if (l > r) {
      let o = i.buffer[this.index + 1];
      e.push(i.slice(r, l, o)), t.push(0);
    }
    return new At(this.type, e, t, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function Ev(n) {
  if (!n.length)
    return null;
  let e = 0, t = n[0];
  for (let l = 1; l < n.length; l++) {
    let o = n[l];
    (o.from > t.from || o.to < t.to) && (t = o, e = l);
  }
  let i = t instanceof yi && t.index < 0 ? null : t.parent, r = n.slice();
  return i ? r[e] = i : r.splice(e, 1), new vZ(r, t);
}
class vZ {
  constructor(e, t) {
    this.heads = e, this.node = t;
  }
  get next() {
    return Ev(this.heads);
  }
}
function bZ(n, e, t) {
  let i = n.resolveInner(e, t), r = null;
  for (let l = i instanceof yi ? i : i.context.parent; l; l = l.parent)
    if (l.index < 0) {
      let o = l.parent;
      (r || (r = [i])).push(o.resolve(e, t)), l = o;
    } else {
      let o = jo.get(l.tree);
      if (o && o.overlay && o.overlay[0].from <= e && o.overlay[o.overlay.length - 1].to >= e) {
        let c = new yi(o.tree, o.overlay[0].from + l.from, -1, l);
        (r || (r = [i])).push(Bo(c, e, t, !1));
      }
    }
  return r ? Ev(r) : i;
}
class lh {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, t = 0) {
    if (this.mode = t, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof yi)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let i = e._parent; i; i = i._parent)
        this.stack.unshift(i.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, t) {
    this.index = e;
    let { start: i, buffer: r } = this.buffer;
    return this.type = t || r.set.types[r.buffer[e]], this.from = i + r.buffer[e + 1], this.to = i + r.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof yi ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, t, i) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, i, this.mode));
    let { buffer: r } = this.buffer, l = r.findChild(this.index + 4, r.buffer[this.index + 3], e, t - this.buffer.start, i);
    return l < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(l));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, t, i = this.mode) {
    return this.buffer ? i & Wt.ExcludeBuffers ? !1 : this.enterChild(1, e, t) : this.yield(this._tree.enter(e, t, i));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & Wt.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & Wt.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: t } = this.buffer, i = this.stack.length - 1;
    if (e < 0) {
      let r = i < 0 ? 0 : this.stack[i] + 4;
      if (this.index != r)
        return this.yieldBuf(t.findChild(
          r,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let r = t.buffer[this.index + 3];
      if (r < (i < 0 ? t.buffer.length : t.buffer[this.stack[i] + 3]))
        return this.yieldBuf(r);
    }
    return i < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let t, i, { buffer: r } = this;
    if (r) {
      if (e > 0) {
        if (this.index < r.buffer.buffer.length)
          return !1;
      } else
        for (let l = 0; l < this.index; l++)
          if (r.buffer.buffer[l + 3] < this.index)
            return !1;
      ({ index: t, parent: i } = r);
    } else
      ({ index: t, _parent: i } = this._tree);
    for (; i; { index: t, _parent: i } = i)
      if (t > -1)
        for (let l = t + e, o = e < 0 ? -1 : i._tree.children.length; l != o; l += e) {
          let c = i._tree.children[l];
          if (this.mode & Wt.IncludeAnonymous || c instanceof fs || !c.type.isAnonymous || id(c))
            return !1;
        }
    return !0;
  }
  move(e, t) {
    if (t && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traversal. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, t = 0) {
    for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, t); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, t = null, i = 0;
    if (e && e.context == this.buffer)
      e: for (let r = this.index, l = this.stack.length; l >= 0; ) {
        for (let o = e; o; o = o._parent)
          if (o.index == r) {
            if (r == this.index)
              return o;
            t = o, i = l + 1;
            break e;
          }
        r = this.stack[--l];
      }
    for (let r = i; r < this.stack.length; r++)
      t = new lr(this.buffer, t, this.stack[r]);
    return this.bufferNode = new lr(this.buffer, t, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, t) {
    for (let i = 0; ; ) {
      let r = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          i++;
          continue;
        }
        this.type.isAnonymous || (r = !0);
      }
      for (; ; ) {
        if (r && t && t(this), r = this.type.isAnonymous, !i)
          return;
        if (this.nextSibling())
          break;
        this.parent(), i--, r = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return vO(this.node.parent, e);
    let { buffer: t } = this.buffer, { types: i } = t.set;
    for (let r = e.length - 1, l = this.stack.length - 1; r >= 0; l--) {
      if (l < 0)
        return vO(this._tree, e, r);
      let o = i[t.buffer[this.stack[l]]];
      if (!o.isAnonymous) {
        if (e[r] && e[r] != o.name)
          return !1;
        r--;
      }
    }
    return !0;
  }
}
function id(n) {
  return n.children.some((e) => e instanceof fs || !e.type.isAnonymous || id(e));
}
function SZ(n) {
  var e;
  let { buffer: t, nodeSet: i, maxBufferLength: r = Xv, reused: l = [], minRepeatType: o = i.types.length } = n, c = Array.isArray(t) ? new td(t, t.length) : t, f = i.types, u = 0, O = 0;
  function p(T, E, M, D, V, I) {
    let { id: U, start: Y, end: q, size: te } = c, ue = O, Ae = u;
    for (; te < 0; )
      if (c.next(), te == -1) {
        let de = l[U];
        M.push(de), D.push(Y - T);
        return;
      } else if (te == -3) {
        u = U;
        return;
      } else if (te == -4) {
        O = U;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${te}`);
    let We = f[U], we, xe, me = Y - T;
    if (q - Y <= r && (xe = P(c.pos - E, V))) {
      let de = new Uint16Array(xe.size - xe.skip), K = c.pos - xe.size, le = de.length;
      for (; c.pos > K; )
        le = k(xe.start, de, le);
      we = new fs(de, q - xe.start, i), me = xe.start - T;
    } else {
      let de = c.pos - te;
      c.next();
      let K = [], le = [], $e = U >= o ? U : -1, Ze = 0, Re = q;
      for (; c.pos > de; )
        $e >= 0 && c.id == $e && c.size >= 0 ? (c.end <= Re - r && ($(K, le, Y, Ze, c.end, Re, $e, ue, Ae), Ze = K.length, Re = c.end), c.next()) : I > 2500 ? g(Y, de, K, le) : p(Y, de, K, le, $e, I + 1);
      if ($e >= 0 && Ze > 0 && Ze < K.length && $(K, le, Y, Ze, Y, Re, $e, ue, Ae), K.reverse(), le.reverse(), $e > -1 && Ze > 0) {
        let Me = b(We, Ae);
        we = nd(We, K, le, 0, K.length, 0, q - Y, Me, Me);
      } else
        we = x(We, K, le, q - Y, ue - q, Ae);
    }
    M.push(we), D.push(me);
  }
  function g(T, E, M, D) {
    let V = [], I = 0, U = -1;
    for (; c.pos > E; ) {
      let { id: Y, start: q, end: te, size: ue } = c;
      if (ue > 4)
        c.next();
      else {
        if (U > -1 && q < U)
          break;
        U < 0 && (U = te - r), V.push(Y, q, te), I++, c.next();
      }
    }
    if (I) {
      let Y = new Uint16Array(I * 4), q = V[V.length - 2];
      for (let te = V.length - 3, ue = 0; te >= 0; te -= 3)
        Y[ue++] = V[te], Y[ue++] = V[te + 1] - q, Y[ue++] = V[te + 2] - q, Y[ue++] = ue;
      M.push(new fs(Y, V[2] - q, i)), D.push(q - T);
    }
  }
  function b(T, E) {
    return (M, D, V) => {
      let I = 0, U = M.length - 1, Y, q;
      if (U >= 0 && (Y = M[U]) instanceof At) {
        if (!U && Y.type == T && Y.length == V)
          return Y;
        (q = Y.prop(Ne.lookAhead)) && (I = D[U] + Y.length + q);
      }
      return x(T, M, D, V, I, E);
    };
  }
  function $(T, E, M, D, V, I, U, Y, q) {
    let te = [], ue = [];
    for (; T.length > D; )
      te.push(T.pop()), ue.push(E.pop() + M - V);
    T.push(x(i.types[U], te, ue, I - V, Y - I, q)), E.push(V - M);
  }
  function x(T, E, M, D, V, I, U) {
    if (I) {
      let Y = [Ne.contextHash, I];
      U = U ? [Y].concat(U) : [Y];
    }
    if (V > 25) {
      let Y = [Ne.lookAhead, V];
      U = U ? [Y].concat(U) : [Y];
    }
    return new At(T, E, M, D, U);
  }
  function P(T, E) {
    let M = c.fork(), D = 0, V = 0, I = 0, U = M.end - r, Y = { size: 0, start: 0, skip: 0 };
    e: for (let q = M.pos - T; M.pos > q; ) {
      let te = M.size;
      if (M.id == E && te >= 0) {
        Y.size = D, Y.start = V, Y.skip = I, I += 4, D += 4, M.next();
        continue;
      }
      let ue = M.pos - te;
      if (te < 0 || ue < q || M.start < U)
        break;
      let Ae = M.id >= o ? 4 : 0, We = M.start;
      for (M.next(); M.pos > ue; ) {
        if (M.size < 0)
          if (M.size == -3)
            Ae += 4;
          else
            break e;
        else M.id >= o && (Ae += 4);
        M.next();
      }
      V = We, D += te, I += Ae;
    }
    return (E < 0 || D == T) && (Y.size = D, Y.start = V, Y.skip = I), Y.size > 4 ? Y : void 0;
  }
  function k(T, E, M) {
    let { id: D, start: V, end: I, size: U } = c;
    if (c.next(), U >= 0 && D < o) {
      let Y = M;
      if (U > 4) {
        let q = c.pos - (U - 4);
        for (; c.pos > q; )
          M = k(T, E, M);
      }
      E[--M] = Y, E[--M] = I - T, E[--M] = V - T, E[--M] = D;
    } else U == -3 ? u = D : U == -4 && (O = D);
    return M;
  }
  let R = [], w = [];
  for (; c.pos > 0; )
    p(n.start || 0, n.bufferStart || 0, R, w, -1, 0);
  let Z = (e = n.length) !== null && e !== void 0 ? e : R.length ? w[0] + R[0].length : 0;
  return new At(f[n.topID], R.reverse(), w.reverse(), Z);
}
const Em = /* @__PURE__ */ new WeakMap();
function Nc(n, e) {
  if (!n.isAnonymous || e instanceof fs || e.type != n)
    return 1;
  let t = Em.get(e);
  if (t == null) {
    t = 1;
    for (let i of e.children) {
      if (i.type != n || !(i instanceof At)) {
        t = 1;
        break;
      }
      t += Nc(n, i);
    }
    Em.set(e, t);
  }
  return t;
}
function nd(n, e, t, i, r, l, o, c, f) {
  let u = 0;
  for (let $ = i; $ < r; $++)
    u += Nc(n, e[$]);
  let O = Math.ceil(
    u * 1.5 / 8
    /* Balance.BranchFactor */
  ), p = [], g = [];
  function b($, x, P, k, R) {
    for (let w = P; w < k; ) {
      let Z = w, T = x[w], E = Nc(n, $[w]);
      for (w++; w < k; w++) {
        let M = Nc(n, $[w]);
        if (E + M >= O)
          break;
        E += M;
      }
      if (w == Z + 1) {
        if (E > O) {
          let M = $[Z];
          b(M.children, M.positions, 0, M.children.length, x[Z] + R);
          continue;
        }
        p.push($[Z]);
      } else {
        let M = x[w - 1] + $[w - 1].length - T;
        p.push(nd(n, $, x, Z, w, T, M, null, f));
      }
      g.push(T + R - l);
    }
  }
  return b(e, t, i, r, 0), (c || f)(p, g, o);
}
class qv {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, t, i) {
    let r = this.map.get(e);
    r || this.map.set(e, r = /* @__PURE__ */ new Map()), r.set(t, i);
  }
  getBuffer(e, t) {
    let i = this.map.get(e);
    return i && i.get(t);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, t) {
    e instanceof lr ? this.setBuffer(e.context.buffer, e.index, t) : e instanceof yi && this.map.set(e.tree, t);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof lr ? this.getBuffer(e.context.buffer, e.index) : e instanceof yi ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, t) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, t) : this.map.set(e.tree, t);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class Mr {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, t, i, r, l = !1, o = !1) {
    this.from = e, this.to = t, this.tree = i, this.offset = r, this.open = (l ? 1 : 0) | (o ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, t = [], i = !1) {
    let r = [new Mr(0, e.length, e, 0, !1, i)];
    for (let l of t)
      l.to > e.length && r.push(l);
    return r;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, t, i = 128) {
    if (!t.length)
      return e;
    let r = [], l = 1, o = e.length ? e[0] : null;
    for (let c = 0, f = 0, u = 0; ; c++) {
      let O = c < t.length ? t[c] : null, p = O ? O.fromA : 1e9;
      if (p - f >= i)
        for (; o && o.from < p; ) {
          let g = o;
          if (f >= g.from || p <= g.to || u) {
            let b = Math.max(g.from, f) - u, $ = Math.min(g.to, p) - u;
            g = b >= $ ? null : new Mr(b, $, g.tree, g.offset + u, c > 0, !!O);
          }
          if (g && r.push(g), o.to > p)
            break;
          o = l < e.length ? e[l++] : null;
        }
      if (!O)
        break;
      f = O.toA, u = O.toA - O.toB;
    }
    return r;
  }
}
class Vv {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, t, i) {
    return typeof e == "string" && (e = new $Z(e)), i = i ? i.length ? i.map((r) => new Sn(r.from, r.to)) : [new Sn(0, 0)] : [new Sn(0, e.length)], this.createParse(e, t || [], i);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, t, i) {
    let r = this.startParse(e, t, i);
    for (; ; ) {
      let l = r.advance();
      if (l)
        return l;
    }
  }
}
class $Z {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, t) {
    return this.string.slice(e, t);
  }
}
function yZ(n) {
  return (e, t, i, r) => new xZ(e, n, t, i, r);
}
class qm {
  constructor(e, t, i, r, l) {
    this.parser = e, this.parse = t, this.overlay = i, this.target = r, this.from = l;
  }
}
function Vm(n) {
  if (!n.length || n.some((e) => e.from >= e.to))
    throw new RangeError("Invalid inner parse ranges given: " + JSON.stringify(n));
}
class QZ {
  constructor(e, t, i, r, l, o, c) {
    this.parser = e, this.predicate = t, this.mounts = i, this.index = r, this.start = l, this.target = o, this.prev = c, this.depth = 0, this.ranges = [];
  }
}
const bO = new Ne({ perNode: !0 });
class xZ {
  constructor(e, t, i, r, l) {
    this.nest = t, this.input = i, this.fragments = r, this.ranges = l, this.inner = [], this.innerDone = 0, this.baseTree = null, this.stoppedAt = null, this.baseParse = e;
  }
  advance() {
    if (this.baseParse) {
      let i = this.baseParse.advance();
      if (!i)
        return null;
      if (this.baseParse = null, this.baseTree = i, this.startInner(), this.stoppedAt != null)
        for (let r of this.inner)
          r.parse.stopAt(this.stoppedAt);
    }
    if (this.innerDone == this.inner.length) {
      let i = this.baseTree;
      return this.stoppedAt != null && (i = new At(i.type, i.children, i.positions, i.length, i.propValues.concat([[bO, this.stoppedAt]]))), i;
    }
    let e = this.inner[this.innerDone], t = e.parse.advance();
    if (t) {
      this.innerDone++;
      let i = Object.assign(/* @__PURE__ */ Object.create(null), e.target.props);
      i[Ne.mounted.id] = new jo(t, e.overlay, e.parser), e.target.props = i;
    }
    return null;
  }
  get parsedPos() {
    if (this.baseParse)
      return 0;
    let e = this.input.length;
    for (let t = this.innerDone; t < this.inner.length; t++)
      this.inner[t].from < e && (e = Math.min(e, this.inner[t].parse.parsedPos));
    return e;
  }
  stopAt(e) {
    if (this.stoppedAt = e, this.baseParse)
      this.baseParse.stopAt(e);
    else
      for (let t = this.innerDone; t < this.inner.length; t++)
        this.inner[t].parse.stopAt(e);
  }
  startInner() {
    let e = new kZ(this.fragments), t = null, i = null, r = new lh(new yi(this.baseTree, this.ranges[0].from, 0, null), Wt.IncludeAnonymous | Wt.IgnoreMounts);
    e: for (let l, o; ; ) {
      let c = !0, f;
      if (this.stoppedAt != null && r.from >= this.stoppedAt)
        c = !1;
      else if (e.hasNode(r)) {
        if (t) {
          let u = t.mounts.find((O) => O.frag.from <= r.from && O.frag.to >= r.to && O.mount.overlay);
          if (u)
            for (let O of u.mount.overlay) {
              let p = O.from + u.pos, g = O.to + u.pos;
              p >= r.from && g <= r.to && !t.ranges.some((b) => b.from < g && b.to > p) && t.ranges.push({ from: p, to: g });
            }
        }
        c = !1;
      } else if (i && (o = PZ(i.ranges, r.from, r.to)))
        c = o != 2;
      else if (!r.type.isAnonymous && (l = this.nest(r, this.input)) && (r.from < r.to || !l.overlay)) {
        r.tree || wZ(r);
        let u = e.findMounts(r.from, l.parser);
        if (typeof l.overlay == "function")
          t = new QZ(l.parser, l.overlay, u, this.inner.length, r.from, r.tree, t);
        else {
          let O = Ym(this.ranges, l.overlay || (r.from < r.to ? [new Sn(r.from, r.to)] : []));
          O.length && Vm(O), (O.length || !l.overlay) && this.inner.push(new qm(l.parser, O.length ? l.parser.startParse(this.input, Dm(u, O), O) : l.parser.startParse(""), l.overlay ? l.overlay.map((p) => new Sn(p.from - r.from, p.to - r.from)) : null, r.tree, O.length ? O[0].from : r.from)), l.overlay ? O.length && (i = { ranges: O, depth: 0, prev: i }) : c = !1;
        }
      } else if (t && (f = t.predicate(r)) && (f === !0 && (f = new Sn(r.from, r.to)), f.from < f.to)) {
        let u = t.ranges.length - 1;
        u >= 0 && t.ranges[u].to == f.from ? t.ranges[u] = { from: t.ranges[u].from, to: f.to } : t.ranges.push(f);
      }
      if (c && r.firstChild())
        t && t.depth++, i && i.depth++;
      else
        for (; !r.nextSibling(); ) {
          if (!r.parent())
            break e;
          if (t && !--t.depth) {
            let u = Ym(this.ranges, t.ranges);
            u.length && (Vm(u), this.inner.splice(t.index, 0, new qm(t.parser, t.parser.startParse(this.input, Dm(t.mounts, u), u), t.ranges.map((O) => new Sn(O.from - t.start, O.to - t.start)), t.target, u[0].from))), t = t.prev;
          }
          i && !--i.depth && (i = i.prev);
        }
    }
  }
}
function PZ(n, e, t) {
  for (let i of n) {
    if (i.from >= t)
      break;
    if (i.to > e)
      return i.from <= e && i.to >= t ? 2 : 1;
  }
  return 0;
}
function Lm(n, e, t, i, r, l) {
  if (e < t) {
    let o = n.buffer[e + 1];
    i.push(n.slice(e, t, o)), r.push(o - l);
  }
}
function wZ(n) {
  let { node: e } = n, t = [], i = e.context.buffer;
  do
    t.push(n.index), n.parent();
  while (!n.tree);
  let r = n.tree, l = r.children.indexOf(i), o = r.children[l], c = o.buffer, f = [l];
  function u(O, p, g, b, $, x) {
    let P = t[x], k = [], R = [];
    Lm(o, O, P, k, R, b);
    let w = c[P + 1], Z = c[P + 2];
    f.push(k.length);
    let T = x ? u(P + 4, c[P + 3], o.set.types[c[P]], w, Z - w, x - 1) : e.toTree();
    return k.push(T), R.push(w - b), Lm(o, c[P + 3], p, k, R, b), new At(g, k, R, $);
  }
  r.children[l] = u(0, c.length, Ri.none, 0, o.length, t.length - 1);
  for (let O of f) {
    let p = n.tree.children[O], g = n.tree.positions[O];
    n.yield(new yi(p, g + n.from, O, n._tree));
  }
}
class Um {
  constructor(e, t) {
    this.offset = t, this.done = !1, this.cursor = e.cursor(Wt.IncludeAnonymous | Wt.IgnoreMounts);
  }
  // Move to the first node (in pre-order) that starts at or after `pos`.
  moveTo(e) {
    let { cursor: t } = this, i = e - this.offset;
    for (; !this.done && t.from < i; )
      t.to >= e && t.enter(i, 1, Wt.IgnoreOverlays | Wt.ExcludeBuffers) || t.next(!1) || (this.done = !0);
  }
  hasNode(e) {
    if (this.moveTo(e.from), !this.done && this.cursor.from + this.offset == e.from && this.cursor.tree)
      for (let t = this.cursor.tree; ; ) {
        if (t == e.tree)
          return !0;
        if (t.children.length && t.positions[0] == 0 && t.children[0] instanceof At)
          t = t.children[0];
        else
          break;
      }
    return !1;
  }
}
let kZ = class {
  constructor(e) {
    var t;
    if (this.fragments = e, this.curTo = 0, this.fragI = 0, e.length) {
      let i = this.curFrag = e[0];
      this.curTo = (t = i.tree.prop(bO)) !== null && t !== void 0 ? t : i.to, this.inner = new Um(i.tree, -i.offset);
    } else
      this.curFrag = this.inner = null;
  }
  hasNode(e) {
    for (; this.curFrag && e.from >= this.curTo; )
      this.nextFrag();
    return this.curFrag && this.curFrag.from <= e.from && this.curTo >= e.to && this.inner.hasNode(e);
  }
  nextFrag() {
    var e;
    if (this.fragI++, this.fragI == this.fragments.length)
      this.curFrag = this.inner = null;
    else {
      let t = this.curFrag = this.fragments[this.fragI];
      this.curTo = (e = t.tree.prop(bO)) !== null && e !== void 0 ? e : t.to, this.inner = new Um(t.tree, -t.offset);
    }
  }
  findMounts(e, t) {
    var i;
    let r = [];
    if (this.inner) {
      this.inner.cursor.moveTo(e, 1);
      for (let l = this.inner.cursor.node; l; l = l.parent) {
        let o = (i = l.tree) === null || i === void 0 ? void 0 : i.prop(Ne.mounted);
        if (o && o.parser == t)
          for (let c = this.fragI; c < this.fragments.length; c++) {
            let f = this.fragments[c];
            if (f.from >= l.to)
              break;
            f.tree == this.curFrag.tree && r.push({
              frag: f,
              pos: l.from - f.offset,
              mount: o
            });
          }
      }
    }
    return r;
  }
};
function Ym(n, e) {
  let t = null, i = e;
  for (let r = 1, l = 0; r < n.length; r++) {
    let o = n[r - 1].to, c = n[r].from;
    for (; l < i.length; l++) {
      let f = i[l];
      if (f.from >= c)
        break;
      f.to <= o || (t || (i = t = e.slice()), f.from < o ? (t[l] = new Sn(f.from, o), f.to > c && t.splice(l + 1, 0, new Sn(c, f.to))) : f.to > c ? t[l--] = new Sn(c, f.to) : t.splice(l--, 1));
    }
  }
  return i;
}
function _Z(n, e, t, i) {
  let r = 0, l = 0, o = !1, c = !1, f = -1e9, u = [];
  for (; ; ) {
    let O = r == n.length ? 1e9 : o ? n[r].to : n[r].from, p = l == e.length ? 1e9 : c ? e[l].to : e[l].from;
    if (o != c) {
      let g = Math.max(f, t), b = Math.min(O, p, i);
      g < b && u.push(new Sn(g, b));
    }
    if (f = Math.min(O, p), f == 1e9)
      break;
    O == f && (o ? (o = !1, r++) : o = !0), p == f && (c ? (c = !1, l++) : c = !0);
  }
  return u;
}
function Dm(n, e) {
  let t = [];
  for (let { pos: i, mount: r, frag: l } of n) {
    let o = i + (r.overlay ? r.overlay[0].from : 0), c = o + r.tree.length, f = Math.max(l.from, o), u = Math.min(l.to, c);
    if (r.overlay) {
      let O = r.overlay.map((g) => new Sn(g.from + i, g.to + i)), p = _Z(e, O, f, u);
      for (let g = 0, b = f; ; g++) {
        let $ = g == p.length, x = $ ? u : p[g].from;
        if (x > b && t.push(new Mr(b, x, r.tree, -o, l.from >= b || l.openStart, l.to <= x || l.openEnd)), $)
          break;
        b = p[g].to;
      }
    } else
      t.push(new Mr(f, u, r.tree, -o, l.from >= o || l.openStart, l.to <= c || l.openEnd));
  }
  return t;
}
class oh {
  /**
  @internal
  */
  constructor(e, t, i, r, l, o, c, f, u, O = 0, p) {
    this.p = e, this.stack = t, this.state = i, this.reducePos = r, this.pos = l, this.score = o, this.buffer = c, this.bufferBase = f, this.curContext = u, this.lookAhead = O, this.parent = p;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, t) => t % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, t, i = 0) {
    let r = e.parser.context;
    return new oh(e, [], t, i, i, 0, [], 0, r ? new zm(r, r.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, t) {
    this.stack.push(this.state, t, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var t;
    let i = e >> 19, r = e & 65535, { parser: l } = this.p, o = this.reducePos < this.pos - 25;
    o && this.setLookAhead(this.pos);
    let c = l.dynamicPrecedence(r);
    if (c && (this.score += c), i == 0) {
      this.pushState(l.getGoto(this.state, r, !0), this.reducePos), r < l.minRepeatTerm && this.storeNode(r, this.reducePos, this.reducePos, o ? 8 : 4, !0), this.reduceContext(r, this.reducePos);
      return;
    }
    let f = this.stack.length - (i - 1) * 3 - (e & 262144 ? 6 : 0), u = f ? this.stack[f - 2] : this.p.ranges[0].from, O = this.reducePos - u;
    O >= 2e3 && !(!((t = this.p.parser.nodeSet.types[r]) === null || t === void 0) && t.isAnonymous) && (u == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = O) : this.p.lastBigReductionSize < O && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = u, this.p.lastBigReductionSize = O));
    let p = f ? this.stack[f - 1] : 0, g = this.bufferBase + this.buffer.length - p;
    if (r < l.minRepeatTerm || e & 131072) {
      let b = l.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(r, u, b, g + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[f];
    else {
      let b = this.stack[f - 3];
      this.state = l.getGoto(b, r, !0);
    }
    for (; this.stack.length > f; )
      this.stack.pop();
    this.reduceContext(r, u);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, t, i, r = 4, l = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let o = this, c = this.buffer.length;
      if (c == 0 && o.parent && (c = o.bufferBase - o.parent.bufferBase, o = o.parent), c > 0 && o.buffer[c - 4] == 0 && o.buffer[c - 1] > -1) {
        if (t == i)
          return;
        if (o.buffer[c - 2] >= t) {
          o.buffer[c - 2] = i;
          return;
        }
      }
    }
    if (!l || this.pos == i)
      this.buffer.push(e, t, i, r);
    else {
      let o = this.buffer.length;
      if (o > 0 && this.buffer[o - 4] != 0) {
        let c = !1;
        for (let f = o; f > 0 && this.buffer[f - 2] > i; f -= 4)
          if (this.buffer[f - 1] >= 0) {
            c = !0;
            break;
          }
        if (c)
          for (; o > 0 && this.buffer[o - 2] > i; )
            this.buffer[o] = this.buffer[o - 4], this.buffer[o + 1] = this.buffer[o - 3], this.buffer[o + 2] = this.buffer[o - 2], this.buffer[o + 3] = this.buffer[o - 1], o -= 4, r > 4 && (r -= 4);
      }
      this.buffer[o] = e, this.buffer[o + 1] = t, this.buffer[o + 2] = i, this.buffer[o + 3] = r;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, t, i, r) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = r, this.shiftContext(t, i), t <= this.p.parser.maxNode && this.buffer.push(t, i, r, 4);
    else {
      let l = e, { parser: o } = this.p;
      (r > this.pos || t <= o.maxNode) && (this.pos = r, o.stateFlag(
        l,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = r)), this.pushState(l, i), this.shiftContext(t, i), t <= o.maxNode && this.buffer.push(t, i, r, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, t, i, r) {
    e & 65536 ? this.reduce(e) : this.shift(e, t, i, r);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, t) {
    let i = this.p.reused.length - 1;
    (i < 0 || this.p.reused[i] != e) && (this.p.reused.push(e), i++);
    let r = this.pos;
    this.reducePos = this.pos = r + e.length, this.pushState(t, r), this.buffer.push(
      i,
      r,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, t = e.buffer.length;
    for (; t > 0 && e.buffer[t - 2] > e.reducePos; )
      t -= 4;
    let i = e.buffer.slice(t), r = e.bufferBase + t;
    for (; e && r == e.bufferBase; )
      e = e.parent;
    return new oh(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, i, r, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, t) {
    let i = e <= this.p.parser.maxNode;
    i && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, i ? 8 : 4), this.pos = this.reducePos = t, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let t = new WZ(this); ; ) {
      let i = this.p.parser.stateSlot(
        t.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(t.state, e);
      if (i == 0)
        return !1;
      if (!(i & 65536))
        return !0;
      t.reduce(i);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let t = this.p.parser.nextStates(this.state);
    if (t.length > 8 || this.stack.length >= 120) {
      let r = [];
      for (let l = 0, o; l < t.length; l += 2)
        (o = t[l + 1]) != this.state && this.p.parser.hasAction(o, e) && r.push(t[l], o);
      if (this.stack.length < 120)
        for (let l = 0; r.length < 8 && l < t.length; l += 2) {
          let o = t[l + 1];
          r.some((c, f) => f & 1 && c == o) || r.push(t[l], o);
        }
      t = r;
    }
    let i = [];
    for (let r = 0; r < t.length && i.length < 4; r += 2) {
      let l = t[r + 1];
      if (l == this.state)
        continue;
      let o = this.split();
      o.pushState(l, this.pos), o.storeNode(0, o.pos, o.pos, 4, !0), o.shiftContext(t[r], this.pos), o.reducePos = this.pos, o.score -= 200, i.push(o);
    }
    return i;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, t = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(t & 65536))
      return !1;
    if (!e.validAction(this.state, t)) {
      let i = t >> 19, r = t & 65535, l = this.stack.length - i * 3;
      if (l < 0 || e.getGoto(this.stack[l], r, !1) < 0) {
        let o = this.findForcedReduction();
        if (o == null)
          return !1;
        t = o;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(t), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, t = [], i = (r, l) => {
      if (!t.includes(r))
        return t.push(r), e.allActions(r, (o) => {
          if (!(o & 393216)) if (o & 65536) {
            let c = (o >> 19) - l;
            if (c > 1) {
              let f = o & 65535, u = this.stack.length - c * 3;
              if (u >= 0 && e.getGoto(this.stack[u], f, !1) >= 0)
                return c << 19 | 65536 | f;
            }
          } else {
            let c = i(o, l + 1);
            if (c != null)
              return c;
          }
        });
    };
    return i(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let t = 0; t < this.stack.length; t += 3)
      if (this.stack[t] != e.stack[t])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  reduceContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let t = new zm(this.curContext.tracker, e);
      t.hash != this.curContext.hash && this.emitContext(), this.curContext = t;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
}
class zm {
  constructor(e, t) {
    this.tracker = e, this.context = t, this.hash = e.strict ? e.hash(t) : 0;
  }
}
class WZ {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let t = e & 65535, i = e >> 19;
    i == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (i - 1) * 3;
    let r = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
    this.state = r;
  }
}
class ah {
  constructor(e, t, i) {
    this.stack = e, this.pos = t, this.index = i, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, t = e.bufferBase + e.buffer.length) {
    return new ah(e, t, t - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new ah(this.stack, this.pos, this.index);
  }
}
function _o(n, e = Uint16Array) {
  if (typeof n != "string")
    return n;
  let t = null;
  for (let i = 0, r = 0; i < n.length; ) {
    let l = 0;
    for (; ; ) {
      let o = n.charCodeAt(i++), c = !1;
      if (o == 126) {
        l = 65535;
        break;
      }
      o >= 92 && o--, o >= 34 && o--;
      let f = o - 32;
      if (f >= 46 && (f -= 46, c = !0), l += f, c)
        break;
      l *= 46;
    }
    t ? t[r++] = l : t = new e(l);
  }
  return t;
}
class Fc {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const jm = new Fc();
class ZZ {
  /**
  @internal
  */
  constructor(e, t) {
    this.input = e, this.ranges = t, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = jm, this.rangeIndex = 0, this.pos = this.chunkPos = t[0].from, this.range = t[0], this.end = t[t.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, t) {
    let i = this.range, r = this.rangeIndex, l = this.pos + e;
    for (; l < i.from; ) {
      if (!r)
        return null;
      let o = this.ranges[--r];
      l -= i.from - o.to, i = o;
    }
    for (; t < 0 ? l > i.to : l >= i.to; ) {
      if (r == this.ranges.length - 1)
        return null;
      let o = this.ranges[++r];
      l += o.from - i.to, i = o;
    }
    return l;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let t of this.ranges)
      if (t.to > e)
        return Math.max(e, t.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let t = this.chunkOff + e, i, r;
    if (t >= 0 && t < this.chunk.length)
      i = this.pos + e, r = this.chunk.charCodeAt(t);
    else {
      let l = this.resolveOffset(e, 1);
      if (l == null)
        return -1;
      if (i = l, i >= this.chunk2Pos && i < this.chunk2Pos + this.chunk2.length)
        r = this.chunk2.charCodeAt(i - this.chunk2Pos);
      else {
        let o = this.rangeIndex, c = this.range;
        for (; c.to <= i; )
          c = this.ranges[++o];
        this.chunk2 = this.input.chunk(this.chunk2Pos = i), i + this.chunk2.length > c.to && (this.chunk2 = this.chunk2.slice(0, c.to - i)), r = this.chunk2.charCodeAt(0);
      }
    }
    return i >= this.token.lookAhead && (this.token.lookAhead = i + 1), r;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, t = 0) {
    let i = t ? this.resolveOffset(t, -1) : this.pos;
    if (i == null || i < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = i;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, t) {
    this.token.value = e, this.token.end = t;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: t } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = t, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), t = this.pos + e.length;
      this.chunk = t > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, t) {
    if (t ? (this.token = t, t.start = e, t.lookAhead = e + 1, t.value = t.extended = -1) : this.token = jm, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, t) {
    if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
    if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
    if (e >= this.range.from && t <= this.range.to)
      return this.input.read(e, t);
    let i = "";
    for (let r of this.ranges) {
      if (r.from >= t)
        break;
      r.to > e && (i += this.input.read(Math.max(r.from, e), Math.min(r.to, t)));
    }
    return i;
  }
}
class Sl {
  constructor(e, t) {
    this.data = e, this.id = t;
  }
  token(e, t) {
    let { parser: i } = t.p;
    Lv(this.data, e, t, this.id, i.data, i.tokenPrecTable);
  }
}
Sl.prototype.contextual = Sl.prototype.fallback = Sl.prototype.extend = !1;
class ch {
  constructor(e, t, i) {
    this.precTable = t, this.elseToken = i, this.data = typeof e == "string" ? _o(e) : e;
  }
  token(e, t) {
    let i = e.pos, r = 0;
    for (; ; ) {
      let l = e.next < 0, o = e.resolveOffset(1, 1);
      if (Lv(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (l || r++, o == null)
        break;
      e.reset(o, e.token);
    }
    r && (e.reset(i, e.token), e.acceptToken(this.elseToken, r));
  }
}
ch.prototype.contextual = Sl.prototype.fallback = Sl.prototype.extend = !1;
class Pn {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, t = {}) {
    this.token = e, this.contextual = !!t.contextual, this.fallback = !!t.fallback, this.extend = !!t.extend;
  }
}
function Lv(n, e, t, i, r, l) {
  let o = 0, c = 1 << i, { dialect: f } = t.p.parser;
  e: for (; c & n[o]; ) {
    let u = n[o + 1];
    for (let b = o + 3; b < u; b += 2)
      if ((n[b + 1] & c) > 0) {
        let $ = n[b];
        if (f.allows($) && (e.token.value == -1 || e.token.value == $ || TZ($, e.token.value, r, l))) {
          e.acceptToken($);
          break;
        }
      }
    let O = e.next, p = 0, g = n[o + 2];
    if (e.next < 0 && g > p && n[u + g * 3 - 3] == 65535) {
      o = n[u + g * 3 - 1];
      continue e;
    }
    for (; p < g; ) {
      let b = p + g >> 1, $ = u + b + (b << 1), x = n[$], P = n[$ + 1] || 65536;
      if (O < x)
        g = b;
      else if (O >= P)
        p = b + 1;
      else {
        o = n[$ + 2], e.advance();
        continue e;
      }
    }
    break;
  }
}
function Bm(n, e, t) {
  for (let i = e, r; (r = n[i]) != 65535; i++)
    if (r == t)
      return i - e;
  return -1;
}
function TZ(n, e, t, i) {
  let r = Bm(t, i, e);
  return r < 0 || Bm(t, i, n) < r;
}
const nn = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let du = null;
function Im(n, e, t) {
  let i = n.cursor(Wt.IncludeAnonymous);
  for (i.moveTo(e); ; )
    if (!(t < 0 ? i.childBefore(e) : i.childAfter(e)))
      for (; ; ) {
        if ((t < 0 ? i.to < e : i.from > e) && !i.type.isError)
          return t < 0 ? Math.max(0, Math.min(
            i.to - 1,
            e - 25
            /* Lookahead.Margin */
          )) : Math.min(n.length, Math.max(
            i.from + 1,
            e + 25
            /* Lookahead.Margin */
          ));
        if (t < 0 ? i.prevSibling() : i.nextSibling())
          break;
        if (!i.parent())
          return t < 0 ? 0 : n.length;
      }
}
class CZ {
  constructor(e, t) {
    this.fragments = e, this.nodeSet = t, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? Im(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? Im(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let t = this.trees.length - 1;
      if (t < 0)
        return this.nextFragment(), null;
      let i = this.trees[t], r = this.index[t];
      if (r == i.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let l = i.children[r], o = this.start[t] + i.positions[r];
      if (o > e)
        return this.nextStart = o, null;
      if (l instanceof At) {
        if (o == e) {
          if (o < this.safeFrom)
            return null;
          let c = o + l.length;
          if (c <= this.safeTo) {
            let f = l.prop(Ne.lookAhead);
            if (!f || c + f < this.fragment.to)
              return l;
          }
        }
        this.index[t]++, o + l.length >= Math.max(this.safeFrom, e) && (this.trees.push(l), this.start.push(o), this.index.push(0));
      } else
        this.index[t]++, this.nextStart = o + l.length;
    }
  }
}
class RZ {
  constructor(e, t) {
    this.stream = t, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((i) => new Fc());
  }
  getActions(e) {
    let t = 0, i = null, { parser: r } = e.p, { tokenizers: l } = r, o = r.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), c = e.curContext ? e.curContext.hash : 0, f = 0;
    for (let u = 0; u < l.length; u++) {
      if (!(1 << u & o))
        continue;
      let O = l[u], p = this.tokens[u];
      if (!(i && !O.fallback) && ((O.contextual || p.start != e.pos || p.mask != o || p.context != c) && (this.updateCachedToken(p, O, e), p.mask = o, p.context = c), p.lookAhead > p.end + 25 && (f = Math.max(p.lookAhead, f)), p.value != 0)) {
        let g = t;
        if (p.extended > -1 && (t = this.addActions(e, p.extended, p.end, t)), t = this.addActions(e, p.value, p.end, t), !O.extend && (i = p, t > g))
          break;
      }
    }
    for (; this.actions.length > t; )
      this.actions.pop();
    return f && e.setLookAhead(f), !i && e.pos == this.stream.end && (i = new Fc(), i.value = e.p.parser.eofTerm, i.start = i.end = e.pos, t = this.addActions(e, i.value, i.end, t)), this.mainToken = i, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let t = new Fc(), { pos: i, p: r } = e;
    return t.start = i, t.end = Math.min(i + 1, r.stream.end), t.value = i == r.stream.end ? r.parser.eofTerm : 0, t;
  }
  updateCachedToken(e, t, i) {
    let r = this.stream.clipPos(i.pos);
    if (t.token(this.stream.reset(r, e), i), e.value > -1) {
      let { parser: l } = i.p;
      for (let o = 0; o < l.specialized.length; o++)
        if (l.specialized[o] == e.value) {
          let c = l.specializers[o](this.stream.read(e.start, e.end), i);
          if (c >= 0 && i.p.parser.dialect.allows(c >> 1)) {
            c & 1 ? e.extended = c >> 1 : e.value = c >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(r + 1);
  }
  putAction(e, t, i, r) {
    for (let l = 0; l < r; l += 3)
      if (this.actions[l] == e)
        return r;
    return this.actions[r++] = e, this.actions[r++] = t, this.actions[r++] = i, r;
  }
  addActions(e, t, i, r) {
    let { state: l } = e, { parser: o } = e.p, { data: c } = o;
    for (let f = 0; f < 2; f++)
      for (let u = o.stateSlot(
        l,
        f ? 2 : 1
        /* ParseState.Actions */
      ); ; u += 3) {
        if (c[u] == 65535)
          if (c[u + 1] == 1)
            u = Rr(c, u + 2);
          else {
            r == 0 && c[u + 1] == 2 && (r = this.putAction(Rr(c, u + 2), t, i, r));
            break;
          }
        c[u] == t && (r = this.putAction(Rr(c, u + 1), t, i, r));
      }
    return r;
  }
}
class XZ {
  constructor(e, t, i, r) {
    this.parser = e, this.input = t, this.ranges = r, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new ZZ(t, r), this.tokens = new RZ(e, this.stream), this.topTerm = e.top[1];
    let { from: l } = r[0];
    this.stacks = [oh.start(this, e.top[0], l)], this.fragments = i.length && this.stream.end - l > e.bufferLength * 4 ? new CZ(i, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, t = this.minStackPos, i = this.stacks = [], r, l;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [o] = e;
      for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let o = 0; o < e.length; o++) {
      let c = e[o];
      for (; ; ) {
        if (this.tokens.mainToken = null, c.pos > t)
          i.push(c);
        else {
          if (this.advanceStack(c, i, e))
            continue;
          {
            r || (r = [], l = []), r.push(c);
            let f = this.tokens.getMainToken(c);
            l.push(f.value, f.end);
          }
        }
        break;
      }
    }
    if (!i.length) {
      let o = r && MZ(r);
      if (o)
        return nn && console.log("Finish with " + this.stackID(o)), this.stackToTree(o);
      if (this.parser.strict)
        throw nn && r && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && r) {
      let o = this.stoppedAt != null && r[0].pos > this.stoppedAt ? r[0] : this.runRecovery(r, l, i);
      if (o)
        return nn && console.log("Force-finish " + this.stackID(o)), this.stackToTree(o.forceAll());
    }
    if (this.recovering) {
      let o = this.recovering == 1 ? 1 : this.recovering * 3;
      if (i.length > o)
        for (i.sort((c, f) => f.score - c.score); i.length > o; )
          i.pop();
      i.some((c) => c.reducePos > t) && this.recovering--;
    } else if (i.length > 1) {
      e: for (let o = 0; o < i.length - 1; o++) {
        let c = i[o];
        for (let f = o + 1; f < i.length; f++) {
          let u = i[f];
          if (c.sameState(u) || c.buffer.length > 500 && u.buffer.length > 500)
            if ((c.score - u.score || c.buffer.length - u.buffer.length) > 0)
              i.splice(f--, 1);
            else {
              i.splice(o--, 1);
              continue e;
            }
        }
      }
      i.length > 12 && i.splice(
        12,
        i.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = i[0].pos;
    for (let o = 1; o < i.length; o++)
      i[o].pos < this.minStackPos && (this.minStackPos = i[o].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, t, i) {
    let r = e.pos, { parser: l } = this, o = nn ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && r > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let u = e.curContext && e.curContext.tracker.strict, O = u ? e.curContext.hash : 0;
      for (let p = this.fragments.nodeAt(r); p; ) {
        let g = this.parser.nodeSet.types[p.type.id] == p.type ? l.getGoto(e.state, p.type.id) : -1;
        if (g > -1 && p.length && (!u || (p.prop(Ne.contextHash) || 0) == O))
          return e.useNode(p, g), nn && console.log(o + this.stackID(e) + ` (via reuse of ${l.getName(p.type.id)})`), !0;
        if (!(p instanceof At) || p.children.length == 0 || p.positions[0] > 0)
          break;
        let b = p.children[0];
        if (b instanceof At && p.positions[0] == 0)
          p = b;
        else
          break;
      }
    }
    let c = l.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (c > 0)
      return e.reduce(c), nn && console.log(o + this.stackID(e) + ` (via always-reduce ${l.getName(
        c & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let f = this.tokens.getActions(e);
    for (let u = 0; u < f.length; ) {
      let O = f[u++], p = f[u++], g = f[u++], b = u == f.length || !i, $ = b ? e : e.split(), x = this.tokens.mainToken;
      if ($.apply(O, p, x ? x.start : $.pos, g), nn && console.log(o + this.stackID($) + ` (via ${O & 65536 ? `reduce of ${l.getName(
        O & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${l.getName(p)} @ ${r}${$ == e ? "" : ", split"})`), b)
        return !0;
      $.pos > r ? t.push($) : i.push($);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, t) {
    let i = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > i)
        return Nm(e, t), !0;
    }
  }
  runRecovery(e, t, i) {
    let r = null, l = !1;
    for (let o = 0; o < e.length; o++) {
      let c = e[o], f = t[o << 1], u = t[(o << 1) + 1], O = nn ? this.stackID(c) + " -> " : "";
      if (c.deadEnd && (l || (l = !0, c.restart(), nn && console.log(O + this.stackID(c) + " (restarted)"), this.advanceFully(c, i))))
        continue;
      let p = c.split(), g = O;
      for (let b = 0; p.forceReduce() && b < 10 && (nn && console.log(g + this.stackID(p) + " (via force-reduce)"), !this.advanceFully(p, i)); b++)
        nn && (g = this.stackID(p) + " -> ");
      for (let b of c.recoverByInsert(f))
        nn && console.log(O + this.stackID(b) + " (via recover-insert)"), this.advanceFully(b, i);
      this.stream.end > c.pos ? (u == c.pos && (u++, f = 0), c.recoverByDelete(f, u), nn && console.log(O + this.stackID(c) + ` (via recover-delete ${this.parser.getName(f)})`), Nm(c, i)) : (!r || r.score < c.score) && (r = c);
    }
    return r;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), At.build({
      buffer: ah.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let t = (du || (du = /* @__PURE__ */ new WeakMap())).get(e);
    return t || du.set(e, t = String.fromCodePoint(this.nextStackID++)), t + e;
  }
}
function Nm(n, e) {
  for (let t = 0; t < e.length; t++) {
    let i = e[t];
    if (i.pos == n.pos && i.sameState(n)) {
      e[t].score < n.score && (e[t] = n);
      return;
    }
  }
  e.push(n);
}
class AZ {
  constructor(e, t, i) {
    this.source = e, this.flags = t, this.disabled = i;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const pu = (n) => n;
class Uv {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || pu, this.reduce = e.reduce || pu, this.reuse = e.reuse || pu, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class us extends Vv {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let t = e.nodeNames.split(" ");
    this.minRepeatTerm = t.length;
    for (let c = 0; c < e.repeatNodeCount; c++)
      t.push("");
    let i = Object.keys(e.topRules).map((c) => e.topRules[c][1]), r = [];
    for (let c = 0; c < t.length; c++)
      r.push([]);
    function l(c, f, u) {
      r[c].push([f, f.deserialize(String(u))]);
    }
    if (e.nodeProps)
      for (let c of e.nodeProps) {
        let f = c[0];
        typeof f == "string" && (f = Ne[f]);
        for (let u = 1; u < c.length; ) {
          let O = c[u++];
          if (O >= 0)
            l(O, f, c[u++]);
          else {
            let p = c[u + -O];
            for (let g = -O; g > 0; g--)
              l(c[u++], f, p);
            u++;
          }
        }
      }
    this.nodeSet = new ed(t.map((c, f) => Ri.define({
      name: f >= this.minRepeatTerm ? void 0 : c,
      id: f,
      props: r[f],
      top: i.indexOf(f) > -1,
      error: f == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(f) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = Xv;
    let o = _o(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let c = 0; c < this.specializerSpecs.length; c++)
      this.specialized[c] = this.specializerSpecs[c].term;
    this.specializers = this.specializerSpecs.map(Fm), this.states = _o(e.states, Uint32Array), this.data = _o(e.stateData), this.goto = _o(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((c) => typeof c == "number" ? new Sl(o, c) : c), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, t, i) {
    let r = new XZ(this, e, t, i);
    for (let l of this.wrappers)
      r = l(r, e, t, i);
    return r;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, t, i = !1) {
    let r = this.goto;
    if (t >= r[0])
      return -1;
    for (let l = r[t + 1]; ; ) {
      let o = r[l++], c = o & 1, f = r[l++];
      if (c && i)
        return f;
      for (let u = l + (o >> 1); l < u; l++)
        if (r[l] == e)
          return f;
      if (c)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, t) {
    let i = this.data;
    for (let r = 0; r < 2; r++)
      for (let l = this.stateSlot(
        e,
        r ? 2 : 1
        /* ParseState.Actions */
      ), o; ; l += 3) {
        if ((o = i[l]) == 65535)
          if (i[l + 1] == 1)
            o = i[l = Rr(i, l + 2)];
          else {
            if (i[l + 1] == 2)
              return Rr(i, l + 2);
            break;
          }
        if (o == t || o == 0)
          return Rr(i, l + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, t) {
    return this.states[e * 6 + t];
  }
  /**
  @internal
  */
  stateFlag(e, t) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & t) > 0;
  }
  /**
  @internal
  */
  validAction(e, t) {
    return !!this.allActions(e, (i) => i == t ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, t) {
    let i = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), r = i ? t(i) : void 0;
    for (let l = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); r == null; l += 3) {
      if (this.data[l] == 65535)
        if (this.data[l + 1] == 1)
          l = Rr(this.data, l + 2);
        else
          break;
      r = t(Rr(this.data, l + 1));
    }
    return r;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let t = [];
    for (let i = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; i += 3) {
      if (this.data[i] == 65535)
        if (this.data[i + 1] == 1)
          i = Rr(this.data, i + 2);
        else
          break;
      if (!(this.data[i + 2] & 1)) {
        let r = this.data[i + 1];
        t.some((l, o) => o & 1 && l == r) || t.push(this.data[i], r);
      }
    }
    return t;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let t = Object.assign(Object.create(us.prototype), this);
    if (e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let i = this.topRules[e.top];
      if (!i)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      t.top = i;
    }
    return e.tokenizers && (t.tokenizers = this.tokenizers.map((i) => {
      let r = e.tokenizers.find((l) => l.from == i);
      return r ? r.to : i;
    })), e.specializers && (t.specializers = this.specializers.slice(), t.specializerSpecs = this.specializerSpecs.map((i, r) => {
      let l = e.specializers.find((c) => c.from == i.external);
      if (!l)
        return i;
      let o = Object.assign(Object.assign({}, i), { external: l.to });
      return t.specializers[r] = Fm(o), o;
    })), e.contextTracker && (t.context = e.contextTracker), e.dialect && (t.dialect = this.parseDialect(e.dialect)), e.strict != null && (t.strict = e.strict), e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)), e.bufferLength != null && (t.bufferLength = e.bufferLength), t;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let t = this.dynamicPrecedences;
    return t == null ? 0 : t[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let t = Object.keys(this.dialects), i = t.map(() => !1);
    if (e)
      for (let l of e.split(" ")) {
        let o = t.indexOf(l);
        o >= 0 && (i[o] = !0);
      }
    let r = null;
    for (let l = 0; l < t.length; l++)
      if (!i[l])
        for (let o = this.dialects[t[l]], c; (c = this.data[o++]) != 65535; )
          (r || (r = new Uint8Array(this.maxTerm + 1)))[c] = 1;
    return new AZ(e, i, r);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new us(e);
  }
}
function Rr(n, e) {
  return n[e] | n[e + 1] << 16;
}
function MZ(n) {
  let e = null;
  for (let t of n) {
    let i = t.p.stoppedAt;
    (t.pos == t.p.stream.end || i != null && t.pos > i) && t.p.parser.stateFlag(
      t.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < t.score) && (e = t);
  }
  return e;
}
function Fm(n) {
  if (n.external) {
    let e = n.extend ? 1 : 0;
    return (t, i) => n.external(t, i) << 1 | e;
  }
  return n.get;
}
const EZ = { __proto__: null, annotation: 12, array: 20, var: 24, par: 26, opt: 28, ann: 32, bool: 34, float: 36, int: 38, string: 40, _: 50, true: 62, false: 64, infinity: 68, "∅": 74, in: 92, where: 94, if: 98, then: 100, elseif: 102, else: 104, endif: 106, xor: 110, subset: 112, superset: 114, union: 116, diff: 118, symdiff: 120, intersect: 122, div: 124, mod: 126, default: 128, let: 132, constraint: 140, not: 144, "¬": 146, any: 170, of: 172, set: 176, tuple: 180, record: 184, op: 190, enum: 198, function: 202, solve: 206, satisfy: 208, maximize: 210, minimize: 212, include: 216, output: 220, predicate: 224, test: 226, type: 230 }, qZ = us.deserialize({
  version: 14,
  states: "!0jQ]QPOOOOQO'#F]'#F]O&XQPO'#CvO&`QPO'#CxOOQO'#C}'#C}O&gQPO'#DSO&nOQO'#DTO$kQPO'#DWOOQO'#Fc'#FcO*}QPO'#CgO+eQPO'#DrO$kQPO'#DuO$kQPO'#DuO/qQPO'#FbOOQO'#Fb'#FbOOQO'#Cg'#CgOOQO'#F`'#F`OOQO'#F['#F[Q/xQPO'#EtQ]QPOOOOQO'#Ck'#CkOOQO'#Ct'#CtOOQO'#Cz'#CzOOQO'#DQ'#DQO$kQPO'#D^O/}QPO'#DsO0UQPO'#DoO0ZQPO'#CgO0wQPO'#CgO1hQPO'#E`O1|QPO'#CeO2RQPO'#EVO2WQPO'#EXO2]QPO'#EZO2bQPO'#E^O2gQPO'#C`O2gQPO'#EbO2oQPO'#EdO3uQPO'#EfO4TQPO'#EkO4YQPO'#EmO2gQPO'#EoO2gQPO'#ErO4aQPO'#CwO4qQPO,59bOOQO,59b,59bO4{QPO,59bO5TQPO'#FbO7`QPO,59tO7pQPO,59dO7xQPO,59dOOQO,59d,59dO8PQPO,59nO8^QPO,59nOOQO,59n,59nO$kQPO'#DUOOOO'#E{'#E{O8eOQO,59oOOQO,59o,59oO8sQPO,5:jO=UQPO'#FbO=`QPO,59rO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OOArQPO,5:dO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OO$kQPO,5:OOCzQPO,5:kOEhQSO,5:lO$kQPO,5:OO$kQPO,5:OO2gQPO,5:^OIzQPO,5:aOJ}QPO,5:aOLQQPO'#D{OOQO,5:f,5:fOLXQPO,5:hO$kQPO,5:{OOQO,5;`,5;`OOQO-E8r-E8rOL^QPO,59xOLeQPO,5:_OLuQPO,5:_ONcQPO'#DqO! oQPO,5:ZO! tQPO,59ROOQO,59R,59RO!![QPO,5:qO!!aQPO,59RO!!}QPO,59PO2oQPO,5:qO2oQPO,5:sO2oQPO,5:uO2oQPO,5:xO!#tQPO,58zO!$SQPO,5:|O!$bQPO,5;OOOQO,5;Q,5;QO$kQPO,5;QO$kQPO,5;QOOQO,5;V,5;VO!$gQPO,5;XO4TQPO,5;XO!$qQPO,5;ZO!$vQPO,5;^O!${QPO,5;bO!&[QPO,59cO!&fQPO,59cO!&qQPO'#EvOOQO-E8t-E8tO!&xQPO1G.|O!'PQPO1G.|OOQO1G.|1G.|O$kQPO1G/`O2gQPO1G/`OOQO,5;e,5;eOOQO1G/O1G/OO!'XQPO'#CyO!'fQPO1G/OOOQO-E8w-E8wOOQO,5;f,5;fOOQO1G/Y1G/YO2gQPO1G0PO!'nQPO1G/YOOQO-E8x-E8xO!'xQPO,59pOOOO-E8y-E8yOOQO1G/Z1G/ZO$kQPO1G/]OOQO1G0U1G0UO$kQPO,59sO!(PQPO1G/^O!([QPO1G/^OOQO1G/^1G/^O!-WQPO1G/jO!-nQPO1G/jO!3UQPO1G/jO!3`QPO1G/jO!7hQPO1G/jO!8tQPO1G/jO!?QQPO1G/jO!?[QPO1G/jO!D]QPO1G/jO!ITQPO1G/jO!IzQPO1G/jO# bQPO1G/jO# iQPO1G/jO#&sQPO1G/jO#&zQPO1G0VO#'UQPO1G0VOOQO'#ER'#EROOQO1G0W1G0WOOQO1G0Y1G0YO#'`QPO1G/jO#(oQPO1G/xO#)TQPO,5:gO#)_QPO,5:gOOQO,5:g,5:gO#)fQPO'#FbO#)pQPO,5:iO$kQPO'#EOOOQO1G0S1G0SO#)xQPO1G0gO$kQPO1G/dO#-qQPO1G/yO#/aQPO,5:]O#/lQPO,5:]OOQO,5:],5:]O$kQPO1G/uO2oQPO1G0]O#0xQPO1G.mOOQO1G.m1G.mO#1`QPO1G0]O#1eQPO'#CgO#2OQPO'#CgO#2lQPO'#CgO#2qQPO1G.kOOQO1G0]1G0]O#2yQPO1G0_O#3OQPO'#E]O#3TQPO1G0aO#3]QPO1G0dO#3bQPO'#F^O$kQPO1G.fO#4kQPO1G.fO$kQPO1G0hO$kQPO1G0hO2gQPO1G0jO#4vQPO1G0lO#5QQPO1G0lO$kQPO1G0sO#5_QPO1G0uO2oQPO1G0xO#5mQPO1G.}O#5zQPO,5;cO#6[QPO1G.}OOQO-E8u-E8uOOQO,5;b,5;bO#6fQPO'#CwOOQO,5;d,5;dOOQO7+$h7+$hO#6vQPO7+$hOOQO-E8v-E8vO#6}QPO7+$zO#7[QPO7+$zO#7dQPO'#DZO$kQPO,59eOOQO7+$j7+$jP#7lQPO'#EyO#7qQPO7+%kOOQO7+$t7+$tP#7yQPO'#EzOOOO1G/[1G/[O#8QQPO7+$wO#8[QPO1G/_O#8fQPO'#DXOOQO,5;h,5;hOOQO7+$x7+$xO#8kQPO7+$xOOQO-E8z-E8zO#:dQPO7+%qO#:kQPO7+%qOOQO7+%q7+%qO$kQPO7+%dO$kQPO7+%dOOQO,5;m,5;mOOQO1G0R1G0RO#:sQPO1G0ROOQO-E9P-E9PO#:}QPO,59uO#;YQPO,59uO$kQPO,59uO#;bQPO1G0TO#;mQPO1G0TOOQO1G0T1G0TO8vQPO,5:jO#;uQPO7+%OO#<SQPO,5:kO#<ZQPO7+%eO#<kQPO,5:dOLuQPO,5:OOOQO,5;l,5;lOOQO1G/w1G/wO#AtQPO1G/wOOQO-E9O-E9OO#BPQPO7+%aOOQO7+%w7+%wO2oQPO7+%wO#CYQPO,59RO#CsQPO7+$VO#DmQPO7+$VO#DuQPO7+$VO2oQPO7+%yO2gQPO,5:wO#DzQPO7+%{O#FTQPO7+%{OOQO7+%{7+%{O#F]QPO7+&OO#FbQPO'#CdO#FmQPO,5;xO#FuQPO,5;xOOQO,5;x,5;xO#HOQPO7+$QO$kQPO7+$QO#HYQPO7+&SO#LeQPO7+&SO!$qQPO7+&UOOQO7+&W7+&WO$kQPO7+&WO#LoQPO7+&_O$kQPO7+&aO$kQPO7+&aOOQO7+&d7+&dO#LyQPO7+$iO#MTQPO7+$iP$kQPO'#EwO$kQPO,59cOOQO<<HS<<HSP$kQPO'#ExO2gQPO<<HfO#M`QPO<<HfO#MkQPO<<HfOOQO<<Hf<<HfO#7QQPO1G/PO#MsQPO<<IVO#NOQPO<<IVOOQO<<IV<<IVO#NWQPO<<HcO#N_QPO<<HcOOQO<<Hc<<HcOOQO<<Hd<<HdP2gQPO'#E|O#NgQPO,5;nO#NqQPO,5;nOOQO<<I]<<I]O#N{QPO<<I]OOQO-E9Q-E9QO$ SQPO<<IOO$%bQPO<<IOOOQO7+%m7+%mP$%uQPO'#DxOOQO,5;i,5;iO$kQPO1G/aO$%|QPO1G/aOOQO-E8{-E8{O$&XQPO1G/aOOQO,5;j,5;jOOQO7+%o7+%oO$&lQPO7+%oOOQO-E8|-E8|O$&wQPO<<HjO$kQPO'#FPOOQO<<Hj<<HjO$kQPO<<HjO$'SQPO1G0VO$,QQPO1G/jO$-TQPO1G/jOOQO7+%c7+%cP$.WQPO'#FQOOQO<<Ic<<IcOOQO,5;o,5;oO$.`QPO<<GqO$.eQPO<<GqOOQO-E9R-E9RO2oQPO<<GqO$/_QPO<<IeOOQO1G0c1G0cOOQO,5;q,5;qOOQO<<Ig<<IgO$/gQPO<<IgOOQO-E9T-E9TO$0pQPO<<IjO2gQPO,59OOOQO,5;a,5;aOOQO1G1d1G1dO$1yQPO1G1dOOQO-E8s-E8sO$2RQPO<<GlO$kQPOLD*bO$2]QPO<<IpO$2kQPO<<IrO$2uQPO<<I{O$3PQPO<<I{O$3ZQPO<<HTO$3eQPOAN>QOOQOAN>QAN>QO$3mQPOAN>QOOQOAN>qAN>qO$3xQPOAN>qOOQOAN=}AN=}O$4TQPOAN=}OOQOAN>wAN>wP#8vQPO'#FSO$kQPOAN>jO$4[QPO7+${O$kQPO7+${P2gQPO'#E}O$kQPO7+${OOQO<<IZ<<IZP2gQPO'#FOOOQO-E8}-E8}OOQOAN>UAN>UO$kQPOAN>UO$4oQPO,5;kO$4vQPOAN>UO2oQPOAN=]O$4}QPOAN=]P!!}QPO'#FTOOQOAN=]AN=]O$5SQPOAN?PO$6]QPOAN?POOQOAN?PAN?POOQOAN?RAN?RP2oQPO'#FVO$6eQPOAN?UO$6mQPOAN?UO$7vQPOAN?UO$7{QPO1G.jOOQO7+'O7+'OP$8WQPO'#EuO$8]QPO!$'M|O$kQPOAN?[O$kQPOAN?[O$<dQPOG23lO$<oQPOG23lOOQOG23lG23lOOQOG24]G24]OOQOG23iG23iO$<wQPOG24UO$kQPO<<HgO$=RQPO<<HgO$=UQPO<<HgO$=fQPOG23pO$kQPO1G1VOOQOG23pG23pOOQOG22wG22wO2oQPOG22wOOQO,5;p,5;pOOQOG24kG24kO$=mQPOG24kOOQO-E9S-E9SOOQO,5;r,5;rO$>vQPOG24pO$>{QPOG24pOOQO-E9U-E9UOOQOG24pG24pO$kQPO7+$UO$?TQPOG24vO$?_QPOG24vOOQOLD)WLD)WO$?iQPOLD)WO$?tQPOAN>RO$kQPOAN>ROOQOLD)[LD)[O$@UQPO7+&qOOQOLD(cLD(cOOQOLD*VLD*VP2oQPO'#FUOOQOLD*[LD*[O$@cQPOLD*[P$@hQPO'#FWO$@mQPO<<GpOOQO!$'Lr!$'LrO$@wQPOG23mOOQO!$'Mv!$'MvO$AXQPO,5:dO$FlQPO1G/jO$GSQPO1G/jO$LyQPO1G/jO$MTQPO1G/jO%#lQPO1G/jO%$xQPO1G/jO%+eQPO1G/jO%+oQPO1G/jO%0|QPO1G/jO%1dQPO7+%aOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO1G/uO%3`QPO,5:ZO0UQPO'#DoOLuQPO'#DuOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OOLuQPO,5:OO%7{QPO,5:aO%9OQPO,5:aO%:RQPO1G/jO%?iQPO1G/jO%@SQPO1G/jO%FPQPO1G/jO%FWQPO1G/jOLuQPO'#Du",
  stateData: "%F_~O#}OSPOSQOS~OTPOUsOVPOYnO[lO]lO^kO`dOadObdOcdOddOe_Of_OgWOieOofOpfOrSOsWOugO!RhO!djO!hiO!jZO!kZO!wmO!zoO!|pO#OqO#RrO#VtO#XuO#ZvO#`wO#bxO#dyO#eyO#gzO$RVO$TRO$WQO$^SO$_TO$aUO%W[O%X[O%Y[O%Z[O%]ZO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W[O%X[O%Y[O%Z[O%]ZO~O$[}O~P$kO$]!TO~P$kO$`!WO~P$kO$a![O$b!YO$c!YO$d!XO~O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O$XZX$YZX$]ZX$eZX#{ZX%hZX~P&|O$X!rO~O$R!uO!O$UX!X$UX!Y$UX!Z$UX![$UX!]$UX!^$UX!_$UX!`$UX!a$UX!b$UX$T$UX$X$UX$f$UX$g$UX$h$UX$i$UX$j$UX$k$UX$l$UX$m$UX$n$UX$o$UX$p$UX$q$UX$r$UX$s$UX$t$UX$u$UX$v$UX$w$UX$x$UX$y$UX$z$UX${$UX$|$UX$}$UX%O$UX%P$UX%Q$UX%R$UX%S$UX%T$UX%U$UX%V$UX%W$UX%X$UX%Y$UX%Z$UX%[$UX%]$UX%^$UX%_$UX%`$UX%a$UX%b$UX%c$UX%d$UX%e$UX%f$UX%g$UX%i$UX~O$t!xO~P+jO%h!yO~O%g!}O~P$kO$_#OO~O`dOadObdOcdOddOe#ROf#RO!z#SO~P$kO^#TO`dOadObdOcdOddOe#ROf#RO!z#SO~P$kOe#RO$X#SX$Y#SX$e#SX#{#SX%h#SX~O$T#UO~O!x#VO~O$R#WO~O$R#XO~O$R#YO~OTPOVPO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO~P$kO#[#^O#]#_O#^#_O%g#`O~O$aUO~O%g#cO~P$kO$X#fO$Y#gO$ZkX$[kX~P&|O$Z#kO$[#mO~P$kO$Z#kO$[#mO~O$Y$UX$Z$UX$[$UX$]$UX$`$UX!S$UX#{$UX%h$UX$e$UXT$UXV$UXg$UXi$UXo$UXp$UXr$UXs$UXu$UX!R$UX!d$UX!j$UX!k$UX$W$UX$^$UX$_$UX$a$UX#[$UX#]$UX#^$UX!T$UX!U$UX!V$UX!P$UX~P+jO$X#nO$Z#oO$YmX$]mX~P&|O$Y#pO$]#qO~O$]#qO~P$kO$Y#uO$Z#wO$`#vO~P&|O$`#vO~P$kO$a#|O$b!YO$c!YO$d!XO~O$Y#}O$e$OO~P&|O$R!uO!X$UX!Y$UX!Z$UX![$UX!]$UX!^$UX!_$UX!`$UX!a$UX!b$UX$T$UX$Y$UX$e$UX$f$UX$g$UX$h$UX$i$UX$j$UX$k$UX$l$UX$m$UX$n$UX$o$UX$p$UX$q$UX$r$UX$s$UX$t$UX$u$UX$v$UX$w$UX$x$UX$y$UX$z$UX${$UX$|$UX$}$UX%O$UX%P$UX%Q$UX%R$UX%S$UX%T$UX%U$UX%V$UX%W$UX%X$UX%Y$UX%Z$UX%[$UX%]$UX%^$UX%_$UX%`$UX%a$UX%b$UX%c$UX%d$UX%e$UX%f$UX%g$UX%i$UX~O$X$PO!O$UX~P8}O$Y$QO$e$SO~O!O!la!X!la!Y!la!Z!la![!la!]!la!^!la!_!la!`!la!a!la!b!la$T!la$f!la$g!la$h!la$i!la$j!la$k!la$l!la$m!la$n!la$o!la$p!la$q!la$r!la$s!la$t!la$u!la$v!la$w!la$x!la$y!la$z!la${!la$|!la$}!la%O!la%P!la%Q!la%R!la%S!la%T!la%U!la%V!la%W!la%X!la%Y!la%Z!la%[!la%^!la%_!la%`!la%a!la%b!la%c!la%d!la%e!la%f!la%g!la%i!la$Y!la$`!la#{!la%h!la~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$WQO$^SO$_TO$aUO%]ZO$X!la$Z!la$[!la$]!la$e!la!S!la#[!la#]!la#^!la!T!la!U!la!V!la!P!la~P=hOTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W$dO%X$dO%Y$dO%Z$dO%]ZO~OTPOVPO%j$eO~O!b!qO$T!nO%g!mO%i!oO!O!ia!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia$X!ia$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia$Y!ia$Z!ia$[!ia$]!ia$`!ia$e!ia!S!ia#{!ia%h!ia#[!ia#]!ia#^!ia!T!ia!U!ia!V!ia!P!ia~O!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~PEsO!_!hO!`!kO!a!kO%V!hO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO~PEsO$e$lO~P$kO$R$oO~O!S$rO~P&|O#{!ga%h!ga$Y!ga$`!ga~P&|OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!d*zO!j*{O!k*{O$RVO$TRO$WQO$^SO$_TO$aUO%W+ZO%X+ZO%Y+ZO%Z+ZO%]*{O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!hiO!wmO!zoO!|pO#OqO#RrO$`$vO~P$kO!O$wO~O$XZa$YZa$]Za$eZa#{Za%hZa~P&|O!x$xO~O`dOadObdOcdOddOe$zOf$zO!z${O~P$kO[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO~P$kO$R%VO$t%WO#{Sa%hSa~O$t%YO%g%ZO#{#Ua%h#Ua~O$X%[O~O#{#aa%h#aa~P&|O$R%VO~O$t%aO~OT#jaV#jag#jai#jao#jap#jar#jas#jau#ja!R#ja!d#ja$R#ja$T#ja$W#ja$Z#ja$[#ja$^#ja$_#ja$a#ja~P$kO$Zka$[ka~P$kO$Y%dO$Zka$[ka~O$X%fO~P&|O$[%iO~P$kO$Z%jO$[%iO~O$X%oO$YmX$]mX~P&|O$Y#pO$]%pO~O$Y#uO$`%sO~P&|O$e%uO~P&|OTPOVPO$e%zO~O$Y%{O$e%zO~O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$o!bO$p!bO$q!cO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO$X!Wi$f!Wi$g!Wi$h!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO~P!(dO$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi~P!(dO!O!eO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$r!dO$s!dO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!X!cO$q!cO~P!.UO!X!Wi$q!Wi~P!.UO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!X!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!O!eO!Y!eO!Z!eO$t!eO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO~P!3jO!O!Wi!Y!Wi!Z!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi~P!3jO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!]!gO%U!gO~P!:QO!]!Wi%U!Wi~P!:QO!`!kO!a!kO!b!qO$T!nO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O%[!jO%]!jO%^!jO%_!jO%`!jO~P!?fO!`!kO!a!kO!b!qO$T!nO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!_!hO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO~P!DpO%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi~P!?fO!b!qO$T!nO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O%f!lO~P!J_O%f!Wi~P!J_O$T!nO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi$X!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi%f!Wi%g!Wi$Y!Wi$Z!Wi$[!Wi$]!Wi$`!Wi$e!Wi!S!Wi#{!Wi%h!Wi#[!Wi#]!Wi#^!Wi!T!Wi!U!Wi!V!Wi!P!Wi~O!b!qO~P# pO$Y%}O$]&PO~P&|O$Y%}O$]&PO~P$kO!b!WiT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi~P# pO$t&QO%g&RO#{!fi%h!fi$Y!fi$`!fi~O$Y&SO$e&TO~P&|O$e&TO~P$kO!O&YO$Y&WO~P8}O$Y&ZO$e&]O~O#{#Ti%h#Ti~P&|O!O*tO!X*rO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$f*oO$g*oO$h*oO$i*pO$j*pO$k*pO$l*pO$m*pO$n*pO$o*qO$p*qO$q*rO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%[*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$T&`O$WQO$^SO$_TO$aUO%W&bO%X&bO%Y&bO%Z&bO%]&cO~P#*SO$Y&dO$`&eO%h&dO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!hiO!wmO!zoO!|pO#OqO#RrO$`&eO~P$kO$XZi$YZi$]Zi$eZi#{Zi%hZi~P&|O!x&jO~O`dOadObdOcdOddOe#ROf#RO~P$kO^&kO`dOadObdOcdOddOe#ROf#RO~P$kOe#RO~O$Y&lO$]&nO~O$Y&oO~O$X&pO~O$Y&qO$e&sO~O$X&tO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e&xO~P$kO$t&zO#{Si%hSi~O#{#Yi%h#Yi~P&|O#['OO#]'PO#^'PO~P&|O$t'RO%g'SO#{#ci%h#ci~O$Y'UO$Zki$[ki~P&|O$Y#ka$Z#ka$[#ka$e#ka~P&|O$Zki$[ki~P$kO$X'XO$Y#gO$ZkX$[kX~P&|O$['YO~P$kO$Z'[O$Ymi$]mi~P&|O$Y']O$]'_O~O!O&YO$Y&WO~O$Y#pO~O$Y'aO$`'cO~O$Y#uO~P&|O$Y'dO$e'fO~P&|O$Y{i$e{i~P&|O$X$PO~OTPOVPO$e'gO~OTPOVPOgWOieOofOpfOrSOsWOugO!RhO!djO!jZO!kZO$RVO$TRO$WQO$^SO$_TO$aUO%W'jO%X'jO%Y'jO%Z'jO%]ZO~O$]'kO~P#8vO$Y'lO$]'kO~O$Y&SO$e'pO~P&|OTPOVPO!O'sO~O!O'sO$Y'tO~OTPOVPO$e'xO~O$Y'yO$e'xO~O!T'|O!U(OO!V'}O~P&|O$]!TO~PCzO#{!gq%h!gq$Y!gq$`!gq~P&|O!j*{O!k*{O%]*{OT!laV!lag!lai!lao!lap!lar!las!lau!la!O!la!R!la!X!la!Y!la!Z!la![!la!]!la!^!la!_!la!`!la!a!la!b!la!d!la$R!la$T!la$W!la$^!la$_!la$a!la$f!la$g!la$h!la$i!la$j!la$k!la$l!la$m!la$n!la$o!la$p!la$q!la$r!la$s!la$t!la$u!la$v!la$w!la$x!la$y!la$z!la${!la$|!la$}!la%O!la%P!la%Q!la%R!la%S!la%T!la%U!la%V!la%W!la%X!la%Y!la%Z!la%[!la%^!la%_!la%`!la%a!la%b!la%c!la%d!la%e!la%f!la%g!la%i!la~O$Y&dO$`(SO%h&dO~O$X!cq$Y!cq$Z!cq$[!cq$]!cq$`!cq$e!cq!S!cq#{!cq%h!cq#[!cq#]!cq#^!cq!T!cq!U!cq!V!cq!P!cq~P&|O`dOadObdOcdOddOe$zOf$zO~P$kO[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO$](WO~P$kO$Y(XO$](WO~O!x(ZO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e(_O~P$kO$Y(`O$e(_O~O$R(bO~O$X(cO$YWX$eWX~O$Y(dO$e(eO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e(eO~P$kO#{Sq%hSq~P&|O#{#Uq%h#Uq~P&|O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$t(iO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O#{#Uq%h#Uq~P#HdO#{#aq%h#aq~P&|O$Zkq$[kq~P$kO$Y(nO$Zkq$[kq~OTPOVPO$](pO~O$Y(qO$](pO~OTPOVPO$`(rO~O$Y(sO$`(rO~O$e(tO~P$kO$Y(uO$e(tO~O$Y#va$]#va~P&|O$Y#va$]#va~P$kO$](vO~P#8vO#{!fy%h!fy$Y!fy$`!fy~P&|O!O!eO!X!cO!Y!eO!Z!eO![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO$f!`O$g!`O$h!`O$i!aO$j!aO$k!aO$l!aO$m!aO$n!aO$o!bO$p!bO$q!cO$r!dO$s!dO$u!eO$v!eO$w!eO$x!eO$y!eO$z!eO${!eO$|!eO$}!eO%O!eO%P!eO%Q!eO%R!eO%S!eO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO~O$t(xO#{!fy%h!fy$Y!fy$`!fy~P$ dO$Y&SO~P&|OTPOVPO!O(zO~O!P(|O$Y}i$e}i$]}i$`}i~P&|OTPOVPO$e(}O~O!T'|O!U)RO!V)QO~O$X#nO$Y%}O$Z#oO$]&PO$YmX$]mX~P&|O!b+RO$T!nO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!ia!R!Wi!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia!d!Wi!j!Wi!k!Wi#{!ia$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia%h!ia$Y!ia$`!ia~O!_*|O!`+OO!a+OO%V*|O%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO~P$'jO!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~P$'jO$Y&dO%h&dO~O!x)UO~O[$}O]$}O^$|O`dOadObdOcdOddOe_Of_O!w%OO$])VO~P$kO$Y)YO$e)[O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)]O~P$kOYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)aO~P$kO$Y(dO$e)cO~O#{Sy%hSy~P&|O$t)fO%g)gO#{#Wy%h#Wy~O#{#Yy%h#Yy~P&|O#{#cy%h#cy~P&|O#{#cy%h#cy~P#HdO$Zky$[ky~P$kO$Y)hO$])jO~OTPOVPO$])jO~OTPOVPO$`)kO~O$e)lO~P$kO!P)nO$Y}q$e}q$]}q$`}q~P&|O!S)rO~P&|O!V)sO~P&|O!x)uO~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e)wO~P$kO$Y)xO$e)wO~O$Y)zO$e){O~OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e){O~P$kO$e*OO~O%g*PO$YWi$eWi~O$Y(dO~O![!fO!]!gO!^!pO!_!hO!`!kO!a!kO!b!qO$T!nO%T!fO%U!gO%V!hO%W!iO%X!iO%Y!iO%Z!iO%[!jO%]!jO%^!jO%_!jO%`!jO%a!kO%b!kO%c!kO%d!kO%e!kO%f!lO%g!mO%i!oO!O!Wi!X!Wi!Y!Wi!Z!Wi#{!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%h!Wi~OTPOVPO$]*SO~O$Y*TO$]*SO~O$Y!Wi$`!Wi~P$8]O!P*VO$Y}y$e}y$]}y$`}y~P&|O!V*WO~P&|OYnO[lO]lO^kO`dOadObdOcdOddOe_Of_O!wmO!zoO!|pO#OqO#RrO$e*ZO~P$kO$e*]O~O$Y)zO$e*^O~O#{#W!Z%h#W!Z~P&|O#{#W!Z%h#W!Z~P#HdOTPOVPO$]*aO~O$Y}!R$e}!R$]}!R$`}!R~P&|O!T#sq!U#sq!V#sq~P&|O$e*cO~O$Y)zO~O$YWy$eWy~P&|O$Y}!Z$e}!Z$]}!Z$`}!Z~P&|O#{!la%h!la$Y!la$`!la~P#<kO!O*tO!X*rO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO$o*qO$p*qO$q*rO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O$i*pO$j*pO$k*pO$l*pO$m*pO$n*pO~P$AiO$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi~P$AiO!O*tO!Y*tO!Z*tO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO$r*sO$s*sO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!X*rO$q*rO~P$GjO!X!Wi$q!Wi~P$GjO![*uO!]*vO!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO%T*uO%U*vO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!R!Wi!X!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!O*tO!Y*tO!Z*tO$t*tO$u*tO$v*tO$w*tO$x*tO$y*tO$z*tO${*tO$|*tO$}*tO%O*tO%P*tO%Q*tO%R*tO%S*tO~P$M_O!O!Wi!Y!Wi!Z!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi~P$M_O!^*wO!_*|O!`+OO!a+OO!b+RO$T!nO%V*|O%W*dO%X*dO%Y*dO%Z*dO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!]*vO%U*vO~P%&UO!]!Wi%U!Wi~P%&UO!`+OO!a+OO!b+RO$T!nO%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!_*|O%V*|O%W*dO%X*dO%Y*dO%Z*dO~P%+yO$T!nO%W*dO%X*dO%Y*dO%Z*dO%]*}OT!cqV!cqg!cqi!cqo!cqp!cqr!cqs!cqu!cq!R!cq!d!cq!j!cq!k!cq$R!cq$W!cq$^!cq$_!cq$a!cq#{!cq%h!cq$Y!cq$`!cq~P#*SO!O*xO~O!b+RO$T!nO%g+QO%i!oOT!iaV!iag!iai!iao!iap!iar!ias!iau!ia!O!ia!R!ia!X!ia!Y!ia!Z!ia![!ia!]!ia!^!ia!d!ia!j!ia!k!ia$R!ia$W!ia$^!ia$_!ia$a!ia$f!ia$g!ia$h!ia$i!ia$j!ia$k!ia$l!ia$m!ia$n!ia$o!ia$p!ia$q!ia$r!ia$s!ia$t!ia$u!ia$v!ia$w!ia$x!ia$y!ia$z!ia${!ia$|!ia$}!ia%O!ia%P!ia%Q!ia%R!ia%S!ia%T!ia%U!ia%W!ia%X!ia%Y!ia%Z!ia#{!ia%h!ia$Y!ia$`!ia~O!_!ia!`!ia!a!ia%V!ia%[!ia%]!ia%^!ia%_!ia%`!ia%a!ia%b!ia%c!ia%d!ia%e!ia%f!ia~P%3eO!_*|O!`+OO!a+OO%V*|O%[*}O%]*}O%^*}O%_*}O%`*}O%a+OO%b+OO%c+OO%d+OO%e+OO%f+PO~P%3eO!_!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi~P%+yO!b+RO$T!nO%f+PO%g+QO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O!`+OO!a+OO%a+OO%b+OO%c+OO%d+OO%e+OO~P%:iO!`!Wi!a!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi~P%:iO!b+RO$T!nO%i!oOT!WiV!Wig!Wii!Wio!Wip!Wir!Wis!Wiu!Wi!O!Wi!R!Wi!X!Wi!Y!Wi!Z!Wi![!Wi!]!Wi!^!Wi!_!Wi!`!Wi!a!Wi!d!Wi!j!Wi!k!Wi$R!Wi$W!Wi$^!Wi$_!Wi$a!Wi$f!Wi$g!Wi$h!Wi$i!Wi$j!Wi$k!Wi$l!Wi$m!Wi$n!Wi$o!Wi$p!Wi$q!Wi$r!Wi$s!Wi$t!Wi$u!Wi$v!Wi$w!Wi$x!Wi$y!Wi$z!Wi${!Wi$|!Wi$}!Wi%O!Wi%P!Wi%Q!Wi%R!Wi%S!Wi%T!Wi%U!Wi%V!Wi%W!Wi%X!Wi%Y!Wi%Z!Wi%[!Wi%]!Wi%^!Wi%_!Wi%`!Wi%a!Wi%b!Wi%c!Wi%d!Wi%e!Wi%f!Wi#{!Wi%h!Wi$Y!Wi$`!Wi~O%g+QO~P%@mO%g!Wi~P%@mO",
  goto: "! P$WPPPP$XPPP$]$cP%PPPP%uPPPPPPPP&qP&q)w*P-U&qPP&qPP&qP&q-]0i&q&q0m0u3zPP4cPPPPP7iPPPPPPPPPP4cP:q:w:wP7iPP7i4c4c;R4c;X;_7i7i>h7iPP$cP$cP$cP>k$cP$c$X$XP$XP$XPPPP$XP$XP$XPP$XP>s>y?P?V?f?m?t?z@Q@W@_@q@w@}ATA]AcAiAoPPPAuAyF[PFePGs4cTaOcQ&v%VR(f&w!V`Ocu#O#V#W#X#Y$u$x%V%a&j&o&q&w(Z(`(b)U)Y)^)`)u)x*[!U`Ocu#O#V#W#X#Y$u$x%V%a&j&o&q&w(Z(`(b)U)Y)^)`)u)x*[Q%P#UV(V&l(X)W!^_Ocu#O#U#V#W#X#Y$u$x%V%a&j&l&o&q&w(X(Z(`(b)U)W)Y)^)`)u)x*[W#Rkl$|$}T$z#T&k'XWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ!OQV%h#k%j'Z'VWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZS!RR&`R#s!S'WWOQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ#awR%_#cT!YU!ZQ!_VV%y$Q%{'h'V^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ$n!uQ%m#oQ%r#wb'w&Z']'a'y(q(s)O)h*TR(o'['X^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+Z']^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&b&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*d*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ#PjR*y*zSaOcQ$t#OR&f$uX!v]!P!^$mX!w]!P!^$m'W^OQRTVZ[chiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!u!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZR$p!wR$f!oQ%T#XV(^&q(`)^QcOR!zcQ&w%VR(g&wQ|QR#j|S#h{%gU%e#h'V'eQ'V%bR'e%vS#l|!OR%k#lS!SR&`R#t!SQ!VTR#y!VQ!ZUR#{!ZQ$R!_R%|$RS&X$m%nR'u&XQ&[$nQ'^%mQ'b%rW'z&['^'b)iR)i(oQ'{&_R)P'{Q$u#OR&g$uQ$k!uR&V$kU&O$c$d(PR'm&OQ&m%PR(Y&mQ)Z([R)y)ZQ&r%TR(a&rQ)`(bR)})`TbOcS]Oc'O!PQRTZ[hiklux|!S!V!X!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!p!q!x!}#O#T#U#V#W#X#Y#_#`#f#g#k#n#}$P$d$k$o$r$s$u$w$x$|$}%V%W%Y%Z%_%a%d%j%o%}&Q&R&Y&`&c&j&k&l&o&q&w&z'P'R'S'U'W'X'Z'd'j'l's'|(O(X(Z(`(b(i(n(u(w(x(z(|)R)U)W)Y)^)`)f)g)n)r)u)x*P*V*[*o*p*q*r*s*t*u*v*w*x*{*|*}+O+P+Q+R+ZQ!^VQ#ZsQ#[tQ#dyQ#ezQ$g!oQ$i!rQ$m!uh%n#o#w&Z'[']'a'y(q(s)O)h*TU%x$Q%{'hQ&}%[U'r&W't({Q(]&pR)b(cQ%X#ZQ%`#dR(j&}WYOc#O$uQ#]uQ%Q#VQ%R#WW%S#X&q(`)^Q%U#YQ&i$xS&u%V&wQ'T%aQ(U&jQ([&oQ)X(ZQ)_(bQ)t)UU)v)Y)x*[Q)|)`R*Y)u!^XOcu#O#U#V#W#X#Y$u$x%V%a&j&l&o&q&w(X(Z(`(b)U)W)Y)^)`)u)x*[Q{QQ!QRQ!UTQ!]VQ!sZU!t[$d'jQ!{hQ!|iW#Qkl$|$}Q#bxQ#i|Q#r!SQ#x!VQ#z!XQ$T!`Q$U!aQ$V!bQ$W!cQ$X!dQ$Y!eQ$Z!fQ$[!gQ$]!hS$^!i!pQ$_!jQ$`!kQ$a!lQ$b!mQ$c!nS$h!q+RQ$j!uQ$q!xQ$s!}S$y#T&kQ%]#_Q%^#`S%b#f'X^%c#g%d'U'W'd(n(uU%g#k%j'ZQ%l#nQ%v#}Q%w$PQ&U$kQ&^$oQ&_$rQ&a$sQ&h$wQ&y%WQ&{%YQ&|%ZQ'Q%_Q'`%oU'i%}'l(wQ'n&QQ'o&RQ'v&YQ(P&`Q(Q&bQ(R&cQ(h&zQ(k'PQ(l'RQ(m'SQ(y'sQ)S'|Q)T(OQ)e(iQ)m(xQ)o(zQ)p(|Q)q)RQ*Q)fQ*R)gQ*U)nQ*X)rQ*`*PQ*b*VQ*e*oQ*f*pQ*g*qQ*h*rQ*i*sQ*j*tQ*k*uQ*l*vS*m*d*wQ*n*xQ+S*{Q+T+ZQ+U*|Q+V*}Q+W+OQ+X+PR+Y+Q",
  nodeNames: "⚠ LineComment BlockComment SourceFile Annotation Identifier Keyword QuotedIdentifier Parameter ArrayType Keyword TypeBase Keyword Keyword Keyword PrimitiveType Keyword Keyword Keyword Keyword Keyword TypeInstId TypeInstEnumId Absent Anonymous Keyword ArrayLiteral2d ArrayLiteral2dRow ArrayLiteral ArrayLiteralMember BooleanLiteral Keyword Keyword Infinity Keyword Number EmptySet Keyword SetLiteral StringLiteral Interpolation TupleLiteral RecordLiteral RecordMember ArrayComprehension Generator Keyword Keyword IfThenElse Keyword Keyword Keyword Keyword Keyword InfixOperator Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword Keyword LetExpression Keyword LetItems Declaration Constraint Keyword PrefixOperator Keyword Keyword PostfixOperator SetComprehension Call Application GeneratorCall GeneratorCallGenerators ParenthesisedExpression IndexedAccess TupleAccess Number RecordAccess Keyword Keyword SetType Keyword TupleType Keyword RecordType Keyword RecordTypeField OperationType Keyword AnyType Assignment Enumeration Keyword FunctionItem Keyword Goal Keyword Keyword Keyword Keyword Include Keyword Output Keyword Predicate Keyword Keyword TypeAlias Keyword",
  maxTerm: 210,
  skippedNodes: [0, 1, 2],
  repeatNodeCount: 19,
  tokenData: "!8_~R!oOX&SXY&qYZ'nZ]&S]^&q^p&Spq&qqr(Prs)Xsu&Suv)^vw&Swx*lxy,ryz-]z{-v{|.a|}/k}!O0U!O!P1`!P!Q3Z!Q!R9g!R![@|![!]Bz!]!^DU!^!_Do!_!`Is!`!aJ}!a!c&S!c!}LX!}#OM[#O#PNf#P#Q!#p#Q#R!$Z#R#SLX#S#T&S#T#oLX#o#p!$t#p#q!%_#q#r!&f#r#s!'P#s%#t&S%#t%#u!.O%#u%#v&S%#v%#w!.i%#w%%W&S%%W%%X!/S%%X%%Y&S%%Y%%Z!/m%%Z%%[&S%%[%%]!0W%%]%&b&S%&b%&c!0q%&c%&p&S%&p%&q!1[%&q%&x&S%&x%&y!1u%&y%'R&S%'R%'S!2`%'S%'T!2y%'T%'U!3d%'U%'V!3}%'V%(^&S%(^%(_!4h%(_%(b&S%(b%(c!5R%(c%(d!5l%(d%)U&S%)U%)V!6V%)V%)W!6p%)W%*]&S%*]%*^!7Z%*^%Gc&S%Gc%Gd!7t%Gd;'S&S;'S;=`&k<%lO&SQ&XU$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SQ&nP;=`<%l&SV&x[$bQ#}TOX&SXY&qYZ'nZ]&S]^&q^p&Spq&qqr&Ss#O&S#P;'S&S;'S;=`&k<%lO&ST'sS#}TXY'nYZ'n]^'npq'nR(UW$bQOY&SZr&Ss!_&S!_!`(n!`#O&S#P;'S&S;'S;=`&k<%lO&SR(uU$vP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S~)^O$a~V)eWPT$bQOY)^Zr)^rs)}s#O)^#O#P)}#P;'S)^;'S;=`*f<%lO)^T*SSPTOY)}Z;'S)};'S;=`*`<%lO)}T*cP;=`<%l)}V*iP;=`<%l)^V*qZ$bQOY*lYZ+dZr*lrs+dsw*lwx,Rx#O*l#O#P+d#P;'S*l;'S;=`,l<%lO*lT+gTOw+dwx+vx;'S+d;'S;=`+{<%lO+dT+{OVTT,OP;=`<%l+dV,YUVT$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV,oP;=`<%l*lR,yU$RP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR-dU$eP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR-}U%aP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR.hW%[P$bQOY&SZr&Ss{&S{|/Q|#O&S#P;'S&S;'S;=`&k<%lO&SR/XU%^P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR/rU$YP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR0]W%]P$bQOY&SZr&Ss!`&S!`!a0u!a#O&S#P;'S&S;'S;=`&k<%lO&SR0|U$iP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR1gW%iP$bQOY&SZr&Ss!O&S!O!P2P!P#O&S#P;'S&S;'S;=`&k<%lO&SR2WW%WP$bQOY&SZr&Ss!^&S!^!_2p!_#O&S#P;'S&S;'S;=`&k<%lO&SR2wU%YP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV3bX%bP$bQOY&SZr&Ssz&Sz{3}{#O&S#O#P9b#P;'S&S;'S;=`&k<%lO&SV4SZ$bQOY3}YZ4uZr3}rs4usz3}z{8S{#O3}#O#P5j#P;'S3};'S;=`9[<%lO3}T4xVOz4uz{5_{#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT5bP!P!Q5eT5jOQTT5mXOz4uz{6Y{#O4u#O#P5j#P#b4u#b#c4u#c;'S4u;'S;=`7|<%lO4uT6]VOz4uz{6r{!P4u!P!Q5e!Q;'S4u;'S;=`7|<%lO4uT6uXOz4uz{5_{!P4u!P!Q7b!Q#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT7gVQTOz4uz{5_{#O4u#O#P5j#P;'S4u;'S;=`7|<%lO4uT8PP;=`<%l4uV8XW$bQOY&SZr&Ss!P&S!P!Q8q!Q#O&S#P;'S&S;'S;=`&k<%lO&SV8xUQT$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SV9_P;=`<%l3}P9gO$rPR9n`sP$bQOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![<O![#O&S#P#U&S#U#V?h#V#c&S#c#d?h#d#l&S#l#m?h#m;'S&S;'S;=`&k<%lO&SR:uW$bQOY&SZr&Ss!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR;fWsP$bQOY&SZr&Ss!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR<V^sP$bQOY&SZr&Ss!O&S!O!P=R!P!Q&S!Q![<O![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SR=WW$bQOY&SZr&Ss!Q&S!Q![=p![#O&S#P;'S&S;'S;=`&k<%lO&SR=w[sP$bQOY&SZr&Ss!Q&S!Q![=p![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SR>r[$bQOY&SZr&Ss{&S{|:p|}&S}!O:p!O!Q&S!Q![;_![#O&S#P;'S&S;'S;=`&k<%lO&SR?mW$bQOY&SZr&Ss!Q&S!Q![@V![#O&S#P;'S&S;'S;=`&k<%lO&SR@^YsP$bQOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![<O![#O&S#P;'S&S;'S;=`&k<%lO&SVAVYsP$bQ%jSOY&SZr&Ss!O&S!O!P:p!P!Q&S!Q![Au![#O&S#P;'S&S;'S;=`&k<%lO&SVBO^sP$bQ%jSOY&SZr&Ss!O&S!O!P=R!P!Q&S!Q![Au![!g&S!g!h>m!h#O&S#P#X&S#X#Y>m#Y;'S&S;'S;=`&k<%lO&SRCRW$XP$bQOY&SZr&Ss![&S![!]Ck!]#O&S#P;'S&S;'S;=`&k<%lO&SRCrU%gP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRD]U%hP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRDv[$xP$bQOY&SZr&Ss}&S}!OEl!O!PFv!P!_&S!_!`Ho!`!aIY!a#O&S#P;'S&S;'S;=`&k<%lO&SREsW$lP$bQOY&SZr&Ss!`&S!`!aF]!a#O&S#P;'S&S;'S;=`&k<%lO&SRFdU$fP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRF{W$bQOY&SZr&Ss!O&S!O!PGe!P#O&S#P;'S&S;'S;=`&k<%lO&SRGlW%XP$bQOY&SZr&Ss!^&S!^!_HU!_#O&S#P;'S&S;'S;=`&k<%lO&SRH]U%ZP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRHvU$yP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRIaUgP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRIzW$tP$bQOY&SZr&Ss!_&S!_!`Jd!`#O&S#P;'S&S;'S;=`&k<%lO&SRJkU$uP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SRKUW${P$bQOY&SZr&Ss!_&S!_!`Kn!`#O&S#P;'S&S;'S;=`&k<%lO&SRKuU$|P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SVL`^TT$bQOY&SZr&Ss!Q&S!Q![LX![!c&S!c!}LX!}#O&S#P#R&S#R#SLX#S#T&S#T#oLX#o;'S&S;'S;=`&k<%lO&SRMcW$TP$bQOY&SZr&Ss#O&S#P#p&S#p#qM{#q;'S&S;'S;=`&k<%lO&SRNSU$WP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S~NiXrs! Utu! Zxy!!j!P!Q!!o!Q!Y!!t#O#P! U#b#c! U#h#i! U#l#m!#U~! ZO$c~~! ^R!c!}! g#O#P! x#T#o! g~! lSe~!Q![! g!c!}! g#R#S! g#T#o! g~! {Ptu!!O~!!RQ!c!}!!X#T#o!!X~!!^Sf~!Q![!!X!c!}!!X#R#S!!X#T#o!!X~!!oO$d~~!!tO$o~~!!yP$c~!Q!Y!!|~!#RP$c~!Q!Y! U~!#XR!Q![!#b!c!i!#b#T#Z!#b~!#gR$c~!Q![! U!c!i! U#T#Z! UR!#wU$]P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!$bU%fP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!${U$_P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!%fV$ZP$bQOY&SZr&Ss#O&S#P#Q!%{#Q;'S&S;'S;=`&k<%lO&SR!&SU$[P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!&mU$`P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!'Ub$bQOY&SZq&Sqr!(^sz&Sz{!)f{|!*P|}&S}!O!*j!O!P&S!P!Q!+T!Q!_&S!_!`!+n!`#O&S#P#W&S#W#X!,X#X;'S&S;'S;=`&k<%lO&SR!(cW$bQOY&SZr&Ss!_&S!_!`!({!`#O&S#P;'S&S;'S;=`&k<%lO&SR!)SU%SP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!)mU%cP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!*WU%_P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!*qU%`P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!+[U%eP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!+uU%RP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!,^W$bQOY&SZr&Ss#O&S#P#]&S#]#^!,v#^;'S&S;'S;=`&k<%lO&SR!,{W$bQOY&SZr&Ss#O&S#P#j&S#j#k!-e#k;'S&S;'S;=`&k<%lO&SR!-lU%dP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!.VU$mP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!.pU$jP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!/ZU$nP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!/tU$kP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!0_U$hP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!0xU%OP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!1cU%UP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!1|U$^P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!2gU$sP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!3QU$pP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!3kU%VP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!4UU%TP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!4oU$wP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!5YU$zP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!5sU$}P$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!6^U%PP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!6wU%QP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!7bU$qP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&SR!7{U$gP$bQOY&SZr&Ss#O&S#P;'S&S;'S;=`&k<%lO&S",
  tokenizers: [0, 1, 2],
  topRules: { SourceFile: [0, 3] },
  specialized: [{ term: 5, get: (n) => EZ[n] || -1 }],
  tokenPrec: 0
});
let VZ = 0;
class bn {
  /**
  @internal
  */
  constructor(e, t, i, r) {
    this.name = e, this.set = t, this.base = i, this.modified = r, this.id = VZ++;
  }
  toString() {
    let { name: e } = this;
    for (let t of this.modified)
      t.name && (e = `${t.name}(${e})`);
    return e;
  }
  static define(e, t) {
    let i = typeof e == "string" ? e : "?";
    if (e instanceof bn && (t = e), t != null && t.base)
      throw new Error("Can not derive from a modified tag");
    let r = new bn(i, [], null, []);
    if (r.set.push(r), t)
      for (let l of t.set)
        r.set.push(l);
    return r;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier(e) {
    let t = new hh(e);
    return (i) => i.modified.indexOf(t) > -1 ? i : hh.get(i.base || i, i.modified.concat(t).sort((r, l) => r.id - l.id));
  }
}
let LZ = 0;
class hh {
  constructor(e) {
    this.name = e, this.instances = [], this.id = LZ++;
  }
  static get(e, t) {
    if (!t.length)
      return e;
    let i = t[0].instances.find((c) => c.base == e && UZ(t, c.modified));
    if (i)
      return i;
    let r = [], l = new bn(e.name, r, e, t);
    for (let c of t)
      c.instances.push(l);
    let o = YZ(t);
    for (let c of e.set)
      if (!c.modified.length)
        for (let f of o)
          r.push(hh.get(c, f));
    return l;
  }
}
function UZ(n, e) {
  return n.length == e.length && n.every((t, i) => t == e[i]);
}
function YZ(n) {
  let e = [[]];
  for (let t = 0; t < n.length; t++)
    for (let i = 0, r = e.length; i < r; i++)
      e.push(e[i].concat(n[t]));
  return e.sort((t, i) => i.length - t.length);
}
function Al(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in n) {
    let i = n[t];
    Array.isArray(i) || (i = [i]);
    for (let r of t.split(" "))
      if (r) {
        let l = [], o = 2, c = r;
        for (let p = 0; ; ) {
          if (c == "..." && p > 0 && p + 3 == r.length) {
            o = 1;
            break;
          }
          let g = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(c);
          if (!g)
            throw new RangeError("Invalid path: " + r);
          if (l.push(g[0] == "*" ? "" : g[0][0] == '"' ? JSON.parse(g[0]) : g[0]), p += g[0].length, p == r.length)
            break;
          let b = r[p++];
          if (p == r.length && b == "!") {
            o = 0;
            break;
          }
          if (b != "/")
            throw new RangeError("Invalid path: " + r);
          c = r.slice(p);
        }
        let f = l.length - 1, u = l[f];
        if (!u)
          throw new RangeError("Invalid path: " + r);
        let O = new fh(i, o, f > 0 ? l.slice(0, f) : null);
        e[u] = O.sort(e[u]);
      }
  }
  return Yv.add(e);
}
const Yv = new Ne();
class fh {
  constructor(e, t, i, r) {
    this.tags = e, this.mode = t, this.context = i, this.next = r;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
fh.empty = new fh([], 2, null);
function Dv(n, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let l of n)
    if (!Array.isArray(l.tag))
      t[l.tag.id] = l.class;
    else
      for (let o of l.tag)
        t[o.id] = l.class;
  let { scope: i, all: r = null } = e || {};
  return {
    style: (l) => {
      let o = r;
      for (let c of l)
        for (let f of c.set) {
          let u = t[f.id];
          if (u) {
            o = o ? o + " " + u : u;
            break;
          }
        }
      return o;
    },
    scope: i
  };
}
function DZ(n, e) {
  let t = null;
  for (let i of n) {
    let r = i.style(e);
    r && (t = t ? t + " " + r : r);
  }
  return t;
}
function zZ(n, e, t, i = 0, r = n.length) {
  let l = new jZ(i, Array.isArray(e) ? e : [e], t);
  l.highlightRange(n.cursor(), i, r, "", l.highlighters), l.flush(r);
}
class jZ {
  constructor(e, t, i) {
    this.at = e, this.highlighters = t, this.span = i, this.class = "";
  }
  startSpan(e, t) {
    t != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = t);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, t, i, r, l) {
    let { type: o, from: c, to: f } = e;
    if (c >= i || f <= t)
      return;
    o.isTop && (l = this.highlighters.filter((b) => !b.scope || b.scope(o)));
    let u = r, O = BZ(e) || fh.empty, p = DZ(l, O.tags);
    if (p && (u && (u += " "), u += p, O.mode == 1 && (r += (r ? " " : "") + p)), this.startSpan(Math.max(t, c), u), O.opaque)
      return;
    let g = e.tree && e.tree.prop(Ne.mounted);
    if (g && g.overlay) {
      let b = e.node.enter(g.overlay[0].from + c, 1), $ = this.highlighters.filter((P) => !P.scope || P.scope(g.tree.type)), x = e.firstChild();
      for (let P = 0, k = c; ; P++) {
        let R = P < g.overlay.length ? g.overlay[P] : null, w = R ? R.from + c : f, Z = Math.max(t, k), T = Math.min(i, w);
        if (Z < T && x)
          for (; e.from < T && (this.highlightRange(e, Z, T, r, l), this.startSpan(Math.min(T, e.to), u), !(e.to >= w || !e.nextSibling())); )
            ;
        if (!R || w > i)
          break;
        k = R.to + c, k > t && (this.highlightRange(b.cursor(), Math.max(t, R.from + c), Math.min(i, k), "", $), this.startSpan(Math.min(i, k), u));
      }
      x && e.parent();
    } else if (e.firstChild()) {
      g && (r = "");
      do
        if (!(e.to <= t)) {
          if (e.from >= i)
            break;
          this.highlightRange(e, t, i, r, l), this.startSpan(Math.min(i, e.to), u);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function BZ(n) {
  let e = n.type.prop(Yv);
  for (; e && e.context && !n.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const fe = bn.define, Wc = fe(), es = fe(), Gm = fe(es), Hm = fe(es), ts = fe(), Zc = fe(ts), gu = fe(ts), tr = fe(), _s = fe(tr), Jn = fe(), er = fe(), SO = fe(), vo = fe(SO), Tc = fe(), v = {
  /**
  A comment.
  */
  comment: Wc,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: fe(Wc),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: fe(Wc),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: fe(Wc),
  /**
  Any kind of identifier.
  */
  name: es,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: fe(es),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: Gm,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: fe(Gm),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: Hm,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: fe(Hm),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: fe(es),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: fe(es),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: fe(es),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: fe(es),
  /**
  A literal value.
  */
  literal: ts,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: Zc,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: fe(Zc),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: fe(Zc),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: fe(Zc),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: gu,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: fe(gu),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: fe(gu),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: fe(ts),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: fe(ts),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: fe(ts),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: fe(ts),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: fe(ts),
  /**
  A language keyword.
  */
  keyword: Jn,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: fe(Jn),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: fe(Jn),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: fe(Jn),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: fe(Jn),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: fe(Jn),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: fe(Jn),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: fe(Jn),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: fe(Jn),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: fe(Jn),
  /**
  An operator.
  */
  operator: er,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: fe(er),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: fe(er),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: fe(er),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: fe(er),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: fe(er),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: fe(er),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: fe(er),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: fe(er),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: fe(er),
  /**
  Program or markup punctuation.
  */
  punctuation: SO,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: fe(SO),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: vo,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: fe(vo),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: fe(vo),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: fe(vo),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: fe(vo),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: tr,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: _s,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: fe(_s),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: fe(_s),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: fe(_s),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: fe(_s),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: fe(_s),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: fe(_s),
  /**
  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).
  */
  contentSeparator: fe(tr),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: fe(tr),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: fe(tr),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: fe(tr),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: fe(tr),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: fe(tr),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: fe(tr),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: fe(tr),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: fe(),
  /**
  Deleted text.
  */
  deleted: fe(),
  /**
  Changed text.
  */
  changed: fe(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: fe(),
  /**
  Metadata or meta-instruction.
  */
  meta: Tc,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: fe(Tc),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: fe(Tc),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: fe(Tc),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: bn.defineModifier("definition"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: bn.defineModifier("constant"),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: bn.defineModifier("function"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: bn.defineModifier("standard"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: bn.defineModifier("local"),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: bn.defineModifier("special")
};
for (let n in v) {
  let e = v[n];
  e instanceof bn && (e.name = n);
}
Dv([
  { tag: v.link, class: "tok-link" },
  { tag: v.heading, class: "tok-heading" },
  { tag: v.emphasis, class: "tok-emphasis" },
  { tag: v.strong, class: "tok-strong" },
  { tag: v.keyword, class: "tok-keyword" },
  { tag: v.atom, class: "tok-atom" },
  { tag: v.bool, class: "tok-bool" },
  { tag: v.url, class: "tok-url" },
  { tag: v.labelName, class: "tok-labelName" },
  { tag: v.inserted, class: "tok-inserted" },
  { tag: v.deleted, class: "tok-deleted" },
  { tag: v.literal, class: "tok-literal" },
  { tag: v.string, class: "tok-string" },
  { tag: v.number, class: "tok-number" },
  { tag: [v.regexp, v.escape, v.special(v.string)], class: "tok-string2" },
  { tag: v.variableName, class: "tok-variableName" },
  { tag: v.local(v.variableName), class: "tok-variableName tok-local" },
  { tag: v.definition(v.variableName), class: "tok-variableName tok-definition" },
  { tag: v.special(v.variableName), class: "tok-variableName2" },
  { tag: v.definition(v.propertyName), class: "tok-propertyName tok-definition" },
  { tag: v.typeName, class: "tok-typeName" },
  { tag: v.namespace, class: "tok-namespace" },
  { tag: v.className, class: "tok-className" },
  { tag: v.macroName, class: "tok-macroName" },
  { tag: v.propertyName, class: "tok-propertyName" },
  { tag: v.operator, class: "tok-operator" },
  { tag: v.comment, class: "tok-comment" },
  { tag: v.meta, class: "tok-meta" },
  { tag: v.invalid, class: "tok-invalid" },
  { tag: v.punctuation, class: "tok-punctuation" }
]);
var mu;
const pl = /* @__PURE__ */ new Ne();
function zv(n) {
  return ge.define({
    combine: n ? (e) => e.concat(n) : void 0
  });
}
const rd = /* @__PURE__ */ new Ne();
class Dn {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, t, i = [], r = "") {
    this.data = e, this.name = r, it.prototype.hasOwnProperty("tree") || Object.defineProperty(it.prototype, "tree", { get() {
      return Lt(this);
    } }), this.parser = t, this.extension = [
      ds.of(this),
      it.languageData.of((l, o, c) => {
        let f = Km(l, o, c), u = f.type.prop(pl);
        if (!u)
          return [];
        let O = l.facet(u), p = f.type.prop(rd);
        if (p) {
          let g = f.resolve(o - f.from, c);
          for (let b of p)
            if (b.test(g, l)) {
              let $ = l.facet(b.facet);
              return b.type == "replace" ? $ : $.concat(O);
            }
        }
        return O;
      })
    ].concat(i);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, t, i = -1) {
    return Km(e, t, i).type.prop(pl) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let t = e.facet(ds);
    if ((t == null ? void 0 : t.data) == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!t || !t.allowsNesting)
      return [];
    let i = [], r = (l, o) => {
      if (l.prop(pl) == this.data) {
        i.push({ from: o, to: o + l.length });
        return;
      }
      let c = l.prop(Ne.mounted);
      if (c) {
        if (c.tree.prop(pl) == this.data) {
          if (c.overlay)
            for (let f of c.overlay)
              i.push({ from: f.from + o, to: f.to + o });
          else
            i.push({ from: o, to: o + l.length });
          return;
        } else if (c.overlay) {
          let f = i.length;
          if (r(c.tree, c.overlay[0].from + o), i.length > f)
            return;
        }
      }
      for (let f = 0; f < l.children.length; f++) {
        let u = l.children[f];
        u instanceof At && r(u, l.positions[f] + o);
      }
    };
    return r(Lt(e), 0), i;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
Dn.setState = /* @__PURE__ */ Ye.define();
function Km(n, e, t) {
  let i = n.facet(ds), r = Lt(n).topNode;
  if (!i || i.allowsNesting)
    for (let l = r; l; l = l.enter(e, t, Wt.ExcludeBuffers))
      l.type.isTop && (r = l);
  return r;
}
class Os extends Dn {
  constructor(e, t, i) {
    super(e, t, [], i), this.parser = t;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let t = zv(e.languageData);
    return new Os(t, e.parser.configure({
      props: [pl.add((i) => i.isTop ? t : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, t) {
    return new Os(this.data, this.parser.configure(e), t || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Lt(n) {
  let e = n.field(Dn.state, !1);
  return e ? e.tree : At.empty;
}
class IZ {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, t) {
    let i = this.cursorPos - this.string.length;
    return e < i || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - i, t - i);
  }
}
let bo = null;
class uh {
  constructor(e, t, i = [], r, l, o, c, f) {
    this.parser = e, this.state = t, this.fragments = i, this.tree = r, this.treeLen = l, this.viewport = o, this.skipped = c, this.scheduleOn = f, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new uh(e, t, [], At.empty, 0, i, [], null);
  }
  startParse() {
    return this.parser.startParse(new IZ(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, t) {
    return t != null && t >= this.state.doc.length && (t = void 0), this.tree != At.empty && this.isDone(t ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var i;
      if (typeof e == "number") {
        let r = Date.now() + e;
        e = () => Date.now() > r;
      }
      for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
        let r = this.parse.advance();
        if (r)
          if (this.fragments = this.withoutTempSkipped(Mr.addTree(r, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (i = this.parse.stoppedAt) !== null && i !== void 0 ? i : this.state.doc.length, this.tree = r, this.parse = null, this.treeLen < (t ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, t;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(t = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = t, this.fragments = this.withoutTempSkipped(Mr.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let t = bo;
    bo = this;
    try {
      return e();
    } finally {
      bo = t;
    }
  }
  withoutTempSkipped(e) {
    for (let t; t = this.tempSkipped.pop(); )
      e = Jm(e, t.from, t.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, t) {
    let { fragments: i, tree: r, treeLen: l, viewport: o, skipped: c } = this;
    if (this.takeTree(), !e.empty) {
      let f = [];
      if (e.iterChangedRanges((u, O, p, g) => f.push({ fromA: u, toA: O, fromB: p, toB: g })), i = Mr.applyChanges(i, f), r = At.empty, l = 0, o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }, this.skipped.length) {
        c = [];
        for (let u of this.skipped) {
          let O = e.mapPos(u.from, 1), p = e.mapPos(u.to, -1);
          O < p && c.push({ from: O, to: p });
        }
      }
    }
    return new uh(this.parser, t, i, r, l, o, c, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let t = this.skipped.length;
    for (let i = 0; i < this.skipped.length; i++) {
      let { from: r, to: l } = this.skipped[i];
      r < e.to && l > e.from && (this.fragments = Jm(this.fragments, r, l), this.skipped.splice(i--, 1));
    }
    return this.skipped.length >= t ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, t) {
    this.skipped.push({ from: e, to: t });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends Vv {
      createParse(t, i, r) {
        let l = r[0].from, o = r[r.length - 1].to;
        return {
          parsedPos: l,
          advance() {
            let f = bo;
            if (f) {
              for (let u of r)
                f.tempSkipped.push(u);
              e && (f.scheduleOn = f.scheduleOn ? Promise.all([f.scheduleOn, e]) : e);
            }
            return this.parsedPos = o, new At(Ri.none, [], [], o - l);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let t = this.fragments;
    return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return bo;
  }
}
function Jm(n, e, t) {
  return Mr.applyChanges(n, [{ fromA: e, toA: t, fromB: e, toB: t }]);
}
class _l {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let t = this.context.changes(e.changes, e.state), i = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
    return t.work(20, i) || t.takeTree(), new _l(t);
  }
  static init(e) {
    let t = Math.min(3e3, e.doc.length), i = uh.create(e.facet(ds).parser, e, { from: 0, to: t });
    return i.work(20, t) || i.takeTree(), new _l(i);
  }
}
Dn.state = /* @__PURE__ */ ti.define({
  create: _l.init,
  update(n, e) {
    for (let t of e.effects)
      if (t.is(Dn.setState))
        return t.value;
    return e.startState.facet(ds) != e.state.facet(ds) ? _l.init(e.state) : n.apply(e);
  }
});
let jv = (n) => {
  let e = setTimeout(
    () => n(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (jv = (n) => {
  let e = -1, t = setTimeout(
    () => {
      e = requestIdleCallback(n, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(t) : cancelIdleCallback(e);
});
const vu = typeof navigator < "u" && (!((mu = navigator.scheduling) === null || mu === void 0) && mu.isInputPending) ? () => navigator.scheduling.isInputPending() : null, NZ = /* @__PURE__ */ Ft.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let t = this.view.state.field(Dn.state).context;
    (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, t = e.field(Dn.state);
    (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = jv(this.work));
  }
  work(e) {
    this.working = null;
    let t = Date.now();
    if (this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = t + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: i, viewport: { to: r } } = this.view, l = i.field(Dn.state);
    if (l.tree == l.context.tree && l.context.isDone(
      r + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let o = Date.now() + Math.min(this.chunkBudget, 100, e && !vu ? Math.max(25, e.timeRemaining() - 5) : 1e9), c = l.context.treeLen < r && i.doc.length > r + 1e3, f = l.context.work(() => vu && vu() || Date.now() > o, r + (c ? 0 : 1e5));
    this.chunkBudget -= Date.now() - t, (f || this.chunkBudget <= 0) && (l.context.takeTree(), this.view.dispatch({ effects: Dn.setState.of(new _l(l.context)) })), this.chunkBudget > 0 && !(f && !c) && this.scheduleWork(), this.checkAsyncSchedule(l.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((t) => Bi(this.view.state, t)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), ds = /* @__PURE__ */ ge.define({
  combine(n) {
    return n.length ? n[0] : null;
  },
  enables: (n) => [
    Dn.state,
    NZ,
    ae.contentAttributes.compute([n], (e) => {
      let t = e.facet(n);
      return t && t.name ? { "data-language": t.name } : {};
    })
  ]
});
class sa {
  /**
  Create a language support object.
  */
  constructor(e, t = []) {
    this.language = e, this.support = t, this.extension = [e, t];
  }
}
const FZ = /* @__PURE__ */ ge.define(), Rh = /* @__PURE__ */ ge.define({
  combine: (n) => {
    if (!n.length)
      return "  ";
    let e = n[0];
    if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(n[0]));
    return e;
  }
});
function Oh(n) {
  let e = n.facet(Rh);
  return e.charCodeAt(0) == 9 ? n.tabSize * e.length : e.length;
}
function Io(n, e) {
  let t = "", i = n.tabSize, r = n.facet(Rh)[0];
  if (r == "	") {
    for (; e >= i; )
      t += "	", e -= i;
    r = " ";
  }
  for (let l = 0; l < e; l++)
    t += r;
  return t;
}
function sd(n, e) {
  n instanceof it && (n = new Xh(n));
  for (let i of n.state.facet(FZ)) {
    let r = i(n, e);
    if (r !== void 0)
      return r;
  }
  let t = Lt(n.state);
  return t.length >= e ? GZ(n, t, e) : null;
}
class Xh {
  /**
  Create an indent context.
  */
  constructor(e, t = {}) {
    this.state = e, this.options = t, this.unit = Oh(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, t = 1) {
    let i = this.state.doc.lineAt(e), { simulateBreak: r, simulateDoubleBreak: l } = this.options;
    return r != null && r >= i.from && r <= i.to ? l && r == e ? { text: "", from: e } : (t < 0 ? r < e : r <= e) ? { text: i.text.slice(r - i.from), from: r } : { text: i.text.slice(0, r - i.from), from: i.from } : i;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, t = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: i, from: r } = this.lineAt(e, t);
    return i.slice(e - r, Math.min(i.length, e + 100 - r));
  }
  /**
  Find the column for the given position.
  */
  column(e, t = 1) {
    let { text: i, from: r } = this.lineAt(e, t), l = this.countColumn(i, e - r), o = this.options.overrideIndentation ? this.options.overrideIndentation(r) : -1;
    return o > -1 && (l += o - this.countColumn(i, i.search(/\S|$/))), l;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, t = e.length) {
    return Xl(e, this.state.tabSize, t);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, t = 1) {
    let { text: i, from: r } = this.lineAt(e, t), l = this.options.overrideIndentation;
    if (l) {
      let o = l(r);
      if (o > -1)
        return o;
    }
    return this.countColumn(i, i.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const Ml = /* @__PURE__ */ new Ne();
function GZ(n, e, t) {
  let i = e.resolveStack(t), r = e.resolveInner(t, -1).resolve(t, 0).enterUnfinishedNodesBefore(t);
  if (r != i.node) {
    let l = [];
    for (let o = r; o && !(o.from == i.node.from && o.type == i.node.type); o = o.parent)
      l.push(o);
    for (let o = l.length - 1; o >= 0; o--)
      i = { node: l[o], next: i };
  }
  return Bv(i, n, t);
}
function Bv(n, e, t) {
  for (let i = n; i; i = i.next) {
    let r = KZ(i.node);
    if (r)
      return r(ld.create(e, t, i));
  }
  return 0;
}
function HZ(n) {
  return n.pos == n.options.simulateBreak && n.options.simulateDoubleBreak;
}
function KZ(n) {
  let e = n.type.prop(Ml);
  if (e)
    return e;
  let t = n.firstChild, i;
  if (t && (i = t.type.prop(Ne.closedBy))) {
    let r = n.lastChild, l = r && i.indexOf(r.name) > -1;
    return (o) => Iv(o, !0, 1, void 0, l && !HZ(o) ? r.from : void 0);
  }
  return n.parent == null ? JZ : null;
}
function JZ() {
  return 0;
}
class ld extends Xh {
  constructor(e, t, i) {
    super(e.state, e.options), this.base = e, this.pos = t, this.context = i;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new ld(e, t, i);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let t = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let i = e.resolve(t.from);
      for (; i.parent && i.parent.from == i.from; )
        i = i.parent;
      if (e5(i, e))
        break;
      t = this.state.doc.lineAt(i.from);
    }
    return this.lineIndent(t.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return Bv(this.context.next, this.base, this.pos);
  }
}
function e5(n, e) {
  for (let t = e; t; t = t.parent)
    if (n == t)
      return !0;
  return !1;
}
function t5(n) {
  let e = n.node, t = e.childAfter(e.from), i = e.lastChild;
  if (!t)
    return null;
  let r = n.options.simulateBreak, l = n.state.doc.lineAt(t.from), o = r == null || r <= l.from ? l.to : Math.min(l.to, r);
  for (let c = t.to; ; ) {
    let f = e.childAfter(c);
    if (!f || f == i)
      return null;
    if (!f.type.isSkipped) {
      if (f.from >= o)
        return null;
      let u = /^ */.exec(l.text.slice(t.to - l.from))[0].length;
      return { from: t.from, to: t.to + u };
    }
    c = f.to;
  }
}
function Jr({ closing: n, align: e = !0, units: t = 1 }) {
  return (i) => Iv(i, e, t, n);
}
function Iv(n, e, t, i, r) {
  let l = n.textAfter, o = l.match(/^\s*/)[0].length, c = i && l.slice(o, o + i.length) == i || r == n.pos + o, f = e ? t5(n) : null;
  return f ? c ? n.column(f.from) : n.column(f.to) : n.baseIndent + (c ? 0 : n.unit * t);
}
const i5 = (n) => n.baseIndent;
function $l({ except: n, units: e = 1 } = {}) {
  return (t) => {
    let i = n && n.test(t.textAfter);
    return t.baseIndent + (i ? 0 : e * t.unit);
  };
}
const n5 = 200;
function r5() {
  return it.transactionFilter.of((n) => {
    if (!n.docChanged || !n.isUserEvent("input.type") && !n.isUserEvent("input.complete"))
      return n;
    let e = n.startState.languageDataAt("indentOnInput", n.startState.selection.main.head);
    if (!e.length)
      return n;
    let t = n.newDoc, { head: i } = n.newSelection.main, r = t.lineAt(i);
    if (i > r.from + n5)
      return n;
    let l = t.sliceString(r.from, i);
    if (!e.some((u) => u.test(l)))
      return n;
    let { state: o } = n, c = -1, f = [];
    for (let { head: u } of o.selection.ranges) {
      let O = o.doc.lineAt(u);
      if (O.from == c)
        continue;
      c = O.from;
      let p = sd(o, O.from);
      if (p == null)
        continue;
      let g = /^\s*/.exec(O.text)[0], b = Io(o, p);
      g != b && f.push({ from: O.from, to: O.from + g.length, insert: b });
    }
    return f.length ? [n, { changes: f, sequential: !0 }] : n;
  });
}
const s5 = /* @__PURE__ */ ge.define(), El = /* @__PURE__ */ new Ne();
function ir(n) {
  let e = n.firstChild, t = n.lastChild;
  return e && e.to < t.from ? { from: e.to, to: t.type.isError ? n.to : t.from } : null;
}
function l5(n, e, t) {
  let i = Lt(n);
  if (i.length < t)
    return null;
  let r = i.resolveStack(t, 1), l = null;
  for (let o = r; o; o = o.next) {
    let c = o.node;
    if (c.to <= t || c.from > t)
      continue;
    if (l && c.from < e)
      break;
    let f = c.type.prop(El);
    if (f && (c.to < i.length - 50 || i.length == n.doc.length || !o5(c))) {
      let u = f(c, n);
      u && u.from <= t && u.from >= e && u.to > t && (l = u);
    }
  }
  return l;
}
function o5(n) {
  let e = n.lastChild;
  return e && e.to == n.to && e.type.isError;
}
function dh(n, e, t) {
  for (let i of n.facet(s5)) {
    let r = i(n, e, t);
    if (r)
      return r;
  }
  return l5(n, e, t);
}
function Nv(n, e) {
  let t = e.mapPos(n.from, 1), i = e.mapPos(n.to, -1);
  return t >= i ? void 0 : { from: t, to: i };
}
const Ah = /* @__PURE__ */ Ye.define({ map: Nv }), la = /* @__PURE__ */ Ye.define({ map: Nv });
function Fv(n) {
  let e = [];
  for (let { head: t } of n.state.selection.ranges)
    e.some((i) => i.from <= t && i.to >= t) || e.push(n.lineBlockAt(t));
  return e;
}
const Vs = /* @__PURE__ */ ti.define({
  create() {
    return _e.none;
  },
  update(n, e) {
    n = n.map(e.changes);
    for (let t of e.effects)
      if (t.is(Ah) && !a5(n, t.value.from, t.value.to)) {
        let { preparePlaceholder: i } = e.state.facet(Kv), r = i ? _e.replace({ widget: new p5(i(e.state, t.value)) }) : e0;
        n = n.update({ add: [r.range(t.value.from, t.value.to)] });
      } else t.is(la) && (n = n.update({
        filter: (i, r) => t.value.from != i || t.value.to != r,
        filterFrom: t.value.from,
        filterTo: t.value.to
      }));
    if (e.selection) {
      let t = !1, { head: i } = e.selection.main;
      n.between(i, i, (r, l) => {
        r < i && l > i && (t = !0);
      }), t && (n = n.update({
        filterFrom: i,
        filterTo: i,
        filter: (r, l) => l <= i || r >= i
      }));
    }
    return n;
  },
  provide: (n) => ae.decorations.from(n),
  toJSON(n, e) {
    let t = [];
    return n.between(0, e.doc.length, (i, r) => {
      t.push(i, r);
    }), t;
  },
  fromJSON(n) {
    if (!Array.isArray(n) || n.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let t = 0; t < n.length; ) {
      let i = n[t++], r = n[t++];
      if (typeof i != "number" || typeof r != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(e0.range(i, r));
    }
    return _e.set(e, !0);
  }
});
function ph(n, e, t) {
  var i;
  let r = null;
  return (i = n.field(Vs, !1)) === null || i === void 0 || i.between(e, t, (l, o) => {
    (!r || r.from > l) && (r = { from: l, to: o });
  }), r;
}
function a5(n, e, t) {
  let i = !1;
  return n.between(e, e, (r, l) => {
    r == e && l == t && (i = !0);
  }), i;
}
function Gv(n, e) {
  return n.field(Vs, !1) ? e : e.concat(Ye.appendConfig.of(Jv()));
}
const c5 = (n) => {
  for (let e of Fv(n)) {
    let t = dh(n.state, e.from, e.to);
    if (t)
      return n.dispatch({ effects: Gv(n.state, [Ah.of(t), Hv(n, t)]) }), !0;
  }
  return !1;
}, h5 = (n) => {
  if (!n.state.field(Vs, !1))
    return !1;
  let e = [];
  for (let t of Fv(n)) {
    let i = ph(n.state, t.from, t.to);
    i && e.push(la.of(i), Hv(n, i, !1));
  }
  return e.length && n.dispatch({ effects: e }), e.length > 0;
};
function Hv(n, e, t = !0) {
  let i = n.state.doc.lineAt(e.from).number, r = n.state.doc.lineAt(e.to).number;
  return ae.announce.of(`${n.state.phrase(t ? "Folded lines" : "Unfolded lines")} ${i} ${n.state.phrase("to")} ${r}.`);
}
const f5 = (n) => {
  let { state: e } = n, t = [];
  for (let i = 0; i < e.doc.length; ) {
    let r = n.lineBlockAt(i), l = dh(e, r.from, r.to);
    l && t.push(Ah.of(l)), i = (l ? n.lineBlockAt(l.to) : r).to + 1;
  }
  return t.length && n.dispatch({ effects: Gv(n.state, t) }), !!t.length;
}, u5 = (n) => {
  let e = n.state.field(Vs, !1);
  if (!e || !e.size)
    return !1;
  let t = [];
  return e.between(0, n.state.doc.length, (i, r) => {
    t.push(la.of({ from: i, to: r }));
  }), n.dispatch({ effects: t }), !0;
}, O5 = [
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: c5 },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: h5 },
  { key: "Ctrl-Alt-[", run: f5 },
  { key: "Ctrl-Alt-]", run: u5 }
], d5 = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, Kv = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, d5);
  }
});
function Jv(n) {
  return [Vs, v5];
}
function eb(n, e) {
  let { state: t } = n, i = t.facet(Kv), r = (o) => {
    let c = n.lineBlockAt(n.posAtDOM(o.target)), f = ph(n.state, c.from, c.to);
    f && n.dispatch({ effects: la.of(f) }), o.preventDefault();
  };
  if (i.placeholderDOM)
    return i.placeholderDOM(n, r, e);
  let l = document.createElement("span");
  return l.textContent = i.placeholderText, l.setAttribute("aria-label", t.phrase("folded code")), l.title = t.phrase("unfold"), l.className = "cm-foldPlaceholder", l.onclick = r, l;
}
const e0 = /* @__PURE__ */ _e.replace({ widget: /* @__PURE__ */ new class extends Ur {
  toDOM(n) {
    return eb(n, null);
  }
}() });
class p5 extends Ur {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return eb(e, this.value);
  }
}
const g5 = {
  openText: "⌄",
  closedText: "›",
  markerDOM: null,
  domEventHandlers: {},
  foldingChanged: () => !1
};
class bu extends Vr {
  constructor(e, t) {
    super(), this.config = e, this.open = t;
  }
  eq(e) {
    return this.config == e.config && this.open == e.open;
  }
  toDOM(e) {
    if (this.config.markerDOM)
      return this.config.markerDOM(this.open);
    let t = document.createElement("span");
    return t.textContent = this.open ? this.config.openText : this.config.closedText, t.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"), t;
  }
}
function m5(n = {}) {
  let e = Object.assign(Object.assign({}, g5), n), t = new bu(e, !0), i = new bu(e, !1), r = Ft.fromClass(class {
    constructor(o) {
      this.from = o.viewport.from, this.markers = this.buildMarkers(o);
    }
    update(o) {
      (o.docChanged || o.viewportChanged || o.startState.facet(ds) != o.state.facet(ds) || o.startState.field(Vs, !1) != o.state.field(Vs, !1) || Lt(o.startState) != Lt(o.state) || e.foldingChanged(o)) && (this.markers = this.buildMarkers(o.view));
    }
    buildMarkers(o) {
      let c = new Er();
      for (let f of o.viewportLineBlocks) {
        let u = ph(o.state, f.from, f.to) ? i : dh(o.state, f.from, f.to) ? t : null;
        u && c.add(f.from, f.from, u);
      }
      return c.finish();
    }
  }), { domEventHandlers: l } = e;
  return [
    r,
    QW({
      class: "cm-foldGutter",
      markers(o) {
        var c;
        return ((c = o.plugin(r)) === null || c === void 0 ? void 0 : c.markers) || ct.empty;
      },
      initialSpacer() {
        return new bu(e, !1);
      },
      domEventHandlers: Object.assign(Object.assign({}, l), { click: (o, c, f) => {
        if (l.click && l.click(o, c, f))
          return !0;
        let u = ph(o.state, c.from, c.to);
        if (u)
          return o.dispatch({ effects: la.of(u) }), !0;
        let O = dh(o.state, c.from, c.to);
        return O ? (o.dispatch({ effects: Ah.of(O) }), !0) : !1;
      } })
    }),
    Jv()
  ];
}
const v5 = /* @__PURE__ */ ae.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class oa {
  constructor(e, t) {
    this.specs = e;
    let i;
    function r(c) {
      let f = os.newName();
      return (i || (i = /* @__PURE__ */ Object.create(null)))["." + f] = c, f;
    }
    const l = typeof t.all == "string" ? t.all : t.all ? r(t.all) : void 0, o = t.scope;
    this.scope = o instanceof Dn ? (c) => c.prop(pl) == o.data : o ? (c) => c == o : void 0, this.style = Dv(e.map((c) => ({
      tag: c.tag,
      class: c.class || r(Object.assign({}, c, { tag: null }))
    })), {
      all: l
    }).style, this.module = i ? new os(i) : null, this.themeType = t.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, t) {
    return new oa(e, t || {});
  }
}
const $O = /* @__PURE__ */ ge.define(), tb = /* @__PURE__ */ ge.define({
  combine(n) {
    return n.length ? [n[0]] : null;
  }
});
function Su(n) {
  let e = n.facet($O);
  return e.length ? e : n.facet(tb);
}
function ib(n, e) {
  let t = [S5], i;
  return n instanceof oa && (n.module && t.push(ae.styleModule.of(n.module)), i = n.themeType), e != null && e.fallback ? t.push(tb.of(n)) : i ? t.push($O.computeN([ae.darkTheme], (r) => r.facet(ae.darkTheme) == (i == "dark") ? [n] : [])) : t.push($O.of(n)), t;
}
class b5 {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Lt(e.state), this.decorations = this.buildDeco(e, Su(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let t = Lt(e.state), i = Su(e.state), r = i != Su(e.startState), { viewport: l } = e.view, o = e.changes.mapPos(this.decoratedTo, 1);
    t.length < l.to && !r && t.type == this.tree.type && o >= l.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = o) : (t != this.tree || e.viewportChanged || r) && (this.tree = t, this.decorations = this.buildDeco(e.view, i), this.decoratedTo = l.to);
  }
  buildDeco(e, t) {
    if (!t || !this.tree.length)
      return _e.none;
    let i = new Er();
    for (let { from: r, to: l } of e.visibleRanges)
      zZ(this.tree, t, (o, c, f) => {
        i.add(o, c, this.markCache[f] || (this.markCache[f] = _e.mark({ class: f })));
      }, r, l);
    return i.finish();
  }
}
const S5 = /* @__PURE__ */ ps.high(/* @__PURE__ */ Ft.fromClass(b5, {
  decorations: (n) => n.decorations
})), $5 = /* @__PURE__ */ oa.define([
  {
    tag: v.meta,
    color: "#404740"
  },
  {
    tag: v.link,
    textDecoration: "underline"
  },
  {
    tag: v.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: v.emphasis,
    fontStyle: "italic"
  },
  {
    tag: v.strong,
    fontWeight: "bold"
  },
  {
    tag: v.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: v.keyword,
    color: "#708"
  },
  {
    tag: [v.atom, v.bool, v.url, v.contentSeparator, v.labelName],
    color: "#219"
  },
  {
    tag: [v.literal, v.inserted],
    color: "#164"
  },
  {
    tag: [v.string, v.deleted],
    color: "#a11"
  },
  {
    tag: [v.regexp, v.escape, /* @__PURE__ */ v.special(v.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ v.definition(v.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ v.local(v.variableName),
    color: "#30a"
  },
  {
    tag: [v.typeName, v.namespace],
    color: "#085"
  },
  {
    tag: v.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ v.special(v.variableName), v.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ v.definition(v.propertyName),
    color: "#00c"
  },
  {
    tag: v.comment,
    color: "#940"
  },
  {
    tag: v.invalid,
    color: "#f00"
  }
]), y5 = /* @__PURE__ */ ae.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), nb = 1e4, rb = "()[]{}", sb = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, {
      afterCursor: !0,
      brackets: rb,
      maxScanDistance: nb,
      renderMatch: P5
    });
  }
}), Q5 = /* @__PURE__ */ _e.mark({ class: "cm-matchingBracket" }), x5 = /* @__PURE__ */ _e.mark({ class: "cm-nonmatchingBracket" });
function P5(n) {
  let e = [], t = n.matched ? Q5 : x5;
  return e.push(t.range(n.start.from, n.start.to)), n.end && e.push(t.range(n.end.from, n.end.to)), e;
}
const w5 = /* @__PURE__ */ ti.define({
  create() {
    return _e.none;
  },
  update(n, e) {
    if (!e.docChanged && !e.selection)
      return n;
    let t = [], i = e.state.facet(sb);
    for (let r of e.state.selection.ranges) {
      if (!r.empty)
        continue;
      let l = or(e.state, r.head, -1, i) || r.head > 0 && or(e.state, r.head - 1, 1, i) || i.afterCursor && (or(e.state, r.head, 1, i) || r.head < e.state.doc.length && or(e.state, r.head + 1, -1, i));
      l && (t = t.concat(i.renderMatch(l, e.state)));
    }
    return _e.set(t, !0);
  },
  provide: (n) => ae.decorations.from(n)
}), k5 = [
  w5,
  y5
];
function _5(n = {}) {
  return [sb.of(n), k5];
}
const lb = /* @__PURE__ */ new Ne();
function yO(n, e, t) {
  let i = n.prop(e < 0 ? Ne.openedBy : Ne.closedBy);
  if (i)
    return i;
  if (n.name.length == 1) {
    let r = t.indexOf(n.name);
    if (r > -1 && r % 2 == (e < 0 ? 1 : 0))
      return [t[r + e]];
  }
  return null;
}
function QO(n) {
  let e = n.type.prop(lb);
  return e ? e(n.node) : n;
}
function or(n, e, t, i = {}) {
  let r = i.maxScanDistance || nb, l = i.brackets || rb, o = Lt(n), c = o.resolveInner(e, t);
  for (let f = c; f; f = f.parent) {
    let u = yO(f.type, t, l);
    if (u && f.from < f.to) {
      let O = QO(f);
      if (O && (t > 0 ? e >= O.from && e < O.to : e > O.from && e <= O.to))
        return W5(n, e, t, f, O, u, l);
    }
  }
  return Z5(n, e, t, o, c.type, r, l);
}
function W5(n, e, t, i, r, l, o) {
  let c = i.parent, f = { from: r.from, to: r.to }, u = 0, O = c == null ? void 0 : c.cursor();
  if (O && (t < 0 ? O.childBefore(i.from) : O.childAfter(i.to)))
    do
      if (t < 0 ? O.to <= i.from : O.from >= i.to) {
        if (u == 0 && l.indexOf(O.type.name) > -1 && O.from < O.to) {
          let p = QO(O);
          return { start: f, end: p ? { from: p.from, to: p.to } : void 0, matched: !0 };
        } else if (yO(O.type, t, o))
          u++;
        else if (yO(O.type, -t, o)) {
          if (u == 0) {
            let p = QO(O);
            return {
              start: f,
              end: p && p.from < p.to ? { from: p.from, to: p.to } : void 0,
              matched: !1
            };
          }
          u--;
        }
      }
    while (t < 0 ? O.prevSibling() : O.nextSibling());
  return { start: f, matched: !1 };
}
function Z5(n, e, t, i, r, l, o) {
  let c = t < 0 ? n.sliceDoc(e - 1, e) : n.sliceDoc(e, e + 1), f = o.indexOf(c);
  if (f < 0 || f % 2 == 0 != t > 0)
    return null;
  let u = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e }, O = n.doc.iterRange(e, t > 0 ? n.doc.length : 0), p = 0;
  for (let g = 0; !O.next().done && g <= l; ) {
    let b = O.value;
    t < 0 && (g += b.length);
    let $ = e + g * t;
    for (let x = t > 0 ? 0 : b.length - 1, P = t > 0 ? b.length : -1; x != P; x += t) {
      let k = o.indexOf(b[x]);
      if (!(k < 0 || i.resolveInner($ + x, 1).type != r))
        if (k % 2 == 0 == t > 0)
          p++;
        else {
          if (p == 1)
            return { start: u, end: { from: $ + x, to: $ + x + 1 }, matched: k >> 1 == f >> 1 };
          p--;
        }
    }
    t > 0 && (g += b.length);
  }
  return O.done ? { start: u, matched: !1 } : null;
}
const T5 = /* @__PURE__ */ Object.create(null), t0 = [Ri.none], i0 = [], n0 = /* @__PURE__ */ Object.create(null), C5 = /* @__PURE__ */ Object.create(null);
for (let [n, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  C5[n] = /* @__PURE__ */ R5(T5, e);
function $u(n, e) {
  i0.indexOf(n) > -1 || (i0.push(n), console.warn(e));
}
function R5(n, e) {
  let t = [];
  for (let c of e.split(" ")) {
    let f = [];
    for (let u of c.split(".")) {
      let O = n[u] || v[u];
      O ? typeof O == "function" ? f.length ? f = f.map(O) : $u(u, `Modifier ${u} used at start of tag`) : f.length ? $u(u, `Tag ${u} used as modifier`) : f = Array.isArray(O) ? O : [O] : $u(u, `Unknown highlighting tag ${u}`);
    }
    for (let u of f)
      t.push(u);
  }
  if (!t.length)
    return 0;
  let i = e.replace(/ /g, "_"), r = i + " " + t.map((c) => c.id), l = n0[r];
  if (l)
    return l.id;
  let o = n0[r] = Ri.define({
    id: t0.length,
    name: i,
    props: [Al({ [i]: t })]
  });
  return t0.push(o), o.id;
}
Tt.RTL, Tt.LTR;
const X5 = (n) => {
  let { state: e } = n, t = e.doc.lineAt(e.selection.main.from), i = ad(n.state, t.from);
  return i.line ? A5(n) : i.block ? E5(n) : !1;
};
function od(n, e) {
  return ({ state: t, dispatch: i }) => {
    if (t.readOnly)
      return !1;
    let r = n(e, t);
    return r ? (i(t.update(r)), !0) : !1;
  };
}
const A5 = /* @__PURE__ */ od(
  L5,
  0
  /* CommentOption.Toggle */
), M5 = /* @__PURE__ */ od(
  ob,
  0
  /* CommentOption.Toggle */
), E5 = /* @__PURE__ */ od(
  (n, e) => ob(n, e, V5(e)),
  0
  /* CommentOption.Toggle */
);
function ad(n, e) {
  let t = n.languageDataAt("commentTokens", e);
  return t.length ? t[0] : {};
}
const So = 50;
function q5(n, { open: e, close: t }, i, r) {
  let l = n.sliceDoc(i - So, i), o = n.sliceDoc(r, r + So), c = /\s*$/.exec(l)[0].length, f = /^\s*/.exec(o)[0].length, u = l.length - c;
  if (l.slice(u - e.length, u) == e && o.slice(f, f + t.length) == t)
    return {
      open: { pos: i - c, margin: c && 1 },
      close: { pos: r + f, margin: f && 1 }
    };
  let O, p;
  r - i <= 2 * So ? O = p = n.sliceDoc(i, r) : (O = n.sliceDoc(i, i + So), p = n.sliceDoc(r - So, r));
  let g = /^\s*/.exec(O)[0].length, b = /\s*$/.exec(p)[0].length, $ = p.length - b - t.length;
  return O.slice(g, g + e.length) == e && p.slice($, $ + t.length) == t ? {
    open: {
      pos: i + g + e.length,
      margin: /\s/.test(O.charAt(g + e.length)) ? 1 : 0
    },
    close: {
      pos: r - b - t.length,
      margin: /\s/.test(p.charAt($ - 1)) ? 1 : 0
    }
  } : null;
}
function V5(n) {
  let e = [];
  for (let t of n.selection.ranges) {
    let i = n.doc.lineAt(t.from), r = t.to <= i.to ? i : n.doc.lineAt(t.to);
    r.from > i.from && r.from == t.to && (r = t.to == i.to + 1 ? i : n.doc.lineAt(t.to - 1));
    let l = e.length - 1;
    l >= 0 && e[l].to > i.from ? e[l].to = r.to : e.push({ from: i.from + /^\s*/.exec(i.text)[0].length, to: r.to });
  }
  return e;
}
function ob(n, e, t = e.selection.ranges) {
  let i = t.map((l) => ad(e, l.from).block);
  if (!i.every((l) => l))
    return null;
  let r = t.map((l, o) => q5(e, i[o], l.from, l.to));
  if (n != 2 && !r.every((l) => l))
    return { changes: e.changes(t.map((l, o) => r[o] ? [] : [{ from: l.from, insert: i[o].open + " " }, { from: l.to, insert: " " + i[o].close }])) };
  if (n != 1 && r.some((l) => l)) {
    let l = [];
    for (let o = 0, c; o < r.length; o++)
      if (c = r[o]) {
        let f = i[o], { open: u, close: O } = c;
        l.push({ from: u.pos - f.open.length, to: u.pos + u.margin }, { from: O.pos - O.margin, to: O.pos + f.close.length });
      }
    return { changes: l };
  }
  return null;
}
function L5(n, e, t = e.selection.ranges) {
  let i = [], r = -1;
  for (let { from: l, to: o } of t) {
    let c = i.length, f = 1e9, u = ad(e, l).line;
    if (u) {
      for (let O = l; O <= o; ) {
        let p = e.doc.lineAt(O);
        if (p.from > r && (l == o || o > p.from)) {
          r = p.from;
          let g = /^\s*/.exec(p.text)[0].length, b = g == p.length, $ = p.text.slice(g, g + u.length) == u ? g : -1;
          g < p.text.length && g < f && (f = g), i.push({ line: p, comment: $, token: u, indent: g, empty: b, single: !1 });
        }
        O = p.to + 1;
      }
      if (f < 1e9)
        for (let O = c; O < i.length; O++)
          i[O].indent < i[O].line.text.length && (i[O].indent = f);
      i.length == c + 1 && (i[c].single = !0);
    }
  }
  if (n != 2 && i.some((l) => l.comment < 0 && (!l.empty || l.single))) {
    let l = [];
    for (let { line: c, token: f, indent: u, empty: O, single: p } of i)
      (p || !O) && l.push({ from: c.from + u, insert: f + " " });
    let o = e.changes(l);
    return { changes: o, selection: e.selection.map(o, 1) };
  } else if (n != 1 && i.some((l) => l.comment >= 0)) {
    let l = [];
    for (let { line: o, comment: c, token: f } of i)
      if (c >= 0) {
        let u = o.from + c, O = u + f.length;
        o.text[O - o.from] == " " && O++, l.push({ from: u, to: O });
      }
    return { changes: l };
  }
  return null;
}
const xO = /* @__PURE__ */ Lr.define(), U5 = /* @__PURE__ */ Lr.define(), Y5 = /* @__PURE__ */ ge.define(), ab = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, t) => t
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, t) => (i, r) => e(i, r) || t(i, r)
    });
  }
}), cb = /* @__PURE__ */ ti.define({
  create() {
    return ar.empty;
  },
  update(n, e) {
    let t = e.state.facet(ab), i = e.annotation(xO);
    if (i) {
      let f = Ii.fromTransaction(e, i.selection), u = i.side, O = u == 0 ? n.undone : n.done;
      return f ? O = gh(O, O.length, t.minDepth, f) : O = ub(O, e.startState.selection), new ar(u == 0 ? i.rest : O, u == 0 ? O : i.rest);
    }
    let r = e.annotation(U5);
    if ((r == "full" || r == "before") && (n = n.isolate()), e.annotation(Nt.addToHistory) === !1)
      return e.changes.empty ? n : n.addMapping(e.changes.desc);
    let l = Ii.fromTransaction(e), o = e.annotation(Nt.time), c = e.annotation(Nt.userEvent);
    return l ? n = n.addChanges(l, o, c, t, e) : e.selection && (n = n.addSelection(e.startState.selection, o, c, t.newGroupDelay)), (r == "full" || r == "after") && (n = n.isolate()), n;
  },
  toJSON(n) {
    return { done: n.done.map((e) => e.toJSON()), undone: n.undone.map((e) => e.toJSON()) };
  },
  fromJSON(n) {
    return new ar(n.done.map(Ii.fromJSON), n.undone.map(Ii.fromJSON));
  }
});
function D5(n = {}) {
  return [
    cb,
    ab.of(n),
    ae.domEventHandlers({
      beforeinput(e, t) {
        let i = e.inputType == "historyUndo" ? hb : e.inputType == "historyRedo" ? PO : null;
        return i ? (e.preventDefault(), i(t)) : !1;
      }
    })
  ];
}
function Mh(n, e) {
  return function({ state: t, dispatch: i }) {
    if (!e && t.readOnly)
      return !1;
    let r = t.field(cb, !1);
    if (!r)
      return !1;
    let l = r.pop(n, t, e);
    return l ? (i(l), !0) : !1;
  };
}
const hb = /* @__PURE__ */ Mh(0, !1), PO = /* @__PURE__ */ Mh(1, !1), z5 = /* @__PURE__ */ Mh(0, !0), j5 = /* @__PURE__ */ Mh(1, !0);
class Ii {
  constructor(e, t, i, r, l) {
    this.changes = e, this.effects = t, this.mapped = i, this.startSelection = r, this.selectionsAfter = l;
  }
  setSelAfter(e) {
    return new Ii(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, t, i;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(),
      startSelection: (i = this.startSelection) === null || i === void 0 ? void 0 : i.toJSON(),
      selectionsAfter: this.selectionsAfter.map((r) => r.toJSON())
    };
  }
  static fromJSON(e) {
    return new Ii(e.changes && ei.fromJSON(e.changes), [], e.mapped && cr.fromJSON(e.mapped), e.startSelection && F.fromJSON(e.startSelection), e.selectionsAfter.map(F.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, t) {
    let i = $n;
    for (let r of e.startState.facet(Y5)) {
      let l = r(e);
      l.length && (i = i.concat(l));
    }
    return !i.length && e.changes.empty ? null : new Ii(e.changes.invert(e.startState.doc), i, void 0, t || e.startState.selection, $n);
  }
  static selection(e) {
    return new Ii(void 0, $n, void 0, void 0, e);
  }
}
function gh(n, e, t, i) {
  let r = e + 1 > t + 20 ? e - t - 1 : 0, l = n.slice(r, e);
  return l.push(i), l;
}
function B5(n, e) {
  let t = [], i = !1;
  return n.iterChangedRanges((r, l) => t.push(r, l)), e.iterChangedRanges((r, l, o, c) => {
    for (let f = 0; f < t.length; ) {
      let u = t[f++], O = t[f++];
      c >= u && o <= O && (i = !0);
    }
  }), i;
}
function I5(n, e) {
  return n.ranges.length == e.ranges.length && n.ranges.filter((t, i) => t.empty != e.ranges[i].empty).length === 0;
}
function fb(n, e) {
  return n.length ? e.length ? n.concat(e) : n : e;
}
const $n = [], N5 = 200;
function ub(n, e) {
  if (n.length) {
    let t = n[n.length - 1], i = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - N5));
    return i.length && i[i.length - 1].eq(e) ? n : (i.push(e), gh(n, n.length - 1, 1e9, t.setSelAfter(i)));
  } else
    return [Ii.selection([e])];
}
function F5(n) {
  let e = n[n.length - 1], t = n.slice();
  return t[n.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), t;
}
function yu(n, e) {
  if (!n.length)
    return n;
  let t = n.length, i = $n;
  for (; t; ) {
    let r = G5(n[t - 1], e, i);
    if (r.changes && !r.changes.empty || r.effects.length) {
      let l = n.slice(0, t);
      return l[t - 1] = r, l;
    } else
      e = r.mapped, t--, i = r.selectionsAfter;
  }
  return i.length ? [Ii.selection(i)] : $n;
}
function G5(n, e, t) {
  let i = fb(n.selectionsAfter.length ? n.selectionsAfter.map((c) => c.map(e)) : $n, t);
  if (!n.changes)
    return Ii.selection(i);
  let r = n.changes.map(e), l = e.mapDesc(n.changes, !0), o = n.mapped ? n.mapped.composeDesc(l) : l;
  return new Ii(r, Ye.mapEffects(n.effects, e), o, n.startSelection.map(l), i);
}
const H5 = /^(input\.type|delete)($|\.)/;
class ar {
  constructor(e, t, i = 0, r = void 0) {
    this.done = e, this.undone = t, this.prevTime = i, this.prevUserEvent = r;
  }
  isolate() {
    return this.prevTime ? new ar(this.done, this.undone) : this;
  }
  addChanges(e, t, i, r, l) {
    let o = this.done, c = o[o.length - 1];
    return c && c.changes && !c.changes.empty && e.changes && (!i || H5.test(i)) && (!c.selectionsAfter.length && t - this.prevTime < r.newGroupDelay && r.joinToEvent(l, B5(c.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    i == "input.type.compose") ? o = gh(o, o.length - 1, r.minDepth, new Ii(e.changes.compose(c.changes), fb(Ye.mapEffects(e.effects, c.changes), c.effects), c.mapped, c.startSelection, $n)) : o = gh(o, o.length, r.minDepth, e), new ar(o, $n, t, i);
  }
  addSelection(e, t, i, r) {
    let l = this.done.length ? this.done[this.done.length - 1].selectionsAfter : $n;
    return l.length > 0 && t - this.prevTime < r && i == this.prevUserEvent && i && /^select($|\.)/.test(i) && I5(l[l.length - 1], e) ? this : new ar(ub(this.done, e), this.undone, t, i);
  }
  addMapping(e) {
    return new ar(yu(this.done, e), yu(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, t, i) {
    let r = e == 0 ? this.done : this.undone;
    if (r.length == 0)
      return null;
    let l = r[r.length - 1], o = l.selectionsAfter[0] || t.selection;
    if (i && l.selectionsAfter.length)
      return t.update({
        selection: l.selectionsAfter[l.selectionsAfter.length - 1],
        annotations: xO.of({ side: e, rest: F5(r), selection: o }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (l.changes) {
      let c = r.length == 1 ? $n : r.slice(0, r.length - 1);
      return l.mapped && (c = yu(c, l.mapped)), t.update({
        changes: l.changes,
        selection: l.startSelection,
        effects: l.effects,
        annotations: xO.of({ side: e, rest: c, selection: o }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
ar.empty = /* @__PURE__ */ new ar($n, $n);
const K5 = [
  { key: "Mod-z", run: hb, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: PO, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: PO, preventDefault: !0 },
  { key: "Mod-u", run: z5, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: j5, preventDefault: !0 }
];
function ql(n, e) {
  return F.create(n.ranges.map(e), n.mainIndex);
}
function Or(n, e) {
  return n.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function Bn({ state: n, dispatch: e }, t) {
  let i = ql(n.selection, t);
  return i.eq(n.selection, !0) ? !1 : (e(Or(n, i)), !0);
}
function Eh(n, e) {
  return F.cursor(e ? n.to : n.from);
}
function Ob(n, e) {
  return Bn(n, (t) => t.empty ? n.moveByChar(t, e) : Eh(t, e));
}
function xi(n) {
  return n.textDirectionAt(n.state.selection.main.head) == Tt.LTR;
}
const db = (n) => Ob(n, !xi(n)), pb = (n) => Ob(n, xi(n));
function gb(n, e) {
  return Bn(n, (t) => t.empty ? n.moveByGroup(t, e) : Eh(t, e));
}
const J5 = (n) => gb(n, !xi(n)), eT = (n) => gb(n, xi(n));
function tT(n, e, t) {
  if (e.type.prop(t))
    return !0;
  let i = e.to - e.from;
  return i && (i > 2 || /[^\s,.;:]/.test(n.sliceDoc(e.from, e.to))) || e.firstChild;
}
function qh(n, e, t) {
  let i = Lt(n).resolveInner(e.head), r = t ? Ne.closedBy : Ne.openedBy;
  for (let f = e.head; ; ) {
    let u = t ? i.childAfter(f) : i.childBefore(f);
    if (!u)
      break;
    tT(n, u, r) ? i = u : f = t ? u.to : u.from;
  }
  let l = i.type.prop(r), o, c;
  return l && (o = t ? or(n, i.from, 1) : or(n, i.to, -1)) && o.matched ? c = t ? o.end.to : o.end.from : c = t ? i.to : i.from, F.cursor(c, t ? -1 : 1);
}
const iT = (n) => Bn(n, (e) => qh(n.state, e, !xi(n))), nT = (n) => Bn(n, (e) => qh(n.state, e, xi(n)));
function mb(n, e) {
  return Bn(n, (t) => {
    if (!t.empty)
      return Eh(t, e);
    let i = n.moveVertically(t, e);
    return i.head != t.head ? i : n.moveToLineBoundary(t, e);
  });
}
const vb = (n) => mb(n, !1), bb = (n) => mb(n, !0);
function Sb(n) {
  let e = n.scrollDOM.clientHeight < n.scrollDOM.scrollHeight - 2, t = 0, i = 0, r;
  if (e) {
    for (let l of n.state.facet(ae.scrollMargins)) {
      let o = l(n);
      o != null && o.top && (t = Math.max(o == null ? void 0 : o.top, t)), o != null && o.bottom && (i = Math.max(o == null ? void 0 : o.bottom, i));
    }
    r = n.scrollDOM.clientHeight - t - i;
  } else
    r = (n.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: t,
    marginBottom: i,
    selfScroll: e,
    height: Math.max(n.defaultLineHeight, r - 5)
  };
}
function $b(n, e) {
  let t = Sb(n), { state: i } = n, r = ql(i.selection, (o) => o.empty ? n.moveVertically(o, e, t.height) : Eh(o, e));
  if (r.eq(i.selection))
    return !1;
  let l;
  if (t.selfScroll) {
    let o = n.coordsAtPos(i.selection.main.head), c = n.scrollDOM.getBoundingClientRect(), f = c.top + t.marginTop, u = c.bottom - t.marginBottom;
    o && o.top > f && o.bottom < u && (l = ae.scrollIntoView(r.main.head, { y: "start", yMargin: o.top - f }));
  }
  return n.dispatch(Or(i, r), { effects: l }), !0;
}
const r0 = (n) => $b(n, !1), wO = (n) => $b(n, !0);
function gs(n, e, t) {
  let i = n.lineBlockAt(e.head), r = n.moveToLineBoundary(e, t);
  if (r.head == e.head && r.head != (t ? i.to : i.from) && (r = n.moveToLineBoundary(e, t, !1)), !t && r.head == i.from && i.length) {
    let l = /^\s*/.exec(n.state.sliceDoc(i.from, Math.min(i.from + 100, i.to)))[0].length;
    l && e.head != i.from + l && (r = F.cursor(i.from + l));
  }
  return r;
}
const rT = (n) => Bn(n, (e) => gs(n, e, !0)), sT = (n) => Bn(n, (e) => gs(n, e, !1)), lT = (n) => Bn(n, (e) => gs(n, e, !xi(n))), oT = (n) => Bn(n, (e) => gs(n, e, xi(n))), aT = (n) => Bn(n, (e) => F.cursor(n.lineBlockAt(e.head).from, 1)), cT = (n) => Bn(n, (e) => F.cursor(n.lineBlockAt(e.head).to, -1));
function hT(n, e, t) {
  let i = !1, r = ql(n.selection, (l) => {
    let o = or(n, l.head, -1) || or(n, l.head, 1) || l.head > 0 && or(n, l.head - 1, 1) || l.head < n.doc.length && or(n, l.head + 1, -1);
    if (!o || !o.end)
      return l;
    i = !0;
    let c = o.start.from == l.head ? o.end.to : o.end.from;
    return F.cursor(c);
  });
  return i ? (e(Or(n, r)), !0) : !1;
}
const fT = ({ state: n, dispatch: e }) => hT(n, e);
function wn(n, e) {
  let t = ql(n.state.selection, (i) => {
    let r = e(i);
    return F.range(i.anchor, r.head, r.goalColumn, r.bidiLevel || void 0);
  });
  return t.eq(n.state.selection) ? !1 : (n.dispatch(Or(n.state, t)), !0);
}
function yb(n, e) {
  return wn(n, (t) => n.moveByChar(t, e));
}
const Qb = (n) => yb(n, !xi(n)), xb = (n) => yb(n, xi(n));
function Pb(n, e) {
  return wn(n, (t) => n.moveByGroup(t, e));
}
const uT = (n) => Pb(n, !xi(n)), OT = (n) => Pb(n, xi(n)), dT = (n) => wn(n, (e) => qh(n.state, e, !xi(n))), pT = (n) => wn(n, (e) => qh(n.state, e, xi(n)));
function wb(n, e) {
  return wn(n, (t) => n.moveVertically(t, e));
}
const kb = (n) => wb(n, !1), _b = (n) => wb(n, !0);
function Wb(n, e) {
  return wn(n, (t) => n.moveVertically(t, e, Sb(n).height));
}
const s0 = (n) => Wb(n, !1), l0 = (n) => Wb(n, !0), gT = (n) => wn(n, (e) => gs(n, e, !0)), mT = (n) => wn(n, (e) => gs(n, e, !1)), vT = (n) => wn(n, (e) => gs(n, e, !xi(n))), bT = (n) => wn(n, (e) => gs(n, e, xi(n))), ST = (n) => wn(n, (e) => F.cursor(n.lineBlockAt(e.head).from)), $T = (n) => wn(n, (e) => F.cursor(n.lineBlockAt(e.head).to)), o0 = ({ state: n, dispatch: e }) => (e(Or(n, { anchor: 0 })), !0), a0 = ({ state: n, dispatch: e }) => (e(Or(n, { anchor: n.doc.length })), !0), c0 = ({ state: n, dispatch: e }) => (e(Or(n, { anchor: n.selection.main.anchor, head: 0 })), !0), h0 = ({ state: n, dispatch: e }) => (e(Or(n, { anchor: n.selection.main.anchor, head: n.doc.length })), !0), yT = ({ state: n, dispatch: e }) => (e(n.update({ selection: { anchor: 0, head: n.doc.length }, userEvent: "select" })), !0), QT = ({ state: n, dispatch: e }) => {
  let t = Vh(n).map(({ from: i, to: r }) => F.range(i, Math.min(r + 1, n.doc.length)));
  return e(n.update({ selection: F.create(t), userEvent: "select" })), !0;
}, xT = ({ state: n, dispatch: e }) => {
  let t = ql(n.selection, (i) => {
    let r = Lt(n), l = r.resolveStack(i.from, 1);
    if (i.empty) {
      let o = r.resolveStack(i.from, -1);
      o.node.from >= l.node.from && o.node.to <= l.node.to && (l = o);
    }
    for (let o = l; o; o = o.next) {
      let { node: c } = o;
      if ((c.from < i.from && c.to >= i.to || c.to > i.to && c.from <= i.from) && o.next)
        return F.range(c.to, c.from);
    }
    return i;
  });
  return t.eq(n.selection) ? !1 : (e(Or(n, t)), !0);
}, PT = ({ state: n, dispatch: e }) => {
  let t = n.selection, i = null;
  return t.ranges.length > 1 ? i = F.create([t.main]) : t.main.empty || (i = F.create([F.cursor(t.main.head)])), i ? (e(Or(n, i)), !0) : !1;
};
function aa(n, e) {
  if (n.state.readOnly)
    return !1;
  let t = "delete.selection", { state: i } = n, r = i.changeByRange((l) => {
    let { from: o, to: c } = l;
    if (o == c) {
      let f = e(l);
      f < o ? (t = "delete.backward", f = Cc(n, f, !1)) : f > o && (t = "delete.forward", f = Cc(n, f, !0)), o = Math.min(o, f), c = Math.max(c, f);
    } else
      o = Cc(n, o, !1), c = Cc(n, c, !0);
    return o == c ? { range: l } : { changes: { from: o, to: c }, range: F.cursor(o, o < l.head ? -1 : 1) };
  });
  return r.changes.empty ? !1 : (n.dispatch(i.update(r, {
    scrollIntoView: !0,
    userEvent: t,
    effects: t == "delete.selection" ? ae.announce.of(i.phrase("Selection deleted")) : void 0
  })), !0);
}
function Cc(n, e, t) {
  if (n instanceof ae)
    for (let i of n.state.facet(ae.atomicRanges).map((r) => r(n)))
      i.between(e, e, (r, l) => {
        r < e && l > e && (e = t ? l : r);
      });
  return e;
}
const Zb = (n, e, t) => aa(n, (i) => {
  let r = i.from, { state: l } = n, o = l.doc.lineAt(r), c, f;
  if (t && !e && r > o.from && r < o.from + 200 && !/[^ \t]/.test(c = o.text.slice(0, r - o.from))) {
    if (c[c.length - 1] == "	")
      return r - 1;
    let u = Xl(c, l.tabSize), O = u % Oh(l) || Oh(l);
    for (let p = 0; p < O && c[c.length - 1 - p] == " "; p++)
      r--;
    f = r;
  } else
    f = ui(o.text, r - o.from, e, e) + o.from, f == r && o.number != (e ? l.doc.lines : 1) ? f += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(o.text.slice(f - o.from, r - o.from)) && (f = ui(o.text, f - o.from, !1, !1) + o.from);
  return f;
}), kO = (n) => Zb(n, !1, !0), Tb = (n) => Zb(n, !0, !1), Cb = (n, e) => aa(n, (t) => {
  let i = t.head, { state: r } = n, l = r.doc.lineAt(i), o = r.charCategorizer(i);
  for (let c = null; ; ) {
    if (i == (e ? l.to : l.from)) {
      i == t.head && l.number != (e ? r.doc.lines : 1) && (i += e ? 1 : -1);
      break;
    }
    let f = ui(l.text, i - l.from, e) + l.from, u = l.text.slice(Math.min(i, f) - l.from, Math.max(i, f) - l.from), O = o(u);
    if (c != null && O != c)
      break;
    (u != " " || i != t.head) && (c = O), i = f;
  }
  return i;
}), Rb = (n) => Cb(n, !1), wT = (n) => Cb(n, !0), kT = (n) => aa(n, (e) => {
  let t = n.lineBlockAt(e.head).to;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), _T = (n) => aa(n, (e) => {
  let t = n.moveToLineBoundary(e, !1).head;
  return e.head > t ? t : Math.max(0, e.head - 1);
}), WT = (n) => aa(n, (e) => {
  let t = n.moveToLineBoundary(e, !0).head;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), ZT = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((i) => ({
    changes: { from: i.from, to: i.to, insert: ot.of(["", ""]) },
    range: F.cursor(i.from)
  }));
  return e(n.update(t, { scrollIntoView: !0, userEvent: "input" })), !0;
}, TT = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((i) => {
    if (!i.empty || i.from == 0 || i.from == n.doc.length)
      return { range: i };
    let r = i.from, l = n.doc.lineAt(r), o = r == l.from ? r - 1 : ui(l.text, r - l.from, !1) + l.from, c = r == l.to ? r + 1 : ui(l.text, r - l.from, !0) + l.from;
    return {
      changes: { from: o, to: c, insert: n.doc.slice(r, c).append(n.doc.slice(o, r)) },
      range: F.cursor(c)
    };
  });
  return t.changes.empty ? !1 : (e(n.update(t, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function Vh(n) {
  let e = [], t = -1;
  for (let i of n.selection.ranges) {
    let r = n.doc.lineAt(i.from), l = n.doc.lineAt(i.to);
    if (!i.empty && i.to == l.from && (l = n.doc.lineAt(i.to - 1)), t >= r.number) {
      let o = e[e.length - 1];
      o.to = l.to, o.ranges.push(i);
    } else
      e.push({ from: r.from, to: l.to, ranges: [i] });
    t = l.number + 1;
  }
  return e;
}
function Xb(n, e, t) {
  if (n.readOnly)
    return !1;
  let i = [], r = [];
  for (let l of Vh(n)) {
    if (t ? l.to == n.doc.length : l.from == 0)
      continue;
    let o = n.doc.lineAt(t ? l.to + 1 : l.from - 1), c = o.length + 1;
    if (t) {
      i.push({ from: l.to, to: o.to }, { from: l.from, insert: o.text + n.lineBreak });
      for (let f of l.ranges)
        r.push(F.range(Math.min(n.doc.length, f.anchor + c), Math.min(n.doc.length, f.head + c)));
    } else {
      i.push({ from: o.from, to: l.from }, { from: l.to, insert: n.lineBreak + o.text });
      for (let f of l.ranges)
        r.push(F.range(f.anchor - c, f.head - c));
    }
  }
  return i.length ? (e(n.update({
    changes: i,
    scrollIntoView: !0,
    selection: F.create(r, n.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const CT = ({ state: n, dispatch: e }) => Xb(n, e, !1), RT = ({ state: n, dispatch: e }) => Xb(n, e, !0);
function Ab(n, e, t) {
  if (n.readOnly)
    return !1;
  let i = [];
  for (let r of Vh(n))
    t ? i.push({ from: r.from, insert: n.doc.slice(r.from, r.to) + n.lineBreak }) : i.push({ from: r.to, insert: n.lineBreak + n.doc.slice(r.from, r.to) });
  return e(n.update({ changes: i, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const XT = ({ state: n, dispatch: e }) => Ab(n, e, !1), AT = ({ state: n, dispatch: e }) => Ab(n, e, !0), MT = (n) => {
  if (n.state.readOnly)
    return !1;
  let { state: e } = n, t = e.changes(Vh(e).map(({ from: r, to: l }) => (r > 0 ? r-- : l < e.doc.length && l++, { from: r, to: l }))), i = ql(e.selection, (r) => {
    let l;
    if (n.lineWrapping) {
      let o = n.lineBlockAt(r.head), c = n.coordsAtPos(r.head, r.assoc || 1);
      c && (l = o.bottom + n.documentTop - c.bottom + n.defaultLineHeight / 2);
    }
    return n.moveVertically(r, !0, l);
  }).map(t);
  return n.dispatch({ changes: t, selection: i, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function ET(n, e) {
  if (/\(\)|\[\]|\{\}/.test(n.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let t = Lt(n).resolveInner(e), i = t.childBefore(e), r = t.childAfter(e), l;
  return i && r && i.to <= e && r.from >= e && (l = i.type.prop(Ne.closedBy)) && l.indexOf(r.name) > -1 && n.doc.lineAt(i.to).from == n.doc.lineAt(r.from).from && !/\S/.test(n.sliceDoc(i.to, r.from)) ? { from: i.to, to: r.from } : null;
}
const f0 = /* @__PURE__ */ Mb(!1), qT = /* @__PURE__ */ Mb(!0);
function Mb(n) {
  return ({ state: e, dispatch: t }) => {
    if (e.readOnly)
      return !1;
    let i = e.changeByRange((r) => {
      let { from: l, to: o } = r, c = e.doc.lineAt(l), f = !n && l == o && ET(e, l);
      n && (l = o = (o <= c.to ? c : e.doc.lineAt(o)).to);
      let u = new Xh(e, { simulateBreak: l, simulateDoubleBreak: !!f }), O = sd(u, l);
      for (O == null && (O = Xl(/^\s*/.exec(e.doc.lineAt(l).text)[0], e.tabSize)); o < c.to && /\s/.test(c.text[o - c.from]); )
        o++;
      f ? { from: l, to: o } = f : l > c.from && l < c.from + 100 && !/\S/.test(c.text.slice(0, l)) && (l = c.from);
      let p = ["", Io(e, O)];
      return f && p.push(Io(e, u.lineIndent(c.from, -1))), {
        changes: { from: l, to: o, insert: ot.of(p) },
        range: F.cursor(l + 1 + p[1].length)
      };
    });
    return t(e.update(i, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function cd(n, e) {
  let t = -1;
  return n.changeByRange((i) => {
    let r = [];
    for (let o = i.from; o <= i.to; ) {
      let c = n.doc.lineAt(o);
      c.number > t && (i.empty || i.to > c.from) && (e(c, r, i), t = c.number), o = c.to + 1;
    }
    let l = n.changes(r);
    return {
      changes: r,
      range: F.range(l.mapPos(i.anchor, 1), l.mapPos(i.head, 1))
    };
  });
}
const VT = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = /* @__PURE__ */ Object.create(null), i = new Xh(n, { overrideIndentation: (l) => {
    let o = t[l];
    return o ?? -1;
  } }), r = cd(n, (l, o, c) => {
    let f = sd(i, l.from);
    if (f == null)
      return;
    /\S/.test(l.text) || (f = 0);
    let u = /^\s*/.exec(l.text)[0], O = Io(n, f);
    (u != O || c.from < l.from + u.length) && (t[l.from] = f, o.push({ from: l.from, to: l.from + u.length, insert: O }));
  });
  return r.changes.empty || e(n.update(r, { userEvent: "indent" })), !0;
}, Eb = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(cd(n, (t, i) => {
  i.push({ from: t.from, insert: n.facet(Rh) });
}), { userEvent: "input.indent" })), !0), qb = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(cd(n, (t, i) => {
  let r = /^\s*/.exec(t.text)[0];
  if (!r)
    return;
  let l = Xl(r, n.tabSize), o = 0, c = Io(n, Math.max(0, l - Oh(n)));
  for (; o < r.length && o < c.length && r.charCodeAt(o) == c.charCodeAt(o); )
    o++;
  i.push({ from: t.from + o, to: t.from + r.length, insert: c.slice(o) });
}), { userEvent: "delete.dedent" })), !0), LT = (n) => (n.setTabFocusMode(), !0), UT = [
  { key: "Ctrl-b", run: db, shift: Qb, preventDefault: !0 },
  { key: "Ctrl-f", run: pb, shift: xb },
  { key: "Ctrl-p", run: vb, shift: kb },
  { key: "Ctrl-n", run: bb, shift: _b },
  { key: "Ctrl-a", run: aT, shift: ST },
  { key: "Ctrl-e", run: cT, shift: $T },
  { key: "Ctrl-d", run: Tb },
  { key: "Ctrl-h", run: kO },
  { key: "Ctrl-k", run: kT },
  { key: "Ctrl-Alt-h", run: Rb },
  { key: "Ctrl-o", run: ZT },
  { key: "Ctrl-t", run: TT },
  { key: "Ctrl-v", run: wO }
], YT = /* @__PURE__ */ [
  { key: "ArrowLeft", run: db, shift: Qb, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: J5, shift: uT, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: lT, shift: vT, preventDefault: !0 },
  { key: "ArrowRight", run: pb, shift: xb, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: eT, shift: OT, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: oT, shift: bT, preventDefault: !0 },
  { key: "ArrowUp", run: vb, shift: kb, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: o0, shift: c0 },
  { mac: "Ctrl-ArrowUp", run: r0, shift: s0 },
  { key: "ArrowDown", run: bb, shift: _b, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: a0, shift: h0 },
  { mac: "Ctrl-ArrowDown", run: wO, shift: l0 },
  { key: "PageUp", run: r0, shift: s0 },
  { key: "PageDown", run: wO, shift: l0 },
  { key: "Home", run: sT, shift: mT, preventDefault: !0 },
  { key: "Mod-Home", run: o0, shift: c0 },
  { key: "End", run: rT, shift: gT, preventDefault: !0 },
  { key: "Mod-End", run: a0, shift: h0 },
  { key: "Enter", run: f0, shift: f0 },
  { key: "Mod-a", run: yT },
  { key: "Backspace", run: kO, shift: kO },
  { key: "Delete", run: Tb },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: Rb },
  { key: "Mod-Delete", mac: "Alt-Delete", run: wT },
  { mac: "Mod-Backspace", run: _T },
  { mac: "Mod-Delete", run: WT }
].concat(/* @__PURE__ */ UT.map((n) => ({ mac: n.key, run: n.run, shift: n.shift }))), DT = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: iT, shift: dT },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: nT, shift: pT },
  { key: "Alt-ArrowUp", run: CT },
  { key: "Shift-Alt-ArrowUp", run: XT },
  { key: "Alt-ArrowDown", run: RT },
  { key: "Shift-Alt-ArrowDown", run: AT },
  { key: "Escape", run: PT },
  { key: "Mod-Enter", run: qT },
  { key: "Alt-l", mac: "Ctrl-l", run: QT },
  { key: "Mod-i", run: xT, preventDefault: !0 },
  { key: "Mod-[", run: qb },
  { key: "Mod-]", run: Eb },
  { key: "Mod-Alt-\\", run: VT },
  { key: "Shift-Mod-k", run: MT },
  { key: "Shift-Mod-\\", run: fT },
  { key: "Mod-/", run: X5 },
  { key: "Alt-A", run: M5 },
  { key: "Ctrl-m", mac: "Shift-Alt-m", run: LT }
].concat(YT);
function _t() {
  var n = arguments[0];
  typeof n == "string" && (n = document.createElement(n));
  var e = 1, t = arguments[1];
  if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
    for (var i in t) if (Object.prototype.hasOwnProperty.call(t, i)) {
      var r = t[i];
      typeof r == "string" ? n.setAttribute(i, r) : r != null && (n[i] = r);
    }
    e++;
  }
  for (; e < arguments.length; e++) Vb(n, arguments[e]);
  return n;
}
function Vb(n, e) {
  if (typeof e == "string")
    n.appendChild(document.createTextNode(e));
  else if (e != null) if (e.nodeType != null)
    n.appendChild(e);
  else if (Array.isArray(e))
    for (var t = 0; t < e.length; t++) Vb(n, e[t]);
  else
    throw new RangeError("Unsupported child node: " + e);
}
const u0 = typeof String.prototype.normalize == "function" ? (n) => n.normalize("NFKD") : (n) => n;
class Wl {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, t, i = 0, r = e.length, l, o) {
    this.test = o, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(i, r), this.bufferStart = i, this.normalize = l ? (c) => l(u0(c)) : u0, this.query = this.normalize(t);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return Di(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let t = EO(e), i = this.bufferStart + this.bufferPos;
      this.bufferPos += rr(e);
      let r = this.normalize(t);
      if (r.length)
        for (let l = 0, o = i; ; l++) {
          let c = r.charCodeAt(l), f = this.match(c, o, this.bufferPos + this.bufferStart);
          if (l == r.length - 1) {
            if (f)
              return this.value = f, this;
            break;
          }
          o == i && l < t.length && t.charCodeAt(l) == c && o++;
        }
    }
  }
  match(e, t, i) {
    let r = null;
    for (let l = 0; l < this.matches.length; l += 2) {
      let o = this.matches[l], c = !1;
      this.query.charCodeAt(o) == e && (o == this.query.length - 1 ? r = { from: this.matches[l + 1], to: i } : (this.matches[l]++, c = !0)), c || (this.matches.splice(l, 2), l -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? r = { from: t, to: i } : this.matches.push(1, t)), r && this.test && !this.test(r.from, r.to, this.buffer, this.bufferStart) && (r = null), r;
  }
}
typeof Symbol < "u" && (Wl.prototype[Symbol.iterator] = function() {
  return this;
});
const Lb = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, hd = "gm" + (/x/.unicode == null ? "" : "u");
class Ub {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, t, i, r = 0, l = e.length) {
    if (this.text = e, this.to = l, this.curLine = "", this.done = !1, this.value = Lb, /\\[sWDnr]|\n|\r|\[\^/.test(t))
      return new Yb(e, t, i, r, l);
    this.re = new RegExp(t, hd + (i != null && i.ignoreCase ? "i" : "")), this.test = i == null ? void 0 : i.test, this.iter = e.iter();
    let o = e.lineAt(r);
    this.curLineStart = o.from, this.matchPos = mh(e, r), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let t = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (t) {
        let i = this.curLineStart + t.index, r = i + t[0].length;
        if (this.matchPos = mh(this.text, r + (i == r ? 1 : 0)), i == this.curLineStart + this.curLine.length && this.nextLine(), (i < r || i > this.value.to) && (!this.test || this.test(i, r, t)))
          return this.value = { from: i, to: r, match: t }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const Qu = /* @__PURE__ */ new WeakMap();
class yl {
  constructor(e, t) {
    this.from = e, this.text = t;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, t, i) {
    let r = Qu.get(e);
    if (!r || r.from >= i || r.to <= t) {
      let c = new yl(t, e.sliceString(t, i));
      return Qu.set(e, c), c;
    }
    if (r.from == t && r.to == i)
      return r;
    let { text: l, from: o } = r;
    return o > t && (l = e.sliceString(t, o) + l, o = t), r.to < i && (l += e.sliceString(r.to, i)), Qu.set(e, new yl(o, l)), new yl(t, l.slice(t - o, i - o));
  }
}
class Yb {
  constructor(e, t, i, r, l) {
    this.text = e, this.to = l, this.done = !1, this.value = Lb, this.matchPos = mh(e, r), this.re = new RegExp(t, hd + (i != null && i.ignoreCase ? "i" : "")), this.test = i == null ? void 0 : i.test, this.flat = yl.get(e, r, this.chunkEnd(
      r + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, t = this.re.exec(this.flat.text);
      if (t && !t[0] && t.index == e && (this.re.lastIndex = e + 1, t = this.re.exec(this.flat.text)), t) {
        let i = this.flat.from + t.index, r = i + t[0].length;
        if ((this.flat.to >= this.to || t.index + t[0].length <= this.flat.text.length - 10) && (!this.test || this.test(i, r, t)))
          return this.value = { from: i, to: r, match: t }, this.matchPos = mh(this.text, r + (i == r ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = yl.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (Ub.prototype[Symbol.iterator] = Yb.prototype[Symbol.iterator] = function() {
  return this;
});
function zT(n) {
  try {
    return new RegExp(n, hd), !0;
  } catch {
    return !1;
  }
}
function mh(n, e) {
  if (e >= n.length)
    return e;
  let t = n.lineAt(e), i;
  for (; e < t.to && (i = t.text.charCodeAt(e - t.from)) >= 56320 && i < 57344; )
    e++;
  return e;
}
function _O(n) {
  let e = String(n.state.doc.lineAt(n.state.selection.main.head).number), t = _t("input", { class: "cm-textfield", name: "line", value: e }), i = _t("form", {
    class: "cm-gotoLine",
    onkeydown: (l) => {
      l.keyCode == 27 ? (l.preventDefault(), n.dispatch({ effects: vh.of(!1) }), n.focus()) : l.keyCode == 13 && (l.preventDefault(), r());
    },
    onsubmit: (l) => {
      l.preventDefault(), r();
    }
  }, _t("label", n.state.phrase("Go to line"), ": ", t), " ", _t("button", { class: "cm-button", type: "submit" }, n.state.phrase("go")));
  function r() {
    let l = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);
    if (!l)
      return;
    let { state: o } = n, c = o.doc.lineAt(o.selection.main.head), [, f, u, O, p] = l, g = O ? +O.slice(1) : 0, b = u ? +u : c.number;
    if (u && p) {
      let P = b / 100;
      f && (P = P * (f == "-" ? -1 : 1) + c.number / o.doc.lines), b = Math.round(o.doc.lines * P);
    } else u && f && (b = b * (f == "-" ? -1 : 1) + c.number);
    let $ = o.doc.line(Math.max(1, Math.min(o.doc.lines, b))), x = F.cursor($.from + Math.max(0, Math.min(g, $.length)));
    n.dispatch({
      effects: [vh.of(!1), ae.scrollIntoView(x.from, { y: "center" })],
      selection: x
    }), n.focus();
  }
  return { dom: i };
}
const vh = /* @__PURE__ */ Ye.define(), O0 = /* @__PURE__ */ ti.define({
  create() {
    return !0;
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(vh) && (n = t.value);
    return n;
  },
  provide: (n) => Do.from(n, (e) => e ? _O : null)
}), jT = (n) => {
  let e = Yo(n, _O);
  if (!e) {
    let t = [vh.of(!0)];
    n.state.field(O0, !1) == null && t.push(Ye.appendConfig.of([O0, BT])), n.dispatch({ effects: t }), e = Yo(n, _O);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, BT = /* @__PURE__ */ ae.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), IT = {
  highlightWordAroundCursor: !1,
  minSelectionLength: 1,
  maxMatches: 100,
  wholeWords: !1
}, NT = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, IT, {
      highlightWordAroundCursor: (e, t) => e || t,
      minSelectionLength: Math.min,
      maxMatches: Math.min
    });
  }
});
function FT(n) {
  return [eC, JT];
}
const GT = /* @__PURE__ */ _e.mark({ class: "cm-selectionMatch" }), HT = /* @__PURE__ */ _e.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
function d0(n, e, t, i) {
  return (t == 0 || n(e.sliceDoc(t - 1, t)) != Rt.Word) && (i == e.doc.length || n(e.sliceDoc(i, i + 1)) != Rt.Word);
}
function KT(n, e, t, i) {
  return n(e.sliceDoc(t, t + 1)) == Rt.Word && n(e.sliceDoc(i - 1, i)) == Rt.Word;
}
const JT = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.selectionSet || n.docChanged || n.viewportChanged) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = n.state.facet(NT), { state: t } = n, i = t.selection;
    if (i.ranges.length > 1)
      return _e.none;
    let r = i.main, l, o = null;
    if (r.empty) {
      if (!e.highlightWordAroundCursor)
        return _e.none;
      let f = t.wordAt(r.head);
      if (!f)
        return _e.none;
      o = t.charCategorizer(r.head), l = t.sliceDoc(f.from, f.to);
    } else {
      let f = r.to - r.from;
      if (f < e.minSelectionLength || f > 200)
        return _e.none;
      if (e.wholeWords) {
        if (l = t.sliceDoc(r.from, r.to), o = t.charCategorizer(r.head), !(d0(o, t, r.from, r.to) && KT(o, t, r.from, r.to)))
          return _e.none;
      } else if (l = t.sliceDoc(r.from, r.to), !l)
        return _e.none;
    }
    let c = [];
    for (let f of n.visibleRanges) {
      let u = new Wl(t.doc, l, f.from, f.to);
      for (; !u.next().done; ) {
        let { from: O, to: p } = u.value;
        if ((!o || d0(o, t, O, p)) && (r.empty && O <= r.from && p >= r.to ? c.push(HT.range(O, p)) : (O >= r.to || p <= r.from) && c.push(GT.range(O, p)), c.length > e.maxMatches))
          return _e.none;
      }
    }
    return _e.set(c);
  }
}, {
  decorations: (n) => n.decorations
}), eC = /* @__PURE__ */ ae.baseTheme({
  ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
  ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
}), tC = ({ state: n, dispatch: e }) => {
  let { selection: t } = n, i = F.create(t.ranges.map((r) => n.wordAt(r.head) || F.cursor(r.head)), t.mainIndex);
  return i.eq(t) ? !1 : (e(n.update({ selection: i })), !0);
};
function iC(n, e) {
  let { main: t, ranges: i } = n.selection, r = n.wordAt(t.head), l = r && r.from == t.from && r.to == t.to;
  for (let o = !1, c = new Wl(n.doc, e, i[i.length - 1].to); ; )
    if (c.next(), c.done) {
      if (o)
        return null;
      c = new Wl(n.doc, e, 0, Math.max(0, i[i.length - 1].from - 1)), o = !0;
    } else {
      if (o && i.some((f) => f.from == c.value.from))
        continue;
      if (l) {
        let f = n.wordAt(c.value.from);
        if (!f || f.from != c.value.from || f.to != c.value.to)
          continue;
      }
      return c.value;
    }
}
const nC = ({ state: n, dispatch: e }) => {
  let { ranges: t } = n.selection;
  if (t.some((l) => l.from === l.to))
    return tC({ state: n, dispatch: e });
  let i = n.sliceDoc(t[0].from, t[0].to);
  if (n.selection.ranges.some((l) => n.sliceDoc(l.from, l.to) != i))
    return !1;
  let r = iC(n, i);
  return r ? (e(n.update({
    selection: n.selection.addRange(F.range(r.from, r.to), !1),
    effects: ae.scrollIntoView(r.to)
  })), !0) : !1;
}, Vl = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new pC(e),
      scrollToMatch: (e) => ae.scrollIntoView(e)
    });
  }
});
class Db {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || zT(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (t, i) => i == "n" ? `
` : i == "r" ? "\r" : i == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new oC(this) : new sC(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, t = 0, i) {
    let r = e.doc ? e : it.create({ doc: e });
    return i == null && (i = r.doc.length), this.regexp ? Ol(this, r, t, i) : ul(this, r, t, i);
  }
}
class zb {
  constructor(e) {
    this.spec = e;
  }
}
function ul(n, e, t, i) {
  return new Wl(e.doc, n.unquoted, t, i, n.caseSensitive ? void 0 : (r) => r.toLowerCase(), n.wholeWord ? rC(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function rC(n, e) {
  return (t, i, r, l) => ((l > t || l + r.length < i) && (l = Math.max(0, t - 2), r = n.sliceString(l, Math.min(n.length, i + 2))), (e(bh(r, t - l)) != Rt.Word || e(Sh(r, t - l)) != Rt.Word) && (e(Sh(r, i - l)) != Rt.Word || e(bh(r, i - l)) != Rt.Word));
}
class sC extends zb {
  constructor(e) {
    super(e);
  }
  nextMatch(e, t, i) {
    let r = ul(this.spec, e, i, e.doc.length).nextOverlapping();
    if (r.done) {
      let l = Math.min(e.doc.length, t + this.spec.unquoted.length);
      r = ul(this.spec, e, 0, l).nextOverlapping();
    }
    return r.done || r.value.from == t && r.value.to == i ? null : r.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, t, i) {
    for (let r = i; ; ) {
      let l = Math.max(t, r - 1e4 - this.spec.unquoted.length), o = ul(this.spec, e, l, r), c = null;
      for (; !o.nextOverlapping().done; )
        c = o.value;
      if (c)
        return c;
      if (l == t)
        return null;
      r -= 1e4;
    }
  }
  prevMatch(e, t, i) {
    let r = this.prevMatchInRange(e, 0, t);
    return r || (r = this.prevMatchInRange(e, Math.max(0, i - this.spec.unquoted.length), e.doc.length)), r && (r.from != t || r.to != i) ? r : null;
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, t) {
    let i = ul(this.spec, e, 0, e.doc.length), r = [];
    for (; !i.next().done; ) {
      if (r.length >= t)
        return null;
      r.push(i.value);
    }
    return r;
  }
  highlight(e, t, i, r) {
    let l = ul(this.spec, e, Math.max(0, t - this.spec.unquoted.length), Math.min(i + this.spec.unquoted.length, e.doc.length));
    for (; !l.next().done; )
      r(l.value.from, l.value.to);
  }
}
function Ol(n, e, t, i) {
  return new Ub(e.doc, n.search, {
    ignoreCase: !n.caseSensitive,
    test: n.wholeWord ? lC(e.charCategorizer(e.selection.main.head)) : void 0
  }, t, i);
}
function bh(n, e) {
  return n.slice(ui(n, e, !1), e);
}
function Sh(n, e) {
  return n.slice(e, ui(n, e));
}
function lC(n) {
  return (e, t, i) => !i[0].length || (n(bh(i.input, i.index)) != Rt.Word || n(Sh(i.input, i.index)) != Rt.Word) && (n(Sh(i.input, i.index + i[0].length)) != Rt.Word || n(bh(i.input, i.index + i[0].length)) != Rt.Word);
}
class oC extends zb {
  nextMatch(e, t, i) {
    let r = Ol(this.spec, e, i, e.doc.length).next();
    return r.done && (r = Ol(this.spec, e, 0, t).next()), r.done ? null : r.value;
  }
  prevMatchInRange(e, t, i) {
    for (let r = 1; ; r++) {
      let l = Math.max(
        t,
        i - r * 1e4
        /* FindPrev.ChunkSize */
      ), o = Ol(this.spec, e, l, i), c = null;
      for (; !o.next().done; )
        c = o.value;
      if (c && (l == t || c.from > l + 10))
        return c;
      if (l == t)
        return null;
    }
  }
  prevMatch(e, t, i) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, i, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&]|\d+)/g, (t, i) => {
      if (i == "&")
        return e.match[0];
      if (i == "$")
        return "$";
      for (let r = i.length; r > 0; r--) {
        let l = +i.slice(0, r);
        if (l > 0 && l < e.match.length)
          return e.match[l] + i.slice(r);
      }
      return t;
    });
  }
  matchAll(e, t) {
    let i = Ol(this.spec, e, 0, e.doc.length), r = [];
    for (; !i.next().done; ) {
      if (r.length >= t)
        return null;
      r.push(i.value);
    }
    return r;
  }
  highlight(e, t, i, r) {
    let l = Ol(this.spec, e, Math.max(
      0,
      t - 250
      /* RegExp.HighlightMargin */
    ), Math.min(i + 250, e.doc.length));
    for (; !l.next().done; )
      r(l.value.from, l.value.to);
  }
}
const No = /* @__PURE__ */ Ye.define(), fd = /* @__PURE__ */ Ye.define(), ls = /* @__PURE__ */ ti.define({
  create(n) {
    return new xu(WO(n).create(), null);
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(No) ? n = new xu(t.value.create(), n.panel) : t.is(fd) && (n = new xu(n.query, t.value ? ud : null));
    return n;
  },
  provide: (n) => Do.from(n, (e) => e.panel)
});
class xu {
  constructor(e, t) {
    this.query = e, this.panel = t;
  }
}
const aC = /* @__PURE__ */ _e.mark({ class: "cm-searchMatch" }), cC = /* @__PURE__ */ _e.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), hC = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.view = n, this.decorations = this.highlight(n.state.field(ls));
  }
  update(n) {
    let e = n.state.field(ls);
    (e != n.startState.field(ls) || n.docChanged || n.selectionSet || n.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: n, panel: e }) {
    if (!e || !n.spec.valid)
      return _e.none;
    let { view: t } = this, i = new Er();
    for (let r = 0, l = t.visibleRanges, o = l.length; r < o; r++) {
      let { from: c, to: f } = l[r];
      for (; r < o - 1 && f > l[r + 1].from - 2 * 250; )
        f = l[++r].to;
      n.highlight(t.state, c, f, (u, O) => {
        let p = t.state.selection.ranges.some((g) => g.from == u && g.to == O);
        i.add(u, O, p ? cC : aC);
      });
    }
    return i.finish();
  }
}, {
  decorations: (n) => n.decorations
});
function ca(n) {
  return (e) => {
    let t = e.state.field(ls, !1);
    return t && t.query.spec.valid ? n(e, t) : Ib(e);
  };
}
const $h = /* @__PURE__ */ ca((n, { query: e }) => {
  let { to: t } = n.state.selection.main, i = e.nextMatch(n.state, t, t);
  if (!i)
    return !1;
  let r = F.single(i.from, i.to), l = n.state.facet(Vl);
  return n.dispatch({
    selection: r,
    effects: [Od(n, i), l.scrollToMatch(r.main, n)],
    userEvent: "select.search"
  }), Bb(n), !0;
}), yh = /* @__PURE__ */ ca((n, { query: e }) => {
  let { state: t } = n, { from: i } = t.selection.main, r = e.prevMatch(t, i, i);
  if (!r)
    return !1;
  let l = F.single(r.from, r.to), o = n.state.facet(Vl);
  return n.dispatch({
    selection: l,
    effects: [Od(n, r), o.scrollToMatch(l.main, n)],
    userEvent: "select.search"
  }), Bb(n), !0;
}), fC = /* @__PURE__ */ ca((n, { query: e }) => {
  let t = e.matchAll(n.state, 1e3);
  return !t || !t.length ? !1 : (n.dispatch({
    selection: F.create(t.map((i) => F.range(i.from, i.to))),
    userEvent: "select.search.matches"
  }), !0);
}), uC = ({ state: n, dispatch: e }) => {
  let t = n.selection;
  if (t.ranges.length > 1 || t.main.empty)
    return !1;
  let { from: i, to: r } = t.main, l = [], o = 0;
  for (let c = new Wl(n.doc, n.sliceDoc(i, r)); !c.next().done; ) {
    if (l.length > 1e3)
      return !1;
    c.value.from == i && (o = l.length), l.push(F.range(c.value.from, c.value.to));
  }
  return e(n.update({
    selection: F.create(l, o),
    userEvent: "select.search.matches"
  })), !0;
}, p0 = /* @__PURE__ */ ca((n, { query: e }) => {
  let { state: t } = n, { from: i, to: r } = t.selection.main;
  if (t.readOnly)
    return !1;
  let l = e.nextMatch(t, i, i);
  if (!l)
    return !1;
  let o = l, c = [], f, u, O = [];
  if (o.from == i && o.to == r && (u = t.toText(e.getReplacement(o)), c.push({ from: o.from, to: o.to, insert: u }), o = e.nextMatch(t, o.from, o.to), O.push(ae.announce.of(t.phrase("replaced match on line $", t.doc.lineAt(i).number) + "."))), o) {
    let p = c.length == 0 || c[0].from >= l.to ? 0 : l.to - l.from - u.length;
    f = F.single(o.from - p, o.to - p), O.push(Od(n, o)), O.push(t.facet(Vl).scrollToMatch(f.main, n));
  }
  return n.dispatch({
    changes: c,
    selection: f,
    effects: O,
    userEvent: "input.replace"
  }), !0;
}), OC = /* @__PURE__ */ ca((n, { query: e }) => {
  if (n.state.readOnly)
    return !1;
  let t = e.matchAll(n.state, 1e9).map((r) => {
    let { from: l, to: o } = r;
    return { from: l, to: o, insert: e.getReplacement(r) };
  });
  if (!t.length)
    return !1;
  let i = n.state.phrase("replaced $ matches", t.length) + ".";
  return n.dispatch({
    changes: t,
    effects: ae.announce.of(i),
    userEvent: "input.replace.all"
  }), !0;
});
function ud(n) {
  return n.state.facet(Vl).createPanel(n);
}
function WO(n, e) {
  var t, i, r, l, o;
  let c = n.selection.main, f = c.empty || c.to > c.from + 100 ? "" : n.sliceDoc(c.from, c.to);
  if (e && !f)
    return e;
  let u = n.facet(Vl);
  return new Db({
    search: ((t = e == null ? void 0 : e.literal) !== null && t !== void 0 ? t : u.literal) ? f : f.replace(/\n/g, "\\n"),
    caseSensitive: (i = e == null ? void 0 : e.caseSensitive) !== null && i !== void 0 ? i : u.caseSensitive,
    literal: (r = e == null ? void 0 : e.literal) !== null && r !== void 0 ? r : u.literal,
    regexp: (l = e == null ? void 0 : e.regexp) !== null && l !== void 0 ? l : u.regexp,
    wholeWord: (o = e == null ? void 0 : e.wholeWord) !== null && o !== void 0 ? o : u.wholeWord
  });
}
function jb(n) {
  let e = Yo(n, ud);
  return e && e.dom.querySelector("[main-field]");
}
function Bb(n) {
  let e = jb(n);
  e && e == n.root.activeElement && e.select();
}
const Ib = (n) => {
  let e = n.state.field(ls, !1);
  if (e && e.panel) {
    let t = jb(n);
    if (t && t != n.root.activeElement) {
      let i = WO(n.state, e.query.spec);
      i.valid && n.dispatch({ effects: No.of(i) }), t.focus(), t.select();
    }
  } else
    n.dispatch({ effects: [
      fd.of(!0),
      e ? No.of(WO(n.state, e.query.spec)) : Ye.appendConfig.of(mC)
    ] });
  return !0;
}, Nb = (n) => {
  let e = n.state.field(ls, !1);
  if (!e || !e.panel)
    return !1;
  let t = Yo(n, ud);
  return t && t.dom.contains(n.root.activeElement) && n.focus(), n.dispatch({ effects: fd.of(!1) }), !0;
}, dC = [
  { key: "Mod-f", run: Ib, scope: "editor search-panel" },
  { key: "F3", run: $h, shift: yh, scope: "editor search-panel", preventDefault: !0 },
  { key: "Mod-g", run: $h, shift: yh, scope: "editor search-panel", preventDefault: !0 },
  { key: "Escape", run: Nb, scope: "editor search-panel" },
  { key: "Mod-Shift-l", run: uC },
  { key: "Mod-Alt-g", run: jT },
  { key: "Mod-d", run: nC, preventDefault: !0 }
];
class pC {
  constructor(e) {
    this.view = e;
    let t = this.query = e.state.field(ls).query.spec;
    this.commit = this.commit.bind(this), this.searchField = _t("input", {
      value: t.search,
      placeholder: rn(e, "Find"),
      "aria-label": rn(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = _t("input", {
      value: t.replace,
      placeholder: rn(e, "Replace"),
      "aria-label": rn(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = _t("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: t.caseSensitive,
      onchange: this.commit
    }), this.reField = _t("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: t.regexp,
      onchange: this.commit
    }), this.wordField = _t("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: t.wholeWord,
      onchange: this.commit
    });
    function i(r, l, o) {
      return _t("button", { class: "cm-button", name: r, onclick: l, type: "button" }, o);
    }
    this.dom = _t("div", { onkeydown: (r) => this.keydown(r), class: "cm-search" }, [
      this.searchField,
      i("next", () => $h(e), [rn(e, "next")]),
      i("prev", () => yh(e), [rn(e, "previous")]),
      i("select", () => fC(e), [rn(e, "all")]),
      _t("label", null, [this.caseField, rn(e, "match case")]),
      _t("label", null, [this.reField, rn(e, "regexp")]),
      _t("label", null, [this.wordField, rn(e, "by word")]),
      ...e.state.readOnly ? [] : [
        _t("br"),
        this.replaceField,
        i("replace", () => p0(e), [rn(e, "replace")]),
        i("replaceAll", () => OC(e), [rn(e, "replace all")])
      ],
      _t("button", {
        name: "close",
        onclick: () => Nb(e),
        "aria-label": rn(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new Db({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: No.of(e) }));
  }
  keydown(e) {
    R2(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? yh : $h)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), p0(this.view));
  }
  update(e) {
    for (let t of e.transactions)
      for (let i of t.effects)
        i.is(No) && !i.value.eq(this.query) && this.setQuery(i.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(Vl).top;
  }
}
function rn(n, e) {
  return n.state.phrase(e);
}
const Rc = 30, Xc = /[\s\.,:;?!]/;
function Od(n, { from: e, to: t }) {
  let i = n.state.doc.lineAt(e), r = n.state.doc.lineAt(t).to, l = Math.max(i.from, e - Rc), o = Math.min(r, t + Rc), c = n.state.sliceDoc(l, o);
  if (l != i.from) {
    for (let f = 0; f < Rc; f++)
      if (!Xc.test(c[f + 1]) && Xc.test(c[f])) {
        c = c.slice(f);
        break;
      }
  }
  if (o != r) {
    for (let f = c.length - 1; f > c.length - Rc; f--)
      if (!Xc.test(c[f - 1]) && Xc.test(c[f])) {
        c = c.slice(0, f);
        break;
      }
  }
  return ae.announce.of(`${n.state.phrase("current match")}. ${c} ${n.state.phrase("on line")} ${i.number}.`);
}
const gC = /* @__PURE__ */ ae.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), mC = [
  ls,
  /* @__PURE__ */ ps.low(hC),
  gC
];
class Fb {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, t, i, r) {
    this.state = e, this.pos = t, this.explicit = i, this.view = r, this.abortListeners = [], this.abortOnDocChange = !1;
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let t = Lt(this.state).resolveInner(this.pos, -1);
    for (; t && e.indexOf(t.name) < 0; )
      t = t.parent;
    return t ? {
      from: t.from,
      to: this.pos,
      text: this.state.sliceDoc(t.from, this.pos),
      type: t.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let t = this.state.doc.lineAt(this.pos), i = Math.max(t.from, this.pos - 250), r = t.text.slice(i - t.from, this.pos - t.from), l = r.search(Hb(e, !1));
    return l < 0 ? null : { from: i + l, to: this.pos, text: r.slice(l) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  
  By default, running queries will not be aborted for regular
  typing or backspacing, on the assumption that they are likely to
  return a result with a
  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that
  allows the result to be used after all. Passing `onDocChange:
  true` will cause this query to be aborted for any document
  change.
  */
  addEventListener(e, t, i) {
    e == "abort" && this.abortListeners && (this.abortListeners.push(t), i && i.onDocChange && (this.abortOnDocChange = !0));
  }
}
function g0(n) {
  let e = Object.keys(n).join(""), t = /\w/.test(e);
  return t && (e = e.replace(/\w/g, "")), `[${t ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function vC(n) {
  let e = /* @__PURE__ */ Object.create(null), t = /* @__PURE__ */ Object.create(null);
  for (let { label: r } of n) {
    e[r[0]] = !0;
    for (let l = 1; l < r.length; l++)
      t[r[l]] = !0;
  }
  let i = g0(e) + g0(t) + "*$";
  return [new RegExp("^" + i), new RegExp(i)];
}
function Gb(n) {
  let e = n.map((r) => typeof r == "string" ? { label: r } : r), [t, i] = e.every((r) => /^\w+$/.test(r.label)) ? [/\w*$/, /\w+$/] : vC(e);
  return (r) => {
    let l = r.matchBefore(i);
    return l || r.explicit ? { from: l ? l.from : r.pos, options: e, validFor: t } : null;
  };
}
function bC(n, e) {
  return (t) => {
    for (let i = Lt(t.state).resolveInner(t.pos, -1); i; i = i.parent) {
      if (n.indexOf(i.name) > -1)
        return null;
      if (i.type.isTop)
        break;
    }
    return e(t);
  };
}
class m0 {
  constructor(e, t, i, r) {
    this.completion = e, this.source = t, this.match = i, this.score = r;
  }
}
function Xs(n) {
  return n.selection.main.from;
}
function Hb(n, e) {
  var t;
  let { source: i } = n, r = e && i[0] != "^", l = i[i.length - 1] != "$";
  return !r && !l ? n : new RegExp(`${r ? "^" : ""}(?:${i})${l ? "$" : ""}`, (t = n.flags) !== null && t !== void 0 ? t : n.ignoreCase ? "i" : "");
}
const dd = /* @__PURE__ */ Lr.define();
function SC(n, e, t, i) {
  let { main: r } = n.selection, l = t - r.from, o = i - r.from;
  return Object.assign(Object.assign({}, n.changeByRange((c) => {
    if (c != r && t != i && n.sliceDoc(c.from + l, c.from + o) != n.sliceDoc(t, i))
      return { range: c };
    let f = n.toText(e);
    return {
      changes: { from: c.from + l, to: i == r.from ? c.to : c.from + o, insert: f },
      range: F.cursor(c.from + l + f.length)
    };
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const v0 = /* @__PURE__ */ new WeakMap();
function $C(n) {
  if (!Array.isArray(n))
    return n;
  let e = v0.get(n);
  return e || v0.set(n, e = Gb(n)), e;
}
const Qh = /* @__PURE__ */ Ye.define(), Fo = /* @__PURE__ */ Ye.define();
class yC {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let t = 0; t < e.length; ) {
      let i = Di(e, t), r = rr(i);
      this.chars.push(i);
      let l = e.slice(t, t + r), o = l.toUpperCase();
      this.folded.push(Di(o == l ? l.toLowerCase() : o, 0)), t += r;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, t) {
    return this.score = e, this.matched = t, this;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return null;
    let { chars: t, folded: i, any: r, precise: l, byWord: o } = this;
    if (t.length == 1) {
      let R = Di(e, 0), w = rr(R), Z = w == e.length ? 0 : -100;
      if (R != t[0]) if (R == i[0])
        Z += -200;
      else
        return null;
      return this.ret(Z, [0, w]);
    }
    let c = e.indexOf(this.pattern);
    if (c == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let f = t.length, u = 0;
    if (c < 0) {
      for (let R = 0, w = Math.min(e.length, 200); R < w && u < f; ) {
        let Z = Di(e, R);
        (Z == t[u] || Z == i[u]) && (r[u++] = R), R += rr(Z);
      }
      if (u < f)
        return null;
    }
    let O = 0, p = 0, g = !1, b = 0, $ = -1, x = -1, P = /[a-z]/.test(e), k = !0;
    for (let R = 0, w = Math.min(e.length, 200), Z = 0; R < w && p < f; ) {
      let T = Di(e, R);
      c < 0 && (O < f && T == t[O] && (l[O++] = R), b < f && (T == t[b] || T == i[b] ? (b == 0 && ($ = R), x = R + 1, b++) : b = 0));
      let E, M = T < 255 ? T >= 48 && T <= 57 || T >= 97 && T <= 122 ? 2 : T >= 65 && T <= 90 ? 1 : 0 : (E = EO(T)) != E.toLowerCase() ? 1 : E != E.toUpperCase() ? 2 : 0;
      (!R || M == 1 && P || Z == 0 && M != 0) && (t[p] == T || i[p] == T && (g = !0) ? o[p++] = R : o.length && (k = !1)), Z = M, R += rr(T);
    }
    return p == f && o[0] == 0 && k ? this.result(-100 + (g ? -200 : 0), o, e) : b == f && $ == 0 ? this.ret(-200 - e.length + (x == e.length ? 0 : -100), [0, x]) : c > -1 ? this.ret(-700 - e.length, [c, c + this.pattern.length]) : b == f ? this.ret(-900 - e.length, [$, x]) : p == f ? this.result(-100 + (g ? -200 : 0) + -700 + (k ? 0 : -1100), o, e) : t.length == 2 ? null : this.result((r[0] ? -700 : 0) + -200 + -1100, r, e);
  }
  result(e, t, i) {
    let r = [], l = 0;
    for (let o of t) {
      let c = o + (this.astral ? rr(Di(i, o)) : 1);
      l && r[l - 1] == o ? r[l - 1] = c : (r[l++] = o, r[l++] = c);
    }
    return this.ret(e - i.length, r);
  }
}
class QC {
  constructor(e) {
    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();
  }
  match(e) {
    if (e.length < this.pattern.length)
      return null;
    let t = e.slice(0, this.pattern.length), i = t == this.pattern ? 0 : t.toLowerCase() == this.folded ? -200 : null;
    return i == null ? null : (this.matched = [0, t.length], this.score = i + (e.length == this.pattern.length ? 0 : -100), this);
  }
}
const ri = /* @__PURE__ */ ge.define({
  combine(n) {
    return ur(n, {
      activateOnTyping: !0,
      activateOnCompletion: () => !1,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: xC,
      filterStrict: !1,
      compareCompletions: (e, t) => e.label.localeCompare(t.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, t) => e && t,
      closeOnBlur: (e, t) => e && t,
      icons: (e, t) => e && t,
      tooltipClass: (e, t) => (i) => b0(e(i), t(i)),
      optionClass: (e, t) => (i) => b0(e(i), t(i)),
      addToOptions: (e, t) => e.concat(t),
      filterStrict: (e, t) => e || t
    });
  }
});
function b0(n, e) {
  return n ? e ? n + " " + e : n : e;
}
function xC(n, e, t, i, r, l) {
  let o = n.textDirection == Tt.RTL, c = o, f = !1, u = "top", O, p, g = e.left - r.left, b = r.right - e.right, $ = i.right - i.left, x = i.bottom - i.top;
  if (c && g < Math.min($, b) ? c = !1 : !c && b < Math.min($, g) && (c = !0), $ <= (c ? g : b))
    O = Math.max(r.top, Math.min(t.top, r.bottom - x)) - e.top, p = Math.min(400, c ? g : b);
  else {
    f = !0, p = Math.min(
      400,
      (o ? e.right : r.right - e.left) - 30
      /* Info.Margin */
    );
    let R = r.bottom - e.bottom;
    R >= x || R > e.top ? O = t.bottom - e.top : (u = "bottom", O = e.bottom - t.top);
  }
  let P = (e.bottom - e.top) / l.offsetHeight, k = (e.right - e.left) / l.offsetWidth;
  return {
    style: `${u}: ${O / P}px; max-width: ${p / k}px`,
    class: "cm-completionInfo-" + (f ? o ? "left-narrow" : "right-narrow" : c ? "left" : "right")
  };
}
function PC(n) {
  let e = n.addToOptions.slice();
  return n.icons && e.push({
    render(t) {
      let i = document.createElement("div");
      return i.classList.add("cm-completionIcon"), t.type && i.classList.add(...t.type.split(/\s+/g).map((r) => "cm-completionIcon-" + r)), i.setAttribute("aria-hidden", "true"), i;
    },
    position: 20
  }), e.push({
    render(t, i, r, l) {
      let o = document.createElement("span");
      o.className = "cm-completionLabel";
      let c = t.displayLabel || t.label, f = 0;
      for (let u = 0; u < l.length; ) {
        let O = l[u++], p = l[u++];
        O > f && o.appendChild(document.createTextNode(c.slice(f, O)));
        let g = o.appendChild(document.createElement("span"));
        g.appendChild(document.createTextNode(c.slice(O, p))), g.className = "cm-completionMatchedText", f = p;
      }
      return f < c.length && o.appendChild(document.createTextNode(c.slice(f))), o;
    },
    position: 50
  }, {
    render(t) {
      if (!t.detail)
        return null;
      let i = document.createElement("span");
      return i.className = "cm-completionDetail", i.textContent = t.detail, i;
    },
    position: 80
  }), e.sort((t, i) => t.position - i.position).map((t) => t.render);
}
function Pu(n, e, t) {
  if (n <= t)
    return { from: 0, to: n };
  if (e < 0 && (e = 0), e <= n >> 1) {
    let r = Math.floor(e / t);
    return { from: r * t, to: (r + 1) * t };
  }
  let i = Math.floor((n - e) / t);
  return { from: n - (i + 1) * t, to: n - i * t };
}
class wC {
  constructor(e, t, i) {
    this.view = e, this.stateField = t, this.applyCompletion = i, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (f) => this.placeInfo(f),
      key: this
    }, this.space = null, this.currentClass = "";
    let r = e.state.field(t), { options: l, selected: o } = r.open, c = e.state.facet(ri);
    this.optionContent = PC(c), this.optionClass = c.optionClass, this.tooltipClass = c.tooltipClass, this.range = Pu(l.length, o, c.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (f) => {
      let { options: u } = e.state.field(t).open;
      for (let O = f.target, p; O && O != this.dom; O = O.parentNode)
        if (O.nodeName == "LI" && (p = /-(\d+)$/.exec(O.id)) && +p[1] < u.length) {
          this.applyCompletion(e, u[+p[1]]), f.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (f) => {
      let u = e.state.field(this.stateField, !1);
      u && u.tooltip && e.state.facet(ri).closeOnBlur && f.relatedTarget != e.contentDOM && e.dispatch({ effects: Fo.of(null) });
    }), this.showOptions(l, r.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, t) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, t, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var t;
    let i = e.state.field(this.stateField), r = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), i != r) {
      let { options: l, selected: o, disabled: c } = i.open;
      (!r.open || r.open.options != l) && (this.range = Pu(l.length, o, e.state.facet(ri).maxRenderedOptions), this.showOptions(l, i.id)), this.updateSel(), c != ((t = r.open) === null || t === void 0 ? void 0 : t.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!c);
    }
  }
  updateTooltipClass(e) {
    let t = this.tooltipClass(e);
    if (t != this.currentClass) {
      for (let i of this.currentClass.split(" "))
        i && this.dom.classList.remove(i);
      for (let i of t.split(" "))
        i && this.dom.classList.add(i);
      this.currentClass = t;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), t = e.open;
    if ((t.selected > -1 && t.selected < this.range.from || t.selected >= this.range.to) && (this.range = Pu(t.options.length, t.selected, this.view.state.facet(ri).maxRenderedOptions), this.showOptions(t.options, e.id)), this.updateSelectedOption(t.selected)) {
      this.destroyInfo();
      let { completion: i } = t.options[t.selected], { info: r } = i;
      if (!r)
        return;
      let l = typeof r == "string" ? document.createTextNode(r) : r(i);
      if (!l)
        return;
      "then" in l ? l.then((o) => {
        o && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(o, i);
      }).catch((o) => Bi(this.view.state, o, "completion info")) : this.addInfoPane(l, i);
    }
  }
  addInfoPane(e, t) {
    this.destroyInfo();
    let i = this.info = document.createElement("div");
    if (i.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      i.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: r, destroy: l } = e;
      i.appendChild(r), this.infoDestroy = l || null;
    }
    this.dom.appendChild(i), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let t = null;
    for (let i = this.list.firstChild, r = this.range.from; i; i = i.nextSibling, r++)
      i.nodeName != "LI" || !i.id ? r-- : r == e ? i.hasAttribute("aria-selected") || (i.setAttribute("aria-selected", "true"), t = i) : i.hasAttribute("aria-selected") && i.removeAttribute("aria-selected");
    return t && _C(this.list, t), t;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let t = this.dom.getBoundingClientRect(), i = this.info.getBoundingClientRect(), r = e.getBoundingClientRect(), l = this.space;
    if (!l) {
      let o = this.dom.ownerDocument.documentElement;
      l = { left: 0, top: 0, right: o.clientWidth, bottom: o.clientHeight };
    }
    return r.top > Math.min(l.bottom, t.bottom) - 10 || r.bottom < Math.max(l.top, t.top) + 10 ? null : this.view.state.facet(ri).positionInfo(this.view, t, r, i, l, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, t, i) {
    const r = document.createElement("ul");
    r.id = t, r.setAttribute("role", "listbox"), r.setAttribute("aria-expanded", "true"), r.setAttribute("aria-label", this.view.state.phrase("Completions")), r.addEventListener("mousedown", (o) => {
      o.target == r && o.preventDefault();
    });
    let l = null;
    for (let o = i.from; o < i.to; o++) {
      let { completion: c, match: f } = e[o], { section: u } = c;
      if (u) {
        let g = typeof u == "string" ? u : u.name;
        if (g != l && (o > i.from || i.from == 0))
          if (l = g, typeof u != "string" && u.header)
            r.appendChild(u.header(u));
          else {
            let b = r.appendChild(document.createElement("completion-section"));
            b.textContent = g;
          }
      }
      const O = r.appendChild(document.createElement("li"));
      O.id = t + "-" + o, O.setAttribute("role", "option");
      let p = this.optionClass(c);
      p && (O.className = p);
      for (let g of this.optionContent) {
        let b = g(c, this.view.state, this.view, f);
        b && O.appendChild(b);
      }
    }
    return i.from && r.classList.add("cm-completionListIncompleteTop"), i.to < e.length && r.classList.add("cm-completionListIncompleteBottom"), r;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function kC(n, e) {
  return (t) => new wC(t, n, e);
}
function _C(n, e) {
  let t = n.getBoundingClientRect(), i = e.getBoundingClientRect(), r = t.height / n.offsetHeight;
  i.top < t.top ? n.scrollTop -= (t.top - i.top) / r : i.bottom > t.bottom && (n.scrollTop += (i.bottom - t.bottom) / r);
}
function S0(n) {
  return (n.boost || 0) * 100 + (n.apply ? 10 : 0) + (n.info ? 5 : 0) + (n.type ? 1 : 0);
}
function WC(n, e) {
  let t = [], i = null, r = (u) => {
    t.push(u);
    let { section: O } = u.completion;
    if (O) {
      i || (i = []);
      let p = typeof O == "string" ? O : O.name;
      i.some((g) => g.name == p) || i.push(typeof O == "string" ? { name: p } : O);
    }
  }, l = e.facet(ri);
  for (let u of n)
    if (u.hasResult()) {
      let O = u.result.getMatch;
      if (u.result.filter === !1)
        for (let p of u.result.options)
          r(new m0(p, u.source, O ? O(p) : [], 1e9 - t.length));
      else {
        let p = e.sliceDoc(u.from, u.to), g, b = l.filterStrict ? new QC(p) : new yC(p);
        for (let $ of u.result.options)
          if (g = b.match($.label)) {
            let x = $.displayLabel ? O ? O($, g.matched) : [] : g.matched;
            r(new m0($, u.source, x, g.score + ($.boost || 0)));
          }
      }
    }
  if (i) {
    let u = /* @__PURE__ */ Object.create(null), O = 0, p = (g, b) => {
      var $, x;
      return (($ = g.rank) !== null && $ !== void 0 ? $ : 1e9) - ((x = b.rank) !== null && x !== void 0 ? x : 1e9) || (g.name < b.name ? -1 : 1);
    };
    for (let g of i.sort(p))
      O -= 1e5, u[g.name] = O;
    for (let g of t) {
      let { section: b } = g.completion;
      b && (g.score += u[typeof b == "string" ? b : b.name]);
    }
  }
  let o = [], c = null, f = l.compareCompletions;
  for (let u of t.sort((O, p) => p.score - O.score || f(O.completion, p.completion))) {
    let O = u.completion;
    !c || c.label != O.label || c.detail != O.detail || c.type != null && O.type != null && c.type != O.type || c.apply != O.apply || c.boost != O.boost ? o.push(u) : S0(u.completion) > S0(c) && (o[o.length - 1] = u), c = u.completion;
  }
  return o;
}
class gl {
  constructor(e, t, i, r, l, o) {
    this.options = e, this.attrs = t, this.tooltip = i, this.timestamp = r, this.selected = l, this.disabled = o;
  }
  setSelected(e, t) {
    return e == this.selected || e >= this.options.length ? this : new gl(this.options, $0(t, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, t, i, r, l, o) {
    if (r && !o && e.some((u) => u.isPending))
      return r.setDisabled();
    let c = WC(e, t);
    if (!c.length)
      return r && e.some((u) => u.isPending) ? r.setDisabled() : null;
    let f = t.facet(ri).selectOnOpen ? 0 : -1;
    if (r && r.selected != f && r.selected != -1) {
      let u = r.options[r.selected].completion;
      for (let O = 0; O < c.length; O++)
        if (c[O].completion == u) {
          f = O;
          break;
        }
    }
    return new gl(c, $0(i, f), {
      pos: e.reduce((u, O) => O.hasResult() ? Math.min(u, O.from) : u, 1e8),
      create: AC,
      above: l.aboveCursor
    }, r ? r.timestamp : Date.now(), f, !1);
  }
  map(e) {
    return new gl(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
  setDisabled() {
    return new gl(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);
  }
}
class xh {
  constructor(e, t, i) {
    this.active = e, this.id = t, this.open = i;
  }
  static start() {
    return new xh(RC, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: t } = e, i = t.facet(ri), l = (i.override || t.languageDataAt("autocomplete", Xs(t)).map($C)).map((f) => (this.active.find((O) => O.source == f) || new yn(
      f,
      this.active.some(
        (O) => O.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, i));
    l.length == this.active.length && l.every((f, u) => f == this.active[u]) && (l = this.active);
    let o = this.open, c = e.effects.some((f) => f.is(pd));
    o && e.docChanged && (o = o.map(e.changes)), e.selection || l.some((f) => f.hasResult() && e.changes.touchesRange(f.from, f.to)) || !ZC(l, this.active) || c ? o = gl.build(l, t, this.id, o, i, c) : o && o.disabled && !l.some((f) => f.isPending) && (o = null), !o && l.every((f) => !f.isPending) && l.some((f) => f.hasResult()) && (l = l.map((f) => f.hasResult() ? new yn(
      f.source,
      0
      /* State.Inactive */
    ) : f));
    for (let f of e.effects)
      f.is(Jb) && (o = o && o.setSelected(f.value, this.id));
    return l == this.active && o == this.open ? this : new xh(l, this.id, o);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : this.active.length ? TC : CC;
  }
}
function ZC(n, e) {
  if (n == e)
    return !0;
  for (let t = 0, i = 0; ; ) {
    for (; t < n.length && !n[t].hasResult(); )
      t++;
    for (; i < e.length && !e[i].hasResult(); )
      i++;
    let r = t == n.length, l = i == e.length;
    if (r || l)
      return r == l;
    if (n[t++].result != e[i++].result)
      return !1;
  }
}
const TC = {
  "aria-autocomplete": "list"
}, CC = {};
function $0(n, e) {
  let t = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": n
  };
  return e > -1 && (t["aria-activedescendant"] = n + "-" + e), t;
}
const RC = [];
function Kb(n, e) {
  if (n.isUserEvent("input.complete")) {
    let i = n.annotation(dd);
    if (i && e.activateOnCompletion(i))
      return 12;
  }
  let t = n.isUserEvent("input.type");
  return t && e.activateOnTyping ? 5 : t ? 1 : n.isUserEvent("delete.backward") ? 2 : n.selection ? 8 : n.docChanged ? 16 : 0;
}
class yn {
  constructor(e, t, i = !1) {
    this.source = e, this.state = t, this.explicit = i;
  }
  hasResult() {
    return !1;
  }
  get isPending() {
    return this.state == 1;
  }
  update(e, t) {
    let i = Kb(e, t), r = this;
    (i & 8 || i & 16 && this.touches(e)) && (r = new yn(
      r.source,
      0
      /* State.Inactive */
    )), i & 4 && r.state == 0 && (r = new yn(
      this.source,
      1
      /* State.Pending */
    )), r = r.updateFor(e, i);
    for (let l of e.effects)
      if (l.is(Qh))
        r = new yn(r.source, 1, l.value);
      else if (l.is(Fo))
        r = new yn(
          r.source,
          0
          /* State.Inactive */
        );
      else if (l.is(pd))
        for (let o of l.value)
          o.source == r.source && (r = o);
    return r;
  }
  updateFor(e, t) {
    return this.map(e.changes);
  }
  map(e) {
    return this;
  }
  touches(e) {
    return e.changes.touchesRange(Xs(e.state));
  }
}
class Ql extends yn {
  constructor(e, t, i, r, l, o) {
    super(e, 3, t), this.limit = i, this.result = r, this.from = l, this.to = o;
  }
  hasResult() {
    return !0;
  }
  updateFor(e, t) {
    var i;
    if (!(t & 3))
      return this.map(e.changes);
    let r = this.result;
    r.map && !e.changes.empty && (r = r.map(r, e.changes));
    let l = e.changes.mapPos(this.from), o = e.changes.mapPos(this.to, 1), c = Xs(e.state);
    if (c > o || !r || t & 2 && (Xs(e.startState) == this.from || c < this.limit))
      return new yn(
        this.source,
        t & 4 ? 1 : 0
        /* State.Inactive */
      );
    let f = e.changes.mapPos(this.limit);
    return XC(r.validFor, e.state, l, o) ? new Ql(this.source, this.explicit, f, r, l, o) : r.update && (r = r.update(r, l, o, new Fb(e.state, c, !1))) ? new Ql(this.source, this.explicit, f, r, r.from, (i = r.to) !== null && i !== void 0 ? i : Xs(e.state)) : new yn(this.source, 1, this.explicit);
  }
  map(e) {
    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new Ql(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new yn(
      this.source,
      0
      /* State.Inactive */
    );
  }
  touches(e) {
    return e.changes.touchesRange(this.from, this.to);
  }
}
function XC(n, e, t, i) {
  if (!n)
    return !1;
  let r = e.sliceDoc(t, i);
  return typeof n == "function" ? n(r, t, i, e) : Hb(n, !0).test(r);
}
const pd = /* @__PURE__ */ Ye.define({
  map(n, e) {
    return n.map((t) => t.map(e));
  }
}), Jb = /* @__PURE__ */ Ye.define(), ji = /* @__PURE__ */ ti.define({
  create() {
    return xh.start();
  },
  update(n, e) {
    return n.update(e);
  },
  provide: (n) => [
    KO.from(n, (e) => e.tooltip),
    ae.contentAttributes.from(n, (e) => e.attrs)
  ]
});
function gd(n, e) {
  const t = e.completion.apply || e.completion.label;
  let i = n.state.field(ji).active.find((r) => r.source == e.source);
  return i instanceof Ql ? (typeof t == "string" ? n.dispatch(Object.assign(Object.assign({}, SC(n.state, t, i.from, i.to)), { annotations: dd.of(e.completion) })) : t(n, e.completion, i.from, i.to), !0) : !1;
}
const AC = /* @__PURE__ */ kC(ji, gd);
function Ac(n, e = "option") {
  return (t) => {
    let i = t.state.field(ji, !1);
    if (!i || !i.open || i.open.disabled || Date.now() - i.open.timestamp < t.state.facet(ri).interactionDelay)
      return !1;
    let r = 1, l;
    e == "page" && (l = yv(t, i.open.tooltip)) && (r = Math.max(2, Math.floor(l.dom.offsetHeight / l.dom.querySelector("li").offsetHeight) - 1));
    let { length: o } = i.open.options, c = i.open.selected > -1 ? i.open.selected + r * (n ? 1 : -1) : n ? 0 : o - 1;
    return c < 0 ? c = e == "page" ? 0 : o - 1 : c >= o && (c = e == "page" ? o - 1 : 0), t.dispatch({ effects: Jb.of(c) }), !0;
  };
}
const MC = (n) => {
  let e = n.state.field(ji, !1);
  return n.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < n.state.facet(ri).interactionDelay ? !1 : gd(n, e.open.options[e.open.selected]);
}, y0 = (n) => n.state.field(ji, !1) ? (n.dispatch({ effects: Qh.of(!0) }), !0) : !1, EC = (n) => {
  let e = n.state.field(ji, !1);
  return !e || !e.active.some(
    (t) => t.state != 0
    /* State.Inactive */
  ) ? !1 : (n.dispatch({ effects: Fo.of(null) }), !0);
};
class qC {
  constructor(e, t) {
    this.active = e, this.context = t, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const VC = 50, LC = 1e3, UC = /* @__PURE__ */ Ft.fromClass(class {
  constructor(n) {
    this.view = n, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of n.state.field(ji).active)
      e.isPending && this.startQuery(e);
  }
  update(n) {
    let e = n.state.field(ji), t = n.state.facet(ri);
    if (!n.selectionSet && !n.docChanged && n.startState.field(ji) == e)
      return;
    let i = n.transactions.some((l) => {
      let o = Kb(l, t);
      return o & 8 || (l.selection || l.docChanged) && !(o & 3);
    });
    for (let l = 0; l < this.running.length; l++) {
      let o = this.running[l];
      if (i || o.context.abortOnDocChange && n.docChanged || o.updates.length + n.transactions.length > VC && Date.now() - o.time > LC) {
        for (let c of o.context.abortListeners)
          try {
            c();
          } catch (f) {
            Bi(this.view.state, f);
          }
        o.context.abortListeners = null, this.running.splice(l--, 1);
      } else
        o.updates.push(...n.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), n.transactions.some((l) => l.effects.some((o) => o.is(Qh))) && (this.pendingStart = !0);
    let r = this.pendingStart ? 50 : t.activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((l) => l.isPending && !this.running.some((o) => o.active.source == l.source)) ? setTimeout(() => this.startUpdate(), r) : -1, this.composing != 0)
      for (let l of n.transactions)
        l.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && l.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: n } = this.view, e = n.field(ji);
    for (let t of e.active)
      t.isPending && !this.running.some((i) => i.active.source == t.source) && this.startQuery(t);
    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(ri).updateSyncTime));
  }
  startQuery(n) {
    let { state: e } = this.view, t = Xs(e), i = new Fb(e, t, n.explicit, this.view), r = new qC(n, i);
    this.running.push(r), Promise.resolve(n.source(i)).then((l) => {
      r.context.aborted || (r.done = l || null, this.scheduleAccept());
    }, (l) => {
      this.view.dispatch({ effects: Fo.of(null) }), Bi(this.view.state, l);
    });
  }
  scheduleAccept() {
    this.running.every((n) => n.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(ri).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var n;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], t = this.view.state.facet(ri), i = this.view.state.field(ji);
    for (let r = 0; r < this.running.length; r++) {
      let l = this.running[r];
      if (l.done === void 0)
        continue;
      if (this.running.splice(r--, 1), l.done) {
        let c = Xs(l.updates.length ? l.updates[0].startState : this.view.state), f = Math.min(c, l.done.from + (l.active.explicit ? 0 : 1)), u = new Ql(l.active.source, l.active.explicit, f, l.done, l.done.from, (n = l.done.to) !== null && n !== void 0 ? n : c);
        for (let O of l.updates)
          u = u.update(O, t);
        if (u.hasResult()) {
          e.push(u);
          continue;
        }
      }
      let o = i.active.find((c) => c.source == l.active.source);
      if (o && o.isPending)
        if (l.done == null) {
          let c = new yn(
            l.active.source,
            0
            /* State.Inactive */
          );
          for (let f of l.updates)
            c = c.update(f, t);
          c.isPending || e.push(c);
        } else
          this.startQuery(o);
    }
    (e.length || i.open && i.open.disabled) && this.view.dispatch({ effects: pd.of(e) });
  }
}, {
  eventHandlers: {
    blur(n) {
      let e = this.view.state.field(ji, !1);
      if (e && e.tooltip && this.view.state.facet(ri).closeOnBlur) {
        let t = e.open && yv(this.view, e.open.tooltip);
        (!t || !t.dom.contains(n.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: Fo.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: Qh.of(!1) }), 20), this.composing = 0;
    }
  }
}), YC = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), DC = /* @__PURE__ */ ps.highest(/* @__PURE__ */ ae.domEventHandlers({
  keydown(n, e) {
    let t = e.state.field(ji, !1);
    if (!t || !t.open || t.open.disabled || t.open.selected < 0 || n.key.length > 1 || n.ctrlKey && !(YC && n.altKey) || n.metaKey)
      return !1;
    let i = t.open.options[t.open.selected], r = t.active.find((o) => o.source == i.source), l = i.completion.commitCharacters || r.result.commitCharacters;
    return l && l.indexOf(n.key) > -1 && gd(e, i), !1;
  }
})), eS = /* @__PURE__ */ ae.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box",
    whiteSpace: "pre-line"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class zC {
  constructor(e, t, i, r) {
    this.field = e, this.line = t, this.from = i, this.to = r;
  }
}
class md {
  constructor(e, t, i) {
    this.field = e, this.from = t, this.to = i;
  }
  map(e) {
    let t = e.mapPos(this.from, -1, fi.TrackDel), i = e.mapPos(this.to, 1, fi.TrackDel);
    return t == null || i == null ? null : new md(this.field, t, i);
  }
}
class vd {
  constructor(e, t) {
    this.lines = e, this.fieldPositions = t;
  }
  instantiate(e, t) {
    let i = [], r = [t], l = e.doc.lineAt(t), o = /^\s*/.exec(l.text)[0];
    for (let f of this.lines) {
      if (i.length) {
        let u = o, O = /^\t*/.exec(f)[0].length;
        for (let p = 0; p < O; p++)
          u += e.facet(Rh);
        r.push(t + u.length - O), f = u + f.slice(O);
      }
      i.push(f), t += f.length + 1;
    }
    let c = this.fieldPositions.map((f) => new md(f.field, r[f.line] + f.from, r[f.line] + f.to));
    return { text: i, ranges: c };
  }
  static parse(e) {
    let t = [], i = [], r = [], l;
    for (let o of e.split(/\r\n?|\n/)) {
      for (; l = /[#$]\{(?:(\d+)(?::([^}]*))?|((?:\\[{}]|[^}])*))\}/.exec(o); ) {
        let c = l[1] ? +l[1] : null, f = l[2] || l[3] || "", u = -1, O = f.replace(/\\[{}]/g, (p) => p[1]);
        for (let p = 0; p < t.length; p++)
          (c != null ? t[p].seq == c : O && t[p].name == O) && (u = p);
        if (u < 0) {
          let p = 0;
          for (; p < t.length && (c == null || t[p].seq != null && t[p].seq < c); )
            p++;
          t.splice(p, 0, { seq: c, name: O }), u = p;
          for (let g of r)
            g.field >= u && g.field++;
        }
        r.push(new zC(u, i.length, l.index, l.index + O.length)), o = o.slice(0, l.index) + f + o.slice(l.index + l[0].length);
      }
      o = o.replace(/\\([{}])/g, (c, f, u) => {
        for (let O of r)
          O.line == i.length && O.from > u && (O.from--, O.to--);
        return f;
      }), i.push(o);
    }
    return new vd(i, r);
  }
}
let jC = /* @__PURE__ */ _e.widget({ widget: /* @__PURE__ */ new class extends Ur {
  toDOM() {
    let n = document.createElement("span");
    return n.className = "cm-snippetFieldPosition", n;
  }
  ignoreEvent() {
    return !1;
  }
}() }), BC = /* @__PURE__ */ _e.mark({ class: "cm-snippetField" });
class Ll {
  constructor(e, t) {
    this.ranges = e, this.active = t, this.deco = _e.set(e.map((i) => (i.from == i.to ? jC : BC).range(i.from, i.to)));
  }
  map(e) {
    let t = [];
    for (let i of this.ranges) {
      let r = i.map(e);
      if (!r)
        return null;
      t.push(r);
    }
    return new Ll(t, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((t) => this.ranges.some((i) => i.field == this.active && i.from <= t.from && i.to >= t.to));
  }
}
const ha = /* @__PURE__ */ Ye.define({
  map(n, e) {
    return n && n.map(e);
  }
}), IC = /* @__PURE__ */ Ye.define(), Go = /* @__PURE__ */ ti.define({
  create() {
    return null;
  },
  update(n, e) {
    for (let t of e.effects) {
      if (t.is(ha))
        return t.value;
      if (t.is(IC) && n)
        return new Ll(n.ranges, t.value);
    }
    return n && e.docChanged && (n = n.map(e.changes)), n && e.selection && !n.selectionInsideField(e.selection) && (n = null), n;
  },
  provide: (n) => ae.decorations.from(n, (e) => e ? e.deco : _e.none)
});
function bd(n, e) {
  return F.create(n.filter((t) => t.field == e).map((t) => F.range(t.from, t.to)));
}
function NC(n) {
  let e = vd.parse(n);
  return (t, i, r, l) => {
    let { text: o, ranges: c } = e.instantiate(t.state, r), { main: f } = t.state.selection, u = {
      changes: { from: r, to: l == f.from ? f.to : l, insert: ot.of(o) },
      scrollIntoView: !0,
      annotations: i ? [dd.of(i), Nt.userEvent.of("input.complete")] : void 0
    };
    if (c.length && (u.selection = bd(c, 0)), c.some((O) => O.field > 0)) {
      let O = new Ll(c, 0), p = u.effects = [ha.of(O)];
      t.state.field(Go, !1) === void 0 && p.push(Ye.appendConfig.of([Go, JC, eR, eS]));
    }
    t.dispatch(t.state.update(u));
  };
}
function tS(n) {
  return ({ state: e, dispatch: t }) => {
    let i = e.field(Go, !1);
    if (!i || n < 0 && i.active == 0)
      return !1;
    let r = i.active + n, l = n > 0 && !i.ranges.some((o) => o.field == r + n);
    return t(e.update({
      selection: bd(i.ranges, r),
      effects: ha.of(l ? null : new Ll(i.ranges, r)),
      scrollIntoView: !0
    })), !0;
  };
}
const FC = ({ state: n, dispatch: e }) => n.field(Go, !1) ? (e(n.update({ effects: ha.of(null) })), !0) : !1, GC = /* @__PURE__ */ tS(1), HC = /* @__PURE__ */ tS(-1), KC = [
  { key: "Tab", run: GC, shift: HC },
  { key: "Escape", run: FC }
], Q0 = /* @__PURE__ */ ge.define({
  combine(n) {
    return n.length ? n[0] : KC;
  }
}), JC = /* @__PURE__ */ ps.highest(/* @__PURE__ */ na.compute([Q0], (n) => n.facet(Q0)));
function Yi(n, e) {
  return Object.assign(Object.assign({}, e), { apply: NC(n) });
}
const eR = /* @__PURE__ */ ae.domEventHandlers({
  mousedown(n, e) {
    let t = e.state.field(Go, !1), i;
    if (!t || (i = e.posAtCoords({ x: n.clientX, y: n.clientY })) == null)
      return !1;
    let r = t.ranges.find((l) => l.from <= i && l.to >= i);
    return !r || r.field == t.active ? !1 : (e.dispatch({
      selection: bd(t.ranges, r.field),
      effects: ha.of(t.ranges.some((l) => l.field > r.field) ? new Ll(t.ranges, r.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), Ho = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, Rs = /* @__PURE__ */ Ye.define({
  map(n, e) {
    let t = e.mapPos(n, -1, fi.TrackAfter);
    return t ?? void 0;
  }
}), Sd = /* @__PURE__ */ new class extends As {
}();
Sd.startSide = 1;
Sd.endSide = -1;
const iS = /* @__PURE__ */ ti.define({
  create() {
    return ct.empty;
  },
  update(n, e) {
    if (n = n.map(e.changes), e.selection) {
      let t = e.state.doc.lineAt(e.selection.main.head);
      n = n.update({ filter: (i) => i >= t.from && i <= t.to });
    }
    for (let t of e.effects)
      t.is(Rs) && (n = n.update({ add: [Sd.range(t.value, t.value + 1)] }));
    return n;
  }
});
function tR() {
  return [nR, iS];
}
const wu = "()[]{}<>«»»«［］｛｝";
function nS(n) {
  for (let e = 0; e < wu.length; e += 2)
    if (wu.charCodeAt(e) == n)
      return wu.charAt(e + 1);
  return EO(n < 128 ? n : n + 1);
}
function rS(n, e) {
  return n.languageDataAt("closeBrackets", e)[0] || Ho;
}
const iR = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), nR = /* @__PURE__ */ ae.inputHandler.of((n, e, t, i) => {
  if ((iR ? n.composing : n.compositionStarted) || n.state.readOnly)
    return !1;
  let r = n.state.selection.main;
  if (i.length > 2 || i.length == 2 && rr(Di(i, 0)) == 1 || e != r.from || t != r.to)
    return !1;
  let l = lR(n.state, i);
  return l ? (n.dispatch(l), !0) : !1;
}), rR = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let i = rS(n, n.selection.main.head).brackets || Ho.brackets, r = null, l = n.changeByRange((o) => {
    if (o.empty) {
      let c = oR(n.doc, o.head);
      for (let f of i)
        if (f == c && Lh(n.doc, o.head) == nS(Di(f, 0)))
          return {
            changes: { from: o.head - f.length, to: o.head + f.length },
            range: F.cursor(o.head - f.length)
          };
    }
    return { range: r = o };
  });
  return r || e(n.update(l, { scrollIntoView: !0, userEvent: "delete.backward" })), !r;
}, sR = [
  { key: "Backspace", run: rR }
];
function lR(n, e) {
  let t = rS(n, n.selection.main.head), i = t.brackets || Ho.brackets;
  for (let r of i) {
    let l = nS(Di(r, 0));
    if (e == r)
      return l == r ? hR(n, r, i.indexOf(r + r + r) > -1, t) : aR(n, r, l, t.before || Ho.before);
    if (e == l && sS(n, n.selection.main.from))
      return cR(n, r, l);
  }
  return null;
}
function sS(n, e) {
  let t = !1;
  return n.field(iS).between(0, n.doc.length, (i) => {
    i == e && (t = !0);
  }), t;
}
function Lh(n, e) {
  let t = n.sliceString(e, e + 2);
  return t.slice(0, rr(Di(t, 0)));
}
function oR(n, e) {
  let t = n.sliceString(e - 2, e);
  return rr(Di(t, 0)) == t.length ? t : t.slice(1);
}
function aR(n, e, t, i) {
  let r = null, l = n.changeByRange((o) => {
    if (!o.empty)
      return {
        changes: [{ insert: e, from: o.from }, { insert: t, from: o.to }],
        effects: Rs.of(o.to + e.length),
        range: F.range(o.anchor + e.length, o.head + e.length)
      };
    let c = Lh(n.doc, o.head);
    return !c || /\s/.test(c) || i.indexOf(c) > -1 ? {
      changes: { insert: e + t, from: o.head },
      effects: Rs.of(o.head + e.length),
      range: F.cursor(o.head + e.length)
    } : { range: r = o };
  });
  return r ? null : n.update(l, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function cR(n, e, t) {
  let i = null, r = n.changeByRange((l) => l.empty && Lh(n.doc, l.head) == t ? {
    changes: { from: l.head, to: l.head + t.length, insert: t },
    range: F.cursor(l.head + t.length)
  } : i = { range: l });
  return i ? null : n.update(r, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function hR(n, e, t, i) {
  let r = i.stringPrefixes || Ho.stringPrefixes, l = null, o = n.changeByRange((c) => {
    if (!c.empty)
      return {
        changes: [{ insert: e, from: c.from }, { insert: e, from: c.to }],
        effects: Rs.of(c.to + e.length),
        range: F.range(c.anchor + e.length, c.head + e.length)
      };
    let f = c.head, u = Lh(n.doc, f), O;
    if (u == e) {
      if (x0(n, f))
        return {
          changes: { insert: e + e, from: f },
          effects: Rs.of(f + e.length),
          range: F.cursor(f + e.length)
        };
      if (sS(n, f)) {
        let g = t && n.sliceDoc(f, f + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: f, to: f + g.length, insert: g },
          range: F.cursor(f + g.length)
        };
      }
    } else {
      if (t && n.sliceDoc(f - 2 * e.length, f) == e + e && (O = P0(n, f - 2 * e.length, r)) > -1 && x0(n, O))
        return {
          changes: { insert: e + e + e + e, from: f },
          effects: Rs.of(f + e.length),
          range: F.cursor(f + e.length)
        };
      if (n.charCategorizer(f)(u) != Rt.Word && P0(n, f, r) > -1 && !fR(n, f, e, r))
        return {
          changes: { insert: e + e, from: f },
          effects: Rs.of(f + e.length),
          range: F.cursor(f + e.length)
        };
    }
    return { range: l = c };
  });
  return l ? null : n.update(o, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function x0(n, e) {
  let t = Lt(n).resolveInner(e + 1);
  return t.parent && t.from == e;
}
function fR(n, e, t, i) {
  let r = Lt(n).resolveInner(e, -1), l = i.reduce((o, c) => Math.max(o, c.length), 0);
  for (let o = 0; o < 5; o++) {
    let c = n.sliceDoc(r.from, Math.min(r.to, r.from + t.length + l)), f = c.indexOf(t);
    if (!f || f > -1 && i.indexOf(c.slice(0, f)) > -1) {
      let O = r.firstChild;
      for (; O && O.from == r.from && O.to - O.from > t.length + f; ) {
        if (n.sliceDoc(O.to - t.length, O.to) == t)
          return !1;
        O = O.firstChild;
      }
      return !0;
    }
    let u = r.to == e && r.parent;
    if (!u)
      break;
    r = u;
  }
  return !1;
}
function P0(n, e, t) {
  let i = n.charCategorizer(e);
  if (i(n.sliceDoc(e - 1, e)) != Rt.Word)
    return e;
  for (let r of t) {
    let l = e - r.length;
    if (n.sliceDoc(l, e) == r && i(n.sliceDoc(l - 1, l)) != Rt.Word)
      return l;
  }
  return -1;
}
function uR(n = {}) {
  return [
    DC,
    ji,
    ri.of(n),
    UC,
    OR,
    eS
  ];
}
const lS = [
  { key: "Ctrl-Space", run: y0 },
  { mac: "Alt-`", run: y0 },
  { key: "Escape", run: EC },
  { key: "ArrowDown", run: /* @__PURE__ */ Ac(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ Ac(!1) },
  { key: "PageDown", run: /* @__PURE__ */ Ac(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ Ac(!1, "page") },
  { key: "Enter", run: MC }
], OR = /* @__PURE__ */ ps.highest(/* @__PURE__ */ na.computeN([ri], (n) => n.facet(ri).defaultKeymap ? [lS] : []));
class w0 {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.diagnostic = i;
  }
}
class Zs {
  constructor(e, t, i) {
    this.diagnostics = e, this.panel = t, this.selected = i;
  }
  static init(e, t, i) {
    let r = e, l = i.facet(Ko).markerFilter;
    l && (r = l(r, i));
    let o = e.slice().sort((p, g) => p.from - g.from || p.to - g.to), c = new Er(), f = [], u = 0;
    for (let p = 0; ; ) {
      let g = p == o.length ? null : o[p];
      if (!g && !f.length)
        break;
      let b, $;
      for (f.length ? (b = u, $ = f.reduce((P, k) => Math.min(P, k.to), g && g.from > b ? g.from : 1e8)) : (b = g.from, $ = g.to, f.push(g), p++); p < o.length; ) {
        let P = o[p];
        if (P.from == b && (P.to > P.from || P.to == b))
          f.push(P), p++, $ = Math.min(P.to, $);
        else {
          $ = Math.min(P.from, $);
          break;
        }
      }
      let x = wR(f);
      if (f.some((P) => P.from == P.to || P.from == P.to - 1 && i.doc.lineAt(P.from).to == P.from))
        c.add(b, b, _e.widget({
          widget: new yR(x),
          diagnostics: f.slice()
        }));
      else {
        let P = f.reduce((k, R) => R.markClass ? k + " " + R.markClass : k, "");
        c.add(b, $, _e.mark({
          class: "cm-lintRange cm-lintRange-" + x + P,
          diagnostics: f.slice(),
          inclusiveEnd: f.some((k) => k.to > $)
        }));
      }
      u = $;
      for (let P = 0; P < f.length; P++)
        f[P].to <= u && f.splice(P--, 1);
    }
    let O = c.finish();
    return new Zs(O, t, Zl(O));
  }
}
function Zl(n, e = null, t = 0) {
  let i = null;
  return n.between(t, 1e9, (r, l, { spec: o }) => {
    if (!(e && o.diagnostics.indexOf(e) < 0))
      if (!i)
        i = new w0(r, l, e || o.diagnostics[0]);
      else {
        if (o.diagnostics.indexOf(i.diagnostic) < 0)
          return !1;
        i = new w0(i.from, l, i.diagnostic);
      }
  }), i;
}
function dR(n, e) {
  let t = e.pos, i = e.end || t, r = n.state.facet(Ko).hideOn(n, t, i);
  if (r != null)
    return r;
  let l = n.startState.doc.lineAt(e.pos);
  return !!(n.effects.some((o) => o.is(oS)) || n.changes.touchesRange(l.from, Math.max(l.to, i)));
}
function pR(n, e) {
  return n.field(on, !1) ? e : e.concat(Ye.appendConfig.of(kR));
}
const oS = /* @__PURE__ */ Ye.define(), $d = /* @__PURE__ */ Ye.define(), aS = /* @__PURE__ */ Ye.define(), on = /* @__PURE__ */ ti.define({
  create() {
    return new Zs(_e.none, null, null);
  },
  update(n, e) {
    if (e.docChanged && n.diagnostics.size) {
      let t = n.diagnostics.map(e.changes), i = null, r = n.panel;
      if (n.selected) {
        let l = e.changes.mapPos(n.selected.from, 1);
        i = Zl(t, n.selected.diagnostic, l) || Zl(t, null, l);
      }
      !t.size && r && e.state.facet(Ko).autoPanel && (r = null), n = new Zs(t, r, i);
    }
    for (let t of e.effects)
      if (t.is(oS)) {
        let i = e.state.facet(Ko).autoPanel ? t.value.length ? Jo.open : null : n.panel;
        n = Zs.init(t.value, i, e.state);
      } else t.is($d) ? n = new Zs(n.diagnostics, t.value ? Jo.open : null, n.selected) : t.is(aS) && (n = new Zs(n.diagnostics, n.panel, t.value));
    return n;
  },
  provide: (n) => [
    Do.from(n, (e) => e.panel),
    ae.decorations.from(n, (e) => e.diagnostics)
  ]
}), gR = /* @__PURE__ */ _e.mark({ class: "cm-lintRange cm-lintRange-active" });
function mR(n, e, t) {
  let { diagnostics: i } = n.state.field(on), r, l = -1, o = -1;
  i.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (f, u, { spec: O }) => {
    if (e >= f && e <= u && (f == u || (e > f || t > 0) && (e < u || t < 0)))
      return r = O.diagnostics, l = f, o = u, !1;
  });
  let c = n.state.facet(Ko).tooltipFilter;
  return r && c && (r = c(r, n.state)), r ? {
    pos: l,
    end: o,
    above: n.state.doc.lineAt(l).to < o,
    create() {
      return { dom: vR(n, r) };
    }
  } : null;
}
function vR(n, e) {
  return _t("ul", { class: "cm-tooltip-lint" }, e.map((t) => hS(n, t, !1)));
}
const bR = (n) => {
  let e = n.state.field(on, !1);
  (!e || !e.panel) && n.dispatch({ effects: pR(n.state, [$d.of(!0)]) });
  let t = Yo(n, Jo.open);
  return t && t.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, k0 = (n) => {
  let e = n.state.field(on, !1);
  return !e || !e.panel ? !1 : (n.dispatch({ effects: $d.of(!1) }), !0);
}, SR = (n) => {
  let e = n.state.field(on, !1);
  if (!e)
    return !1;
  let t = n.state.selection.main, i = e.diagnostics.iter(t.to + 1);
  return !i.value && (i = e.diagnostics.iter(0), !i.value || i.from == t.from && i.to == t.to) ? !1 : (n.dispatch({ selection: { anchor: i.from, head: i.to }, scrollIntoView: !0 }), !0);
}, $R = [
  { key: "Mod-Shift-m", run: bR, preventDefault: !0 },
  { key: "F8", run: SR }
], Ko = /* @__PURE__ */ ge.define({
  combine(n) {
    return Object.assign({ sources: n.map((e) => e.source).filter((e) => e != null) }, ur(n.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null,
      hideOn: () => null
    }, {
      needsRefresh: (e, t) => e ? t ? (i) => e(i) || t(i) : e : t
    }));
  }
});
function cS(n) {
  let e = [];
  if (n)
    e: for (let { name: t } of n) {
      for (let i = 0; i < t.length; i++) {
        let r = t[i];
        if (/[a-zA-Z]/.test(r) && !e.some((l) => l.toLowerCase() == r.toLowerCase())) {
          e.push(r);
          continue e;
        }
      }
      e.push("");
    }
  return e;
}
function hS(n, e, t) {
  var i;
  let r = t ? cS(e.actions) : [];
  return _t("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, _t("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(n) : e.message), (i = e.actions) === null || i === void 0 ? void 0 : i.map((l, o) => {
    let c = !1, f = (g) => {
      if (g.preventDefault(), c)
        return;
      c = !0;
      let b = Zl(n.state.field(on).diagnostics, e);
      b && l.apply(n, b.from, b.to);
    }, { name: u } = l, O = r[o] ? u.indexOf(r[o]) : -1, p = O < 0 ? u : [
      u.slice(0, O),
      _t("u", u.slice(O, O + 1)),
      u.slice(O + 1)
    ];
    return _t("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: f,
      onmousedown: f,
      "aria-label": ` Action: ${u}${O < 0 ? "" : ` (access key "${r[o]})"`}.`
    }, p);
  }), e.source && _t("div", { class: "cm-diagnosticSource" }, e.source));
}
class yR extends Ur {
  constructor(e) {
    super(), this.sev = e;
  }
  eq(e) {
    return e.sev == this.sev;
  }
  toDOM() {
    return _t("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });
  }
}
class _0 {
  constructor(e, t) {
    this.diagnostic = t, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = hS(e, t, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class Jo {
  constructor(e) {
    this.view = e, this.items = [];
    let t = (r) => {
      if (r.keyCode == 27)
        k0(this.view), this.view.focus();
      else if (r.keyCode == 38 || r.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (r.keyCode == 40 || r.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (r.keyCode == 36)
        this.moveSelection(0);
      else if (r.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (r.keyCode == 13)
        this.view.focus();
      else if (r.keyCode >= 65 && r.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: l } = this.items[this.selectedIndex], o = cS(l.actions);
        for (let c = 0; c < o.length; c++)
          if (o[c].toUpperCase().charCodeAt(0) == r.keyCode) {
            let f = Zl(this.view.state.field(on).diagnostics, l);
            f && l.actions[c].apply(e, f.from, f.to);
          }
      } else
        return;
      r.preventDefault();
    }, i = (r) => {
      for (let l = 0; l < this.items.length; l++)
        this.items[l].dom.contains(r.target) && this.moveSelection(l);
    };
    this.list = _t("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: t,
      onclick: i
    }), this.dom = _t("div", { class: "cm-panel-lint" }, this.list, _t("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => k0(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(on).selected;
    if (!e)
      return -1;
    for (let t = 0; t < this.items.length; t++)
      if (this.items[t].diagnostic == e.diagnostic)
        return t;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: t } = this.view.state.field(on), i = 0, r = !1, l = null, o = /* @__PURE__ */ new Set();
    for (e.between(0, this.view.state.doc.length, (c, f, { spec: u }) => {
      for (let O of u.diagnostics) {
        if (o.has(O))
          continue;
        o.add(O);
        let p = -1, g;
        for (let b = i; b < this.items.length; b++)
          if (this.items[b].diagnostic == O) {
            p = b;
            break;
          }
        p < 0 ? (g = new _0(this.view, O), this.items.splice(i, 0, g), r = !0) : (g = this.items[p], p > i && (this.items.splice(i, p - i), r = !0)), t && g.diagnostic == t.diagnostic ? g.dom.hasAttribute("aria-selected") || (g.dom.setAttribute("aria-selected", "true"), l = g) : g.dom.hasAttribute("aria-selected") && g.dom.removeAttribute("aria-selected"), i++;
      }
    }); i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      r = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new _0(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), r = !0), l ? (this.list.setAttribute("aria-activedescendant", l.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: l.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: c, panel: f }) => {
        let u = f.height / this.list.offsetHeight;
        c.top < f.top ? this.list.scrollTop -= (f.top - c.top) / u : c.bottom > f.bottom && (this.list.scrollTop += (c.bottom - f.bottom) / u);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), r && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function t() {
      let i = e;
      e = i.nextSibling, i.remove();
    }
    for (let i of this.items)
      if (i.dom.parentNode == this.list) {
        for (; e != i.dom; )
          t();
        e = i.dom.nextSibling;
      } else
        this.list.insertBefore(i.dom, e);
    for (; e; )
      t();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let t = this.view.state.field(on), i = Zl(t.diagnostics, this.items[e].diagnostic);
    i && this.view.dispatch({
      selection: { anchor: i.from, head: i.to },
      scrollIntoView: !0,
      effects: aS.of(i)
    });
  }
  static open(e) {
    return new Jo(e);
  }
}
function QR(n, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(n)}</svg>')`;
}
function Mc(n) {
  return QR(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${n}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const xR = /* @__PURE__ */ ae.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ Mc("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ Mc("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ Mc("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ Mc("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
});
function PR(n) {
  return n == "error" ? 4 : n == "warning" ? 3 : n == "info" ? 2 : 1;
}
function wR(n) {
  let e = "hint", t = 1;
  for (let i of n) {
    let r = PR(i.severity);
    r > t && (t = r, e = i.severity);
  }
  return e;
}
const kR = [
  on,
  /* @__PURE__ */ ae.decorations.compute([on], (n) => {
    let { selected: e, panel: t } = n.field(on);
    return !e || !t || e.from == e.to ? _e.none : _e.set([
      gR.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ bW(mR, { hideOn: dR }),
  xR
], _R = [
  ZW(),
  RW(),
  G2(),
  D5(),
  m5(),
  V2(),
  z2(),
  it.allowMultipleSelections.of(!0),
  r5(),
  ib($5, { fallback: !0 }),
  _5(),
  tR(),
  uR(),
  aW(),
  fW(),
  iW(),
  FT(),
  na.of([
    ...sR,
    ...DT,
    ...dC,
    ...K5,
    ...O5,
    ...lS,
    ...$R
  ])
], si = ({ variant: n, settings: e, styles: t }) => {
  const i = ae.theme({
    // eslint-disable-next-line @typescript-eslint/naming-convention
    "&": {
      backgroundColor: e.background,
      color: e.foreground
    },
    ".cm-content": {
      caretColor: e.caret
    },
    ".cm-cursor, .cm-dropCursor": {
      borderLeftColor: e.caret
    },
    "&.cm-focused .cm-selectionBackgroundm .cm-selectionBackground, .cm-content ::selection": {
      backgroundColor: e.selection
    },
    ".cm-activeLine": {
      backgroundColor: e.lineHighlight
    },
    ".cm-gutters": {
      backgroundColor: e.gutterBackground,
      color: e.gutterForeground
    },
    ".cm-activeLineGutter": {
      backgroundColor: e.lineHighlight
    }
  }, {
    dark: n === "dark"
  }), r = oa.define(t);
  return [i, ib(r)];
};
si({
  variant: "dark",
  settings: {
    background: "#200020",
    foreground: "#D0D0FF",
    caret: "#7070FF",
    selection: "#80000080",
    gutterBackground: "#200020",
    gutterForeground: "#C080C0",
    lineHighlight: "#80000040"
  },
  styles: [
    {
      tag: v.comment,
      color: "#404080"
    },
    {
      tag: [v.string, v.regexp],
      color: "#999999"
    },
    {
      tag: v.number,
      color: "#7090B0"
    },
    {
      tag: [v.bool, v.null],
      color: "#8080A0"
    },
    {
      tag: [v.punctuation, v.derefOperator],
      color: "#805080"
    },
    {
      tag: v.keyword,
      color: "#60B0FF"
    },
    {
      tag: v.definitionKeyword,
      color: "#B0FFF0"
    },
    {
      tag: v.moduleKeyword,
      color: "#60B0FF"
    },
    {
      tag: v.operator,
      color: "#A0A0FF"
    },
    {
      tag: [v.variableName, v.self],
      color: "#008080"
    },
    {
      tag: v.operatorKeyword,
      color: "#A0A0FF"
    },
    {
      tag: v.controlKeyword,
      color: "#80A0FF"
    },
    {
      tag: v.className,
      color: "#70E080"
    },
    {
      tag: [v.function(v.propertyName), v.propertyName],
      color: "#50A0A0"
    },
    {
      tag: v.tagName,
      color: "#009090"
    },
    {
      tag: v.modifier,
      color: "#B0FFF0"
    },
    {
      tag: [v.squareBracket, v.attributeName],
      color: "#D0D0FF"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#fcfcfc",
    foreground: "#5c6166",
    caret: "#ffaa33",
    selection: "#036dd626",
    gutterBackground: "#fcfcfc",
    gutterForeground: "#8a919966",
    lineHighlight: "#8a91991a"
  },
  styles: [
    {
      tag: v.comment,
      color: "#787b8099"
    },
    {
      tag: v.string,
      color: "#86b300"
    },
    {
      tag: v.regexp,
      color: "#4cbf99"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#ffaa33"
    },
    {
      tag: v.variableName,
      color: "#5c6166"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#fa8d3e"
    },
    {
      tag: [v.keyword, v.special(v.brace)],
      color: "#fa8d3e"
    },
    {
      tag: v.operator,
      color: "#ed9366"
    },
    {
      tag: v.separator,
      color: "#5c6166b3"
    },
    {
      tag: v.punctuation,
      color: "#5c6166"
    },
    {
      tag: [v.definition(v.propertyName), v.function(v.variableName)],
      color: "#f2ae49"
    },
    {
      tag: [v.className, v.definition(v.typeName)],
      color: "#22a4e6"
    },
    {
      tag: [v.tagName, v.typeName, v.self, v.labelName],
      color: "#55b4d4"
    },
    {
      tag: v.angleBracket,
      color: "#55b4d480"
    },
    {
      tag: v.attributeName,
      color: "#f2ae49"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#15191EFA",
    foreground: "#EEF2F7",
    caret: "#C4C4C4",
    selection: "#90B2D557",
    gutterBackground: "#15191EFA",
    gutterForeground: "#aaaaaa95",
    lineHighlight: "#57575712"
  },
  styles: [
    {
      tag: v.comment,
      color: "#6E6E6E"
    },
    {
      tag: [v.string, v.regexp, v.special(v.brace)],
      color: "#5C81B3"
    },
    {
      tag: v.number,
      color: "#C1E1B8"
    },
    {
      tag: v.bool,
      color: "#53667D"
    },
    {
      tag: [v.definitionKeyword, v.modifier, v.function(v.propertyName)],
      color: "#A3D295",
      fontWeight: "bold"
    },
    {
      tag: [v.keyword, v.moduleKeyword, v.operatorKeyword, v.operator],
      color: "#697A8E",
      fontWeight: "bold"
    },
    {
      tag: [v.variableName, v.attributeName],
      color: "#708E67"
    },
    {
      tag: [
        v.function(v.variableName),
        v.definition(v.propertyName),
        v.derefOperator
      ],
      color: "#fff"
    },
    {
      tag: v.tagName,
      color: "#A3D295"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#2e241d",
    foreground: "#BAAE9E",
    caret: "#A7A7A7",
    selection: "#DDF0FF33",
    gutterBackground: "#28211C",
    gutterForeground: "#BAAE9E90",
    lineHighlight: "#FFFFFF08"
  },
  styles: [
    {
      tag: v.comment,
      color: "#666666"
    },
    {
      tag: [v.string, v.special(v.brace)],
      color: "#54BE0D"
    },
    {
      tag: v.regexp,
      color: "#E9C062"
    },
    {
      tag: v.number,
      color: "#CF6A4C"
    },
    {
      tag: [v.keyword, v.operator],
      color: "#5EA6EA"
    },
    {
      tag: v.variableName,
      color: "#7587A6"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#F9EE98"
    },
    {
      tag: [v.propertyName, v.function(v.variableName)],
      color: "#937121"
    },
    {
      tag: [v.typeName, v.angleBracket, v.tagName],
      color: "#9B859D"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#3b2627",
    foreground: "#E6E1C4",
    caret: "#E6E1C4",
    selection: "#16120E",
    gutterBackground: "#3b2627",
    gutterForeground: "#E6E1C490",
    lineHighlight: "#1F1611"
  },
  styles: [
    {
      tag: v.comment,
      color: "#6B4E32"
    },
    {
      tag: [v.keyword, v.operator, v.derefOperator],
      color: "#EF5D32"
    },
    {
      tag: v.className,
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: [
        v.typeName,
        v.propertyName,
        v.function(v.variableName),
        v.definition(v.variableName)
      ],
      color: "#EFAC32"
    },
    {
      tag: v.definition(v.typeName),
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: v.labelName,
      color: "#EFAC32",
      fontWeight: "bold"
    },
    {
      tag: [v.number, v.bool],
      color: "#6C99BB"
    },
    {
      tag: [v.variableName, v.self],
      color: "#7DAF9C"
    },
    {
      tag: [v.string, v.special(v.brace), v.regexp],
      color: "#D9D762"
    },
    {
      tag: [v.angleBracket, v.tagName, v.attributeName],
      color: "#EFCB43"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#000205",
    foreground: "#FFFFFF",
    caret: "#E60065",
    selection: "#E60C6559",
    gutterBackground: "#000205",
    gutterForeground: "#ffffff90",
    lineHighlight: "#4DD7FC1A"
  },
  styles: [
    {
      tag: v.comment,
      color: "#404040"
    },
    {
      tag: [v.string, v.special(v.brace), v.regexp],
      color: "#00D8FF"
    },
    {
      tag: v.number,
      color: "#E62286"
    },
    {
      tag: [v.variableName, v.attributeName, v.self],
      color: "#E62286",
      fontWeight: "bold"
    },
    {
      tag: v.function(v.variableName),
      color: "#fff",
      fontWeight: "bold"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#000",
    selection: "#BDD5FC",
    gutterBackground: "#fff",
    gutterForeground: "#00000070",
    lineHighlight: "#FFFBD1"
  },
  styles: [
    {
      tag: v.comment,
      color: "#BCC8BA"
    },
    {
      tag: [v.string, v.special(v.brace), v.regexp],
      color: "#5D90CD"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#46A609"
    },
    {
      tag: v.keyword,
      color: "#AF956F"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#C52727"
    },
    {
      tag: [v.angleBracket, v.tagName, v.attributeName],
      color: "#606060"
    },
    {
      tag: v.self,
      color: "#000"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#00254b",
    foreground: "#FFFFFF",
    caret: "#FFFFFF",
    selection: "#B36539BF",
    gutterBackground: "#00254b",
    gutterForeground: "#FFFFFF70",
    lineHighlight: "#00000059"
  },
  styles: [
    {
      tag: v.comment,
      color: "#0088FF"
    },
    {
      tag: v.string,
      color: "#3AD900"
    },
    {
      tag: v.regexp,
      color: "#80FFC2"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#FF628C"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#FFEE80"
    },
    {
      tag: v.variableName,
      color: "#CCCCCC"
    },
    {
      tag: v.self,
      color: "#FF80E1"
    },
    {
      tag: [
        v.className,
        v.definition(v.propertyName),
        v.function(v.variableName),
        v.definition(v.typeName),
        v.labelName
      ],
      color: "#FFDD00"
    },
    {
      tag: [v.keyword, v.operator],
      color: "#FF9D00"
    },
    {
      tag: [v.propertyName, v.typeName],
      color: "#80FFBB"
    },
    {
      tag: v.special(v.brace),
      color: "#EDEF7D"
    },
    {
      tag: v.attributeName,
      color: "#9EFFFF"
    },
    {
      tag: v.derefOperator,
      color: "#fff"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#060521",
    foreground: "#E0E0E0",
    caret: "#FFFFFFA6",
    selection: "#122BBB",
    gutterBackground: "#060521",
    gutterForeground: "#E0E0E090",
    lineHighlight: "#FFFFFF0F"
  },
  styles: [
    {
      tag: v.comment,
      color: "#AEAEAE"
    },
    {
      tag: [v.string, v.special(v.brace), v.regexp],
      color: "#8DFF8E"
    },
    {
      tag: [
        v.className,
        v.definition(v.propertyName),
        v.function(v.variableName),
        v.function(v.definition(v.variableName)),
        v.definition(v.typeName)
      ],
      color: "#A3EBFF"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#62E9BD"
    },
    {
      tag: [v.keyword, v.operator],
      color: "#2BF1DC"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#F8FBB1"
    },
    {
      tag: [v.variableName, v.self],
      color: "#B683CA"
    },
    {
      tag: [v.angleBracket, v.tagName, v.typeName, v.propertyName],
      color: "#60A4F1"
    },
    {
      tag: v.derefOperator,
      color: "#E0E0E0"
    },
    {
      tag: v.attributeName,
      color: "#7BACCA"
    }
  ]
});
si({
  variant: "dark",
  settings: {
    background: "#2d2f3f",
    foreground: "#f8f8f2",
    caret: "#f8f8f0",
    selection: "#44475a",
    gutterBackground: "#282a36",
    gutterForeground: "rgb(144, 145, 148)",
    lineHighlight: "#44475a"
  },
  styles: [
    {
      tag: v.comment,
      color: "#6272a4"
    },
    {
      tag: [v.string, v.special(v.brace)],
      color: "#f1fa8c"
    },
    {
      tag: [v.number, v.self, v.bool, v.null],
      color: "#bd93f9"
    },
    {
      tag: [v.keyword, v.operator],
      color: "#ff79c6"
    },
    {
      tag: [v.definitionKeyword, v.typeName],
      color: "#8be9fd"
    },
    {
      tag: v.definition(v.typeName),
      color: "#f8f8f2"
    },
    {
      tag: [
        v.className,
        v.definition(v.propertyName),
        v.function(v.variableName),
        v.attributeName
      ],
      color: "#50fa7b"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#000000",
    selection: "#80C7FF",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#00000070",
    lineHighlight: "#C1E2F8"
  },
  styles: [
    {
      tag: v.comment,
      color: "#AAAAAA"
    },
    {
      tag: [v.keyword, v.operator, v.typeName, v.tagName, v.propertyName],
      color: "#2F6F9F",
      fontWeight: "bold"
    },
    {
      tag: [v.attributeName, v.definition(v.propertyName)],
      color: "#4F9FD0"
    },
    {
      tag: [v.className, v.string, v.special(v.brace)],
      color: "#CF4F5F"
    },
    {
      tag: v.number,
      color: "#CF4F5F",
      fontWeight: "bold"
    },
    {
      tag: v.variableName,
      fontWeight: "bold"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#f2f1f8",
    foreground: "#0c006b",
    caret: "#5c49e9",
    selection: "#d5d1f2",
    gutterBackground: "#f2f1f8",
    gutterForeground: "#0c006b70",
    lineHighlight: "#e1def3"
  },
  styles: [
    {
      tag: v.comment,
      color: "#9995b7"
    },
    {
      tag: v.keyword,
      color: "#ff5792",
      fontWeight: "bold"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#ff5792"
    },
    {
      tag: [v.className, v.tagName, v.definition(v.typeName)],
      color: "#0094f0"
    },
    {
      tag: [v.number, v.bool, v.null, v.special(v.brace)],
      color: "#5842ff"
    },
    {
      tag: [v.definition(v.propertyName), v.function(v.variableName)],
      color: "#0095a8"
    },
    {
      tag: v.typeName,
      color: "#b3694d"
    },
    {
      tag: [v.propertyName, v.variableName],
      color: "#fa8900"
    },
    {
      tag: v.operator,
      color: "#ff5792"
    },
    {
      tag: v.self,
      color: "#e64100"
    },
    {
      tag: [v.string, v.regexp],
      color: "#00b368"
    },
    {
      tag: [v.paren, v.bracket],
      color: "#0431fa"
    },
    {
      tag: v.labelName,
      color: "#00bdd6"
    },
    {
      tag: v.attributeName,
      color: "#e64100"
    },
    {
      tag: v.angleBracket,
      color: "#9995b7"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#faf4ed",
    foreground: "#575279",
    caret: "#575279",
    selection: "#6e6a8614",
    gutterBackground: "#faf4ed",
    gutterForeground: "#57527970",
    lineHighlight: "#6e6a860d"
  },
  styles: [
    {
      tag: v.comment,
      color: "#9893a5"
    },
    {
      tag: [v.bool, v.null],
      color: "#286983"
    },
    {
      tag: v.number,
      color: "#d7827e"
    },
    {
      tag: v.className,
      color: "#d7827e"
    },
    {
      tag: [v.angleBracket, v.tagName, v.typeName],
      color: "#56949f"
    },
    {
      tag: v.attributeName,
      color: "#907aa9"
    },
    {
      tag: v.punctuation,
      color: "#797593"
    },
    {
      tag: [v.keyword, v.modifier],
      color: "#286983"
    },
    {
      tag: [v.string, v.regexp],
      color: "#ea9d34"
    },
    {
      tag: v.variableName,
      color: "#d7827e"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#000000",
    caret: "#000000",
    selection: "#FFFD0054",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#00000070",
    lineHighlight: "#00000008"
  },
  styles: [
    {
      tag: v.comment,
      color: "#CFCFCF"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#E66C29"
    },
    {
      tag: [
        v.className,
        v.definition(v.propertyName),
        v.function(v.variableName),
        v.labelName,
        v.definition(v.typeName)
      ],
      color: "#2EB43B"
    },
    {
      tag: v.keyword,
      color: "#D8B229"
    },
    {
      tag: v.operator,
      color: "#4EA44E",
      fontWeight: "bold"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#925A47"
    },
    {
      tag: v.string,
      color: "#704D3D"
    },
    {
      tag: v.typeName,
      color: "#2F8996"
    },
    {
      tag: [v.variableName, v.propertyName],
      color: "#77ACB0"
    },
    {
      tag: v.self,
      color: "#77ACB0",
      fontWeight: "bold"
    },
    {
      tag: v.regexp,
      color: "#E3965E"
    },
    {
      tag: [v.tagName, v.angleBracket],
      color: "#BAA827"
    },
    {
      tag: v.attributeName,
      color: "#B06520"
    },
    {
      tag: v.derefOperator,
      color: "#000"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#fef7e5",
    foreground: "#586E75",
    caret: "#000000",
    selection: "#073642",
    gutterBackground: "#fef7e5",
    gutterForeground: "#586E7580",
    lineHighlight: "#EEE8D5"
  },
  styles: [
    {
      tag: v.comment,
      color: "#93A1A1"
    },
    {
      tag: v.string,
      color: "#2AA198"
    },
    {
      tag: v.regexp,
      color: "#D30102"
    },
    {
      tag: v.number,
      color: "#D33682"
    },
    {
      tag: v.variableName,
      color: "#268BD2"
    },
    {
      tag: [v.keyword, v.operator, v.punctuation],
      color: "#859900"
    },
    {
      tag: [v.definitionKeyword, v.modifier],
      color: "#073642",
      fontWeight: "bold"
    },
    {
      tag: [v.className, v.self, v.definition(v.propertyName)],
      color: "#268BD2"
    },
    {
      tag: v.function(v.variableName),
      color: "#268BD2"
    },
    {
      tag: [v.bool, v.null],
      color: "#B58900"
    },
    {
      tag: v.tagName,
      color: "#268BD2",
      fontWeight: "bold"
    },
    {
      tag: v.angleBracket,
      color: "#93A1A1"
    },
    {
      tag: v.attributeName,
      color: "#93A1A1"
    },
    {
      tag: v.typeName,
      color: "#859900"
    }
  ]
});
si({
  variant: "light",
  settings: {
    background: "#FFFFFF",
    foreground: "#4D4D4C",
    caret: "#AEAFAD",
    selection: "#D6D6D6",
    gutterBackground: "#FFFFFF",
    gutterForeground: "#4D4D4C80",
    lineHighlight: "#EFEFEF"
  },
  styles: [
    {
      tag: v.comment,
      color: "#8E908C"
    },
    {
      tag: [v.variableName, v.self, v.propertyName, v.attributeName, v.regexp],
      color: "#C82829"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#F5871F"
    },
    {
      tag: [v.className, v.typeName, v.definition(v.typeName)],
      color: "#C99E00"
    },
    {
      tag: [v.string, v.special(v.brace)],
      color: "#718C00"
    },
    {
      tag: v.operator,
      color: "#3E999F"
    },
    {
      tag: [v.definition(v.propertyName), v.function(v.variableName)],
      color: "#4271AE"
    },
    {
      tag: v.keyword,
      color: "#8959A8"
    },
    {
      tag: v.derefOperator,
      color: "#4D4D4C"
    }
  ]
});
const WR = Al({
  String: v.string,
  Number: v.number,
  "True False": v.bool,
  PropertyName: v.propertyName,
  Null: v.null,
  ", :": v.separator,
  "[ ]": v.squareBracket,
  "{ }": v.brace
}), ZR = us.deserialize({
  version: 14,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l",
  stateData: "#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O",
  goto: "!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array",
  maxTerm: 25,
  nodeProps: [
    ["isolate", -2, 6, 11, ""],
    ["openedBy", 7, "{", 14, "["],
    ["closedBy", 8, "}", 15, "]"]
  ],
  propSources: [WR],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",
  tokenizers: [0],
  topRules: { JsonText: [0, 1] },
  tokenPrec: 0
}), TR = /* @__PURE__ */ Os.define({
  name: "json",
  parser: /* @__PURE__ */ ZR.configure({
    props: [
      /* @__PURE__ */ Ml.add({
        Object: /* @__PURE__ */ $l({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ $l({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ El.add({
        "Object Array": ir
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function CR() {
  return new sa(TR);
}
const RR = 54, XR = 1, AR = 55, MR = 2, ER = 56, qR = 3, W0 = 4, VR = 5, Ph = 6, fS = 7, uS = 8, OS = 9, dS = 10, LR = 11, UR = 12, YR = 13, ku = 57, DR = 14, Z0 = 58, pS = 20, zR = 22, gS = 23, jR = 24, ZO = 26, mS = 27, BR = 28, IR = 31, NR = 34, FR = 36, GR = 37, HR = 0, KR = 1, JR = {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  command: !0,
  embed: !0,
  frame: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0,
  menuitem: !0
}, e3 = {
  dd: !0,
  li: !0,
  optgroup: !0,
  option: !0,
  p: !0,
  rp: !0,
  rt: !0,
  tbody: !0,
  td: !0,
  tfoot: !0,
  th: !0,
  tr: !0
}, T0 = {
  dd: { dd: !0, dt: !0 },
  dt: { dd: !0, dt: !0 },
  li: { li: !0 },
  option: { option: !0, optgroup: !0 },
  optgroup: { optgroup: !0 },
  p: {
    address: !0,
    article: !0,
    aside: !0,
    blockquote: !0,
    dir: !0,
    div: !0,
    dl: !0,
    fieldset: !0,
    footer: !0,
    form: !0,
    h1: !0,
    h2: !0,
    h3: !0,
    h4: !0,
    h5: !0,
    h6: !0,
    header: !0,
    hgroup: !0,
    hr: !0,
    menu: !0,
    nav: !0,
    ol: !0,
    p: !0,
    pre: !0,
    section: !0,
    table: !0,
    ul: !0
  },
  rp: { rp: !0, rt: !0 },
  rt: { rp: !0, rt: !0 },
  tbody: { tbody: !0, tfoot: !0 },
  td: { td: !0, th: !0 },
  tfoot: { tbody: !0 },
  th: { td: !0, th: !0 },
  thead: { tbody: !0, tfoot: !0 },
  tr: { tr: !0 }
};
function t3(n) {
  return n == 45 || n == 46 || n == 58 || n >= 65 && n <= 90 || n == 95 || n >= 97 && n <= 122 || n >= 161;
}
function vS(n) {
  return n == 9 || n == 10 || n == 13 || n == 32;
}
let C0 = null, R0 = null, X0 = 0;
function TO(n, e) {
  let t = n.pos + e;
  if (X0 == t && R0 == n) return C0;
  let i = n.peek(e);
  for (; vS(i); ) i = n.peek(++e);
  let r = "";
  for (; t3(i); )
    r += String.fromCharCode(i), i = n.peek(++e);
  return R0 = n, X0 = t, C0 = r ? r.toLowerCase() : i == i3 || i == n3 ? void 0 : null;
}
const bS = 60, wh = 62, yd = 47, i3 = 63, n3 = 33, r3 = 45;
function A0(n, e) {
  this.name = n, this.parent = e;
}
const s3 = [Ph, dS, fS, uS, OS], l3 = new Uv({
  start: null,
  shift(n, e, t, i) {
    return s3.indexOf(e) > -1 ? new A0(TO(i, 1) || "", n) : n;
  },
  reduce(n, e) {
    return e == pS && n ? n.parent : n;
  },
  reuse(n, e, t, i) {
    let r = e.type.id;
    return r == Ph || r == FR ? new A0(TO(i, 1) || "", n) : n;
  },
  strict: !1
}), o3 = new Pn((n, e) => {
  if (n.next != bS) {
    n.next < 0 && e.context && n.acceptToken(ku);
    return;
  }
  n.advance();
  let t = n.next == yd;
  t && n.advance();
  let i = TO(n, 0);
  if (i === void 0) return;
  if (!i) return n.acceptToken(t ? DR : Ph);
  let r = e.context ? e.context.name : null;
  if (t) {
    if (i == r) return n.acceptToken(LR);
    if (r && e3[r]) return n.acceptToken(ku, -2);
    if (e.dialectEnabled(HR)) return n.acceptToken(UR);
    for (let l = e.context; l; l = l.parent) if (l.name == i) return;
    n.acceptToken(YR);
  } else {
    if (i == "script") return n.acceptToken(fS);
    if (i == "style") return n.acceptToken(uS);
    if (i == "textarea") return n.acceptToken(OS);
    if (JR.hasOwnProperty(i)) return n.acceptToken(dS);
    r && T0[r] && T0[r][i] ? n.acceptToken(ku, -1) : n.acceptToken(Ph);
  }
}, { contextual: !0 }), a3 = new Pn((n) => {
  for (let e = 0, t = 0; ; t++) {
    if (n.next < 0) {
      t && n.acceptToken(Z0);
      break;
    }
    if (n.next == r3)
      e++;
    else if (n.next == wh && e >= 2) {
      t >= 3 && n.acceptToken(Z0, -2);
      break;
    } else
      e = 0;
    n.advance();
  }
});
function c3(n) {
  for (; n; n = n.parent)
    if (n.name == "svg" || n.name == "math") return !0;
  return !1;
}
const h3 = new Pn((n, e) => {
  if (n.next == yd && n.peek(1) == wh) {
    let t = e.dialectEnabled(KR) || c3(e.context);
    n.acceptToken(t ? VR : W0, 2);
  } else n.next == wh && n.acceptToken(W0, 1);
});
function Qd(n, e, t) {
  let i = 2 + n.length;
  return new Pn((r) => {
    for (let l = 0, o = 0, c = 0; ; c++) {
      if (r.next < 0) {
        c && r.acceptToken(e);
        break;
      }
      if (l == 0 && r.next == bS || l == 1 && r.next == yd || l >= 2 && l < i && r.next == n.charCodeAt(l - 2))
        l++, o++;
      else if ((l == 2 || l == i) && vS(r.next))
        o++;
      else if (l == i && r.next == wh) {
        c > o ? r.acceptToken(e, -o) : r.acceptToken(t, -(o - 2));
        break;
      } else if ((r.next == 10 || r.next == 13) && c) {
        r.acceptToken(e, 1);
        break;
      } else
        l = o = 0;
      r.advance();
    }
  });
}
const f3 = Qd("script", RR, XR), u3 = Qd("style", AR, MR), O3 = Qd("textarea", ER, qR), d3 = Al({
  "Text RawText": v.content,
  "StartTag StartCloseTag SelfClosingEndTag EndTag": v.angleBracket,
  TagName: v.tagName,
  "MismatchedCloseTag/TagName": [v.tagName, v.invalid],
  AttributeName: v.attributeName,
  "AttributeValue UnquotedAttributeValue": v.attributeValue,
  Is: v.definitionOperator,
  "EntityReference CharacterReference": v.character,
  Comment: v.blockComment,
  ProcessingInst: v.processingInstruction,
  DoctypeDecl: v.documentMeta
}), p3 = us.deserialize({
  version: 14,
  states: ",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%ZQ&rO,59fO%fQ&rO,59iO%qQ&rO,59lO%|Q&rO,59nOOOa'#D^'#D^O&XOaO'#CxO&dOaO,59[OOOb'#D_'#D_O&lObO'#C{O&wObO,59[OOOd'#D`'#D`O'POdO'#DOO'[OdO,59[OOO`'#Da'#DaO'dO!rO,59[O'kQ#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'pO$fO,59oOOO`,59o,59oO'xQ#|O,59qO'}Q#|O,59rOOO`-E7W-E7WO(SQ&rO'#CsOOQW'#DZ'#DZO(bQ&rO1G.wOOOa1G.w1G.wOOO`1G/Y1G/YO(mQ&rO1G/QOOOb1G/Q1G/QO(xQ&rO1G/TOOOd1G/T1G/TO)TQ&rO1G/WOOO`1G/W1G/WO)`Q&rO1G/YOOOa-E7[-E7[O)kQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)pQ#tO'#C|OOOd-E7^-E7^O)uQ#tO'#DPOOO`-E7_-E7_O)zQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O*PQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOO`7+$t7+$tOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rO*[Q#|O,59eO*aQ#|O,59hO*fQ#|O,59kOOO`1G/X1G/XO*kO7[O'#CvO*|OMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O+_O7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+pOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z",
  stateData: ",]~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OT}OhyO~OS!POT}OhyO~OS!ROT}OhyO~OS!TOT}OhyO~OS}OT}OhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXTgXhgX~OS!fOT!gOhyO~OS!hOT!gOhyO~OS!iOT!gOhyO~OS!jOT!gOhyO~OS!gOT!gOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~",
  goto: "%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{!O!Q!S!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ!ObQ!QcQ!SdQ!UeZ!e{!O!Q!S!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",
  nodeNames: "⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl",
  maxTerm: 67,
  context: l3,
  nodeProps: [
    ["closedBy", -10, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, "EndTag", 6, "EndTag SelfClosingEndTag", -4, 21, 30, 33, 36, "CloseTag"],
    ["openedBy", 4, "StartTag StartCloseTag", 5, "StartTag", -4, 29, 32, 35, 37, "OpenTag"],
    ["group", -9, 14, 17, 18, 19, 20, 39, 40, 41, 42, "Entity", 16, "Entity TextContent", -3, 28, 31, 34, "TextContent Entity"],
    ["isolate", -11, 21, 29, 30, 32, 33, 35, 36, 37, 38, 41, 42, "ltr", -3, 26, 27, 39, ""]
  ],
  propSources: [d3],
  skippedNodes: [0],
  repeatNodeCount: 9,
  tokenData: "!<p!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs3_sv-_vw3}wxHYx}-_}!OH{!O!P-_!P!Q$q!Q![-_![!]Mz!]!^-_!^!_!$S!_!`!;x!`!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4U-_4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/ebhSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0rXhSqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0mS1bP;=`<%l0m[1hP;=`<%l/^!V1vchS`P!a`!cpOq&Xqr1krs&}sv1kvw0mwx(tx!P1k!P!Q&X!Q!^1k!^!_*V!_!a&X!a#s1k#s$f&X$f;'S1k;'S;=`3R<%l?Ah1k?Ah?BY&X?BY?Mn1k?MnO&X!V3UP;=`<%l1k!_3[P;=`<%l-_!Z3hV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_4WihSkWc!ROX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst>]tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^/^!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!Z5zbkWOX5uXZ7SZ[5u[^7S^p5uqr5urs7Sst+Ptw5uwx7Sx!]5u!]!^7w!^!a7S!a#S5u#S#T7S#T;'S5u;'S;=`8n<%lO5u!R7VVOp7Sqs7St!]7S!]!^7l!^;'S7S;'S;=`7q<%lO7S!R7qOa!R!R7tP;=`<%l7S!Z8OYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z8qP;=`<%l5u!_8{ihSkWOX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst/^tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^:j!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!_:sbhSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V<QchSOp7Sqr;{rs7Sst0mtw;{wx7Sx!P;{!P!Q7S!Q!];{!]!^=]!^!a7S!a#s;{#s$f7S$f;'S;{;'S;=`>P<%l?Ah;{?Ah?BY7S?BY?Mn;{?MnO7S!V=dXhSa!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!V>SP;=`<%l;{!_>YP;=`<%l8t!_>dhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^/^!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!Z@TakWOX@OXZAYZ[@O[^AY^p@Oqr@OrsAYsw@OwxAYx!]@O!]!^Az!^!aAY!a#S@O#S#TAY#T;'S@O;'S;=`Bq<%lO@O!RA]UOpAYq!]AY!]!^Ao!^;'SAY;'S;=`At<%lOAY!RAtOb!R!RAwP;=`<%lAY!ZBRYkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZBtP;=`<%l@O!_COhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^Dj!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!_DsbhSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VFQbhSOpAYqrE{rsAYswE{wxAYx!PE{!P!QAY!Q!]E{!]!^GY!^!aAY!a#sE{#s$fAY$f;'SE{;'S;=`G|<%l?AhE{?Ah?BYAY?BY?MnE{?MnOAY!VGaXhSb!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!VHPP;=`<%lE{!_HVP;=`<%lBw!ZHcW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aIYlhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OKQ!O!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aK_khS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!`&X!`!aMS!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!TM_X`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!aNZ!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMz!O!PMz!P!Q$q!Q![Mz![!]Mz!]!^-_!^!_*V!_!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f$}-_$}%OMz%O%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4UMz4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Je-_$Je$JgMz$Jg$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!a!$PP;=`<%lMz!R!$ZY!a`!cpOq*Vqr!$yrs(Vsv*Vwx)ex!a*V!a!b!4t!b;'S*V;'S;=`*s<%lO*V!R!%Q]!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!%y!O!f*V!f!g!']!g#W*V#W#X!0`#X;'S*V;'S;=`*s<%lO*V!R!&QX!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!&m!O;'S*V;'S;=`*s<%lO*V!R!&vV!a`!cp!dPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!'dX!a`!cpOr*Vrs(Vsv*Vwx)ex!q*V!q!r!(P!r;'S*V;'S;=`*s<%lO*V!R!(WX!a`!cpOr*Vrs(Vsv*Vwx)ex!e*V!e!f!(s!f;'S*V;'S;=`*s<%lO*V!R!(zX!a`!cpOr*Vrs(Vsv*Vwx)ex!v*V!v!w!)g!w;'S*V;'S;=`*s<%lO*V!R!)nX!a`!cpOr*Vrs(Vsv*Vwx)ex!{*V!{!|!*Z!|;'S*V;'S;=`*s<%lO*V!R!*bX!a`!cpOr*Vrs(Vsv*Vwx)ex!r*V!r!s!*}!s;'S*V;'S;=`*s<%lO*V!R!+UX!a`!cpOr*Vrs(Vsv*Vwx)ex!g*V!g!h!+q!h;'S*V;'S;=`*s<%lO*V!R!+xY!a`!cpOr!+qrs!,hsv!+qvw!-Swx!.[x!`!+q!`!a!/j!a;'S!+q;'S;=`!0Y<%lO!+qq!,mV!cpOv!,hvx!-Sx!`!,h!`!a!-q!a;'S!,h;'S;=`!.U<%lO!,hP!-VTO!`!-S!`!a!-f!a;'S!-S;'S;=`!-k<%lO!-SP!-kO{PP!-nP;=`<%l!-Sq!-xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!.XP;=`<%l!,ha!.aX!a`Or!.[rs!-Ssv!.[vw!-Sw!`!.[!`!a!.|!a;'S!.[;'S;=`!/d<%lO!.[a!/TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!/gP;=`<%l!.[!R!/sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!0]P;=`<%l!+q!R!0gX!a`!cpOr*Vrs(Vsv*Vwx)ex#c*V#c#d!1S#d;'S*V;'S;=`*s<%lO*V!R!1ZX!a`!cpOr*Vrs(Vsv*Vwx)ex#V*V#V#W!1v#W;'S*V;'S;=`*s<%lO*V!R!1}X!a`!cpOr*Vrs(Vsv*Vwx)ex#h*V#h#i!2j#i;'S*V;'S;=`*s<%lO*V!R!2qX!a`!cpOr*Vrs(Vsv*Vwx)ex#m*V#m#n!3^#n;'S*V;'S;=`*s<%lO*V!R!3eX!a`!cpOr*Vrs(Vsv*Vwx)ex#d*V#d#e!4Q#e;'S*V;'S;=`*s<%lO*V!R!4XX!a`!cpOr*Vrs(Vsv*Vwx)ex#X*V#X#Y!+q#Y;'S*V;'S;=`*s<%lO*V!R!4{Y!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!a!4t!a!b!:]!b;'S!4t;'S;=`!;r<%lO!4tq!5pV!cpOv!5kvx!6Vx!a!5k!a!b!7W!b;'S!5k;'S;=`!8V<%lO!5kP!6YTO!a!6V!a!b!6i!b;'S!6V;'S;=`!7Q<%lO!6VP!6lTO!`!6V!`!a!6{!a;'S!6V;'S;=`!7Q<%lO!6VP!7QOxPP!7TP;=`<%l!6Vq!7]V!cpOv!5kvx!6Vx!`!5k!`!a!7r!a;'S!5k;'S;=`!8V<%lO!5kq!7yS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!8YP;=`<%l!5ka!8bX!a`Or!8]rs!6Vsv!8]vw!6Vw!a!8]!a!b!8}!b;'S!8];'S;=`!:V<%lO!8]a!9SX!a`Or!8]rs!6Vsv!8]vw!6Vw!`!8]!`!a!9o!a;'S!8];'S;=`!:V<%lO!8]a!9vT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!:YP;=`<%l!8]!R!:dY!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!`!4t!`!a!;S!a;'S!4t;'S;=`!;r<%lO!4t!R!;]V!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;uP;=`<%l!4t!V!<TXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X",
  tokenizers: [f3, u3, O3, h3, o3, a3, 0, 1, 2, 3, 4, 5],
  topRules: { Document: [0, 15] },
  dialects: { noMatch: 0, selfClosing: 509 },
  tokenPrec: 511
});
function SS(n, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let i of n.getChildren(gS)) {
    let r = i.getChild(jR), l = i.getChild(ZO) || i.getChild(mS);
    r && (t[e.read(r.from, r.to)] = l ? l.type.id == ZO ? e.read(l.from + 1, l.to - 1) : e.read(l.from, l.to) : "");
  }
  return t;
}
function M0(n, e) {
  let t = n.getChild(zR);
  return t ? e.read(t.from, t.to) : " ";
}
function _u(n, e, t) {
  let i;
  for (let r of t)
    if (!r.attrs || r.attrs(i || (i = SS(n.node.parent.firstChild, e))))
      return { parser: r.parser };
  return null;
}
function $S(n = [], e = []) {
  let t = [], i = [], r = [], l = [];
  for (let c of n)
    (c.tag == "script" ? t : c.tag == "style" ? i : c.tag == "textarea" ? r : l).push(c);
  let o = e.length ? /* @__PURE__ */ Object.create(null) : null;
  for (let c of e) (o[c.name] || (o[c.name] = [])).push(c);
  return yZ((c, f) => {
    let u = c.type.id;
    if (u == BR) return _u(c, f, t);
    if (u == IR) return _u(c, f, i);
    if (u == NR) return _u(c, f, r);
    if (u == pS && l.length) {
      let O = c.node, p = O.firstChild, g = p && M0(p, f), b;
      if (g) {
        for (let $ of l)
          if ($.tag == g && (!$.attrs || $.attrs(b || (b = SS(p, f))))) {
            let x = O.lastChild, P = x.type.id == GR ? x.from : O.to;
            if (P > p.to)
              return { parser: $.parser, overlay: [{ from: p.to, to: P }] };
          }
      }
    }
    if (o && u == gS) {
      let O = c.node, p;
      if (p = O.firstChild) {
        let g = o[f.read(p.from, p.to)];
        if (g) for (let b of g) {
          if (b.tagName && b.tagName != M0(O.parent, f)) continue;
          let $ = O.lastChild;
          if ($.type.id == ZO) {
            let x = $.from + 1, P = $.lastChild, k = $.to - (P && P.isError ? 0 : 1);
            if (k > x) return { parser: b.parser, overlay: [{ from: x, to: k }] };
          } else if ($.type.id == mS)
            return { parser: b.parser, overlay: [{ from: $.from, to: $.to }] };
        }
      }
    }
    return null;
  });
}
const g3 = 100, E0 = 1, m3 = 101, v3 = 102, q0 = 2, yS = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], b3 = 58, S3 = 40, QS = 95, $3 = 91, Gc = 45, y3 = 46, Q3 = 35, x3 = 37, P3 = 38, w3 = 92, k3 = 10;
function ea(n) {
  return n >= 65 && n <= 90 || n >= 97 && n <= 122 || n >= 161;
}
function xS(n) {
  return n >= 48 && n <= 57;
}
const _3 = new Pn((n, e) => {
  for (let t = !1, i = 0, r = 0; ; r++) {
    let { next: l } = n;
    if (ea(l) || l == Gc || l == QS || t && xS(l))
      !t && (l != Gc || r > 0) && (t = !0), i === r && l == Gc && i++, n.advance();
    else if (l == w3 && n.peek(1) != k3)
      n.advance(), n.next > -1 && n.advance(), t = !0;
    else {
      t && n.acceptToken(l == S3 ? m3 : i == 2 && e.canShift(q0) ? q0 : v3);
      break;
    }
  }
}), W3 = new Pn((n) => {
  if (yS.includes(n.peek(-1))) {
    let { next: e } = n;
    (ea(e) || e == QS || e == Q3 || e == y3 || e == $3 || e == b3 && ea(n.peek(1)) || e == Gc || e == P3) && n.acceptToken(g3);
  }
}), Z3 = new Pn((n) => {
  if (!yS.includes(n.peek(-1))) {
    let { next: e } = n;
    if (e == x3 && (n.advance(), n.acceptToken(E0)), ea(e)) {
      do
        n.advance();
      while (ea(n.next) || xS(n.next));
      n.acceptToken(E0);
    }
  }
}), T3 = Al({
  "AtKeyword import charset namespace keyframes media supports": v.definitionKeyword,
  "from to selector": v.keyword,
  NamespaceName: v.namespace,
  KeyframeName: v.labelName,
  KeyframeRangeName: v.operatorKeyword,
  TagName: v.tagName,
  ClassName: v.className,
  PseudoClassName: v.constant(v.className),
  IdName: v.labelName,
  "FeatureName PropertyName": v.propertyName,
  AttributeName: v.attributeName,
  NumberLiteral: v.number,
  KeywordQuery: v.keyword,
  UnaryQueryOp: v.operatorKeyword,
  "CallTag ValueName": v.atom,
  VariableName: v.variableName,
  Callee: v.operatorKeyword,
  Unit: v.unit,
  "UniversalSelector NestingSelector": v.definitionOperator,
  MatchOp: v.compareOperator,
  "ChildOp SiblingOp, LogicOp": v.logicOperator,
  BinOp: v.arithmeticOperator,
  Important: v.modifier,
  Comment: v.blockComment,
  ColorLiteral: v.color,
  "ParenthesizedContent StringLiteral": v.string,
  ":": v.punctuation,
  "PseudoOp #": v.derefOperator,
  "; ,": v.separator,
  "( )": v.paren,
  "[ ]": v.squareBracket,
  "{ }": v.brace
}), C3 = { __proto__: null, lang: 34, "nth-child": 34, "nth-last-child": 34, "nth-of-type": 34, "nth-last-of-type": 34, dir: 34, "host-context": 34, url: 62, "url-prefix": 62, domain: 62, regexp: 62, selector: 140 }, R3 = { __proto__: null, "@import": 120, "@media": 144, "@charset": 148, "@namespace": 152, "@keyframes": 158, "@supports": 170 }, X3 = { __proto__: null, not: 134, only: 134 }, A3 = us.deserialize({
  version: 14,
  states: ":jQYQ[OOO#_Q[OOP#fOWOOOOQP'#Cd'#CdOOQP'#Cc'#CcO#kQ[O'#CfO$_QXO'#CaO$fQ[O'#CiO$qQ[O'#DUO$vQ[O'#DXOOQP'#En'#EnO${QdO'#DhO%jQ[O'#DuO${QdO'#DwO%{Q[O'#DyO&WQ[O'#D|O&`Q[O'#ESO&nQ[O'#EUOOQS'#Em'#EmOOQS'#EX'#EXQYQ[OOO&uQXO'#CdO'jQWO'#DdO'oQWO'#EsO'zQ[O'#EsQOQWOOP(UO#tO'#C_POOO)C@])C@]OOQP'#Ch'#ChOOQP,59Q,59QO#kQ[O,59QO(aQ[O'#E]O({QWO,58{O)TQ[O,59TO$qQ[O,59pO$vQ[O,59sO(aQ[O,59vO(aQ[O,59xO(aQ[O,59yO)`Q[O'#DcOOQS,58{,58{OOQP'#Cl'#ClOOQO'#DS'#DSOOQP,59T,59TO)gQWO,59TO)lQWO,59TOOQP'#DW'#DWOOQP,59p,59pOOQO'#DY'#DYO)qQ`O,59sOOQS'#Cq'#CqO${QdO'#CrO)yQvO'#CtO+ZQtO,5:SOOQO'#Cy'#CyO)lQWO'#CxO+oQWO'#CzO+tQ[O'#DPOOQS'#Ep'#EpOOQO'#Dk'#DkO+|Q[O'#DrO,[QWO'#EtO&`Q[O'#DpO,jQWO'#DsOOQO'#Eu'#EuO)OQWO,5:aO,oQpO,5:cOOQS'#D{'#D{O,wQWO,5:eO,|Q[O,5:eOOQO'#EO'#EOO-UQWO,5:hO-ZQWO,5:nO-cQWO,5:pOOQS-E8V-E8VO-kQdO,5:OO-{Q[O'#E_O.YQWO,5;_O.YQWO,5;_POOO'#EW'#EWP.eO#tO,58yPOOO,58y,58yOOQP1G.l1G.lO/[QXO,5:wOOQO-E8Z-E8ZOOQS1G.g1G.gOOQP1G.o1G.oO)gQWO1G.oO)lQWO1G.oOOQP1G/[1G/[O/iQ`O1G/_O0SQXO1G/bO0jQXO1G/dO1QQXO1G/eO1hQWO,59}O1mQ[O'#DTO1tQdO'#CpOOQP1G/_1G/_O${QdO1G/_O1{QpO,59^OOQS,59`,59`O${QdO,59bO2TQWO1G/nOOQS,59d,59dO2YQ!bO,59fOOQS'#DQ'#DQOOQS'#EZ'#EZO2eQ[O,59kOOQS,59k,59kO2mQWO'#DkO2xQWO,5:WO2}QWO,5:^O&`Q[O,5:YO&`Q[O'#E`O3VQWO,5;`O3bQWO,5:[O(aQ[O,5:_OOQS1G/{1G/{OOQS1G/}1G/}OOQS1G0P1G0PO3sQWO1G0PO3xQdO'#EPOOQS1G0S1G0SOOQS1G0Y1G0YOOQS1G0[1G0[O4TQtO1G/jOOQO1G/j1G/jOOQO,5:y,5:yO4kQ[O,5:yOOQO-E8]-E8]O4xQWO1G0yPOOO-E8U-E8UPOOO1G.e1G.eOOQP7+$Z7+$ZOOQP7+$y7+$yO${QdO7+$yOOQS1G/i1G/iO5TQXO'#ErO5[QWO,59oO5aQtO'#EYO6XQdO'#EoO6cQWO,59[O6hQpO7+$yOOQS1G.x1G.xOOQS1G.|1G.|OOQS7+%Y7+%YOOQS1G/Q1G/QO6pQWO1G/QOOQS-E8X-E8XOOQS1G/V1G/VO${QdO1G/rOOQO1G/x1G/xOOQO1G/t1G/tO6uQWO,5:zOOQO-E8^-E8^O7TQXO1G/yOOQS7+%k7+%kO7[QYO'#CtOOQO'#ER'#ERO7gQ`O'#EQOOQO'#EQ'#EQO7rQWO'#EaO7zQdO,5:kOOQS,5:k,5:kO8VQtO'#E^O${QdO'#E^O9WQdO7+%UOOQO7+%U7+%UOOQO1G0e1G0eO9kQpO<<HeO9sQWO,5;^OOQP1G/Z1G/ZOOQS-E8W-E8WO${QdO'#E[O9{QWO,5;ZOOQT1G.v1G.vOOQP<<He<<HeOOQS7+$l7+$lO:TQdO7+%^OOQO7+%e7+%eOOQO,5:l,5:lO3{QdO'#EbO7rQWO,5:{OOQS,5:{,5:{OOQS-E8_-E8_OOQS1G0V1G0VO:[QtO,5:xOOQS-E8[-E8[OOQO<<Hp<<HpOOQPAN>PAN>PO;]QdO,5:vOOQO-E8Y-E8YOOQO<<Hx<<HxOOQO,5:|,5:|OOQO-E8`-E8`OOQS1G0g1G0g",
  stateData: ";o~O#[OS#]QQ~OUYOXYOZTO^VO_VOrXOyWO!]aO!^ZO!j[O!l]O!n^O!q_O!w`O#YRO~OQfOUYOXYOZTO^VO_VOrXOyWO!]aO!^ZO!j[O!l]O!n^O!q_O!w`O#YeO~O#V#gP~P!ZO#]jO~O#YlO~OZnO^qO_qOrsOuoOyrO!PtO!SvO#WuO~O!UwO~P#pOa}O#XzO#YyO~O#Y!OO~O#Y!QO~OQ![Oc!TOg![Oi![Oo!YOr!ZO#X!WO#Y!SO#e!UO~Oc!^O!e!`O!h!aO#Y!]O!U#hP~Oi!fOo!YO#Y!eO~Oi!hO#Y!hO~Oc!^O!e!`O!h!aO#Y!]O~O!Z#hP~P%jOZWX^WX^!XX_WXrWXuWXyWX!PWX!SWX!UWX#WWX~O^!mO~O!Z!nO#V#gX!T#gX~O#V#gX!T#gX~P!ZO#^!qO#_!qO#`!sO~OUYOXYOZTO^VO_VOrXOyWO#YRO~OuoO!UwO~Oa!zO#XzO#YyO~O!T#gP~P!ZOc#RO~Oc#SO~Oq#TO}#UO~OP#WOchXkhX!ZhX!ehX!hhX#YhXbhXQhXghXihXohXrhXuhX!YhX#VhX#XhX#ehXqhX!ThX~Oc!^Ok#XO!e!`O!h!aO#Y!]O!Z#hP~Oc#[O~Oq#`O#Y#]O~Oc!^O!e!`O!h!aO#Y#aO~Ou#eO!c#dO!U#hX!Z#hX~Oc#hO~Ok#XO!Z#jO~O!Z#kO~Oi#lOo!YO~O!U#mO~O!UwO!c#dO~O!UwO!Z#pO~O!Y#rO!Z!Wa#V!Wa!T!Wa~P${O!Z#RX#V#RX!T#RX~P!ZO!Z!nO#V#ga!T#ga~O#^!qO#_!qO#`#xO~OZnO^qO_qOrsOyrO!PtO!SvO#WuO~Ou#Pa!U#Pab#Pa~P.pOq#zO}#{O~OZnO^qO_qOrsOyrO~Ou!Oi!P!Oi!S!Oi!U!Oi#W!Oib!Oi~P/qOu!Qi!P!Qi!S!Qi!U!Qi#W!Qib!Qi~P/qOu!Ri!P!Ri!S!Ri!U!Ri#W!Rib!Ri~P/qO!T#|O~Ob#fP~P(aOb#cP~P${Ob$TOk#XO~O!Z$VO~Ob$WOi$XOp$XO~Oq$ZO#Y#]O~O^!aXb!_X!c!_X~O^$[O~Ob$]O!c#dO~Ou#eO!U#ha!Z#ha~O!c#dOu!da!U!da!Z!dab!da~O!Z$bO~O!T$iO#Y$dO#e$cO~Ok#XOu$kO!Y$mO!Z!Wi#V!Wi!T!Wi~P${O!Z#Ra#V#Ra!T#Ra~P!ZO!Z!nO#V#gi!T#gi~Ob#fX~P#pOb$qO~Ok#XOQ!|Xb!|Xc!|Xg!|Xi!|Xo!|Xr!|Xu!|X#X!|X#Y!|X#e!|X~Ou$sOb#cX~P${Ob$uO~Ok#XOq$vO~Ob$wO~O!c#dOu#Sa!U#Sa!Z#Sa~Ob$yO~P.pOP#WOuhX!UhX~O#e$cOu!tX!U!tX~Ou${O!UwO~O!T%PO#Y$dO#e$cO~Ok#XOQ#QXc#QXg#QXi#QXo#QXr#QXu#QX!Y#QX!Z#QX#V#QX#X#QX#Y#QX#e#QX!T#QX~Ou$kO!Y%SO!Z!Wq#V!Wq!T!Wq~P${Ok#XOq%TO~OuoOb#fa~Ou$sOb#ca~Ob%WO~P${Ok#XOQ#Qac#Qag#Qai#Qao#Qar#Qau#Qa!Y#Qa!Z#Qa#V#Qa#X#Qa#Y#Qa#e#Qa!T#Qa~Ob#Oau#Oa~P${O#[p#]#ek!S#e~",
  goto: "-g#jPPP#kP#nP#w$WP#wP$g#wPP$mPPP$s$|$|P%`P$|P$|%z&^PPPP$|&vP&z'Q#wP'W#w'^P#wP#w#wPPP'd'y(WPP#nPP(_(_(i(_P(_P(_(_P#nP#nP#nP(l#nP(o(r(u(|#nP#nP)R)X)h)v)|*S*^*d*n*t*zPPPPPPPPPP+Q+Z+v+yP,o,r,x-RRkQ_bOPdhw!n#tkYOPdhotuvw!n#R#h#tkSOPdhotuvw!n#R#h#tQmTR!tnQ{VR!xqQ!x}Q#Z!XR#y!zq![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UU$f#m$h${R$z$eq!XZ]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UQ!f^R#l!gT#^!Z#_Q|VR!yqQ!x|R#y!yQ!PWR!{rQ!RXR!|sQxUQ!wpQ#i!cQ#o!jQ#p!kQ$}$gR%Z$|SgPwQ!phQ#s!nR$n#tZfPhw!n#ta!b[`a!V!^!`#d#eR#b!^R!g^R!i_R#n!iS$g#m$hR%X${V$e#m$h${Q!rjR#w!rQdOShPwU!ldh#tR#t!nQ$Q#SU$r$Q$x%UQ$x$[R%U$sQ#_!ZR$Y#_Q$t$QR%V$tQpUS!vp$pR$p#}Q$l#qR%R$lQ!ogS#u!o#vR#v!pQ#f!_R$`#fQ$h#mR%O$hQ$|$gR%Y$|_cOPdhw!n#t^UOPdhw!n#tQ!uoQ!}tQ#OuQ#PvQ#}#RR$a#hR$R#SQ!VZQ!d]Q#V!TQ#q!m[$P#S$Q$[$s$x%UQ$S#UQ$U#XS$j#q$lQ$o#{R%Q$kR$O#RQiPR#QwQ!c[Q!kaR#Y!VU!_[a!VQ!j`Q#c!^Q#g!`Q$^#dR$_#e",
  nodeNames: "⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector . ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent ] [ LineNames LineName , PseudoClassName ArgList IdSelector # IdName AttributeSelector AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList KeyframeSelector KeyframeRangeName SupportsStatement supports AtRule Styles",
  maxTerm: 117,
  nodeProps: [
    ["isolate", -2, 3, 25, ""],
    ["openedBy", 18, "(", 33, "[", 51, "{"],
    ["closedBy", 19, ")", 34, "]", 52, "}"]
  ],
  propSources: [T3],
  skippedNodes: [0, 3, 88],
  repeatNodeCount: 11,
  tokenData: "J^~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Ab![!]B]!]!^CX!^!_$}!_!`Cj!`!aC{!a!b$}!b!cDw!c!}$}!}#OFa#O#P$}#P#QFr#Q#R6d#R#T$}#T#UGT#U#c$}#c#dHf#d#o$}#o#pH{#p#q6d#q#rI^#r#sIo#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`JW<%lO$}`%QSOy%^z;'S%^;'S;=`%o<%lO%^`%cSp`Oy%^z;'S%^;'S;=`%o<%lO%^`%rP;=`<%l%^~%zh#[~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#[~p`OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^l)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^l)sUp`Oy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^l*[Up`Oy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^l*sUp`Oy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^l+[Up`Oy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^l+sUp`Oy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^l,[Up`Oy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^l,sUp`Oy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^l-[Up`Oy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^l-uS!Y[p`Oy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOi~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.Rn/zYyQOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^l0oYp`Oy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^l1dYp`Oy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^l2ZYg[p`Oy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^l3QYg[p`Oy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^l3uYp`Oy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^l4lYg[p`Oy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^l5aYp`Oy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^l6WSg[p`Oy%^z;'S%^;'S;=`%o<%lO%^d6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^d7QS}Sp`Oy%^z;'S%^;'S;=`%o<%lO%^b7cSXQOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7on9cSc^Oy%^z;'S%^;'S;=`%o<%lO%^~9tOb~n9{UUQkWOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^n:fWkW!SQOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^l;TUp`Oy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^l;nYp`#e[Oy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^l<cYp`Oy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=WUp`Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=qUp`#e[Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l>[[p`#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^n?VSu^Oy%^z;'S%^;'S;=`%o<%lO%^l?hWkWOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^n@VUZQOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTkWOy%^z{@}{;'S%^;'S;=`%o<%lO%^~AUSp`#]~Oy%^z;'S%^;'S;=`%o<%lO%^lAg[#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^bBbU^QOy%^z![%^![!]Bt!];'S%^;'S;=`%o<%lO%^bB{S_Qp`Oy%^z;'S%^;'S;=`%o<%lO%^nC^S!Z^Oy%^z;'S%^;'S;=`%o<%lO%^dCoS}SOy%^z;'S%^;'S;=`%o<%lO%^bDQU!PQOy%^z!`%^!`!aDd!a;'S%^;'S;=`%o<%lO%^bDkS!PQp`Oy%^z;'S%^;'S;=`%o<%lO%^bDzWOy%^z!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^bEk[!]Qp`Oy%^z}%^}!OEd!O!Q%^!Q![Ed![!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^nFfSr^Oy%^z;'S%^;'S;=`%o<%lO%^nFwSq^Oy%^z;'S%^;'S;=`%o<%lO%^bGWUOy%^z#b%^#b#cGj#c;'S%^;'S;=`%o<%lO%^bGoUp`Oy%^z#W%^#W#XHR#X;'S%^;'S;=`%o<%lO%^bHYS!cQp`Oy%^z;'S%^;'S;=`%o<%lO%^bHiUOy%^z#f%^#f#gHR#g;'S%^;'S;=`%o<%lO%^fIQS!UUOy%^z;'S%^;'S;=`%o<%lO%^nIcS!T^Oy%^z;'S%^;'S;=`%o<%lO%^fItU!SQOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^`JZP;=`<%l$}",
  tokenizers: [W3, Z3, _3, 1, 2, 3, 4, new ch("m~RRYZ[z{a~~g~aO#_~~dP!P!Qg~lO#`~~", 28, 106)],
  topRules: { StyleSheet: [0, 4], Styles: [1, 87] },
  specialized: [{ term: 101, get: (n) => C3[n] || -1 }, { term: 59, get: (n) => R3[n] || -1 }, { term: 102, get: (n) => X3[n] || -1 }],
  tokenPrec: 1219
});
let Wu = null;
function Zu() {
  if (!Wu && typeof document == "object" && document.body) {
    let { style: n } = document.body, e = [], t = /* @__PURE__ */ new Set();
    for (let i in n)
      i != "cssText" && i != "cssFloat" && typeof n[i] == "string" && (/[A-Z]/.test(i) && (i = i.replace(/[A-Z]/g, (r) => "-" + r.toLowerCase())), t.has(i) || (e.push(i), t.add(i)));
    Wu = e.sort().map((i) => ({ type: "property", label: i, apply: i + ": " }));
  }
  return Wu || [];
}
const V0 = /* @__PURE__ */ [
  "active",
  "after",
  "any-link",
  "autofill",
  "backdrop",
  "before",
  "checked",
  "cue",
  "default",
  "defined",
  "disabled",
  "empty",
  "enabled",
  "file-selector-button",
  "first",
  "first-child",
  "first-letter",
  "first-line",
  "first-of-type",
  "focus",
  "focus-visible",
  "focus-within",
  "fullscreen",
  "has",
  "host",
  "host-context",
  "hover",
  "in-range",
  "indeterminate",
  "invalid",
  "is",
  "lang",
  "last-child",
  "last-of-type",
  "left",
  "link",
  "marker",
  "modal",
  "not",
  "nth-child",
  "nth-last-child",
  "nth-last-of-type",
  "nth-of-type",
  "only-child",
  "only-of-type",
  "optional",
  "out-of-range",
  "part",
  "placeholder",
  "placeholder-shown",
  "read-only",
  "read-write",
  "required",
  "right",
  "root",
  "scope",
  "selection",
  "slotted",
  "target",
  "target-text",
  "valid",
  "visited",
  "where"
].map((n) => ({ type: "class", label: n })), L0 = /* @__PURE__ */ [
  "above",
  "absolute",
  "activeborder",
  "additive",
  "activecaption",
  "after-white-space",
  "ahead",
  "alias",
  "all",
  "all-scroll",
  "alphabetic",
  "alternate",
  "always",
  "antialiased",
  "appworkspace",
  "asterisks",
  "attr",
  "auto",
  "auto-flow",
  "avoid",
  "avoid-column",
  "avoid-page",
  "avoid-region",
  "axis-pan",
  "background",
  "backwards",
  "baseline",
  "below",
  "bidi-override",
  "blink",
  "block",
  "block-axis",
  "bold",
  "bolder",
  "border",
  "border-box",
  "both",
  "bottom",
  "break",
  "break-all",
  "break-word",
  "bullets",
  "button",
  "button-bevel",
  "buttonface",
  "buttonhighlight",
  "buttonshadow",
  "buttontext",
  "calc",
  "capitalize",
  "caps-lock-indicator",
  "caption",
  "captiontext",
  "caret",
  "cell",
  "center",
  "checkbox",
  "circle",
  "cjk-decimal",
  "clear",
  "clip",
  "close-quote",
  "col-resize",
  "collapse",
  "color",
  "color-burn",
  "color-dodge",
  "column",
  "column-reverse",
  "compact",
  "condensed",
  "contain",
  "content",
  "contents",
  "content-box",
  "context-menu",
  "continuous",
  "copy",
  "counter",
  "counters",
  "cover",
  "crop",
  "cross",
  "crosshair",
  "currentcolor",
  "cursive",
  "cyclic",
  "darken",
  "dashed",
  "decimal",
  "decimal-leading-zero",
  "default",
  "default-button",
  "dense",
  "destination-atop",
  "destination-in",
  "destination-out",
  "destination-over",
  "difference",
  "disc",
  "discard",
  "disclosure-closed",
  "disclosure-open",
  "document",
  "dot-dash",
  "dot-dot-dash",
  "dotted",
  "double",
  "down",
  "e-resize",
  "ease",
  "ease-in",
  "ease-in-out",
  "ease-out",
  "element",
  "ellipse",
  "ellipsis",
  "embed",
  "end",
  "ethiopic-abegede-gez",
  "ethiopic-halehame-aa-er",
  "ethiopic-halehame-gez",
  "ew-resize",
  "exclusion",
  "expanded",
  "extends",
  "extra-condensed",
  "extra-expanded",
  "fantasy",
  "fast",
  "fill",
  "fill-box",
  "fixed",
  "flat",
  "flex",
  "flex-end",
  "flex-start",
  "footnotes",
  "forwards",
  "from",
  "geometricPrecision",
  "graytext",
  "grid",
  "groove",
  "hand",
  "hard-light",
  "help",
  "hidden",
  "hide",
  "higher",
  "highlight",
  "highlighttext",
  "horizontal",
  "hsl",
  "hsla",
  "hue",
  "icon",
  "ignore",
  "inactiveborder",
  "inactivecaption",
  "inactivecaptiontext",
  "infinite",
  "infobackground",
  "infotext",
  "inherit",
  "initial",
  "inline",
  "inline-axis",
  "inline-block",
  "inline-flex",
  "inline-grid",
  "inline-table",
  "inset",
  "inside",
  "intrinsic",
  "invert",
  "italic",
  "justify",
  "keep-all",
  "landscape",
  "large",
  "larger",
  "left",
  "level",
  "lighter",
  "lighten",
  "line-through",
  "linear",
  "linear-gradient",
  "lines",
  "list-item",
  "listbox",
  "listitem",
  "local",
  "logical",
  "loud",
  "lower",
  "lower-hexadecimal",
  "lower-latin",
  "lower-norwegian",
  "lowercase",
  "ltr",
  "luminosity",
  "manipulation",
  "match",
  "matrix",
  "matrix3d",
  "medium",
  "menu",
  "menutext",
  "message-box",
  "middle",
  "min-intrinsic",
  "mix",
  "monospace",
  "move",
  "multiple",
  "multiple_mask_images",
  "multiply",
  "n-resize",
  "narrower",
  "ne-resize",
  "nesw-resize",
  "no-close-quote",
  "no-drop",
  "no-open-quote",
  "no-repeat",
  "none",
  "normal",
  "not-allowed",
  "nowrap",
  "ns-resize",
  "numbers",
  "numeric",
  "nw-resize",
  "nwse-resize",
  "oblique",
  "opacity",
  "open-quote",
  "optimizeLegibility",
  "optimizeSpeed",
  "outset",
  "outside",
  "outside-shape",
  "overlay",
  "overline",
  "padding",
  "padding-box",
  "painted",
  "page",
  "paused",
  "perspective",
  "pinch-zoom",
  "plus-darker",
  "plus-lighter",
  "pointer",
  "polygon",
  "portrait",
  "pre",
  "pre-line",
  "pre-wrap",
  "preserve-3d",
  "progress",
  "push-button",
  "radial-gradient",
  "radio",
  "read-only",
  "read-write",
  "read-write-plaintext-only",
  "rectangle",
  "region",
  "relative",
  "repeat",
  "repeating-linear-gradient",
  "repeating-radial-gradient",
  "repeat-x",
  "repeat-y",
  "reset",
  "reverse",
  "rgb",
  "rgba",
  "ridge",
  "right",
  "rotate",
  "rotate3d",
  "rotateX",
  "rotateY",
  "rotateZ",
  "round",
  "row",
  "row-resize",
  "row-reverse",
  "rtl",
  "run-in",
  "running",
  "s-resize",
  "sans-serif",
  "saturation",
  "scale",
  "scale3d",
  "scaleX",
  "scaleY",
  "scaleZ",
  "screen",
  "scroll",
  "scrollbar",
  "scroll-position",
  "se-resize",
  "self-start",
  "self-end",
  "semi-condensed",
  "semi-expanded",
  "separate",
  "serif",
  "show",
  "single",
  "skew",
  "skewX",
  "skewY",
  "skip-white-space",
  "slide",
  "slider-horizontal",
  "slider-vertical",
  "sliderthumb-horizontal",
  "sliderthumb-vertical",
  "slow",
  "small",
  "small-caps",
  "small-caption",
  "smaller",
  "soft-light",
  "solid",
  "source-atop",
  "source-in",
  "source-out",
  "source-over",
  "space",
  "space-around",
  "space-between",
  "space-evenly",
  "spell-out",
  "square",
  "start",
  "static",
  "status-bar",
  "stretch",
  "stroke",
  "stroke-box",
  "sub",
  "subpixel-antialiased",
  "svg_masks",
  "super",
  "sw-resize",
  "symbolic",
  "symbols",
  "system-ui",
  "table",
  "table-caption",
  "table-cell",
  "table-column",
  "table-column-group",
  "table-footer-group",
  "table-header-group",
  "table-row",
  "table-row-group",
  "text",
  "text-bottom",
  "text-top",
  "textarea",
  "textfield",
  "thick",
  "thin",
  "threeddarkshadow",
  "threedface",
  "threedhighlight",
  "threedlightshadow",
  "threedshadow",
  "to",
  "top",
  "transform",
  "translate",
  "translate3d",
  "translateX",
  "translateY",
  "translateZ",
  "transparent",
  "ultra-condensed",
  "ultra-expanded",
  "underline",
  "unidirectional-pan",
  "unset",
  "up",
  "upper-latin",
  "uppercase",
  "url",
  "var",
  "vertical",
  "vertical-text",
  "view-box",
  "visible",
  "visibleFill",
  "visiblePainted",
  "visibleStroke",
  "visual",
  "w-resize",
  "wait",
  "wave",
  "wider",
  "window",
  "windowframe",
  "windowtext",
  "words",
  "wrap",
  "wrap-reverse",
  "x-large",
  "x-small",
  "xor",
  "xx-large",
  "xx-small"
].map((n) => ({ type: "keyword", label: n })).concat(/* @__PURE__ */ [
  "aliceblue",
  "antiquewhite",
  "aqua",
  "aquamarine",
  "azure",
  "beige",
  "bisque",
  "black",
  "blanchedalmond",
  "blue",
  "blueviolet",
  "brown",
  "burlywood",
  "cadetblue",
  "chartreuse",
  "chocolate",
  "coral",
  "cornflowerblue",
  "cornsilk",
  "crimson",
  "cyan",
  "darkblue",
  "darkcyan",
  "darkgoldenrod",
  "darkgray",
  "darkgreen",
  "darkkhaki",
  "darkmagenta",
  "darkolivegreen",
  "darkorange",
  "darkorchid",
  "darkred",
  "darksalmon",
  "darkseagreen",
  "darkslateblue",
  "darkslategray",
  "darkturquoise",
  "darkviolet",
  "deeppink",
  "deepskyblue",
  "dimgray",
  "dodgerblue",
  "firebrick",
  "floralwhite",
  "forestgreen",
  "fuchsia",
  "gainsboro",
  "ghostwhite",
  "gold",
  "goldenrod",
  "gray",
  "grey",
  "green",
  "greenyellow",
  "honeydew",
  "hotpink",
  "indianred",
  "indigo",
  "ivory",
  "khaki",
  "lavender",
  "lavenderblush",
  "lawngreen",
  "lemonchiffon",
  "lightblue",
  "lightcoral",
  "lightcyan",
  "lightgoldenrodyellow",
  "lightgray",
  "lightgreen",
  "lightpink",
  "lightsalmon",
  "lightseagreen",
  "lightskyblue",
  "lightslategray",
  "lightsteelblue",
  "lightyellow",
  "lime",
  "limegreen",
  "linen",
  "magenta",
  "maroon",
  "mediumaquamarine",
  "mediumblue",
  "mediumorchid",
  "mediumpurple",
  "mediumseagreen",
  "mediumslateblue",
  "mediumspringgreen",
  "mediumturquoise",
  "mediumvioletred",
  "midnightblue",
  "mintcream",
  "mistyrose",
  "moccasin",
  "navajowhite",
  "navy",
  "oldlace",
  "olive",
  "olivedrab",
  "orange",
  "orangered",
  "orchid",
  "palegoldenrod",
  "palegreen",
  "paleturquoise",
  "palevioletred",
  "papayawhip",
  "peachpuff",
  "peru",
  "pink",
  "plum",
  "powderblue",
  "purple",
  "rebeccapurple",
  "red",
  "rosybrown",
  "royalblue",
  "saddlebrown",
  "salmon",
  "sandybrown",
  "seagreen",
  "seashell",
  "sienna",
  "silver",
  "skyblue",
  "slateblue",
  "slategray",
  "snow",
  "springgreen",
  "steelblue",
  "tan",
  "teal",
  "thistle",
  "tomato",
  "turquoise",
  "violet",
  "wheat",
  "white",
  "whitesmoke",
  "yellow",
  "yellowgreen"
].map((n) => ({ type: "constant", label: n }))), M3 = /* @__PURE__ */ [
  "a",
  "abbr",
  "address",
  "article",
  "aside",
  "b",
  "bdi",
  "bdo",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "figcaption",
  "figure",
  "footer",
  "form",
  "header",
  "hgroup",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "label",
  "legend",
  "li",
  "main",
  "meter",
  "nav",
  "ol",
  "output",
  "p",
  "pre",
  "ruby",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "template",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "tr",
  "u",
  "ul"
].map((n) => ({ type: "type", label: n })), E3 = /* @__PURE__ */ [
  "@charset",
  "@color-profile",
  "@container",
  "@counter-style",
  "@font-face",
  "@font-feature-values",
  "@font-palette-values",
  "@import",
  "@keyframes",
  "@layer",
  "@media",
  "@namespace",
  "@page",
  "@position-try",
  "@property",
  "@scope",
  "@starting-style",
  "@supports",
  "@view-transition"
].map((n) => ({ type: "keyword", label: n })), Cr = /^(\w[\w-]*|-\w[\w-]*|)$/, q3 = /^-(-[\w-]*)?$/;
function V3(n, e) {
  var t;
  if ((n.name == "(" || n.type.isError) && (n = n.parent || n), n.name != "ArgList")
    return !1;
  let i = (t = n.parent) === null || t === void 0 ? void 0 : t.firstChild;
  return (i == null ? void 0 : i.name) != "Callee" ? !1 : e.sliceString(i.from, i.to) == "var";
}
const U0 = /* @__PURE__ */ new qv(), L3 = ["Declaration"];
function U3(n) {
  for (let e = n; ; ) {
    if (e.type.isTop)
      return e;
    if (!(e = e.parent))
      return n;
  }
}
function PS(n, e, t) {
  if (e.to - e.from > 4096) {
    let i = U0.get(e);
    if (i)
      return i;
    let r = [], l = /* @__PURE__ */ new Set(), o = e.cursor(Wt.IncludeAnonymous);
    if (o.firstChild())
      do
        for (let c of PS(n, o.node, t))
          l.has(c.label) || (l.add(c.label), r.push(c));
      while (o.nextSibling());
    return U0.set(e, r), r;
  } else {
    let i = [], r = /* @__PURE__ */ new Set();
    return e.cursor().iterate((l) => {
      var o;
      if (t(l) && l.matchContext(L3) && ((o = l.node.nextSibling) === null || o === void 0 ? void 0 : o.name) == ":") {
        let c = n.sliceString(l.from, l.to);
        r.has(c) || (r.add(c), i.push({ label: c, type: "variable" }));
      }
    }), i;
  }
}
const Y3 = (n) => (e) => {
  let { state: t, pos: i } = e, r = Lt(t).resolveInner(i, -1), l = r.type.isError && r.from == r.to - 1 && t.doc.sliceString(r.from, r.to) == "-";
  if (r.name == "PropertyName" || (l || r.name == "TagName") && /^(Block|Styles)$/.test(r.resolve(r.to).name))
    return { from: r.from, options: Zu(), validFor: Cr };
  if (r.name == "ValueName")
    return { from: r.from, options: L0, validFor: Cr };
  if (r.name == "PseudoClassName")
    return { from: r.from, options: V0, validFor: Cr };
  if (n(r) || (e.explicit || l) && V3(r, t.doc))
    return {
      from: n(r) || l ? r.from : i,
      options: PS(t.doc, U3(r), n),
      validFor: q3
    };
  if (r.name == "TagName") {
    for (let { parent: f } = r; f; f = f.parent)
      if (f.name == "Block")
        return { from: r.from, options: Zu(), validFor: Cr };
    return { from: r.from, options: M3, validFor: Cr };
  }
  if (r.name == "AtKeyword")
    return { from: r.from, options: E3, validFor: Cr };
  if (!e.explicit)
    return null;
  let o = r.resolve(i), c = o.childBefore(i);
  return c && c.name == ":" && o.name == "PseudoClassSelector" ? { from: i, options: V0, validFor: Cr } : c && c.name == ":" && o.name == "Declaration" || o.name == "ArgList" ? { from: i, options: L0, validFor: Cr } : o.name == "Block" || o.name == "Styles" ? { from: i, options: Zu(), validFor: Cr } : null;
}, D3 = /* @__PURE__ */ Y3((n) => n.name == "VariableName"), kh = /* @__PURE__ */ Os.define({
  name: "css",
  parser: /* @__PURE__ */ A3.configure({
    props: [
      /* @__PURE__ */ Ml.add({
        Declaration: /* @__PURE__ */ $l()
      }),
      /* @__PURE__ */ El.add({
        "Block KeyframeList": ir
      })
    ]
  }),
  languageData: {
    commentTokens: { block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*\}$/,
    wordChars: "-"
  }
});
function z3() {
  return new sa(kh, kh.data.of({ autocomplete: D3 }));
}
const j3 = 314, B3 = 315, Y0 = 1, I3 = 2, N3 = 3, F3 = 4, G3 = 316, H3 = 318, K3 = 319, J3 = 5, e4 = 6, t4 = 0, CO = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], wS = 125, i4 = 59, RO = 47, n4 = 42, r4 = 43, s4 = 45, l4 = 60, o4 = 44, a4 = 63, c4 = 46, h4 = 91, f4 = new Uv({
  start: !1,
  shift(n, e) {
    return e == J3 || e == e4 || e == H3 ? n : e == K3;
  },
  strict: !1
}), u4 = new Pn((n, e) => {
  let { next: t } = n;
  (t == wS || t == -1 || e.context) && n.acceptToken(G3);
}, { contextual: !0, fallback: !0 }), O4 = new Pn((n, e) => {
  let { next: t } = n, i;
  CO.indexOf(t) > -1 || t == RO && ((i = n.peek(1)) == RO || i == n4) || t != wS && t != i4 && t != -1 && !e.context && n.acceptToken(j3);
}, { contextual: !0 }), d4 = new Pn((n, e) => {
  n.next == h4 && !e.context && n.acceptToken(B3);
}, { contextual: !0 }), p4 = new Pn((n, e) => {
  let { next: t } = n;
  if (t == r4 || t == s4) {
    if (n.advance(), t == n.next) {
      n.advance();
      let i = !e.context && e.canShift(Y0);
      n.acceptToken(i ? Y0 : I3);
    }
  } else t == a4 && n.peek(1) == c4 && (n.advance(), n.advance(), (n.next < 48 || n.next > 57) && n.acceptToken(N3));
}, { contextual: !0 });
function Tu(n, e) {
  return n >= 65 && n <= 90 || n >= 97 && n <= 122 || n == 95 || n >= 192 || !e && n >= 48 && n <= 57;
}
const g4 = new Pn((n, e) => {
  if (n.next != l4 || !e.dialectEnabled(t4) || (n.advance(), n.next == RO)) return;
  let t = 0;
  for (; CO.indexOf(n.next) > -1; )
    n.advance(), t++;
  if (Tu(n.next, !0)) {
    for (n.advance(), t++; Tu(n.next, !1); )
      n.advance(), t++;
    for (; CO.indexOf(n.next) > -1; )
      n.advance(), t++;
    if (n.next == o4) return;
    for (let i = 0; ; i++) {
      if (i == 7) {
        if (!Tu(n.next, !0)) return;
        break;
      }
      if (n.next != "extends".charCodeAt(i)) break;
      n.advance(), t++;
    }
  }
  n.acceptToken(F3, -t);
}), m4 = Al({
  "get set async static": v.modifier,
  "for while do if else switch try catch finally return throw break continue default case": v.controlKeyword,
  "in of await yield void typeof delete instanceof": v.operatorKeyword,
  "let var const using function class extends": v.definitionKeyword,
  "import export from": v.moduleKeyword,
  "with debugger as new": v.keyword,
  TemplateString: v.special(v.string),
  super: v.atom,
  BooleanLiteral: v.bool,
  this: v.self,
  null: v.null,
  Star: v.modifier,
  VariableName: v.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": v.function(v.variableName),
  VariableDefinition: v.definition(v.variableName),
  Label: v.labelName,
  PropertyName: v.propertyName,
  PrivatePropertyName: v.special(v.propertyName),
  "CallExpression/MemberExpression/PropertyName": v.function(v.propertyName),
  "FunctionDeclaration/VariableDefinition": v.function(v.definition(v.variableName)),
  "ClassDeclaration/VariableDefinition": v.definition(v.className),
  "NewExpression/VariableName": v.className,
  PropertyDefinition: v.definition(v.propertyName),
  PrivatePropertyDefinition: v.definition(v.special(v.propertyName)),
  UpdateOp: v.updateOperator,
  "LineComment Hashbang": v.lineComment,
  BlockComment: v.blockComment,
  Number: v.number,
  String: v.string,
  Escape: v.escape,
  ArithOp: v.arithmeticOperator,
  LogicOp: v.logicOperator,
  BitOp: v.bitwiseOperator,
  CompareOp: v.compareOperator,
  RegExp: v.regexp,
  Equals: v.definitionOperator,
  Arrow: v.function(v.punctuation),
  ": Spread": v.punctuation,
  "( )": v.paren,
  "[ ]": v.squareBracket,
  "{ }": v.brace,
  "InterpolationStart InterpolationEnd": v.special(v.brace),
  ".": v.derefOperator,
  ", ;": v.separator,
  "@": v.meta,
  TypeName: v.typeName,
  TypeDefinition: v.definition(v.typeName),
  "type enum interface implements namespace module declare": v.definitionKeyword,
  "abstract global Privacy readonly override": v.modifier,
  "is keyof unique infer asserts": v.operatorKeyword,
  JSXAttributeValue: v.attributeValue,
  JSXText: v.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": v.angleBracket,
  "JSXIdentifier JSXNameSpacedName": v.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": v.attributeName,
  "JSXBuiltin/JSXIdentifier": v.standard(v.tagName)
}), v4 = { __proto__: null, export: 20, as: 25, from: 33, default: 36, async: 41, function: 42, const: 52, extends: 56, this: 60, true: 68, false: 68, null: 80, void: 84, typeof: 88, super: 104, new: 138, delete: 150, yield: 159, await: 163, class: 168, public: 231, private: 231, protected: 231, readonly: 233, instanceof: 252, satisfies: 255, in: 256, import: 290, keyof: 347, unique: 351, infer: 357, asserts: 393, is: 395, abstract: 415, implements: 417, type: 419, let: 422, var: 424, using: 427, interface: 433, enum: 437, namespace: 443, module: 445, declare: 449, global: 453, for: 472, of: 481, while: 484, with: 488, do: 492, if: 496, else: 498, switch: 502, case: 508, try: 514, catch: 518, finally: 522, return: 526, throw: 530, break: 534, continue: 538, debugger: 542 }, b4 = { __proto__: null, async: 125, get: 127, set: 129, declare: 191, public: 193, private: 193, protected: 193, static: 195, abstract: 197, override: 199, readonly: 205, accessor: 207, new: 399 }, S4 = { __proto__: null, "<": 189 }, $4 = us.deserialize({
  version: 14,
  states: "$EOQ%TQlOOO%[QlOOO'_QpOOP(lO`OOO*zQ!0MxO'#CiO+RO#tO'#CjO+aO&jO'#CjO+oO#@ItO'#D_O.QQlO'#DeO.bQlO'#DpO%[QlO'#DxO0fQlO'#EQOOQ!0Lf'#EY'#EYO1PQ`O'#EVOOQO'#En'#EnOOQO'#Ij'#IjO1XQ`O'#GrO1dQ`O'#EmO1iQ`O'#EmO3hQ!0MxO'#JpO6[Q!0MxO'#JqO6uQ`O'#F[O6zQ,UO'#FsOOQ!0Lf'#Fe'#FeO7VO7dO'#FeO7eQMhO'#F{O9UQ`O'#FzOOQ!0Lf'#Jq'#JqOOQ!0Lb'#Jp'#JpO9ZQ`O'#GvOOQ['#K]'#K]O9fQ`O'#IWO9kQ!0LrO'#IXOOQ['#J^'#J^OOQ['#I]'#I]Q`QlOOQ`QlOOO9sQ!L^O'#DtO9zQlO'#D|O:RQlO'#EOO9aQ`O'#GrO:YQMhO'#CoO:hQ`O'#ElO:sQ`O'#EwO:xQMhO'#FdO;gQ`O'#GrOOQO'#K^'#K^O;lQ`O'#K^O;zQ`O'#GzO;zQ`O'#G{O;zQ`O'#G}O9aQ`O'#HQO<qQ`O'#HTO>YQ`O'#CeO>jQ`O'#HaO>rQ`O'#HgO>rQ`O'#HiO`QlO'#HkO>rQ`O'#HmO>rQ`O'#HpO>wQ`O'#HvO>|Q!0LsO'#H|O%[QlO'#IOO?XQ!0LsO'#IQO?dQ!0LsO'#ISO9kQ!0LrO'#IUO?oQ!0MxO'#CiO@qQpO'#DjQOQ`OOO%[QlO'#EOOAXQ`O'#ERO:YQMhO'#ElOAdQ`O'#ElOAoQ!bO'#FdOOQ['#Cg'#CgOOQ!0Lb'#Do'#DoOOQ!0Lb'#Jt'#JtO%[QlO'#JtOOQO'#Jw'#JwOOQO'#If'#IfOBoQpO'#EeOOQ!0Lb'#Ed'#EdOOQ!0Lb'#J{'#J{OCkQ!0MSO'#EeOCuQpO'#EUOOQO'#Jv'#JvODZQpO'#JwOEhQpO'#EUOCuQpO'#EePEuO&2DjO'#CbPOOO)CD{)CD{OOOO'#I^'#I^OFQO#tO,59UOOQ!0Lh,59U,59UOOOO'#I_'#I_OF`O&jO,59UOFnQ!L^O'#DaOOOO'#Ia'#IaOFuO#@ItO,59yOOQ!0Lf,59y,59yOGTQlO'#IbOGhQ`O'#JrOIgQ!fO'#JrO+}QlO'#JrOInQ`O,5:POJUQ`O'#EnOJcQ`O'#KROJnQ`O'#KQOJnQ`O'#KQOJvQ`O,5;[OJ{Q`O'#KPOOQ!0Ln,5:[,5:[OKSQlO,5:[OMQQ!0MxO,5:dOMqQ`O,5:lON[Q!0LrO'#KOONcQ`O'#J}O9ZQ`O'#J}ONwQ`O'#J}O! PQ`O,5;ZO! UQ`O'#J}O!#ZQ!fO'#JqOOQ!0Lh'#Ci'#CiO%[QlO'#EQO!#yQ!fO,5:qOOQS'#Jx'#JxOOQO-E<h-E<hO9aQ`O,5=^O!$aQ`O,5=^O!$fQlO,5;XO!&iQMhO'#EiO!(SQ`O,5;XO!(XQlO'#DwO!(cQpO,5;bO!(kQpO,5;bO%[QlO,5;bOOQ['#FS'#FSOOQ['#FU'#FUO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cO%[QlO,5;cOOQ['#FY'#FYO!(yQlO,5;sOOQ!0Lf,5;x,5;xOOQ!0Lf,5;y,5;yOOQ!0Lf,5;{,5;{O%[QlO'#InO!*|Q!0LrO,5<hO%[QlO,5;cO!&iQMhO,5;cO!+kQMhO,5;cO!-]QMhO'#E[O%[QlO,5;vOOQ!0Lf,5;z,5;zO!-dQ,UO'#FiO!.aQ,UO'#KVO!-{Q,UO'#KVO!.hQ,UO'#KVOOQO'#KV'#KVO!.|Q,UO,5<ROOOW,5<_,5<_O!/_QlO'#FuOOOW'#Im'#ImO7VO7dO,5<PO!/fQ,UO'#FwOOQ!0Lf,5<P,5<PO!0VQ$IUO'#CwOOQ!0Lh'#C{'#C{O!0jO#@ItO'#DPO!1WQMjO,5<dO!1_Q`O,5<gO!2zQ(CWO'#GWO!3XQ`O'#GXO!3^Q`O'#GXO!4|Q(CWO'#G]O!6RQpO'#GaOOQO'#Gm'#GmO!+rQMhO'#GlOOQO'#Go'#GoO!+rQMhO'#GnO!6tQ$IUO'#JjOOQ!0Lh'#Jj'#JjO!7OQ`O'#JiO!7^Q`O'#JhO!7fQ`O'#CuOOQ!0Lh'#Cy'#CyO!7qQ`O'#C{OOQ!0Lh'#DT'#DTOOQ!0Lh'#DV'#DVO1SQ`O'#DXO!+rQMhO'#GOO!+rQMhO'#GQO!7vQ`O'#GSO!7{Q`O'#GTO!3^Q`O'#GZO!+rQMhO'#G`O;zQ`O'#JiO!8QQ`O'#EoO!8oQ`O,5<fOOQ!0Lb'#Cr'#CrO!8wQ`O'#EpO!9qQpO'#EqOOQ!0Lb'#KP'#KPO!9xQ!0LrO'#K_O9kQ!0LrO,5=bO`QlO,5>rOOQ['#Jf'#JfOOQ[,5>s,5>sOOQ[-E<Z-E<ZO!;wQ!0MxO,5:`O!9lQpO,5:^O!>bQ!0MxO,5:hO%[QlO,5:hO!@xQ!0MxO,5:jOOQO,5@x,5@xO!AiQMhO,5=^O!AwQ!0LrO'#JgO9UQ`O'#JgO!BYQ!0LrO,59ZO!BeQpO,59ZO!BmQMhO,59ZO:YQMhO,59ZO!BxQ`O,5;XO!CQQ`O'#H`O!CfQ`O'#KbO%[QlO,5;|O!9lQpO,5<OO!CnQ`O,5=yO!CsQ`O,5=yO!CxQ`O,5=yO9kQ!0LrO,5=yO;zQ`O,5=iOOQO'#Cw'#CwO!DWQpO,5=fO!D`QMhO,5=gO!DkQ`O,5=iO!DpQ!bO,5=lO!DxQ`O'#K^O>wQ`O'#HVO9aQ`O'#HXO!D}Q`O'#HXO:YQMhO'#HZO!ESQ`O'#HZOOQ[,5=o,5=oO!EXQ`O'#H[O!EjQ`O'#CoO!EoQ`O,59PO!EyQ`O,59PO!HOQlO,59POOQ[,59P,59PO!H`Q!0LrO,59PO%[QlO,59PO!JkQlO'#HcOOQ['#Hd'#HdOOQ['#He'#HeO`QlO,5={O!KRQ`O,5={O`QlO,5>RO`QlO,5>TO!KWQ`O,5>VO`QlO,5>XO!K]Q`O,5>[O!KbQlO,5>bOOQ[,5>h,5>hO%[QlO,5>hO9kQ!0LrO,5>jOOQ[,5>l,5>lO# lQ`O,5>lOOQ[,5>n,5>nO# lQ`O,5>nOOQ[,5>p,5>pO#!YQpO'#D]O%[QlO'#JtO#!{QpO'#JtO##VQpO'#DkO##hQpO'#DkO#%yQlO'#DkO#&QQ`O'#JsO#&YQ`O,5:UO#&_Q`O'#ErO#&mQ`O'#KSO#&uQ`O,5;]O#&zQpO'#DkO#'XQpO'#ETOOQ!0Lf,5:m,5:mO%[QlO,5:mO#'`Q`O,5:mO>wQ`O,5;WO!BeQpO,5;WO!BmQMhO,5;WO:YQMhO,5;WO#'hQ`O,5@`O#'mQ07dO,5:qOOQO-E<d-E<dO#(sQ!0MSO,5;POCuQpO,5:pO#(}QpO,5:pOCuQpO,5;PO!BYQ!0LrO,5:pOOQ!0Lb'#Eh'#EhOOQO,5;P,5;PO%[QlO,5;PO#)[Q!0LrO,5;PO#)gQ!0LrO,5;PO!BeQpO,5:pOOQO,5;V,5;VO#)uQ!0LrO,5;PPOOO'#I['#I[P#*ZO&2DjO,58|POOO,58|,58|OOOO-E<[-E<[OOQ!0Lh1G.p1G.pOOOO-E<]-E<]OOOO,59{,59{O#*fQ!bO,59{OOOO-E<_-E<_OOQ!0Lf1G/e1G/eO#*kQ!fO,5>|O+}QlO,5>|OOQO,5?S,5?SO#*uQlO'#IbOOQO-E<`-E<`O#+SQ`O,5@^O#+[Q!fO,5@^O#+cQ`O,5@lOOQ!0Lf1G/k1G/kO%[QlO,5@mO#+kQ`O'#IhOOQO-E<f-E<fO#+cQ`O,5@lOOQ!0Lb1G0v1G0vOOQ!0Ln1G/v1G/vOOQ!0Ln1G0W1G0WO%[QlO,5@jO#,PQ!0LrO,5@jO#,bQ!0LrO,5@jO#,iQ`O,5@iO9ZQ`O,5@iO#,qQ`O,5@iO#-PQ`O'#IkO#,iQ`O,5@iOOQ!0Lb1G0u1G0uO!(cQpO,5:sO!(nQpO,5:sOOQS,5:u,5:uO#-qQdO,5:uO#-yQMhO1G2xO9aQ`O1G2xOOQ!0Lf1G0s1G0sO#.XQ!0MxO1G0sO#/^Q!0MvO,5;TOOQ!0Lh'#GV'#GVO#/zQ!0MzO'#JjO!$fQlO1G0sO#2VQ!fO'#JuO%[QlO'#JuO#2aQ`O,5:cOOQ!0Lh'#D]'#D]OOQ!0Lf1G0|1G0|O%[QlO1G0|OOQ!0Lf1G1e1G1eO#2fQ`O1G0|O#4zQ!0MxO1G0}O#5RQ!0MxO1G0}O#7iQ!0MxO1G0}O#7pQ!0MxO1G0}O#:WQ!0MxO1G0}O#<nQ!0MxO1G0}O#<uQ!0MxO1G0}O#<|Q!0MxO1G0}O#?dQ!0MxO1G0}O#?kQ!0MxO1G0}O#AxQ?MtO'#CiO#CsQ?MtO1G1_O#CzQ?MtO'#JqO#D_Q!0MxO,5?YOOQ!0Lb-E<l-E<lO#FlQ!0MxO1G0}O#GiQ!0MzO1G0}OOQ!0Lf1G0}1G0}O#HlQMjO'#JzO#HvQ`O,5:vO#H{Q!0MxO1G1bO#IoQ,UO,5<VO#IwQ,UO,5<WO#JPQ,UO'#FnO#JhQ`O'#FmOOQO'#KW'#KWOOQO'#Il'#IlO#JmQ,UO1G1mOOQ!0Lf1G1m1G1mOOOW1G1x1G1xO#KOQ?MtO'#JpO#KYQ`O,5<aO!(yQlO,5<aOOOW-E<k-E<kOOQ!0Lf1G1k1G1kO#K_QpO'#KVOOQ!0Lf,5<c,5<cO#KgQpO,5<cO#KlQMhO'#DROOOO'#I`'#I`O#KsO#@ItO,59kOOQ!0Lh,59k,59kO%[QlO1G2OO!7{Q`O'#IpO#LOQ`O,5<yOOQ!0Lh,5<v,5<vO!+rQMhO'#IsO#LlQMjO,5=WO!+rQMhO'#IuO#M_QMjO,5=YO!&iQMhO,5=[OOQO1G2R1G2RO#MiQ!dO'#CrO#M|Q(CWO'#EpO$ RQpO'#GaO$ iQ!dO,5<rO$ pQ`O'#KYO9ZQ`O'#KYO$!OQ`O,5<tO!+rQMhO,5<sO$!TQ`O'#GYO$!fQ`O,5<sO$!kQ!dO'#GVO$!xQ!dO'#KZO$#SQ`O'#KZO!&iQMhO'#KZO$#XQ`O,5<wO$#^QlO'#JtO$#hQpO'#GbO##hQpO'#GbO$#yQ`O'#GfO!3^Q`O'#GjO$$OQ!0LrO'#IrO$$ZQpO,5<{OOQ!0Lp,5<{,5<{O$$bQpO'#GbO$$oQpO'#GcO$%QQpO'#GcO$%VQMjO,5=WO$%gQMjO,5=YOOQ!0Lh,5=],5=]O!+rQMhO,5@TO!+rQMhO,5@TO$%wQ`O'#IwO$&VQ`O,5@SO$&_Q`O,59aOOQ!0Lh,59g,59gO$'UQ$IYO,59sOOQ!0Lh'#Jn'#JnO$'wQMjO,5<jO$(jQMjO,5<lO@iQ`O,5<nOOQ!0Lh,5<o,5<oO$(tQ`O,5<uO$(yQMjO,5<zO$)ZQ`O,5@TO$)iQ`O'#J}O!$fQlO1G2QO$)nQ`O1G2QO9ZQ`O'#KQO9ZQ`O'#ErO%[QlO'#ErO9ZQ`O'#IyO$)sQ!0LrO,5@yOOQ[1G2|1G2|OOQ[1G4^1G4^OOQ!0Lf1G/z1G/zOOQ!0Lf1G/x1G/xO$+uQ!0MxO1G0SOOQ[1G2x1G2xO!&iQMhO1G2xO%[QlO1G2xO#-|Q`O1G2xO$-yQMhO'#EiOOQ!0Lb,5@R,5@RO$.WQ!0LrO,5@ROOQ[1G.u1G.uO!BYQ!0LrO1G.uO!BeQpO1G.uO!BmQMhO1G.uO$.iQ`O1G0sO$.nQ`O'#CiO$.yQ`O'#KcO$/RQ`O,5=zO$/WQ`O'#KcO$/]Q`O'#KcO$/kQ`O'#JPO$/yQ`O,5@|O$0RQ!fO1G1hOOQ!0Lf1G1j1G1jO9aQ`O1G3eO@iQ`O1G3eO$0YQ`O1G3eO$0_Q`O1G3eOOQ[1G3e1G3eO!DkQ`O1G3TO!&iQMhO1G3QO$0dQ`O1G3QOOQ[1G3R1G3RO!&iQMhO1G3RO$0iQ`O1G3RO$0qQpO'#HPOOQ[1G3T1G3TO!5|QpO'#I{O!DpQ!bO1G3WOOQ[1G3W1G3WOOQ[,5=q,5=qO$0yQMhO,5=sO9aQ`O,5=sO$#yQ`O,5=uO9UQ`O,5=uO!BeQpO,5=uO!BmQMhO,5=uO:YQMhO,5=uO$1XQ`O'#KaO$1dQ`O,5=vOOQ[1G.k1G.kO$1iQ!0LrO1G.kO@iQ`O1G.kO$1tQ`O1G.kO9kQ!0LrO1G.kO$3|Q!fO,5AOO$4ZQ`O,5AOO9ZQ`O,5AOO$4fQlO,5=}O$4mQ`O,5=}OOQ[1G3g1G3gO`QlO1G3gOOQ[1G3m1G3mOOQ[1G3o1G3oO>rQ`O1G3qO$4rQlO1G3sO$8vQlO'#HrOOQ[1G3v1G3vO$9TQ`O'#HxO>wQ`O'#HzOOQ[1G3|1G3|O$9]QlO1G3|O9kQ!0LrO1G4SOOQ[1G4U1G4UOOQ!0Lb'#G^'#G^O9kQ!0LrO1G4WO9kQ!0LrO1G4YO$=dQ`O,5@`O!(yQlO,5;^O9ZQ`O,5;^O>wQ`O,5:VO!(yQlO,5:VO!BeQpO,5:VO$=iQ?MtO,5:VOOQO,5;^,5;^O$=sQpO'#IcO$>ZQ`O,5@_OOQ!0Lf1G/p1G/pO$>cQpO'#IiO$>mQ`O,5@nOOQ!0Lb1G0w1G0wO##hQpO,5:VOOQO'#Ie'#IeO$>uQpO,5:oOOQ!0Ln,5:o,5:oO#'cQ`O1G0XOOQ!0Lf1G0X1G0XO%[QlO1G0XOOQ!0Lf1G0r1G0rO>wQ`O1G0rO!BeQpO1G0rO!BmQMhO1G0rOOQ!0Lb1G5z1G5zO!BYQ!0LrO1G0[OOQO1G0k1G0kO%[QlO1G0kO$>|Q!0LrO1G0kO$?XQ!0LrO1G0kO!BeQpO1G0[OCuQpO1G0[O$?gQ!0LrO1G0kOOQO1G0[1G0[O$?{Q!0MxO1G0kPOOO-E<Y-E<YPOOO1G.h1G.hOOOO1G/g1G/gO$@VQ!bO,5<hO$@_Q!fO1G4hOOQO1G4n1G4nO%[QlO,5>|O$@iQ`O1G5xO$@qQ`O1G6WO$@yQ!fO1G6XO9ZQ`O,5?SO$ATQ!0MxO1G6UO%[QlO1G6UO$AeQ!0LrO1G6UO$AvQ`O1G6TO$AvQ`O1G6TO9ZQ`O1G6TO$BOQ`O,5?VO9ZQ`O,5?VOOQO,5?V,5?VO$BdQ`O,5?VO$)iQ`O,5?VOOQO-E<i-E<iOOQS1G0_1G0_OOQS1G0a1G0aO#-tQ`O1G0aOOQ[7+(d7+(dO!&iQMhO7+(dO%[QlO7+(dO$BrQ`O7+(dO$B}QMhO7+(dO$C]Q!0MzO,5=WO$EhQ!0MzO,5=YO$GsQ!0MzO,5=WO$JUQ!0MzO,5=YO$LgQ!0MzO,59sO$NlQ!0MzO,5<jO%!wQ!0MzO,5<lO%%SQ!0MzO,5<zOOQ!0Lf7+&_7+&_O%'eQ!0MxO7+&_O%(XQlO'#IdO%(fQ`O,5@aO%(nQ!fO,5@aOOQ!0Lf1G/}1G/}O%(xQ`O7+&hOOQ!0Lf7+&h7+&hO%(}Q?MtO,5:dO%[QlO7+&yO%)XQ?MtO,5:`O%)fQ?MtO,5:hO%)pQ?MtO,5:jO%)zQMhO'#IgO%*UQ`O,5@fOOQ!0Lh1G0b1G0bOOQO1G1q1G1qOOQO1G1r1G1rO%*^Q!jO,5<YO!(yQlO,5<XOOQO-E<j-E<jOOQ!0Lf7+'X7+'XOOOW7+'d7+'dOOOW1G1{1G1{O%*iQ`O1G1{OOQ!0Lf1G1}1G1}OOOO,59m,59mO%*nQ!dO,59mOOOO-E<^-E<^OOQ!0Lh1G/V1G/VO%*uQ!0MxO7+'jOOQ!0Lh,5?[,5?[O%+iQMhO1G2eP%+pQ`O'#IpPOQ!0Lh-E<n-E<nO%,^QMjO,5?_OOQ!0Lh-E<q-E<qO%-PQMjO,5?aOOQ!0Lh-E<s-E<sO%-ZQ!dO1G2vO%-bQ!dO'#CrO%-xQMhO'#KQO$#^QlO'#JtOOQ!0Lh1G2^1G2^O%.PQ`O'#IoO%.eQ`O,5@tO%.eQ`O,5@tO%.mQ`O,5@tO%.xQ`O,5@tOOQO1G2`1G2`O%/WQMjO1G2_O!+rQMhO1G2_O%/hQ(CWO'#IqO%/uQ`O,5@uO!&iQMhO,5@uO%/}Q!dO,5@uOOQ!0Lh1G2c1G2cO%2_Q!fO'#CiO%2iQ`O,5=OOOQ!0Lb,5<|,5<|O%2qQpO,5<|OOQ!0Lb,5<},5<}OCfQ`O,5<|O%2|QpO,5<|OOQ!0Lb,5=Q,5=QO$)iQ`O,5=UOOQO,5?^,5?^OOQO-E<p-E<pOOQ!0Lp1G2g1G2gO##hQpO,5<|O$#^QlO,5=OO%3[Q`O,5<}O%3gQpO,5<}O!+rQMhO'#IsO%4aQMjO1G2rO!+rQMhO'#IuO%5SQMjO1G2tO%5^QMjO1G5oO%5hQMjO1G5oOOQO,5?c,5?cOOQO-E<u-E<uOOQO1G.{1G.{O!9lQpO,59uO%[QlO,59uOOQ!0Lh,5<i,5<iO%5uQ`O1G2YO!+rQMhO1G2aO!+rQMhO1G5oO!+rQMhO1G5oO%5zQ!0MxO7+'lOOQ!0Lf7+'l7+'lO!$fQlO7+'lO%6nQ`O,5;^OOQ!0Lb,5?e,5?eOOQ!0Lb-E<w-E<wO%6sQ!dO'#K[O#'cQ`O7+(dO4UQ!fO7+(dO$BuQ`O7+(dO%6}Q!0MvO'#CiO%7nQ!0LrO,5=RO%8PQ!0MvO,5=RO%8dQ`O,5=ROOQ!0Lb1G5m1G5mOOQ[7+$a7+$aO!BYQ!0LrO7+$aO!BeQpO7+$aO!$fQlO7+&_O%8lQ`O'#JOO%9TQ`O,5@}OOQO1G3f1G3fO9aQ`O,5@}O%9TQ`O,5@}O%9]Q`O,5@}OOQO,5?k,5?kOOQO-E<}-E<}OOQ!0Lf7+'S7+'SO%9bQ`O7+)PO9kQ!0LrO7+)PO9aQ`O7+)PO@iQ`O7+)POOQ[7+(o7+(oO%9gQ!0MvO7+(lO!&iQMhO7+(lO!DfQ`O7+(mOOQ[7+(m7+(mO!&iQMhO7+(mO%9qQ`O'#K`O%9|Q`O,5=kOOQO,5?g,5?gOOQO-E<y-E<yOOQ[7+(r7+(rO%;`QpO'#HYOOQ[1G3_1G3_O!&iQMhO1G3_O%[QlO1G3_O%;gQ`O1G3_O%;rQMhO1G3_O9kQ!0LrO1G3aO$#yQ`O1G3aO9UQ`O1G3aO!BeQpO1G3aO!BmQMhO1G3aO%<QQ`O'#I}O%<fQ`O,5@{O%<nQpO,5@{OOQ!0Lb1G3b1G3bOOQ[7+$V7+$VO@iQ`O7+$VO9kQ!0LrO7+$VO%<yQ`O7+$VO%[QlO1G6jO%[QlO1G6kO%=OQ!0LrO1G6jO%=YQlO1G3iO%=aQ`O1G3iO%=fQlO1G3iOOQ[7+)R7+)RO9kQ!0LrO7+)]O`QlO7+)_OOQ['#Kf'#KfOOQ['#JQ'#JQO%=mQlO,5>^OOQ[,5>^,5>^O%[QlO'#HsO%=zQ`O'#HuOOQ[,5>d,5>dO9ZQ`O,5>dOOQ[,5>f,5>fOOQ[7+)h7+)hOOQ[7+)n7+)nOOQ[7+)r7+)rOOQ[7+)t7+)tO%>PQpO1G5zO%>kQ?MtO1G0xO%>uQ`O1G0xOOQO1G/q1G/qO%?QQ?MtO1G/qO>wQ`O1G/qO!(yQlO'#DkOOQO,5>},5>}OOQO-E<a-E<aOOQO,5?T,5?TOOQO-E<g-E<gO!BeQpO1G/qOOQO-E<c-E<cOOQ!0Ln1G0Z1G0ZOOQ!0Lf7+%s7+%sO#'cQ`O7+%sOOQ!0Lf7+&^7+&^O>wQ`O7+&^O!BeQpO7+&^OOQO7+%v7+%vO$?{Q!0MxO7+&VOOQO7+&V7+&VO%[QlO7+&VO%?[Q!0LrO7+&VO!BYQ!0LrO7+%vO!BeQpO7+%vO%?gQ!0LrO7+&VO%?uQ!0MxO7++pO%[QlO7++pO%@VQ`O7++oO%@VQ`O7++oOOQO1G4q1G4qO9ZQ`O1G4qO%@_Q`O1G4qOOQS7+%{7+%{O#'cQ`O<<LOO4UQ!fO<<LOO%@mQ`O<<LOOOQ[<<LO<<LOO!&iQMhO<<LOO%[QlO<<LOO%@uQ`O<<LOO%AQQ!0MzO,5?_O%C]Q!0MzO,5?aO%EhQ!0MzO1G2_O%GyQ!0MzO1G2rO%JUQ!0MzO1G2tO%LaQ!fO,5?OO%[QlO,5?OOOQO-E<b-E<bO%LkQ`O1G5{OOQ!0Lf<<JS<<JSO%LsQ?MtO1G0sO%NzQ?MtO1G0}O& RQ?MtO1G0}O&#SQ?MtO1G0}O&#ZQ?MtO1G0}O&%[Q?MtO1G0}O&']Q?MtO1G0}O&'dQ?MtO1G0}O&'kQ?MtO1G0}O&)lQ?MtO1G0}O&)sQ?MtO1G0}O&)zQ!0MxO<<JeO&+rQ?MtO1G0}O&,oQ?MvO1G0}O&-rQ?MvO'#JjO&/xQ?MtO1G1bO&0VQ?MtO1G0SO&0aQMjO,5?ROOQO-E<e-E<eO!(yQlO'#FpOOQO'#KX'#KXOOQO1G1t1G1tO&0kQ`O1G1sO&0pQ?MtO,5?YOOOW7+'g7+'gOOOO1G/X1G/XO&0zQ!dO1G4vOOQ!0Lh7+(P7+(PP!&iQMhO,5?[O!+rQMhO7+(bO&1RQ`O,5?ZO9ZQ`O,5?ZOOQO-E<m-E<mO&1aQ`O1G6`O&1aQ`O1G6`O&1iQ`O1G6`O&1tQMjO7+'yO&2UQ!dO,5?]O&2`Q`O,5?]O!&iQMhO,5?]OOQO-E<o-E<oO&2eQ!dO1G6aO&2oQ`O1G6aO&2wQ`O1G2jO!&iQMhO1G2jOOQ!0Lb1G2h1G2hOOQ!0Lb1G2i1G2iO%2qQpO1G2hO!BeQpO1G2hOCfQ`O1G2hOOQ!0Lb1G2p1G2pO&2|QpO1G2hO&3[Q`O1G2jO$)iQ`O1G2iOCfQ`O1G2iO$#^QlO1G2jO&3dQ`O1G2iO&4WQMjO,5?_OOQ!0Lh-E<r-E<rO&4yQMjO,5?aOOQ!0Lh-E<t-E<tO!+rQMhO7++ZOOQ!0Lh1G/a1G/aO&5TQ`O1G/aOOQ!0Lh7+'t7+'tO&5YQMjO7+'{O&5jQMjO7++ZO&5tQMjO7++ZO&6RQ!0MxO<<KWOOQ!0Lf<<KW<<KWO&6uQ`O1G0xO!&iQMhO'#IxO&6zQ`O,5@vO&8|Q!fO<<LOO!&iQMhO1G2mO&9TQ!0LrO1G2mOOQ[<<G{<<G{O!BYQ!0LrO<<G{O&9fQ!0MxO<<IyOOQ!0Lf<<Iy<<IyOOQO,5?j,5?jO&:YQ`O,5?jO&:_Q`O,5?jOOQO-E<|-E<|O&:mQ`O1G6iO&:mQ`O1G6iO9aQ`O1G6iO@iQ`O<<LkOOQ[<<Lk<<LkO&:uQ`O<<LkO9kQ!0LrO<<LkOOQ[<<LW<<LWO%9gQ!0MvO<<LWOOQ[<<LX<<LXO!DfQ`O<<LXO&:zQpO'#IzO&;VQ`O,5@zO!(yQlO,5@zOOQ[1G3V1G3VOOQO'#I|'#I|O9kQ!0LrO'#I|O&;_QpO,5=tOOQ[,5=t,5=tO&;fQpO'#EeO&;mQpO'#GdO&;rQ`O7+(yO&;wQ`O7+(yOOQ[7+(y7+(yO!&iQMhO7+(yO%[QlO7+(yO&<PQ`O7+(yOOQ[7+({7+({O9kQ!0LrO7+({O$#yQ`O7+({O9UQ`O7+({O!BeQpO7+({O&<[Q`O,5?iOOQO-E<{-E<{OOQO'#H]'#H]O&<gQ`O1G6gO9kQ!0LrO<<GqOOQ[<<Gq<<GqO@iQ`O<<GqO&<oQ`O7+,UO&<tQ`O7+,VO%[QlO7+,UO%[QlO7+,VOOQ[7+)T7+)TO&<yQ`O7+)TO&=OQlO7+)TO&=VQ`O7+)TOOQ[<<Lw<<LwOOQ[<<Ly<<LyOOQ[-E=O-E=OOOQ[1G3x1G3xO&=[Q`O,5>_OOQ[,5>a,5>aO&=aQ`O1G4OO9ZQ`O7+&dO!(yQlO7+&dOOQO7+%]7+%]O&=fQ?MtO1G6XO>wQ`O7+%]OOQ!0Lf<<I_<<I_OOQ!0Lf<<Ix<<IxO>wQ`O<<IxOOQO<<Iq<<IqO$?{Q!0MxO<<IqO%[QlO<<IqOOQO<<Ib<<IbO!BYQ!0LrO<<IbO&=pQ!0LrO<<IqO&={Q!0MxO<= [O&>]Q`O<= ZOOQO7+*]7+*]O9ZQ`O7+*]OOQ[ANAjANAjO&>eQ!fOANAjO!&iQMhOANAjO#'cQ`OANAjO4UQ!fOANAjO&>lQ`OANAjO%[QlOANAjO&>tQ!0MzO7+'yO&AVQ!0MzO,5?_O&CbQ!0MzO,5?aO&EmQ!0MzO7+'{O&HOQ!fO1G4jO&HYQ?MtO7+&_O&J^Q?MvO,5=WO&LeQ?MvO,5=YO&LuQ?MvO,5=WO&MVQ?MvO,5=YO&MgQ?MvO,59sO' mQ?MvO,5<jO'#pQ?MvO,5<lO'&UQ?MvO,5<zO''zQ?MtO7+'jO'(XQ?MtO7+'lO'(fQ`O,5<[OOQO7+'_7+'_OOQ!0Lh7+*b7+*bO'(kQMjO<<K|OOQO1G4u1G4uO'(rQ`O1G4uO'(}Q`O1G4uO')]Q`O7++zO')]Q`O7++zO!&iQMhO1G4wO')eQ!dO1G4wO')oQ`O7++{O')wQ`O7+(UO'*SQ!dO7+(UOOQ!0Lb7+(S7+(SOOQ!0Lb7+(T7+(TO!BeQpO7+(SOCfQ`O7+(SO'*^Q`O7+(UO!&iQMhO7+(UO$)iQ`O7+(TO'*cQ`O7+(UOCfQ`O7+(TO'*kQMjO<<NuOOQ!0Lh7+${7+${O!+rQMhO<<NuO'*uQ!dO,5?dOOQO-E<v-E<vO'+PQ!0MvO7+(XO!&iQMhO7+(XOOQ[AN=gAN=gO9aQ`O1G5UOOQO1G5U1G5UO'+aQ`O1G5UO'+fQ`O7+,TO'+fQ`O7+,TO9kQ!0LrOANBVO@iQ`OANBVOOQ[ANBVANBVOOQ[ANArANArOOQ[ANAsANAsO'+nQ`O,5?fOOQO-E<x-E<xO'+yQ?MtO1G6fOOQO,5?h,5?hOOQO-E<z-E<zOOQ[1G3`1G3`O',TQ`O,5=OOOQ[<<Le<<LeO!&iQMhO<<LeO&;rQ`O<<LeO',YQ`O<<LeO%[QlO<<LeOOQ[<<Lg<<LgO9kQ!0LrO<<LgO$#yQ`O<<LgO9UQ`O<<LgO',bQpO1G5TO',mQ`O7+,ROOQ[AN=]AN=]O9kQ!0LrOAN=]OOQ[<= p<= pOOQ[<= q<= qO',uQ`O<= pO',zQ`O<= qOOQ[<<Lo<<LoO'-PQ`O<<LoO'-UQlO<<LoOOQ[1G3y1G3yO>wQ`O7+)jO'-]Q`O<<JOO'-hQ?MtO<<JOOOQO<<Hw<<HwOOQ!0LfAN?dAN?dOOQOAN?]AN?]O$?{Q!0MxOAN?]OOQOAN>|AN>|O%[QlOAN?]OOQO<<Mw<<MwOOQ[G27UG27UO!&iQMhOG27UO#'cQ`OG27UO'-rQ!fOG27UO4UQ!fOG27UO'-yQ`OG27UO'.RQ?MtO<<JeO'.`Q?MvO1G2_O'0UQ?MvO,5?_O'2XQ?MvO,5?aO'4[Q?MvO1G2rO'6_Q?MvO1G2tO'8bQ?MtO<<KWO'8oQ?MtO<<IyOOQO1G1v1G1vO!+rQMhOANAhOOQO7+*a7+*aO'8|Q`O7+*aO'9XQ`O<= fO'9aQ!dO7+*cOOQ!0Lb<<Kp<<KpO$)iQ`O<<KpOCfQ`O<<KpO'9kQ`O<<KpO!&iQMhO<<KpOOQ!0Lb<<Kn<<KnO!BeQpO<<KnO'9vQ!dO<<KpOOQ!0Lb<<Ko<<KoO':QQ`O<<KpO!&iQMhO<<KpO$)iQ`O<<KoO':VQMjOANDaO':aQ!0MvO<<KsOOQO7+*p7+*pO9aQ`O7+*pO':qQ`O<= oOOQ[G27qG27qO9kQ!0LrOG27qO!(yQlO1G5QO':yQ`O7+,QO';RQ`O1G2jO&;rQ`OANBPOOQ[ANBPANBPO!&iQMhOANBPO';WQ`OANBPOOQ[ANBRANBRO9kQ!0LrOANBRO$#yQ`OANBROOQO'#H^'#H^OOQO7+*o7+*oOOQ[G22wG22wOOQ[ANE[ANE[OOQ[ANE]ANE]OOQ[ANBZANBZO';`Q`OANBZOOQ[<<MU<<MUO!(yQlOAN?jOOQOG24wG24wO$?{Q!0MxOG24wO#'cQ`OLD,pOOQ[LD,pLD,pO!&iQMhOLD,pO';eQ!fOLD,pO';lQ?MvO7+'yO'=bQ?MvO,5?_O'?eQ?MvO,5?aO'AhQ?MvO7+'{O'C^QMjOG27SOOQO<<M{<<M{OOQ!0LbANA[ANA[O$)iQ`OANA[OCfQ`OANA[O'CnQ!dOANA[OOQ!0LbANAYANAYO'CuQ`OANA[O!&iQMhOANA[O'DQQ!dOANA[OOQ!0LbANAZANAZOOQO<<N[<<N[OOQ[LD-]LD-]O'D[Q?MtO7+*lOOQO'#Ge'#GeOOQ[G27kG27kO&;rQ`OG27kO!&iQMhOG27kOOQ[G27mG27mO9kQ!0LrOG27mOOQ[G27uG27uO'DfQ?MtOG25UOOQOLD*cLD*cOOQ[!$(![!$(![O#'cQ`O!$(![O!&iQMhO!$(![O'DpQ!0MzOG27SOOQ!0LbG26vG26vO$)iQ`OG26vO'GRQ`OG26vOCfQ`OG26vO'G^Q!dOG26vO!&iQMhOG26vOOQ[LD-VLD-VO&;rQ`OLD-VOOQ[LD-XLD-XOOQ[!)9Ev!)9EvO#'cQ`O!)9EvOOQ!0LbLD,bLD,bO$)iQ`OLD,bOCfQ`OLD,bO'GeQ`OLD,bO'GpQ!dOLD,bOOQ[!$(!q!$(!qOOQ[!.K;b!.K;bO'GwQ?MvOG27SOOQ!0Lb!$( |!$( |O$)iQ`O!$( |OCfQ`O!$( |O'ImQ`O!$( |OOQ!0Lb!)9Eh!)9EhO$)iQ`O!)9EhOCfQ`O!)9EhOOQ!0Lb!.K;S!.K;SO$)iQ`O!.K;SOOQ!0Lb!4/0n!4/0nO!(yQlO'#DxO1PQ`O'#EVO'IxQ!fO'#JpO'JPQ!L^O'#DtO'JWQlO'#D|O'J_Q!fO'#CiO'LuQ!fO'#CiO!(yQlO'#EOO'MVQlO,5;XO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO,5;cO!(yQlO'#InO( YQ`O,5<hO!(yQlO,5;cO( bQMhO,5;cO(!{QMhO,5;cO!(yQlO,5;vO!&iQMhO'#GlO( bQMhO'#GlO!&iQMhO'#GnO( bQMhO'#GnO1SQ`O'#DXO1SQ`O'#DXO!&iQMhO'#GOO( bQMhO'#GOO!&iQMhO'#GQO( bQMhO'#GQO!&iQMhO'#G`O( bQMhO'#G`O!(yQlO,5:hO(#SQpO'#D]O(#^QpO'#JtO!(yQlO,5@mO'MVQlO1G0sO(#hQ?MtO'#CiO!(yQlO1G2OO!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO(#rQ!dO'#CrO!&iQMhO,5<sO( bQMhO,5<sO'MVQlO1G2QO!(yQlO7+&yO!&iQMhO1G2_O( bQMhO1G2_O!&iQMhO'#IsO( bQMhO'#IsO!&iQMhO'#IuO( bQMhO'#IuO!&iQMhO1G2aO( bQMhO1G2aO'MVQlO7+'lO'MVQlO7+&_O!&iQMhOANAhO( bQMhOANAhO($VQ`O'#EmO($[Q`O'#EmO($dQ`O'#F[O($iQ`O'#EwO($nQ`O'#KRO($yQ`O'#KPO(%UQ`O,5;XO(%ZQMjO,5<dO(%bQ`O'#GXO(%gQ`O'#GXO(%lQ`O,5<fO(%tQ`O,5;XO(%|Q?MtO1G1_O(&TQ`O,5<sO(&YQ`O,5<sO(&_Q`O,5<uO(&dQ`O,5<uO(&iQ`O1G2QO(&nQ`O1G0sO(&sQMjO<<K|O(&zQMjO<<K|O7eQMhO'#F{O9UQ`O'#FzOAdQ`O'#ElO!(yQlO,5;sO!3^Q`O'#GXO!3^Q`O'#GXO!3^Q`O'#GZO!3^Q`O'#GZO!+rQMhO7+(bO!+rQMhO7+(bO%-ZQ!dO1G2vO%-ZQ!dO1G2vO!&iQMhO,5=[O!&iQMhO,5=[",
  stateData: "((P~O'zOS'{OSTOS'|RQ~OPYOQYOSfOY!VOaqOdzOeyOj!POnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!swO!vxO!z]O$V|O$miO%g}O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO&U!WO&[!XO&^!YO&`!ZO&b![O&e!]O&k!^O&q!_O&s!`O&u!aO&w!bO&y!cO(RSO(TTO(WUO(_VO(m[O~OWtO~P`OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa!wOq!nO!Q!oO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!xO#U!pO#V!pO#Y!zO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O'|!{O~OP]XR]X[]Xa]Xp]X!O]X!Q]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X'x]X(_]X(p]X(w]X(x]X~O!e%QX~P(qO_!}O(T#PO(U!}O(V#PO~O_#QO(V#PO(W#PO(X#QO~Ov#SO!S#TO(`#TO(a#VO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R;{O(TTO(WUO(_VO(m[O~O!Y#ZO!Z#WO!W(fP!W(tP~P+}O![#cO~P`OPYOQYOSfOd!jOe!iOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(TTO(WUO(_VO(m[O~On#mO!Y#iO!z]O#g#lO#h#iO(R;|O!i(qP~P.iO!j#oO(R#nO~O!v#sO!z]O%g#tO~O#i#uO~O!e#vO#i#uO~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z$_O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa(dX'x(dX'u(dX!i(dX!W(dX!](dX%h(dX!e(dX~P1qO#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX!](eX%h(eX~Oa(eX'x(eX'u(eX!W(eX!i(eXt(eX!e(eX~P4UO#^$eO~O$[$hO$^$gO$e$mO~OSfO!]$nO$h$oO$j$qO~Oh%VOj%cOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R$sO(TTO(WUO(_$uO(w$}O(x%POg([P~O!j%dO~O!Q%gO!]%hO(R%fO~O!e%lO~Oa%mO'x%mO~O!O%qO~P%[O(S!lO~P%[O%m%uO~P%[Oh%VO!j%dO(R%fO(S!lO~Oe%|O!j%dO(R%fO~O#t$RO~O!O&RO!]&OO!j&QO%i&UO(R%fO(S!lO(TTO(WUO`)UP~O!v#sO~O%r&WO!Q)QX!])QX(R)QX~O(R&XO~Oj!PO!s&^O%i!QO%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO~Od&cOe&bO!v&`O%g&aO%z&_O~P<POd&fOeyOj!PO!]&eO!s&^O!vxO!z]O%g}O%k!OO%l!OO%m!OO%p!RO%r!SO%u!TO%v!TO%x!UO~Ob&iO#^&lO%i&gO(S!lO~P=UO!j&mO!s&qO~O!j#oO~O!]XO~Oa%mO'v&yO'x%mO~Oa%mO'v&|O'x%mO~Oa%mO'v'OO'x%mO~O'u]X!W]Xt]X!i]X&Y]X!]]X%h]X!e]X~P(qO!`']O!a'UO!b'UO(S!lO(TTO(WUO~Oq'SO!Q'RO!Y'VO(c'QO![(gP![(vP~P@]Ol'`O!]'^O(R%fO~Oe'eO!j%dO(R%fO~O!O&RO!j&QO~Oq!nO!Q!oO!z;wO#R!pO#S!pO#U!pO#V!pO(S!lO(TTO(WUO(c!mO(m!sO~O!`'kO!a'jO!b'jO#T!pO#Y'lO#Z'lO~PAwOa%mOh%VO!e#vO!j%dO'x%mO(p'nO~O!n'rO#^'pO~PCVOq!nO!Q!oO(TTO(WUO(c!mO(m!sO~O!]XOq(kX!Q(kX!`(kX!a(kX!b(kX!z(kX#R(kX#S(kX#T(kX#U(kX#V(kX#Y(kX#Z(kX(S(kX(T(kX(W(kX(c(kX(m(kX~O!a'jO!b'jO(S!lO~PCuO'}'vO(O'vO(P'xO~O_!}O(T'zO(U!}O(V'zO~O_#QO(V'zO(W'zO(X#QO~Ot'|O~P%[Ov#SO!S#TO(`#TO(a(PO~O!Y(RO!W'UX!W'[X!Z'UX!Z'[X~P+}O!Z(TO!W(fX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!Z(TO!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~O!W(fX~PGpO!W(YO~O!W(sX!Z(sX!e(sX!i(sX(p(sX~O#^(sX#i#bX![(sX~PIsO#^(ZO!W(uX!Z(uX~O!Z([O!W(tX~O!W(_O~O#^$eO~PIsO![(`O~P`OR#zO!O#yO!Q#{O!j#xO(_VOP!la[!lap!la!Z!la!n!la#P!la#l!la#m!la#n!la#o!la#p!la#q!la#r!la#s!la#t!la#u!la#w!la#y!la#z!la(p!la(w!la(x!la~Oa!la'x!la'u!la!W!la!i!lat!la!]!la%h!la!e!la~PKZO!i(aO~O!e#vO#^(bO(p'nO!Z(rXa(rX'x(rX~O!i(rX~PMvO!Q%gO!]%hO!z]O#g(gO#h(fO(R%fO~O!Z(hO!i(qX~O!i(jO~O!Q%gO!]%hO#h(fO(R%fO~OP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#t(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O!e#vO!i(eX~P! dOR(lO!O(kO!j#xO#Q$dO!z!ya!Q!ya~O!v!ya%g!ya!]!ya#g!ya#h!ya(R!ya~P!#eO!v(pO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]XO!guO!jZO!mYO!nYO!oYO!qvO!s!gO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~O#i(vO~O!Y(xO!i(iP~P%[O(c(zO(m[O~O!Q(|O!j#xO(c(zO(m[O~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z$_Oa$pa'x$pa'u$pa!i$pa!W$pa!]$pa%h$pa!e$pa~Oj)bO~P!&iOh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|%[O!Q${O!]$|O!g%aO!j$xO#h%bO$V%_O$s%]O$u%^O$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Og(nP~P!+rO!O)gO!e)fO!]$]X$Y$]X$[$]X$^$]X$e$]X~O!e)fO!](yX$Y(yX$[(yX$^(yX$e(yX~O!O)gO~P!-{O!O)gO!](yX$Y(yX$[(yX$^(yX$e(yX~O!])iO$Y)mO$[)hO$^)hO$e)nO~O!Y)qO~P!(yO$[$hO$^$gO$e)uO~Ol$yX!O$yX#Q$yX'w$yX(w$yX(x$yX~OgkXg$yXlkX!ZkX#^kX~P!/qOv)wO(`)xO(a)zO~Ol*TO!O)|O'w)}O(w$}O(x%PO~Og){O~P!0uOg*UO~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q*WO!]*XO!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~O!Y*[O(R*VO!i(|P~P!1dO#i*^O~O!j*_O~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(R*aO(TTO(WUO(_$uO(w$}O(x%PO~O!Y*dO!W(}P~P!3cOp*pOq!nO!Q*fO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO(c!mO~O![*mO~P!5WO#Q$dOl(^X!O(^X'w(^X(w(^X(x(^X!Z(^X#^(^X~Og(^X#}(^X~P!6YOl*uO#^*tOg(]X!Z(]X~O!Z*vOg([X~Oj%cO(R&XOg([P~Oq*yO~O!j+OO~O(R(tO~On+TO!Q%gO!Y#iO!]%hO!z]O#g#lO#h#iO(R%fO!i(qP~O!e#vO#i+UO~O!Q%gO!Y+WO!Z([O!]%hO(R%fO!W(tP~Oq'YO!Q+YO!Y+XO(TTO(WUO(c(zO~O![(vP~P!9]O!Z+ZOa)RX'x)RX~OP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO#y$WO#z$XO(_VO(p$YO(w#|O(x#}O~Oa!ha!Z!ha'x!ha'u!ha!W!ha!i!hat!ha!]!ha%h!ha!e!ha~P!:TOR#zO!O#yO!Q#{O!j#xO(_VOP!pa[!pap!pa!Z!pa!n!pa#P!pa#l!pa#m!pa#n!pa#o!pa#p!pa#q!pa#r!pa#s!pa#t!pa#u!pa#w!pa#y!pa#z!pa(p!pa(w!pa(x!pa~Oa!pa'x!pa'u!pa!W!pa!i!pat!pa!]!pa%h!pa!e!pa~P!<kOR#zO!O#yO!Q#{O!j#xO(_VOP!ra[!rap!ra!Z!ra!n!ra#P!ra#l!ra#m!ra#n!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#u!ra#w!ra#y!ra#z!ra(p!ra(w!ra(x!ra~Oa!ra'x!ra'u!ra!W!ra!i!rat!ra!]!ra%h!ra!e!ra~P!?ROh%VOl+dO!]'^O%h+cO~O!e+fOa(ZX!](ZX'x(ZX!Z(ZX~Oa%mO!]XO'x%mO~Oh%VO!j%dO~Oh%VO!j%dO(R%fO~O!e#vO#i(vO~Ob+qO%i+rO(R+nO(TTO(WUO![)VP~O!Z+sO`)UX~O[+wO~O`+xO~O!]&OO(R%fO(S!lO`)UP~Oh%VO#^+}O~Oh%VOl,QO!]$|O~O!],SO~O!O,UO!]XO~O%m%uO~O!v,ZO~Oe,`O~Ob,aO(R#nO(TTO(WUO![)TP~Oe%|O~O%i!QO(R&XO~P=UO[,fO`,eO~OPYOQYOSfOdzOeyOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!guO!jZO!mYO!nYO!oYO!qvO!vxO!z]O$miO%g}O(TTO(WUO(_VO(m[O~O!]!eO!s!gO$V!kO(R!dO~P!FRO`,eOa%mO'x%mO~OPYOQYOSfOd!jOe!iOnkOpYOqkOrkOxkOzYO|YO!QWO!UkO!VkO!]!eO!guO!jZO!mYO!nYO!oYO!qvO!v!hO$V!kO$miO(R!dO(TTO(WUO(_VO(m[O~Oa,kOj!OO!swO%k!OO%l!OO%m!OO~P!HkO!j&mO~O&[,qO~O!],sO~O&m,uO&o,vOP&jaQ&jaS&jaY&jaa&jad&jae&jaj&jan&jap&jaq&jar&jax&jaz&ja|&ja!Q&ja!U&ja!V&ja!]&ja!g&ja!j&ja!m&ja!n&ja!o&ja!q&ja!s&ja!v&ja!z&ja$V&ja$m&ja%g&ja%i&ja%k&ja%l&ja%m&ja%p&ja%r&ja%u&ja%v&ja%x&ja&U&ja&[&ja&^&ja&`&ja&b&ja&e&ja&k&ja&q&ja&s&ja&u&ja&w&ja&y&ja'u&ja(R&ja(T&ja(W&ja(_&ja(m&ja![&ja&c&jab&ja&h&ja~O(R,{O~Oh!cX!Z!PX![!PX!e!PX!e!cX!j!cX#^!PX~O!Z!cX![!cX~P# qO!e-QO#^-POh(hX!Z#fX![#fX!e(hX!j(hX~O!Z(hX![(hX~P#!dOh%VO!e-SO!j%dO!Z!_X![!_X~Oq!nO!Q!oO(TTO(WUO(c!mO~OP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]!eO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(TTO(WUO(_VO(m[O~O(R<rO~P##yO!Z-WO![(gX~O![-YO~O!e-QO#^-PO!Z#fX![#fX~O!Z-ZO![(vX~O![-]O~O!a-^O!b-^O(S!lO~P##hO![-aO~P'_Ol-dO!]'^O~O!W-iO~Oq!ya!`!ya!a!ya!b!ya#R!ya#S!ya#T!ya#U!ya#V!ya#Y!ya#Z!ya(S!ya(T!ya(W!ya(c!ya(m!ya~P!#eO!n-nO#^-lO~PCVO!a-pO!b-pO(S!lO~PCuOa%mO#^-lO'x%mO~Oa%mO!e#vO#^-lO'x%mO~Oa%mO!e#vO!n-nO#^-lO'x%mO(p'nO~O'}'vO(O'vO(P-uO~Ot-vO~O!W'Ua!Z'Ua~P!:TO!Y-zO!W'UX!Z'UX~P%[O!Z(TO!W(fa~O!W(fa~PGpO!Z([O!W(ta~O!Q%gO!Y.OO!]%hO(R%fO!W'[X!Z'[X~O#^.QO!Z(ra!i(raa(ra'x(ra~O!e#vO~P#,PO!Z(hO!i(qa~O!Q%gO!]%hO#h.UO(R%fO~On.ZO!Q%gO!Y.WO!]%hO!z]O#g.YO#h.WO(R%fO!Z'_X!i'_X~OR._O!j#xO~Oh%VOl.bO!]'^O%h.aO~Oa#ai!Z#ai'x#ai'u#ai!W#ai!i#ait#ai!]#ai%h#ai!e#ai~P!:TOl=|O!O)|O'w)}O(w$}O(x%PO~O#i#]aa#]a#^#]a'x#]a!Z#]a!i#]a!]#]a!W#]a~P#.{O#i(^XP(^XR(^X[(^Xa(^Xp(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X'x(^X(_(^X(p(^X!i(^X!W(^X'u(^Xt(^X!](^X%h(^X!e(^X~P!6YO!Z.oO!i(iX~P!:TO!i.rO~O!W.tO~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kia#kip#ki!Z#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#l#ki~P#2kO#l$OO~P#2kOP$[OR#zOp$aO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO[#kia#ki!Z#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#p#ki~P#5YO#p$QO~P#5YOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO(_VOa#ki!Z#ki#w#ki#y#ki#z#ki'x#ki(p#ki(w#ki(x#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#u#ki~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO(_VO(x#}Oa#ki!Z#ki#y#ki#z#ki'x#ki(p#ki(w#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#w$UO~P#:_O#w#ki~P#:_O#u$SO~P#7wOP$[OR#zO[$cOp$aO!O#yO!Q#{O!j#xO!n$[O#P$RO#l$OO#m$PO#n$PO#o$PO#p$QO#q$RO#r$RO#s$bO#t$RO#u$SO#w$UO(_VO(w#|O(x#}Oa#ki!Z#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~O#y#ki~P#=TO#y$WO~P#=TOP]XR]X[]Xp]X!O]X!Q]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X!Z]X![]X~O#}]X~P#?rOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO#y<XO#z<YO(_VO(p$YO(w#|O(x#}O~O#}.vO~P#BPO#Q$dO#^<`O$P<`O#}(eX![(eX~P! dOa'ba!Z'ba'x'ba'u'ba!i'ba!W'bat'ba!]'ba%h'ba!e'ba~P!:TO[#kia#kip#ki!Z#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki'x#ki(p#ki'u#ki!W#ki!i#kit#ki!]#ki%h#ki!e#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l$OO#m$PO#n$PO#o$PO(_VO(w#ki(x#ki~P#EROl=|O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P#ERO!Z.zOg(nX~P!0uOg.|O~Oa$Oi!Z$Oi'x$Oi'u$Oi!W$Oi!i$Oit$Oi!]$Oi%h$Oi!e$Oi~P!:TO$[.}O$^.}O~O$[/OO$^/OO~O!e)fO#^/PO!]$bX$Y$bX$[$bX$^$bX$e$bX~O!Y/QO~O!])iO$Y/SO$[)hO$^)hO$e/TO~O!Z<ZO![(dX~P#BPO![/UO~O!e)fO$e(yX~O$e/WO~Ot/XO~P!&iOv)wO(`)xO(a/[O~O!Q/_O~O(w$}Ol%`a!O%`a'w%`a(x%`a!Z%`a#^%`a~Og%`a#}%`a~P#LTO(x%POl%ba!O%ba'w%ba(w%ba!Z%ba#^%ba~Og%ba#}%ba~P#LvO!ZfX!efX!ifX!i$yX(pfX~P!/qO!Y/hO!Z([O(R/gO!W(tP!W(}P~P!1dOp*pO!`*nO!a*hO!b*hO!j*_O#Y*oO%_*jO(S!lO(TTO(WUO~Oq<oO!Q/iO!Y+XO![*mO(c<nO![(vP~P#NaO!i/jO~P#.{O!Z/kO!e#vO(p'nO!i(|X~O!i/pO~O!Q%gO!Y*[O!]%hO(R%fO!i(|P~O#i/rO~O!W$yX!Z$yX!e%QX~P!/qO!Z/sO!W(}X~P#.{O!e/uO~O!W/wO~OnkO(R/xO~P.iOh%VOp/}O!e#vO!j%dO(p'nO~O!e+fO~Oa%mO!Z0RO'x%mO~O![0TO~P!5WO!a0UO!b0UO(S!lO~P##hOq!nO!Q0VO(TTO(WUO(c!mO~O#Y0XO~Og%`a!Z%`a#^%`a#}%`a~P!0uOg%ba!Z%ba#^%ba#}%ba~P!0uOj%cO(R&XOg'kX!Z'kX~O!Z*vOg([a~Og0bO~OR0cO!O0cO!Q0dO#Q$dOl{a'w{a(w{a(x{a!Z{a#^{a~Og{a#}{a~P$&dO!O)|O'w)}Ol$ra(w$ra(x$ra!Z$ra#^$ra~Og$ra#}$ra~P$'`O!O)|O'w)}Ol$ta(w$ta(x$ta!Z$ta#^$ta~Og$ta#}$ta~P$(RO#i0gO~Og%Sa!Z%Sa#^%Sa#}%Sa~P!0uOl0iO#^0hOg(]a!Z(]a~O!e#vO~O#i0lO~O!Z+ZOa)Ra'x)Ra~OR#zO!O#yO!Q#{O!j#xO(_VOP!pi[!pip!pi!Z!pi!n!pi#P!pi#l!pi#m!pi#n!pi#o!pi#p!pi#q!pi#r!pi#s!pi#t!pi#u!pi#w!pi#y!pi#z!pi(p!pi(w!pi(x!pi~Oa!pi'x!pi'u!pi!W!pi!i!pit!pi!]!pi%h!pi!e!pi~P$*OOh%VOp%XOq$tOr$tOx%YOz%ZO|<eO!Q${O!]$|O!g=vO!j$xO#h<kO$V%_O$s<gO$u<iO$x%`O(TTO(WUO(_$uO(w$}O(x%PO~On0vO%[0wO(R0tO~P$,fO!e+fOa(Za!](Za'x(Za!Z(Za~O#i0|O~O[]X!ZfX![fX~O!Z0}O![)VX~O![1PO~O[1QO~Ob1SO(R+nO(TTO(WUO~O!]&OO(R%fO`'sX!Z'sX~O!Z+sO`)Ua~O!i1VO~P!:TO[1YO~O`1ZO~O#^1^O~Ol1aO!]$|O~O(c(zO![)SP~Oh%VOl1jO!]1gO%h1iO~O[1tO!Z1rO![)TX~O![1uO~O`1wOa%mO'x%mO~O(R#nO(TTO(WUO~O#Q$dO#^$eO$P$eOP(eXR(eX[(eXp(eX!O(eX!Q(eX!Z(eX!j(eX!n(eX#P(eX#l(eX#m(eX#n(eX#o(eX#p(eX#q(eX#r(eX#s(eX#u(eX#w(eX#y(eX#z(eX(_(eX(p(eX(w(eX(x(eX~O#t1zO&Y1{Oa(eX~P$2PO#^$eO#t1zO&Y1{O~Oa1}O~P%[Oa2PO~O&c2SOP&aiQ&aiS&aiY&aia&aid&aie&aij&ain&aip&aiq&air&aix&aiz&ai|&ai!Q&ai!U&ai!V&ai!]&ai!g&ai!j&ai!m&ai!n&ai!o&ai!q&ai!s&ai!v&ai!z&ai$V&ai$m&ai%g&ai%i&ai%k&ai%l&ai%m&ai%p&ai%r&ai%u&ai%v&ai%x&ai&U&ai&[&ai&^&ai&`&ai&b&ai&e&ai&k&ai&q&ai&s&ai&u&ai&w&ai&y&ai'u&ai(R&ai(T&ai(W&ai(_&ai(m&ai![&aib&ai&h&ai~Ob2YO![2WO&h2XO~P`O!]XO!j2[O~O&o,vOP&jiQ&jiS&jiY&jia&jid&jie&jij&jin&jip&jiq&jir&jix&jiz&ji|&ji!Q&ji!U&ji!V&ji!]&ji!g&ji!j&ji!m&ji!n&ji!o&ji!q&ji!s&ji!v&ji!z&ji$V&ji$m&ji%g&ji%i&ji%k&ji%l&ji%m&ji%p&ji%r&ji%u&ji%v&ji%x&ji&U&ji&[&ji&^&ji&`&ji&b&ji&e&ji&k&ji&q&ji&s&ji&u&ji&w&ji&y&ji'u&ji(R&ji(T&ji(W&ji(_&ji(m&ji![&ji&c&jib&ji&h&ji~O!W2bO~O!Z!_a![!_a~P#BPOq!nO!Q!oO!Y2hO(c!mO!Z'VX!['VX~P@]O!Z-WO![(ga~O!Z']X![']X~P!9]O!Z-ZO![(va~O![2oO~P'_Oa%mO#^2xO'x%mO~Oa%mO!e#vO#^2xO'x%mO~Oa%mO!e#vO!n2|O#^2xO'x%mO(p'nO~Oa%mO'x%mO~P!:TO!Z$_Ot$pa~O!W'Ui!Z'Ui~P!:TO!Z(TO!W(fi~O!Z([O!W(ti~O!W(ui!Z(ui~P!:TO!Z(ri!i(ria(ri'x(ri~P!:TO#^3OO!Z(ri!i(ria(ri'x(ri~O!Z(hO!i(qi~O!Q%gO!]%hO!z]O#g3TO#h3SO(R%fO~O!Q%gO!]%hO#h3SO(R%fO~Ol3[O!]'^O%h3ZO~Oh%VOl3[O!]'^O%h3ZO~O#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`at%`a!]%`a%h%`a!e%`a~P#LTO#i%baP%baR%ba[%baa%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%bat%ba!]%ba%h%ba!e%ba~P#LvO#i%`aP%`aR%`a[%`aa%`ap%`a!Q%`a!Z%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a'x%`a(_%`a(p%`a!i%`a!W%`a'u%`a#^%`at%`a!]%`a%h%`a!e%`a~P#.{O#i%baP%baR%ba[%baa%bap%ba!Q%ba!Z%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba'x%ba(_%ba(p%ba!i%ba!W%ba'u%ba#^%bat%ba!]%ba%h%ba!e%ba~P#.{O#i{aP{a[{aa{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a'x{a(_{a(p{a!i{a!W{a'u{at{a!]{a%h{a!e{a~P$&dO#i$raP$raR$ra[$raa$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra'x$ra(_$ra(p$ra!i$ra!W$ra'u$rat$ra!]$ra%h$ra!e$ra~P$'`O#i$taP$taR$ta[$taa$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta'x$ta(_$ta(p$ta!i$ta!W$ta'u$tat$ta!]$ta%h$ta!e$ta~P$(RO#i%SaP%SaR%Sa[%Saa%Sap%Sa!Q%Sa!Z%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa'x%Sa(_%Sa(p%Sa!i%Sa!W%Sa'u%Sa#^%Sat%Sa!]%Sa%h%Sa!e%Sa~P#.{Oa#aq!Z#aq'x#aq'u#aq!W#aq!i#aqt#aq!]#aq%h#aq!e#aq~P!:TO!Y3dO!Z'WX!i'WX~P%[O!Z.oO!i(ia~O!Z.oO!i(ia~P!:TO!W3gO~O#}!la![!la~PKZO#}!ha!Z!ha![!ha~P#BPO#}!pa![!pa~P!<kO#}!ra![!ra~P!?ROg'ZX!Z'ZX~P!+rO!Z.zOg(na~OSfO!]3{O$c3|O~O![4QO~Ot4RO~P#.{Oa$lq!Z$lq'x$lq'u$lq!W$lq!i$lqt$lq!]$lq%h$lq!e$lq~P!:TO!W4TO~P!&iO!Q4UO~O!O)|O'w)}O(x%POl'ga(w'ga!Z'ga#^'ga~Og'ga#}'ga~P%+uO!O)|O'w)}Ol'ia(w'ia(x'ia!Z'ia#^'ia~Og'ia#}'ia~P%,hO(p$YO~P#.{O!WfX!W$yX!ZfX!Z$yX!e%QX#^fX~P!/qO(R<xO~P!1dO!Q%gO!Y4XO!]%hO(R%fO!Z'cX!i'cX~O!Z/kO!i(|a~O!Z/kO!e#vO!i(|a~O!Z/kO!e#vO(p'nO!i(|a~Og${i!Z${i#^${i#}${i~P!0uO!Y4aO!W'eX!Z'eX~P!3cO!Z/sO!W(}a~O!Z/sO!W(}a~P#.{OP]XR]X[]Xp]X!O]X!Q]X!W]X!Z]X!j]X!n]X#P]X#Q]X#^]X#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!e%XX#t%XX~P%0XO!e#vO#t4fO~Oh%VO!e#vO!j%dO~Oh%VOp4kO!j%dO(p'nO~Op4pO!e#vO(p'nO~Oq!nO!Q4qO(TTO(WUO(c!mO~O(w$}Ol%`i!O%`i'w%`i(x%`i!Z%`i#^%`i~Og%`i#}%`i~P%3xO(x%POl%bi!O%bi'w%bi(w%bi!Z%bi#^%bi~Og%bi#}%bi~P%4kOg(]i!Z(]i~P!0uO#^4wOg(]i!Z(]i~P!0uO!i4zO~Oa$nq!Z$nq'x$nq'u$nq!W$nq!i$nqt$nq!]$nq%h$nq!e$nq~P!:TO!W5QO~O!Z5RO!])OX~P#.{Oa]Xa$yX!]]X!]$yX%]]X'x]X'x$yX!Z]X!Z$yX~P!/qO%]5UOa%Za!]%Za'x%Za!Z%Za~OlmX!OmX'wmX(wmX(xmX~P%7nOn5VO(R#nO~Ob5]O%i5^O(R+nO(TTO(WUO!Z'rX!['rX~O!Z0}O![)Va~O[5bO~O`5cO~Oa%mO'x%mO~P#.{O!Z5kO#^5mO![)SX~O![5nO~Op5tOq!nO!Q*fO!`!yO!a!vO!b!vO!z;wO#R!pO#S!pO#T!pO#U!pO#V!pO#Y5sO#Z!zO(S!lO(TTO(WUO(c!mO(m!sO~O![5rO~P%:ROl5yO!]1gO%h5xO~Oh%VOl5yO!]1gO%h5xO~Ob6QO(R#nO(TTO(WUO!Z'qX!['qX~O!Z1rO![)Ta~O(TTO(WUO(c6SO~O`6WO~O#t6ZO&Y6[O~PMvO!i6]O~P%[Oa6_O~Oa6_O~P%[Ob2YO![6dO&h2XO~P`O!e6fO~O!e6hOh(hi!Z(hi![(hi!e(hi!j(hip(hi(p(hi~O!Z#fi![#fi~P#BPO#^6iO!Z#fi![#fi~O!Z!_i![!_i~P#BPOa%mO#^6rO'x%mO~Oa%mO!e#vO#^6rO'x%mO~O!Z(rq!i(rqa(rq'x(rq~P!:TO!Z(hO!i(qq~O!Q%gO!]%hO#h6yO(R%fO~O!]'^O%h6|O~Ol7QO!]'^O%h6|O~O#i'gaP'gaR'ga['gaa'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga'x'ga(_'ga(p'ga!i'ga!W'ga'u'gat'ga!]'ga%h'ga!e'ga~P%+uO#i'iaP'iaR'ia['iaa'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia'x'ia(_'ia(p'ia!i'ia!W'ia'u'iat'ia!]'ia%h'ia!e'ia~P%,hO#i${iP${iR${i[${ia${ip${i!Q${i!Z${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i'x${i(_${i(p${i!i${i!W${i'u${i#^${it${i!]${i%h${i!e${i~P#.{O#i%`iP%`iR%`i[%`ia%`ip%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i'x%`i(_%`i(p%`i!i%`i!W%`i'u%`it%`i!]%`i%h%`i!e%`i~P%3xO#i%biP%biR%bi[%bia%bip%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi'x%bi(_%bi(p%bi!i%bi!W%bi'u%bit%bi!]%bi%h%bi!e%bi~P%4kO!Z'Wa!i'Wa~P!:TO!Z.oO!i(ii~O#}#ai!Z#ai![#ai~P#BPOP$[OR#zO!O#yO!Q#{O!j#xO!n$[O(_VO[#kip#ki#P#ki#m#ki#n#ki#o#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#l#ki~P%MQO#l<PO~P%MQOP$[OR#zOp<]O!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO[#ki#P#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#p#ki~P& YO#p<RO~P& YOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO(_VO#w#ki#y#ki#z#ki#}#ki(p#ki(w#ki(x#ki!Z#ki![#ki~O#u#ki~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO(_VO(x#}O#y#ki#z#ki#}#ki(p#ki(w#ki!Z#ki![#ki~O#w<VO~P&%cO#w#ki~P&%cO#u<TO~P&#bOP$[OR#zO[<_Op<]O!O#yO!Q#{O!j#xO!n$[O#P<SO#l<PO#m<QO#n<QO#o<QO#p<RO#q<SO#r<SO#s<^O#t<SO#u<TO#w<VO(_VO(w#|O(x#}O#z#ki#}#ki(p#ki!Z#ki![#ki~O#y#ki~P&'rO#y<XO~P&'rOa#{y!Z#{y'x#{y'u#{y!W#{y!i#{yt#{y!]#{y%h#{y!e#{y~P!:TO[#kip#ki#P#ki#p#ki#q#ki#r#ki#s#ki#t#ki#u#ki#w#ki#y#ki#z#ki#}#ki(p#ki!Z#ki![#ki~OP$[OR#zO!O#yO!Q#{O!j#xO!n$[O#l<PO#m<QO#n<QO#o<QO(_VO(w#ki(x#ki~P&*nOl=}O!O)|O'w)}O(w$}O(x%POP#kiR#ki!Q#ki!j#ki!n#ki#l#ki#m#ki#n#ki#o#ki(_#ki~P&*nO#Q$dOP(^XR(^X[(^Xl(^Xp(^X!O(^X!Q(^X!j(^X!n(^X#P(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#s(^X#t(^X#u(^X#w(^X#y(^X#z(^X#}(^X'w(^X(_(^X(p(^X(w(^X(x(^X!Z(^X![(^X~O#}$Oi!Z$Oi![$Oi~P#BPO#}!pi![!pi~P$*OOg'Za!Z'Za~P!0uO![7dO~O!Z'ba!['ba~P#BPO!W7eO~P#.{O!e#vO(p'nO!Z'ca!i'ca~O!Z/kO!i(|i~O!Z/kO!e#vO!i(|i~Og${q!Z${q#^${q#}${q~P!0uO!W'ea!Z'ea~P#.{O!e7lO~O!Z/sO!W(}i~P#.{O!Z/sO!W(}i~O!W7oO~Oh%VOp7tO!j%dO(p'nO~O!e#vO#t7vO~Op7yO!e#vO(p'nO~O!O)|O'w)}O(x%POl'ha(w'ha!Z'ha#^'ha~Og'ha#}'ha~P&3oO!O)|O'w)}Ol'ja(w'ja(x'ja!Z'ja#^'ja~Og'ja#}'ja~P&4bO!W7{O~Og$}q!Z$}q#^$}q#}$}q~P!0uOg(]q!Z(]q~P!0uO#^7|Og(]q!Z(]q~P!0uOa$ny!Z$ny'x$ny'u$ny!W$ny!i$nyt$ny!]$ny%h$ny!e$ny~P!:TO!e6hO~O!Z5RO!])Oa~O!]'^OP$SaR$Sa[$Sap$Sa!O$Sa!Q$Sa!Z$Sa!j$Sa!n$Sa#P$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#t$Sa#u$Sa#w$Sa#y$Sa#z$Sa(_$Sa(p$Sa(w$Sa(x$Sa~O%h6|O~P&7SO%]8QOa%Zi!]%Zi'x%Zi!Z%Zi~Oa#ay!Z#ay'x#ay'u#ay!W#ay!i#ayt#ay!]#ay%h#ay!e#ay~P!:TO[8SO~Ob8UO(R+nO(TTO(WUO~O!Z0}O![)Vi~O`8YO~O(c(zO!Z'nX!['nX~O!Z5kO![)Sa~O![8cO~P%:RO(m!sO~P$$oO#Y8dO~O!]1gO~O!]1gO%h8fO~Ol8iO!]1gO%h8fO~O[8nO!Z'qa!['qa~O!Z1rO![)Ti~O!i8rO~O!i8sO~O!i8vO~O!i8vO~P%[Oa8xO~O!e8yO~O!i8zO~O!Z(ui![(ui~P#BPOa%mO#^9SO'x%mO~O!Z(ry!i(rya(ry'x(ry~P!:TO!Z(hO!i(qy~O%h9VO~P&7SO!]'^O%h9VO~O#i${qP${qR${q[${qa${qp${q!Q${q!Z${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q'x${q(_${q(p${q!i${q!W${q'u${q#^${qt${q!]${q%h${q!e${q~P#.{O#i'haP'haR'ha['haa'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha'x'ha(_'ha(p'ha!i'ha!W'ha'u'hat'ha!]'ha%h'ha!e'ha~P&3oO#i'jaP'jaR'ja['jaa'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja'x'ja(_'ja(p'ja!i'ja!W'ja'u'jat'ja!]'ja%h'ja!e'ja~P&4bO#i$}qP$}qR$}q[$}qa$}qp$}q!Q$}q!Z$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q'x$}q(_$}q(p$}q!i$}q!W$}q'u$}q#^$}qt$}q!]$}q%h$}q!e$}q~P#.{O!Z'Wi!i'Wi~P!:TO#}#aq!Z#aq![#aq~P#BPO(w$}OP%`aR%`a[%`ap%`a!Q%`a!j%`a!n%`a#P%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#t%`a#u%`a#w%`a#y%`a#z%`a#}%`a(_%`a(p%`a!Z%`a![%`a~Ol%`a!O%`a'w%`a(x%`a~P&HgO(x%POP%baR%ba[%bap%ba!Q%ba!j%ba!n%ba#P%ba#l%ba#m%ba#n%ba#o%ba#p%ba#q%ba#r%ba#s%ba#t%ba#u%ba#w%ba#y%ba#z%ba#}%ba(_%ba(p%ba!Z%ba![%ba~Ol%ba!O%ba'w%ba(w%ba~P&JnOl=}O!O)|O'w)}O(x%PO~P&HgOl=}O!O)|O'w)}O(w$}O~P&JnOR0cO!O0cO!Q0dO#Q$dOP{a[{al{ap{a!j{a!n{a#P{a#l{a#m{a#n{a#o{a#p{a#q{a#r{a#s{a#t{a#u{a#w{a#y{a#z{a#}{a'w{a(_{a(p{a(w{a(x{a!Z{a![{a~O!O)|O'w)}OP$raR$ra[$ral$rap$ra!Q$ra!j$ra!n$ra#P$ra#l$ra#m$ra#n$ra#o$ra#p$ra#q$ra#r$ra#s$ra#t$ra#u$ra#w$ra#y$ra#z$ra#}$ra(_$ra(p$ra(w$ra(x$ra!Z$ra![$ra~O!O)|O'w)}OP$taR$ta[$tal$tap$ta!Q$ta!j$ta!n$ta#P$ta#l$ta#m$ta#n$ta#o$ta#p$ta#q$ta#r$ta#s$ta#t$ta#u$ta#w$ta#y$ta#z$ta#}$ta(_$ta(p$ta(w$ta(x$ta!Z$ta![$ta~Ol=}O!O)|O'w)}O(w$}O(x%PO~OP%SaR%Sa[%Sap%Sa!Q%Sa!j%Sa!n%Sa#P%Sa#l%Sa#m%Sa#n%Sa#o%Sa#p%Sa#q%Sa#r%Sa#s%Sa#t%Sa#u%Sa#w%Sa#y%Sa#z%Sa#}%Sa(_%Sa(p%Sa!Z%Sa![%Sa~P'%sO#}$lq!Z$lq![$lq~P#BPO#}$nq!Z$nq![$nq~P#BPO![9dO~O#}9eO~P!0uO!e#vO!Z'ci!i'ci~O!e#vO(p'nO!Z'ci!i'ci~O!Z/kO!i(|q~O!W'ei!Z'ei~P#.{O!Z/sO!W(}q~Op9lO!e#vO(p'nO~O[9nO!W9mO~P#.{O!W9mO~O!e#vO#t9tO~Og(]y!Z(]y~P!0uO!Z'la!]'la~P#.{Oa%Zq!]%Zq'x%Zq!Z%Zq~P#.{O[9yO~O!Z0}O![)Vq~O#^9}O!Z'na!['na~O!Z5kO![)Si~P#BPO!Q:PO~O!]1gO%h:SO~O(TTO(WUO(c:XO~O!Z1rO![)Tq~O!i:[O~O!i:]O~O!i:^O~O!i:^O~P%[O#^:aO!Z#fy![#fy~O!Z#fy![#fy~P#BPO%h:fO~P&7SO!]'^O%h:fO~O#}#{y!Z#{y![#{y~P#BPOP${iR${i[${ip${i!Q${i!j${i!n${i#P${i#l${i#m${i#n${i#o${i#p${i#q${i#r${i#s${i#t${i#u${i#w${i#y${i#z${i#}${i(_${i(p${i!Z${i![${i~P'%sO!O)|O'w)}O(x%POP'gaR'ga['gal'gap'ga!Q'ga!j'ga!n'ga#P'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#t'ga#u'ga#w'ga#y'ga#z'ga#}'ga(_'ga(p'ga(w'ga!Z'ga!['ga~O!O)|O'w)}OP'iaR'ia['ial'iap'ia!Q'ia!j'ia!n'ia#P'ia#l'ia#m'ia#n'ia#o'ia#p'ia#q'ia#r'ia#s'ia#t'ia#u'ia#w'ia#y'ia#z'ia#}'ia(_'ia(p'ia(w'ia(x'ia!Z'ia!['ia~O(w$}OP%`iR%`i[%`il%`ip%`i!O%`i!Q%`i!j%`i!n%`i#P%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#t%`i#u%`i#w%`i#y%`i#z%`i#}%`i'w%`i(_%`i(p%`i(x%`i!Z%`i![%`i~O(x%POP%biR%bi[%bil%bip%bi!O%bi!Q%bi!j%bi!n%bi#P%bi#l%bi#m%bi#n%bi#o%bi#p%bi#q%bi#r%bi#s%bi#t%bi#u%bi#w%bi#y%bi#z%bi#}%bi'w%bi(_%bi(p%bi(w%bi!Z%bi![%bi~O#}$ny!Z$ny![$ny~P#BPO#}#ay!Z#ay![#ay~P#BPO!e#vO!Z'cq!i'cq~O!Z/kO!i(|y~O!W'eq!Z'eq~P#.{Op:pO!e#vO(p'nO~O[:tO!W:sO~P#.{O!W:sO~Og(]!R!Z(]!R~P!0uOa%Zy!]%Zy'x%Zy!Z%Zy~P#.{O!Z0}O![)Vy~O!Z5kO![)Sq~O(R:zO~O!]1gO%h:}O~O!i;QO~O%h;VO~P&7SOP${qR${q[${qp${q!Q${q!j${q!n${q#P${q#l${q#m${q#n${q#o${q#p${q#q${q#r${q#s${q#t${q#u${q#w${q#y${q#z${q#}${q(_${q(p${q!Z${q![${q~P'%sO!O)|O'w)}O(x%POP'haR'ha['hal'hap'ha!Q'ha!j'ha!n'ha#P'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#t'ha#u'ha#w'ha#y'ha#z'ha#}'ha(_'ha(p'ha(w'ha!Z'ha!['ha~O!O)|O'w)}OP'jaR'ja['jal'jap'ja!Q'ja!j'ja!n'ja#P'ja#l'ja#m'ja#n'ja#o'ja#p'ja#q'ja#r'ja#s'ja#t'ja#u'ja#w'ja#y'ja#z'ja#}'ja(_'ja(p'ja(w'ja(x'ja!Z'ja!['ja~OP$}qR$}q[$}qp$}q!Q$}q!j$}q!n$}q#P$}q#l$}q#m$}q#n$}q#o$}q#p$}q#q$}q#r$}q#s$}q#t$}q#u$}q#w$}q#y$}q#z$}q#}$}q(_$}q(p$}q!Z$}q![$}q~P'%sOg%d!Z!Z%d!Z#^%d!Z#}%d!Z~P!0uO!W;ZO~P#.{Op;[O!e#vO(p'nO~O[;^O!W;ZO~P#.{O!Z'nq!['nq~P#BPO!Z#f!Z![#f!Z~P#BPO#i%d!ZP%d!ZR%d!Z[%d!Za%d!Zp%d!Z!Q%d!Z!Z%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z'x%d!Z(_%d!Z(p%d!Z!i%d!Z!W%d!Z'u%d!Z#^%d!Zt%d!Z!]%d!Z%h%d!Z!e%d!Z~P#.{Op;fO!e#vO(p'nO~O!W;gO~P#.{Op;nO!e#vO(p'nO~O!W;oO~P#.{OP%d!ZR%d!Z[%d!Zp%d!Z!Q%d!Z!j%d!Z!n%d!Z#P%d!Z#l%d!Z#m%d!Z#n%d!Z#o%d!Z#p%d!Z#q%d!Z#r%d!Z#s%d!Z#t%d!Z#u%d!Z#w%d!Z#y%d!Z#z%d!Z#}%d!Z(_%d!Z(p%d!Z!Z%d!Z![%d!Z~P'%sOp;rO!e#vO(p'nO~Ot(dX~P1qO!O%qO~P!(yO(S!lO~P!(yO!WfX!ZfX#^fX~P%0XOP]XR]X[]Xp]X!O]X!Q]X!Z]X!ZfX!j]X!n]X#P]X#Q]X#^]X#^fX#ifX#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#t]X#u]X#w]X#y]X#z]X$P]X(_]X(p]X(w]X(x]X~O!efX!i]X!ifX(pfX~P'JlOP;vOQ;vOSfOd=rOe!iOnkOp;vOqkOrkOxkOz;vO|;vO!QWO!UkO!VkO!]XO!g;yO!jZO!m;vO!n;vO!o;vO!q;zO!s;}O!v!hO$V!kO$m=pO(R)ZO(TTO(WUO(_VO(m[O~O!Z<ZO![$pa~Oh%VOn%WOp%XOq$tOr$tOx%YOz%ZO|<fO!Q${O!]$|O!g=wO!j$xO#h<lO$V%_O$s<hO$u<jO$x%`O(R(tO(TTO(WUO(_$uO(w$}O(x%PO~Oj)bO~P( bOp!cX(p!cX~P# qOp(hX(p(hX~P#!dO![]X![fX~P'JlO!WfX!W$yX!ZfX!Z$yX#^fX~P!/qO#i<OO~O!e#vO#i<OO~O#^<`O~O#t<SO~O#^<pO!Z(uX![(uX~O#^<`O!Z(sX![(sX~O#i<qO~Og<sO~P!0uO#i<yO~O#i<zO~O!e#vO#i<{O~O!e#vO#i<qO~O#}<|O~P#BPO#i<}O~O#i=OO~O#i=TO~O#i=UO~O#i=VO~O#i=WO~O#}=XO~P!0uO#}=YO~P!0uO#Q#R#S#U#V#Y#g#h#s$m$s$u$x%[%]%g%h%i%p%r%u%v%x%z~'|T#m!V'z(S#nq#l#op!O'{$['{(R$^(c~",
  goto: "$8f)ZPPPPPP)[PP)_P)pP+Q/VPPPP6aPP6wPP<oP@cP@yP@yPPP@yPCRP@yP@yP@yPCVPC[PCyPHsPPPHwPPPPHwKzPPPLQLrPHwPHwPP! QHwPPPHwPHwP!#XHwP!&o!'t!'}P!(q!(u!(q!,SPPPPPPP!,s!'tPP!-T!.uP!2RHwHw!2W!5d!:Q!:Q!>PPPP!>XHwPPPPPPPPPP!AhP!BuPPHw!DWPHwPHwHwHwHwHwPHw!EjP!HtP!KzP!LO!LY!L^!L^P!HqP!Lb!LbP# hP# lHwPHw# r#$wCV@yP@yP@y@yP#&U@y@y#(h@y#+`@y#-l@y@y#.[#0p#0p#0u#1O#0p#1ZPP#0pP@y#1s@y#5r@y@y6aPPP#9wPPP#:b#:bP#:bP#:x#:bPP#;OP#:uP#:u#;c#:u#;}#<T#<W)_#<Z)_P#<b#<b#<bP)_P)_P)_P)_PP)_P#<h#<kP#<k)_P#<oP#<rP)_P)_P)_P)_P)_P)_)_PP#<x#=O#=Z#=a#=g#=m#=s#>R#>X#>c#>i#>s#>y#?Z#?a#@R#@e#@k#@q#AP#Af#CZ#Ci#Cp#E[#Ej#G[#Gj#Gp#Gv#G|#HW#H^#Hd#Hn#IQ#IWPPPPPPPPPPP#I^PPPPPPP#JR#MY#Nr#Ny$ RPPP$&mP$&v$)o$0Y$0]$0`$1_$1b$1i$1qP$1w$1zP$2h$2l$3d$4r$4w$5_PP$5d$5j$5n$5q$5u$5y$6u$7^$7u$7y$7|$8P$8V$8Y$8^$8bR!|RoqOXst!Z#d%l&p&r&s&u,n,s2S2VY!vQ'^-`1g5qQ%svQ%{yQ&S|Q&h!VS'U!e-WQ'd!iS'j!r!yU*h$|*X*lQ+l%|Q+y&UQ,_&bQ-^']Q-h'eQ-p'kQ0U*nQ1q,`R<m;z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9SS#q];w!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU*{%[<e<fQ+q&OQ,a&eQ,h&mQ0r+dQ0u+fQ1S+rQ1y,fQ3W.bQ5V0wQ5]0}Q6Q1rQ7O3[Q8U5^R9Y7Q'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s!S!nQ!r!v!y!z$|'U']'^'j'k'l*h*l*n*o-W-^-`-p0U0X1g5q5s%[$ti#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q&V|Q'S!eS'Y%h-ZQ+q&OQ,a&eQ0f+OQ1S+rQ1X+xQ1x,eQ1y,fQ5]0}Q5f1ZQ6Q1rQ6T1tQ6U1wQ8U5^Q8X5cQ8q6WQ9|8YQ:Y8nR<o*XrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR,c&i&z^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=r=s[#]WZ#W#Z'V(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ%vxQ%zyS&P|&UQ&]!TQ'a!hQ'c!iQ(o#sS+k%{%|Q+o&OQ,Y&`Q,^&bS-g'd'eQ.d(pQ0{+lQ1R+rQ1T+sQ1W+wQ1l,ZS1p,_,`Q2t-hQ5[0}Q5`1QQ5e1YQ6P1qQ8T5^Q8W5bQ9x8SR:w9y!U$zi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y!^%xy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pQ+e%vQ,O&YQ,R&ZQ,]&bQ.c(oQ1k,YU1o,^,_,`Q3].dQ5z1lS6O1p1qQ8m6P#f=t#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o=u<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YW%Ti%V*v=pS&Y!Q&gQ&Z!RQ&[!SQ+S%cR+|&W%]%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}T)x$u)yV*{%[<e<fW'Y!e%h*X-ZS({#y#zQ+`%qQ+v&RS.](k(lQ1b,SQ4x0cR8^5k'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s$i$^c#Y#e%p%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.w.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gT#TV#U'RkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ'W!eR2i-W!W!nQ!e!r!v!y!z$|'U']'^'j'k'l*X*h*l*n*o-W-^-`-p0U0X1g5q5sR1d,UnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&w!^Q't!xS(q#u<OQ+i%yQ,W&]Q,X&_Q-e'bQ-r'mS.m(v<qS0k+U<{Q0y+jQ1f,VQ2Z,uQ2],vQ2e-RQ2r-fQ2u-jS5P0l=VQ5W0zS5Z0|=WQ6j2gQ6n2sQ6s2zQ8R5XQ8}6lQ9O6oQ9R6tR:`8z$d$]c#Y#e%r%t(Q(W(r(w)P)Q)R)S)T)U)V)W)X)Y)[)^)`)e)o+a+u-U-s-x-}.P.n.q.u.x.y/]0j2c2f2v2}3c3h3i3j3k3l3m3n3o3p3q3r3s3t3w3x4P5O5Y6k6q6v7V7W7a7b8`8|9Q9[9b9c:c:y;R;x=gS(m#p'gQ(}#zS+_%p.wS.^(l(nR3U._'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS#q];wQ&r!XQ&s!YQ&u![Q&v!]R2R,qQ'_!hQ+b%vQ-c'aS.`(o+eQ2p-bW3Y.c.d0q0sQ6m2qW6z3V3X3]5TU9U6{6}7PU:e9W9X9ZS;T:d:gQ;b;UR;j;cU!wQ'^-`T5o1g5q!Q_OXZ`st!V!Z#d#h%d%l&g&i&p&r&s&u(h,n,s.V2S2V]!pQ!r'^-`1g5qT#q];w%^{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS({#y#zS.](k(l!s=^$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sU$fd)],hS(n#p'gU*s%R(u3vU0e*z.i7]Q5T0rQ6{3WQ9X7OR:g9Ym!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sQ'r!uS(d#g1|S-n'i'uQ/n*ZQ/{*gQ2|-qQ4]/oQ4i/}Q4j0OQ4o0WQ7h4WS7s4k4mS7w4p4rQ9g7iQ9k7oQ9p7tQ9u7yS:o9l9mS;Y:p:sS;e;Z;[S;m;f;gS;q;n;oR;t;rQ#wbQ'q!uS(c#g1|S(e#m+TQ+V%eQ+g%wQ+m%}U-m'i'r'uQ.R(dQ/m*ZQ/|*gQ0P*iQ0x+hQ1m,[S2y-n-qQ3R.ZS4[/n/oQ4e/yS4h/{0WQ4l0QQ5|1nQ6u2|Q7g4WQ7k4]U7r4i4o4rQ7u4nQ8k5}S9f7h7iQ9j7oQ9r7wQ9s7xQ:V8lQ:m9gS:n9k9mQ:v9uQ;P:WS;X:o:sS;d;Y;ZS;l;e;gS;p;m;oQ;s;qQ;u;tQ=a=[Q=l=eR=m=fV!wQ'^-`%^aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SS#wz!j!r=Z$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=a=r%^bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SQ%ej!^%wy!i!u%z%{%|'T'c'd'e'i's*g+k+l-T-g-h-o/{0O0{2m2t2{4i4j4m7s9pS%}z!jQ+h%xQ,[&bW1n,],^,_,`U5}1o1p1qS8l6O6PQ:W8m!r=[$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ=e=qR=f=r%QeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9SY#bWZ#W#Z(R!b%im#h#i#l$x%d%g([(f(g(h*W*[*_+W+X+Z,j-Q.O.U.V.W.Y/h/k2[3S3T4X6h6yQ,i&m!p=]$Z$n)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sR=`'VU'Z!e%h*XR2k-Z%SdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y,k,n,s-d-l-z.Q.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3d4q5y6Z6[6_6r8i8x9S!r)]$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sQ,h&mQ0r+dQ3W.bQ7O3[R9Y7Q!b$Tc#Y%p(Q(W(r(w)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!P<U)[)o-U.w2c2f3h3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!f$Vc#Y%p(Q(W(r(w)U)V)X)Y)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;x!T<W)[)o-U.w2c2f3h3n3o3q3r3w4P6k7W7a7b8`8|9[9b9c:y;R=g!^$Zc#Y%p(Q(W(r(w)^)e+u-s-x-}.P.n.q/]0j2v2}3c3s5O5Y6q6v7V9Q:c;xQ4V/fz=s)[)o-U.w2c2f3h3w4P6k7W7a7b8`8|9[9b9c:y;R=gQ=x=zR=y={'QkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sS$oh$pR3|/P'XgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$kf$qQ$ifS)h$l)lR)t$qT$jf$qT)j$l)l'XhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%l%s&Q&i&l&m&p&r&s&u&y'R'V'`'p(R(T(Z(b(v(x(|)q){*f+U+Y+d,k,n,s-P-S-d-l-z.Q.b.o.v/P/Q/i0V0d0l0|1j1z1{1}2P2S2V2X2h2x3O3[3d3{4q5m5y6Z6[6_6i6r7Q8i8x9S9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=sT$oh$pQ$rhR)s$p%^jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%l%s&Q&i&l&m&p&r&s&u&y'R'`'p(R(T(Z(b(v(x(|){*f+U+Y+d,k,n,s-d-l-z.Q.b.o.v/i0V0d0l0|1j1z1{1}2P2S2V2X2x3O3[3d4q5y6Z6[6_6r7Q8i8x9S!s=q$Z$n'V)q-P-S/Q2h3{5m6i9}:a;v;y;z;}<O<P<Q<R<S<T<U<V<W<X<Y<Z<]<`<m<p<q<s<{<|=V=W=s#glOPXZst!Z!`!o#S#d#o#{$n%l&i&l&m&p&r&s&u&y'R'`(|)q*f+Y+d,k,n,s-d.b/Q/i0V0d1j1z1{1}2P2S2V2X3[3{4q5y6Z6[6_7Q8i8x!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}Q+P%`Q/^)|o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!U$yi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yQ*`$zU*i$|*X*lQ+Q%aQ0Q*j#f=c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n=d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YQ=h=tQ=i=uQ=j=vR=k=w!U%Ri$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y#f(u#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}o3v<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=YnoOXst!Z#d%l&p&r&s&u,n,s2S2VS*c${*WQ,|&|Q,}'OR4`/s%[%Si#v$b$c$d$x${%O%Q%]%^%b)w*P*R*T*W*^*d*t*u+c+f+},Q.a.z/_/h/r/s/u0Y0[0g0h0i1^1a1i3Z4U4V4a4f4w5R5U5x6|7l7v7|8Q8f9V9e9n9t:S:f:t:};V;^<^<_<a<b<c<d<g<h<i<j<k<l<t<u<v<w<y<z<}=O=P=Q=R=S=T=U=X=Y=p=x=y=|=}Q,P&ZQ1`,RQ5i1_R8]5jV*k$|*X*lU*k$|*X*lT5p1g5qS/y*f/iQ4n0VT7x4q:PQ+g%wQ0P*iQ0x+hQ1m,[Q5|1nQ8k5}Q:V8lR;P:W!U%Oi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=yx*P$v)c*Q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=oS0Y*q0Z#f<a#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<b<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!d<t(s)a*Y*b.e.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={`<u3u7X7[7`9]:h:k;kS=P.g3aT=Q7Z9`!U%Qi$d%O%Q%]%^%b*P*R*^*t*u.z/r0Y0[0g0h0i4V4w7|9e=p=x=y|*R$v)c*S*q+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=oS0[*r0]#f<c#v$b$c$x${)w*T*W*d+c+f+},Q.a/_/h/s/u1^1a1i3Z4U4a4f5R5U5x6|7l7v8Q8f9V9n9t:S:f:t:};V;^<a<c<g<i<k<t<v<y<}=P=R=T=X=|=}n<d<^<_<b<d<h<j<l<u<w<z=O=Q=S=U=Y!h<v(s)a*Y*b.f.g.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={d<w3u7Y7Z7`9]9^:h:i:k;kS=R.h3bT=S7[9arnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ&d!UR,k&mrnOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VR&d!UQ,T&[R1[+|snOXst!V!Z#d%l&g&p&r&s&u,n,s2S2VQ1h,YS5w1k1lU8e5u5v5zS:R8g8hS:{:Q:TQ;_:|R;i;`Q&k!VR,d&gR6T1tR:Y8nS&P|&UR1T+sQ&p!WR,n&qR,t&vT2T,s2VR,x&wQ,w&wR2^,xQ'w!{R-t'wSsOtQ#dXT%os#dQ#OTR'y#OQ#RUR'{#RQ)y$uR/Z)yQ#UVR(O#UQ#XWU(U#X(V-{Q(V#YR-{(WQ-X'WR2j-XQ.p(wS3e.p3fR3f.qQ-`'^R2n-`Y!rQ'^-`1g5qR'h!rQ.{)cR3z.{U#_W%g*WU(]#_(^-|Q(^#`R-|(XQ-['ZR2l-[t`OXst!V!Z#d%l&g&i&p&r&s&u,n,s2S2VS#hZ%dU#r`#h.VR.V(hQ(i#jQ.S(eW.[(i.S3P6wQ3P.TR6w3QQ)l$lR/R)lQ$phR)r$pQ$`cU)_$`-w<[Q-w;xR<[)oQ/l*ZW4Y/l4Z7j9hU4Z/m/n/oS7j4[4]R9h7k$e*O$v(s)a)c*Y*b*q*r*|*}+R.g.h.j.k.l/Y/b/d/f/q/v0^0_0p1]3^3_3`3u3y4S4^4_4c4s4u4{4|4}5h7R7S7T7U7Z7[7^7_7`7f7m7p7z7}8P9]9^9_9i9q9v9w:h:i:j:k:l:q:u;W;];h;k=b=n=o=z={Q/t*bU4b/t4d7nQ4d/vR7n4cS*l$|*XR0S*lx*Q$v)c*q*r+R/q0^0_3y4^4{4|4}7f7z9v:l=b=n=o!d.e(s)a*Y*b.g.h.l/Y/f/v0p1]3`4S4_4c5h7R7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/c*Q.e7Xa7X3u7Z7[7`9]:h:k;kQ0Z*qQ3a.gU4t0Z3a9`R9`7Z|*S$v)c*q*r+R/b/q0^0_3y4^4s4{4|4}7f7z9v:l=b=n=o!h.f(s)a*Y*b.g.h.l/Y/f/v0p1]3^3`4S4_4c5h7R7S7U7m7p7}8P9i9q9w:q:u;W;];h=z={U/e*S.f7Ye7Y3u7Z7[7`9]9^:h:i:k;kQ0]*rQ3b.hU4v0]3b9aR9a7[Q*w%UR0a*wQ5S0pR8O5SQ+[%jR0o+[Q5l1bS8_5l:OR:O8`Q,V&]R1e,VQ5q1gR8b5qQ1s,aS6R1s8oR8o6TQ1O+oW5_1O5a8V9zQ5a1RQ8V5`R9z8WQ+t&PR1U+tQ2V,sR6c2VYrOXst#dQ&t!ZQ+^%lQ,m&pQ,o&rQ,p&sQ,r&uQ2Q,nS2T,s2VR6b2SQ%npQ&x!_Q&{!aQ&}!bQ'P!cQ'o!uQ+]%kQ+i%yQ+{&VQ,c&kQ,z&zW-k'i'q'r'uQ-r'mQ0R*kQ0y+jS1v,d,gQ2_,yQ2`,|Q2a,}Q2u-jW2w-m-n-q-sQ5W0zQ5d1XQ5g1]Q5{1mQ6V1xQ6a2RU6p2v2y2|Q6s2zQ8R5XQ8Z5fQ8[5hQ8a5pQ8j5|Q8p6US9P6q6uQ9R6tQ9{8XQ:U8kQ:Z8qQ:b9QQ:x9|Q;O:VQ;S:cR;a;PQ%yyQ'b!iQ'm!uU+j%z%{%|Q-R'TU-f'c'd'eS-j'i'sQ/z*gS0z+k+lQ2g-TS2s-g-hQ2z-oS4g/{0OQ5X0{Q6l2mQ6o2tQ6t2{U7q4i4j4mQ9o7sR:r9pS$wi=pR*x%VU%Ui%V=pR0`*vQ$viS(s#v+fS)a$b$cQ)c$dQ*Y$xS*b${*WQ*q%OQ*r%QQ*|%]Q*}%^Q+R%bQ.g<aQ.h<cQ.j<gQ.k<iQ.l<kQ/Y)wQ/b*PQ/d*RQ/f*TQ/q*^S/v*d/hQ0^*tQ0_*ul0p+c,Q.a1a1i3Z5x6|8f9V:S:f:};VQ1]+}Q3^<tQ3_<vQ3`<yS3u<^<_Q3y.zS4S/_4UQ4^/rQ4_/sQ4c/uQ4s0YQ4u0[Q4{0gQ4|0hQ4}0iQ5h1^Q7R<}Q7S=PQ7T=RQ7U=TQ7Z<bQ7[<dQ7^<hQ7_<jQ7`<lQ7f4VQ7m4aQ7p4fQ7z4wQ7}5RQ8P5UQ9]<zQ9^<uQ9_<wQ9i7lQ9q7vQ9v7|Q9w8QQ:h=OQ:i=QQ:j=SQ:k=UQ:l9eQ:q9nQ:u9tQ;W=XQ;]:tQ;h;^Q;k=YQ=b=pQ=n=xQ=o=yQ=z=|R={=}Q*z%[Q.i<eR7]<fnpOXst!Z#d%l&p&r&s&u,n,s2S2VQ!fPS#fZ#oQ&z!`W'f!o*f0V4qQ'}#SQ)O#{Q)p$nS,g&i&lQ,l&mQ,y&yS-O'R/iQ-b'`Q.s(|Q/V)qQ0m+YQ0s+dQ2O,kQ2q-dQ3X.bQ4O/QQ4y0dQ5v1jQ6X1zQ6Y1{Q6^1}Q6`2PQ6e2XQ7P3[Q7c3{Q8h5yQ8t6ZQ8u6[Q8w6_Q9Z7QQ:T8iR:_8x#[cOPXZst!Z!`!o#d#o#{%l&i&l&m&p&r&s&u&y'R'`(|*f+Y+d,k,n,s-d.b/i0V0d1j1z1{1}2P2S2V2X3[4q5y6Z6[6_7Q8i8xQ#YWQ#eYQ%puQ%rvS%tw!gS(Q#W(TQ(W#ZQ(r#uQ(w#xQ)P$OQ)Q$PQ)R$QQ)S$RQ)T$SQ)U$TQ)V$UQ)W$VQ)X$WQ)Y$XQ)[$ZQ)^$_Q)`$aQ)e$eW)o$n)q/Q3{Q+a%sQ+u&QS-U'V2hQ-s'pS-x(R-zQ-}(ZQ.P(bQ.n(vQ.q(xQ.u;vQ.w;yQ.x;zQ.y;}Q/]){Q0j+UQ2c-PQ2f-SQ2v-lQ2}.QQ3c.oQ3h<OQ3i<PQ3j<QQ3k<RQ3l<SQ3m<TQ3n<UQ3o<VQ3p<WQ3q<XQ3r<YQ3s.vQ3t<]Q3w<`Q3x<mQ4P<ZQ5O0lQ5Y0|Q6k<pQ6q2xQ6v3OQ7V3dQ7W<qQ7a<sQ7b<{Q8`5mQ8|6iQ9Q6rQ9[<|Q9b=VQ9c=WQ:c9SQ:y9}Q;R:aQ;x#SR=g=sR#[WR'X!el!tQ!r!v!y!z'^'j'k'l-`-p1g5q5sS'T!e-WU*g$|*X*lS-T'U']S0O*h*nQ0W*oQ2m-^Q4m0UR4r0XR(y#xQ!fQT-_'^-`]!qQ!r'^-`1g5qQ#p]R'g;wR)d$dY!uQ'^-`1g5qQ'i!rS's!v!yS'u!z5sS-o'j'kQ-q'lR2{-pT#kZ%dS#jZ%dS%jm,jU(e#h#i#lS.T(f(gQ.X(hQ0n+ZQ3Q.UU3R.V.W.YS6x3S3TR9T6yd#^W#W#Z%g(R([*W+W.O/hr#gZm#h#i#l%d(f(g(h+Z.U.V.W.Y3S3T6yS*Z$x*_Q/o*[Q1|,jQ2d-QQ4W/kQ6g2[Q7i4XQ8{6hT=_'V+XV#aW%g*WU#`W%g*WS(S#W([U(X#Z+W/hS-V'V+XT-y(R.OV'[!e%h*XQ$lfR)v$qT)k$l)lR3}/PT*]$x*_T*e${*WQ0q+cQ1_,QQ3V.aQ5j1aQ5u1iQ6}3ZQ8g5xQ9W6|Q:Q8fQ:d9VQ:|:SQ;U:fQ;`:}R;c;VnqOXst!Z#d%l&p&r&s&u,n,s2S2VQ&j!VR,c&gtmOXst!U!V!Z#d%l&g&p&r&s&u,n,s2S2VR,j&mT%km,jR1c,SR,b&eQ&T|R+z&UR+p&OT&n!W&qT&o!W&qT2U,s2V",
  nodeNames: "⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList const TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast < ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate asserts is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 378,
  context: f4,
  nodeProps: [
    ["isolate", -8, 5, 6, 14, 35, 37, 49, 51, 53, ""],
    ["group", -26, 9, 17, 19, 66, 206, 210, 214, 215, 217, 220, 223, 233, 235, 241, 243, 245, 247, 250, 256, 262, 264, 266, 268, 270, 272, 273, "Statement", -34, 13, 14, 30, 33, 34, 40, 49, 52, 53, 55, 60, 68, 70, 74, 78, 80, 82, 83, 108, 109, 118, 119, 135, 138, 140, 141, 142, 143, 144, 146, 147, 166, 168, 170, "Expression", -23, 29, 31, 35, 39, 41, 43, 172, 174, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 200, 202, 204, 205, "Type", -3, 86, 101, 107, "ClassItem"],
    ["openedBy", 23, "<", 36, "InterpolationStart", 54, "[", 58, "{", 71, "(", 159, "JSXStartCloseTag"],
    ["closedBy", -2, 24, 167, ">", 38, "InterpolationEnd", 48, "]", 59, "}", 72, ")", 164, "JSXEndTag"]
  ],
  propSources: [m4],
  skippedNodes: [0, 5, 6, 276],
  repeatNodeCount: 37,
  tokenData: "$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Up(X!b'z0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(V#S$h&j'{0/lO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c07[.n_$h&j(Up(X!b'{0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)3p/x`$h&j!n),Q(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At3l_(T':f$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$h&j(X!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(X!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(X!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$c`(X!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Up(X!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__WS$h&j(Up(X!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]WS$h&j(X!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSWSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(X!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]WS$h&j(UpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWWS(UpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYWS(Up(X!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(m%1l(Up(X!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Up(X!b$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$h&j(Up(X!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Up(X!b#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,#xLva(x+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At! c_(W';W$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$h&j(UpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$c`$h&j(UpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(UpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$c`(UpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b/5|!'t_!j/.^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&U!)O_!i!Lf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z-!n!*[b$h&j(Up(X!b(S%&f#o(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW!+o`$h&j(Up(X!b#l(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;x!,|`$h&j(Up(X!bp+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,$U!.Z_!Z+Jf$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!/ec$h&j(Up(X!b!O.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!0ya$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!2Z_!Y!L^$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!3eg$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!5Vg$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!6wc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!8_c$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!9uf$h&j(Up(X!b#m(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z?O!;fb$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z>^!<w`$h&j(X!b!V7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;'S!<n;'S;=`!L]<%lO!<n<z!>Q^$h&j!V7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!?Td$h&j!V7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&c7`!@hX!V7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;'S!@c;'S;=`!CQ<%lO!@c7`!AYW!V7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;'S!Ar;'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;'S!Ar;'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;'S!@c;'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(X!b!V7`OY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}8r!GyZ(X!b!V7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;'S!Gr;'S;=`!J|<%lO!Gr8r!Hse(X!b!V7`OY'}Zw'}x#O'}#P#W'}#W#X!Hl#X#Z'}#Z#[!Hl#[#]'}#]#^!Hl#^#a'}#a#b!Hl#b#g'}#g#h!Hl#h#i'}#i#j!Hl#j#k!Hl#k#m'}#m#n!Hl#n;'S'};'S;=`(f<%lO'}8r!JZX(X!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;'S!JU;'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(X!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;'S!KS;'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Up!V7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;'S!Lc;'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Up!V7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r8Q# vZ(Up!V7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;'S# o;'S;=`#$y<%lO# o8Q#!pe(Up!V7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;'S)r;'S;=`*Z<%lO)r8Q#$WX(UpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;'S#$R;'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(UpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;'S#%P;'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Up(X!b!V7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z9d#(r](Up(X!b!V7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;'S#(i;'S;=`#,`<%lO#(i9d#)th(Up(X!b!V7`OY*gZr*grs'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;'S*g;'S;=`+Z<%lO*g9d#+gZ(Up(X!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;'S#+`;'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Up(X!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;'S#,f;'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Up(X!b'|0/l!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z07[#/o_$h&j(Up(X!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;'S#/d;'S;=`#6|<%lO#/d06j#0w]$h&j(X!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;'S#0n;'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;'S#1p;'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;'S#2d;'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(X!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;'S#3R;'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(UpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;'S#4O;'S;=`#5w<%lO#4O00^#5XW(UpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;'S#5Q;'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Up(X!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;'S#5};'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Up(X!b!V7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z'Ad#:Zp$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#<jk$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#>j_$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#?rd$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#A]f$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Bzc$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Dbe$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#E|g$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Gpi$h&j(Up(X!bq'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x#Il_!e$b$h&j#})Lv(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Jv_al$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f#LS^h#)`#P-<U(Up(X!b$m7`OY*gZr*grs'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#MXX$j&j(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El#M}Z#p(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;'S*g;'S;=`+Z<%lO*g(El#NyX$P(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El$ oX#q(Ch(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g*)x$!ga#^*!Y$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(K[$#w_#i(Cl$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x$%Vag!*r#q(Ch$e#|$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$&g_#q(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$'qa#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$)R`#p(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(Kd$*`a(p(Ct$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`$,}_!z$Ip$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f$.X_!Q0,v$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;'S$0O;'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;'S&c;'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!W#)l$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;p$7c_$h&j(Up(X!b(_+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$8qk$h&j(Up(X!b(R,2j$^#t(c$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;'S$8b;'S;=`$<l<%lO$8b+d$:qk$h&j(Up(X!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;'S$:f;'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X!]#Hb(Up(X!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g,#x$=sa(w+JY$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;'S%Z;'S;=`+a<%lO%Z)>v$?V_![(CdtBr$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z?O$@a_!o7`$h&j(Up(X!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$Aq|$h&j(Up(X!b'z0/l$[#t(R,2j(c$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Up(X!b'{0/l$[#t(R,2j(c$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [O4, d4, p4, g4, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, u4, new ch("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOv~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!S~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(a~~", 141, 338), new ch("j~RQYZXz{^~^O(O~~aP!P!Qd~iO(P~~", 25, 321)],
  topRules: { Script: [0, 7], SingleExpression: [1, 274], SingleClassItem: [2, 275] },
  dialects: { jsx: 0, ts: 15091 },
  dynamicPrecedences: { 78: 1, 80: 1, 92: 1, 168: 1, 198: 1 },
  specialized: [{ term: 325, get: (n) => v4[n] || -1 }, { term: 341, get: (n) => b4[n] || -1 }, { term: 93, get: (n) => S4[n] || -1 }],
  tokenPrec: 15116
}), kS = [
  /* @__PURE__ */ Yi("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], y4 = /* @__PURE__ */ kS.concat([
  /* @__PURE__ */ Yi("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Yi("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), D0 = /* @__PURE__ */ new qv(), _S = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function $o(n) {
  return (e, t) => {
    let i = e.node.getChild("VariableDefinition");
    return i && t(i, n), !0;
  };
}
const Q4 = ["FunctionDeclaration"], x4 = {
  FunctionDeclaration: /* @__PURE__ */ $o("function"),
  ClassDeclaration: /* @__PURE__ */ $o("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ $o("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ $o("type"),
  NamespaceDeclaration: /* @__PURE__ */ $o("namespace"),
  VariableDefinition(n, e) {
    n.matchContext(Q4) || e(n, "variable");
  },
  TypeDefinition(n, e) {
    e(n, "type");
  },
  __proto__: null
};
function WS(n, e) {
  let t = D0.get(e);
  if (t)
    return t;
  let i = [], r = !0;
  function l(o, c) {
    let f = n.sliceString(o.from, o.to);
    i.push({ label: f, type: c });
  }
  return e.cursor(Wt.IncludeAnonymous).iterate((o) => {
    if (r)
      r = !1;
    else if (o.name) {
      let c = x4[o.name];
      if (c && c(o, l) || _S.has(o.name))
        return !1;
    } else if (o.to - o.from > 8192) {
      for (let c of WS(n, o.node))
        i.push(c);
      return !1;
    }
  }), D0.set(e, i), i;
}
const z0 = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, ZS = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  "JSXText",
  "JSXAttributeValue",
  "JSXOpenTag",
  "JSXCloseTag",
  "JSXSelfClosingTag",
  ".",
  "?."
];
function P4(n) {
  let e = Lt(n.state).resolveInner(n.pos, -1);
  if (ZS.indexOf(e.name) > -1)
    return null;
  let t = e.name == "VariableName" || e.to - e.from < 20 && z0.test(n.state.sliceDoc(e.from, e.to));
  if (!t && !n.explicit)
    return null;
  let i = [];
  for (let r = e; r; r = r.parent)
    _S.has(r.name) && (i = i.concat(WS(n.state.doc, r)));
  return {
    options: i,
    from: t ? e.from : n.pos,
    validFor: z0
  };
}
const hr = /* @__PURE__ */ Os.define({
  name: "javascript",
  parser: /* @__PURE__ */ $4.configure({
    props: [
      /* @__PURE__ */ Ml.add({
        IfStatement: /* @__PURE__ */ $l({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ $l({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: i5,
        SwitchBody: (n) => {
          let e = n.textAfter, t = /^\s*\}/.test(e), i = /^\s*(case|default)\b/.test(e);
          return n.baseIndent + (t ? 0 : i ? 1 : 2) * n.unit;
        },
        Block: /* @__PURE__ */ Jr({ closing: "}" }),
        ArrowFunction: (n) => n.baseIndent + n.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ $l({ except: /^{/ }),
        JSXElement(n) {
          let e = /^\s*<\//.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        JSXEscape(n) {
          let e = /\s*\}/.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(n) {
          return n.column(n.node.from) + n.unit;
        }
      }),
      /* @__PURE__ */ El.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": ir,
        BlockComment(n) {
          return { from: n.from + 2, to: n.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), TS = {
  test: (n) => /^JSX/.test(n.name),
  facet: /* @__PURE__ */ zv({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, CS = /* @__PURE__ */ hr.configure({ dialect: "ts" }, "typescript"), RS = /* @__PURE__ */ hr.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ rd.add((n) => n.isTop ? [TS] : void 0)]
}), XS = /* @__PURE__ */ hr.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ rd.add((n) => n.isTop ? [TS] : void 0)]
}, "typescript");
let AS = (n) => ({ label: n, type: "keyword" });
const MS = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(AS), w4 = /* @__PURE__ */ MS.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(AS));
function k4(n = {}) {
  let e = n.jsx ? n.typescript ? XS : RS : n.typescript ? CS : hr, t = n.typescript ? y4.concat(w4) : kS.concat(MS);
  return new sa(e, [
    hr.data.of({
      autocomplete: bC(ZS, Gb(t))
    }),
    hr.data.of({
      autocomplete: P4
    }),
    n.jsx ? Z4 : []
  ]);
}
function _4(n) {
  for (; ; ) {
    if (n.name == "JSXOpenTag" || n.name == "JSXSelfClosingTag" || n.name == "JSXFragmentTag")
      return n;
    if (n.name == "JSXEscape" || !n.parent)
      return null;
    n = n.parent;
  }
}
function j0(n, e, t = n.length) {
  for (let i = e == null ? void 0 : e.firstChild; i; i = i.nextSibling)
    if (i.name == "JSXIdentifier" || i.name == "JSXBuiltin" || i.name == "JSXNamespacedName" || i.name == "JSXMemberExpression")
      return n.sliceString(i.from, Math.min(i.to, t));
  return "";
}
const W4 = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), Z4 = /* @__PURE__ */ ae.inputHandler.of((n, e, t, i, r) => {
  if ((W4 ? n.composing : n.compositionStarted) || n.state.readOnly || e != t || i != ">" && i != "/" || !hr.isActiveAt(n.state, e, -1))
    return !1;
  let l = r(), { state: o } = l, c = o.changeByRange((f) => {
    var u;
    let { head: O } = f, p = Lt(o).resolveInner(O - 1, -1), g;
    if (p.name == "JSXStartTag" && (p = p.parent), !(o.doc.sliceString(O - 1, O) != i || p.name == "JSXAttributeValue" && p.to > O)) {
      if (i == ">" && p.name == "JSXFragmentTag")
        return { range: f, changes: { from: O, insert: "</>" } };
      if (i == "/" && p.name == "JSXStartCloseTag") {
        let b = p.parent, $ = b.parent;
        if ($ && b.from == O - 2 && ((g = j0(o.doc, $.firstChild, O)) || ((u = $.firstChild) === null || u === void 0 ? void 0 : u.name) == "JSXFragmentTag")) {
          let x = `${g}>`;
          return { range: F.cursor(O + x.length, -1), changes: { from: O, insert: x } };
        }
      } else if (i == ">") {
        let b = _4(p);
        if (b && b.name == "JSXOpenTag" && !/^\/?>|^<\//.test(o.doc.sliceString(O, O + 2)) && (g = j0(o.doc, b, O)))
          return { range: f, changes: { from: O, insert: `</${g}>` } };
      }
    }
    return { range: f };
  });
  return c.changes.empty ? !1 : (n.dispatch([
    l,
    o.update(c, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
}), yo = ["_blank", "_self", "_top", "_parent"], Cu = ["ascii", "utf-8", "utf-16", "latin1", "latin1"], Ru = ["get", "post", "put", "delete"], Xu = ["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"], sn = ["true", "false"], ke = {}, T4 = {
  a: {
    attrs: {
      href: null,
      ping: null,
      type: null,
      media: null,
      target: yo,
      hreflang: null
    }
  },
  abbr: ke,
  address: ke,
  area: {
    attrs: {
      alt: null,
      coords: null,
      href: null,
      target: null,
      ping: null,
      media: null,
      hreflang: null,
      type: null,
      shape: ["default", "rect", "circle", "poly"]
    }
  },
  article: ke,
  aside: ke,
  audio: {
    attrs: {
      src: null,
      mediagroup: null,
      crossorigin: ["anonymous", "use-credentials"],
      preload: ["none", "metadata", "auto"],
      autoplay: ["autoplay"],
      loop: ["loop"],
      controls: ["controls"]
    }
  },
  b: ke,
  base: { attrs: { href: null, target: yo } },
  bdi: ke,
  bdo: ke,
  blockquote: { attrs: { cite: null } },
  body: ke,
  br: ke,
  button: {
    attrs: {
      form: null,
      formaction: null,
      name: null,
      value: null,
      autofocus: ["autofocus"],
      disabled: ["autofocus"],
      formenctype: Xu,
      formmethod: Ru,
      formnovalidate: ["novalidate"],
      formtarget: yo,
      type: ["submit", "reset", "button"]
    }
  },
  canvas: { attrs: { width: null, height: null } },
  caption: ke,
  center: ke,
  cite: ke,
  code: ke,
  col: { attrs: { span: null } },
  colgroup: { attrs: { span: null } },
  command: {
    attrs: {
      type: ["command", "checkbox", "radio"],
      label: null,
      icon: null,
      radiogroup: null,
      command: null,
      title: null,
      disabled: ["disabled"],
      checked: ["checked"]
    }
  },
  data: { attrs: { value: null } },
  datagrid: { attrs: { disabled: ["disabled"], multiple: ["multiple"] } },
  datalist: { attrs: { data: null } },
  dd: ke,
  del: { attrs: { cite: null, datetime: null } },
  details: { attrs: { open: ["open"] } },
  dfn: ke,
  div: ke,
  dl: ke,
  dt: ke,
  em: ke,
  embed: { attrs: { src: null, type: null, width: null, height: null } },
  eventsource: { attrs: { src: null } },
  fieldset: { attrs: { disabled: ["disabled"], form: null, name: null } },
  figcaption: ke,
  figure: ke,
  footer: ke,
  form: {
    attrs: {
      action: null,
      name: null,
      "accept-charset": Cu,
      autocomplete: ["on", "off"],
      enctype: Xu,
      method: Ru,
      novalidate: ["novalidate"],
      target: yo
    }
  },
  h1: ke,
  h2: ke,
  h3: ke,
  h4: ke,
  h5: ke,
  h6: ke,
  head: {
    children: ["title", "base", "link", "style", "meta", "script", "noscript", "command"]
  },
  header: ke,
  hgroup: ke,
  hr: ke,
  html: {
    attrs: { manifest: null }
  },
  i: ke,
  iframe: {
    attrs: {
      src: null,
      srcdoc: null,
      name: null,
      width: null,
      height: null,
      sandbox: ["allow-top-navigation", "allow-same-origin", "allow-forms", "allow-scripts"],
      seamless: ["seamless"]
    }
  },
  img: {
    attrs: {
      alt: null,
      src: null,
      ismap: null,
      usemap: null,
      width: null,
      height: null,
      crossorigin: ["anonymous", "use-credentials"]
    }
  },
  input: {
    attrs: {
      alt: null,
      dirname: null,
      form: null,
      formaction: null,
      height: null,
      list: null,
      max: null,
      maxlength: null,
      min: null,
      name: null,
      pattern: null,
      placeholder: null,
      size: null,
      src: null,
      step: null,
      value: null,
      width: null,
      accept: ["audio/*", "video/*", "image/*"],
      autocomplete: ["on", "off"],
      autofocus: ["autofocus"],
      checked: ["checked"],
      disabled: ["disabled"],
      formenctype: Xu,
      formmethod: Ru,
      formnovalidate: ["novalidate"],
      formtarget: yo,
      multiple: ["multiple"],
      readonly: ["readonly"],
      required: ["required"],
      type: [
        "hidden",
        "text",
        "search",
        "tel",
        "url",
        "email",
        "password",
        "datetime",
        "date",
        "month",
        "week",
        "time",
        "datetime-local",
        "number",
        "range",
        "color",
        "checkbox",
        "radio",
        "file",
        "submit",
        "image",
        "reset",
        "button"
      ]
    }
  },
  ins: { attrs: { cite: null, datetime: null } },
  kbd: ke,
  keygen: {
    attrs: {
      challenge: null,
      form: null,
      name: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      keytype: ["RSA"]
    }
  },
  label: { attrs: { for: null, form: null } },
  legend: ke,
  li: { attrs: { value: null } },
  link: {
    attrs: {
      href: null,
      type: null,
      hreflang: null,
      media: null,
      sizes: ["all", "16x16", "16x16 32x32", "16x16 32x32 64x64"]
    }
  },
  map: { attrs: { name: null } },
  mark: ke,
  menu: { attrs: { label: null, type: ["list", "context", "toolbar"] } },
  meta: {
    attrs: {
      content: null,
      charset: Cu,
      name: ["viewport", "application-name", "author", "description", "generator", "keywords"],
      "http-equiv": ["content-language", "content-type", "default-style", "refresh"]
    }
  },
  meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },
  nav: ke,
  noscript: ke,
  object: {
    attrs: {
      data: null,
      type: null,
      name: null,
      usemap: null,
      form: null,
      width: null,
      height: null,
      typemustmatch: ["typemustmatch"]
    }
  },
  ol: {
    attrs: { reversed: ["reversed"], start: null, type: ["1", "a", "A", "i", "I"] },
    children: ["li", "script", "template", "ul", "ol"]
  },
  optgroup: { attrs: { disabled: ["disabled"], label: null } },
  option: { attrs: { disabled: ["disabled"], label: null, selected: ["selected"], value: null } },
  output: { attrs: { for: null, form: null, name: null } },
  p: ke,
  param: { attrs: { name: null, value: null } },
  pre: ke,
  progress: { attrs: { value: null, max: null } },
  q: { attrs: { cite: null } },
  rp: ke,
  rt: ke,
  ruby: ke,
  samp: ke,
  script: {
    attrs: {
      type: ["text/javascript"],
      src: null,
      async: ["async"],
      defer: ["defer"],
      charset: Cu
    }
  },
  section: ke,
  select: {
    attrs: {
      form: null,
      name: null,
      size: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      multiple: ["multiple"]
    }
  },
  slot: { attrs: { name: null } },
  small: ke,
  source: { attrs: { src: null, type: null, media: null } },
  span: ke,
  strong: ke,
  style: {
    attrs: {
      type: ["text/css"],
      media: null,
      scoped: null
    }
  },
  sub: ke,
  summary: ke,
  sup: ke,
  table: ke,
  tbody: ke,
  td: { attrs: { colspan: null, rowspan: null, headers: null } },
  template: ke,
  textarea: {
    attrs: {
      dirname: null,
      form: null,
      maxlength: null,
      name: null,
      placeholder: null,
      rows: null,
      cols: null,
      autofocus: ["autofocus"],
      disabled: ["disabled"],
      readonly: ["readonly"],
      required: ["required"],
      wrap: ["soft", "hard"]
    }
  },
  tfoot: ke,
  th: { attrs: { colspan: null, rowspan: null, headers: null, scope: ["row", "col", "rowgroup", "colgroup"] } },
  thead: ke,
  time: { attrs: { datetime: null } },
  title: ke,
  tr: ke,
  track: {
    attrs: {
      src: null,
      label: null,
      default: null,
      kind: ["subtitles", "captions", "descriptions", "chapters", "metadata"],
      srclang: null
    }
  },
  ul: { children: ["li", "script", "template", "ul", "ol"] },
  var: ke,
  video: {
    attrs: {
      src: null,
      poster: null,
      width: null,
      height: null,
      crossorigin: ["anonymous", "use-credentials"],
      preload: ["auto", "metadata", "none"],
      autoplay: ["autoplay"],
      mediagroup: ["movie"],
      muted: ["muted"],
      controls: ["controls"]
    }
  },
  wbr: ke
}, ES = {
  accesskey: null,
  class: null,
  contenteditable: sn,
  contextmenu: null,
  dir: ["ltr", "rtl", "auto"],
  draggable: ["true", "false", "auto"],
  dropzone: ["copy", "move", "link", "string:", "file:"],
  hidden: ["hidden"],
  id: null,
  inert: ["inert"],
  itemid: null,
  itemprop: null,
  itemref: null,
  itemscope: ["itemscope"],
  itemtype: null,
  lang: ["ar", "bn", "de", "en-GB", "en-US", "es", "fr", "hi", "id", "ja", "pa", "pt", "ru", "tr", "zh"],
  spellcheck: sn,
  autocorrect: sn,
  autocapitalize: sn,
  style: null,
  tabindex: null,
  title: null,
  translate: ["yes", "no"],
  rel: ["stylesheet", "alternate", "author", "bookmark", "help", "license", "next", "nofollow", "noreferrer", "prefetch", "prev", "search", "tag"],
  role: /* @__PURE__ */ "alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer".split(" "),
  "aria-activedescendant": null,
  "aria-atomic": sn,
  "aria-autocomplete": ["inline", "list", "both", "none"],
  "aria-busy": sn,
  "aria-checked": ["true", "false", "mixed", "undefined"],
  "aria-controls": null,
  "aria-describedby": null,
  "aria-disabled": sn,
  "aria-dropeffect": null,
  "aria-expanded": ["true", "false", "undefined"],
  "aria-flowto": null,
  "aria-grabbed": ["true", "false", "undefined"],
  "aria-haspopup": sn,
  "aria-hidden": sn,
  "aria-invalid": ["true", "false", "grammar", "spelling"],
  "aria-label": null,
  "aria-labelledby": null,
  "aria-level": null,
  "aria-live": ["off", "polite", "assertive"],
  "aria-multiline": sn,
  "aria-multiselectable": sn,
  "aria-owns": null,
  "aria-posinset": null,
  "aria-pressed": ["true", "false", "mixed", "undefined"],
  "aria-readonly": sn,
  "aria-relevant": null,
  "aria-required": sn,
  "aria-selected": ["true", "false", "undefined"],
  "aria-setsize": null,
  "aria-sort": ["ascending", "descending", "none", "other"],
  "aria-valuemax": null,
  "aria-valuemin": null,
  "aria-valuenow": null,
  "aria-valuetext": null
}, qS = /* @__PURE__ */ "beforeunload copy cut dragstart dragover dragleave dragenter dragend drag paste focus blur change click load mousedown mouseenter mouseleave mouseup keydown keyup resize scroll unload".split(" ").map((n) => "on" + n);
for (let n of qS)
  ES[n] = null;
class _h {
  constructor(e, t) {
    this.tags = Object.assign(Object.assign({}, T4), e), this.globalAttrs = Object.assign(Object.assign({}, ES), t), this.allTags = Object.keys(this.tags), this.globalAttrNames = Object.keys(this.globalAttrs);
  }
}
_h.default = /* @__PURE__ */ new _h();
function Tl(n, e, t = n.length) {
  if (!e)
    return "";
  let i = e.firstChild, r = i && i.getChild("TagName");
  return r ? n.sliceString(r.from, Math.min(r.to, t)) : "";
}
function Cl(n, e = !1) {
  for (; n; n = n.parent)
    if (n.name == "Element")
      if (e)
        e = !1;
      else
        return n;
  return null;
}
function VS(n, e, t) {
  let i = t.tags[Tl(n, Cl(e))];
  return (i == null ? void 0 : i.children) || t.allTags;
}
function xd(n, e) {
  let t = [];
  for (let i = Cl(e); i && !i.type.isTop; i = Cl(i.parent)) {
    let r = Tl(n, i);
    if (r && i.lastChild.name == "CloseTag")
      break;
    r && t.indexOf(r) < 0 && (e.name == "EndTag" || e.from >= i.firstChild.to) && t.push(r);
  }
  return t;
}
const LS = /^[:\-\.\w\u00b7-\uffff]*$/;
function B0(n, e, t, i, r) {
  let l = /\s*>/.test(n.sliceDoc(r, r + 5)) ? "" : ">", o = Cl(t, !0);
  return {
    from: i,
    to: r,
    options: VS(n.doc, o, e).map((c) => ({ label: c, type: "type" })).concat(xd(n.doc, t).map((c, f) => ({
      label: "/" + c,
      apply: "/" + c + l,
      type: "type",
      boost: 99 - f
    }))),
    validFor: /^\/?[:\-\.\w\u00b7-\uffff]*$/
  };
}
function I0(n, e, t, i) {
  let r = /\s*>/.test(n.sliceDoc(i, i + 5)) ? "" : ">";
  return {
    from: t,
    to: i,
    options: xd(n.doc, e).map((l, o) => ({ label: l, apply: l + r, type: "type", boost: 99 - o })),
    validFor: LS
  };
}
function C4(n, e, t, i) {
  let r = [], l = 0;
  for (let o of VS(n.doc, t, e))
    r.push({ label: "<" + o, type: "type" });
  for (let o of xd(n.doc, t))
    r.push({ label: "</" + o + ">", type: "type", boost: 99 - l++ });
  return { from: i, to: i, options: r, validFor: /^<\/?[:\-\.\w\u00b7-\uffff]*$/ };
}
function R4(n, e, t, i, r) {
  let l = Cl(t), o = l ? e.tags[Tl(n.doc, l)] : null, c = o && o.attrs ? Object.keys(o.attrs) : [], f = o && o.globalAttrs === !1 ? c : c.length ? c.concat(e.globalAttrNames) : e.globalAttrNames;
  return {
    from: i,
    to: r,
    options: f.map((u) => ({ label: u, type: "property" })),
    validFor: LS
  };
}
function X4(n, e, t, i, r) {
  var l;
  let o = (l = t.parent) === null || l === void 0 ? void 0 : l.getChild("AttributeName"), c = [], f;
  if (o) {
    let u = n.sliceDoc(o.from, o.to), O = e.globalAttrs[u];
    if (!O) {
      let p = Cl(t), g = p ? e.tags[Tl(n.doc, p)] : null;
      O = (g == null ? void 0 : g.attrs) && g.attrs[u];
    }
    if (O) {
      let p = n.sliceDoc(i, r).toLowerCase(), g = '"', b = '"';
      /^['"]/.test(p) ? (f = p[0] == '"' ? /^[^"]*$/ : /^[^']*$/, g = "", b = n.sliceDoc(r, r + 1) == p[0] ? "" : p[0], p = p.slice(1), i++) : f = /^[^\s<>='"]*$/;
      for (let $ of O)
        c.push({ label: $, apply: g + $ + b, type: "constant" });
    }
  }
  return { from: i, to: r, options: c, validFor: f };
}
function A4(n, e) {
  let { state: t, pos: i } = e, r = Lt(t).resolveInner(i, -1), l = r.resolve(i);
  for (let o = i, c; l == r && (c = r.childBefore(o)); ) {
    let f = c.lastChild;
    if (!f || !f.type.isError || f.from < f.to)
      break;
    l = r = c, o = f.from;
  }
  return r.name == "TagName" ? r.parent && /CloseTag$/.test(r.parent.name) ? I0(t, r, r.from, i) : B0(t, n, r, r.from, i) : r.name == "StartTag" ? B0(t, n, r, i, i) : r.name == "StartCloseTag" || r.name == "IncompleteCloseTag" ? I0(t, r, i, i) : r.name == "OpenTag" || r.name == "SelfClosingTag" || r.name == "AttributeName" ? R4(t, n, r, r.name == "AttributeName" ? r.from : i, i) : r.name == "Is" || r.name == "AttributeValue" || r.name == "UnquotedAttributeValue" ? X4(t, n, r, r.name == "Is" ? i : r.from, i) : e.explicit && (l.name == "Element" || l.name == "Text" || l.name == "Document") ? C4(t, n, r, i) : null;
}
function M4(n) {
  let { extraTags: e, extraGlobalAttributes: t } = n, i = t || e ? new _h(e, t) : _h.default;
  return (r) => A4(i, r);
}
const E4 = /* @__PURE__ */ hr.parser.configure({ top: "SingleExpression" }), US = [
  {
    tag: "script",
    attrs: (n) => n.type == "text/typescript" || n.lang == "ts",
    parser: CS.parser
  },
  {
    tag: "script",
    attrs: (n) => n.type == "text/babel" || n.type == "text/jsx",
    parser: RS.parser
  },
  {
    tag: "script",
    attrs: (n) => n.type == "text/typescript-jsx",
    parser: XS.parser
  },
  {
    tag: "script",
    attrs(n) {
      return /^(importmap|speculationrules|application\/(.+\+)?json)$/i.test(n.type);
    },
    parser: E4
  },
  {
    tag: "script",
    attrs(n) {
      return !n.type || /^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(n.type);
    },
    parser: hr.parser
  },
  {
    tag: "style",
    attrs(n) {
      return (!n.lang || n.lang == "css") && (!n.type || /^(text\/)?(x-)?(stylesheet|css)$/i.test(n.type));
    },
    parser: kh.parser
  }
], YS = /* @__PURE__ */ [
  {
    name: "style",
    parser: /* @__PURE__ */ kh.parser.configure({ top: "Styles" })
  }
].concat(/* @__PURE__ */ qS.map((n) => ({ name: n, parser: hr.parser }))), DS = /* @__PURE__ */ Os.define({
  name: "html",
  parser: /* @__PURE__ */ p3.configure({
    props: [
      /* @__PURE__ */ Ml.add({
        Element(n) {
          let e = /^(\s*)(<\/)?/.exec(n.textAfter);
          return n.node.to <= n.pos + e[0].length ? n.continue() : n.lineIndent(n.node.from) + (e[2] ? 0 : n.unit);
        },
        "OpenTag CloseTag SelfClosingTag"(n) {
          return n.column(n.node.from) + n.unit;
        },
        Document(n) {
          if (n.pos + /\s*/.exec(n.textAfter)[0].length < n.node.to)
            return n.continue();
          let e = null, t;
          for (let i = n.node; ; ) {
            let r = i.lastChild;
            if (!r || r.name != "Element" || r.to != i.to)
              break;
            e = i = r;
          }
          return e && !((t = e.lastChild) && (t.name == "CloseTag" || t.name == "SelfClosingTag")) ? n.lineIndent(e.from) + n.unit : null;
        }
      }),
      /* @__PURE__ */ El.add({
        Element(n) {
          let e = n.firstChild, t = n.lastChild;
          return !e || e.name != "OpenTag" ? null : { from: e.to, to: t.name == "CloseTag" ? t.from : n.to };
        }
      }),
      /* @__PURE__ */ lb.add({
        "OpenTag CloseTag": (n) => n.getChild("TagName")
      })
    ]
  }),
  languageData: {
    commentTokens: { block: { open: "<!--", close: "-->" } },
    indentOnInput: /^\s*<\/\w+\W$/,
    wordChars: "-._"
  }
}), Hc = /* @__PURE__ */ DS.configure({
  wrap: /* @__PURE__ */ $S(US, YS)
});
function q4(n = {}) {
  let e = "", t;
  n.matchClosingTags === !1 && (e = "noMatch"), n.selfClosingTags === !0 && (e = (e ? e + " " : "") + "selfClosing"), (n.nestedLanguages && n.nestedLanguages.length || n.nestedAttributes && n.nestedAttributes.length) && (t = $S((n.nestedLanguages || []).concat(US), (n.nestedAttributes || []).concat(YS)));
  let i = t ? DS.configure({ wrap: t, dialect: e }) : e ? Hc.configure({ dialect: e }) : Hc;
  return new sa(i, [
    Hc.data.of({ autocomplete: M4(n) }),
    n.autoCloseTags !== !1 ? V4 : [],
    k4().support,
    z3().support
  ]);
}
const N0 = /* @__PURE__ */ new Set(/* @__PURE__ */ "area base br col command embed frame hr img input keygen link meta param source track wbr menuitem".split(" ")), V4 = /* @__PURE__ */ ae.inputHandler.of((n, e, t, i, r) => {
  if (n.composing || n.state.readOnly || e != t || i != ">" && i != "/" || !Hc.isActiveAt(n.state, e, -1))
    return !1;
  let l = r(), { state: o } = l, c = o.changeByRange((f) => {
    var u, O, p;
    let g = o.doc.sliceString(f.from - 1, f.to) == i, { head: b } = f, $ = Lt(o).resolveInner(b, -1), x;
    if (g && i == ">" && $.name == "EndTag") {
      let P = $.parent;
      if (((O = (u = P.parent) === null || u === void 0 ? void 0 : u.lastChild) === null || O === void 0 ? void 0 : O.name) != "CloseTag" && (x = Tl(o.doc, P.parent, b)) && !N0.has(x)) {
        let k = b + (o.doc.sliceString(b, b + 1) === ">" ? 1 : 0), R = `</${x}>`;
        return { range: f, changes: { from: b, to: k, insert: R } };
      }
    } else if (g && i == "/" && $.name == "IncompleteCloseTag") {
      let P = $.parent;
      if ($.from == b - 2 && ((p = P.lastChild) === null || p === void 0 ? void 0 : p.name) != "CloseTag" && (x = Tl(o.doc, P, b)) && !N0.has(x)) {
        let k = b + (o.doc.sliceString(b, b + 1) === ">" ? 1 : 0), R = `${x}>`;
        return {
          range: F.cursor(b + R.length, -1),
          changes: { from: b, to: k, insert: R }
        };
      }
    }
    return { range: f };
  });
  return c.changes.empty ? !1 : (n.dispatch([
    l,
    o.update(c, {
      userEvent: "input.complete",
      scrollIntoView: !0
    })
  ]), !0);
});
var Ec = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function lM(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
var Wo = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var L4 = Wo.exports, F0;
function U4() {
  return F0 || (F0 = 1, function(n, e) {
    (function() {
      var t, i = "4.17.21", r = 200, l = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", c = "Invalid `variable` option passed into `_.template`", f = "__lodash_hash_undefined__", u = 500, O = "__lodash_placeholder__", p = 1, g = 2, b = 4, $ = 1, x = 2, P = 1, k = 2, R = 4, w = 8, Z = 16, T = 32, E = 64, M = 128, D = 256, V = 512, I = 30, U = "...", Y = 800, q = 16, te = 1, ue = 2, Ae = 3, We = 1 / 0, we = 9007199254740991, xe = 17976931348623157e292, me = NaN, de = 4294967295, K = de - 1, le = de >>> 1, $e = [
        ["ary", M],
        ["bind", P],
        ["bindKey", k],
        ["curry", w],
        ["curryRight", Z],
        ["flip", V],
        ["partial", T],
        ["partialRight", E],
        ["rearg", D]
      ], Ze = "[object Arguments]", Re = "[object Array]", Me = "[object AsyncFunction]", re = "[object Boolean]", B = "[object Date]", ne = "[object DOMException]", J = "[object Error]", he = "[object Function]", ye = "[object GeneratorFunction]", be = "[object Map]", Ce = "[object Number]", rt = "[object Null]", Ke = "[object Object]", Oi = "[object Promise]", et = "[object Proxy]", Te = "[object RegExp]", Ue = "[object Set]", se = "[object String]", wt = "[object Symbol]", Mt = "[object Undefined]", vt = "[object WeakMap]", Ut = "[object WeakSet]", kt = "[object ArrayBuffer]", jt = "[object DataView]", Pi = "[object Float32Array]", Bt = "[object Float64Array]", yt = "[object Int8Array]", He = "[object Int16Array]", Le = "[object Int32Array]", Et = "[object Uint8Array]", qt = "[object Uint8ClampedArray]", st = "[object Uint16Array]", li = "[object Uint32Array]", ii = /\b__p \+= '';/g, Xi = /\b(__p \+=) '' \+/g, oi = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Ni = /&(?:amp|lt|gt|quot|#39);/g, Gt = /[&<>"']/g, Ai = RegExp(Ni.source), dr = RegExp(Gt.source), pr = /<%-([\s\S]+?)%>/g, gr = /<%([\s\S]+?)%>/g, di = /<%=([\s\S]+?)%>/g, cn = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, hn = /^\w*$/, Yr = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, kn = /[\\^$.*+?()[\]{}|]/g, wi = RegExp(kn.source), Fi = /^\s+/, Dr = /\s/, _n = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, dt = /\{\n\/\* \[wrapped with (.+)\] \*/, Mi = /,? & /, fn = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, Wn = /[()=,{}\[\]\/\s]/, mr = /\\(\\)?/g, Ul = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, ki = /\w*$/, pi = /^[-+]0x[0-9a-f]+$/i, In = /^0b[01]+$/i, vr = /^\[object .+?Constructor\]$/, Zn = /^0o[0-7]+$/i, br = /^(?:0|[1-9]\d*)$/, ms = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Tn = /($^)/, Ls = /['\n\r\u2028\u2029\\]/g, Sr = "\\ud800-\\udfff", $r = "\\u0300-\\u036f", Us = "\\ufe20-\\ufe2f", Ei = "\\u20d0-\\u20ff", Gi = $r + Us + Ei, Cn = "\\u2700-\\u27bf", fa = "a-z\\xdf-\\xf6\\xf8-\\xff", ua = "\\xac\\xb1\\xd7\\xf7", Oa = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Yl = "\\u2000-\\u206f", Dl = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Ys = "A-Z\\xc0-\\xd6\\xd8-\\xde", Ds = "\\ufe0e\\ufe0f", zl = ua + Oa + Yl + Dl, vs = "['’]", da = "[" + Sr + "]", zs = "[" + zl + "]", bs = "[" + Gi + "]", js = "\\d+", Uh = "[" + Cn + "]", pa = "[" + fa + "]", ga = "[^" + Sr + zl + js + Cn + fa + Ys + "]", Bs = "\\ud83c[\\udffb-\\udfff]", Yh = "(?:" + bs + "|" + Bs + ")", jl = "[^" + Sr + "]", Bl = "(?:\\ud83c[\\udde6-\\uddff]){2}", Is = "[\\ud800-\\udbff][\\udc00-\\udfff]", zr = "[" + Ys + "]", ma = "\\u200d", Il = "(?:" + pa + "|" + ga + ")", va = "(?:" + zr + "|" + ga + ")", ba = "(?:" + vs + "(?:d|ll|m|re|s|t|ve))?", Nl = "(?:" + vs + "(?:D|LL|M|RE|S|T|VE))?", Ns = Yh + "?", Fs = "[" + Ds + "]?", Sa = "(?:" + ma + "(?:" + [jl, Bl, Is].join("|") + ")" + Fs + Ns + ")*", $a = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Dh = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", ya = Fs + Ns + Sa, zh = "(?:" + [Uh, Bl, Is].join("|") + ")" + ya, Qa = "(?:" + [jl + bs + "?", bs, Bl, Is, da].join("|") + ")", Fl = RegExp(vs, "g"), jh = RegExp(bs, "g"), Gl = RegExp(Bs + "(?=" + Bs + ")|" + Qa + ya, "g"), xa = RegExp([
        zr + "?" + pa + "+" + ba + "(?=" + [zs, zr, "$"].join("|") + ")",
        va + "+" + Nl + "(?=" + [zs, zr + Il, "$"].join("|") + ")",
        zr + "?" + Il + "+" + ba,
        zr + "+" + Nl,
        Dh,
        $a,
        js,
        zh
      ].join("|"), "g"), Pa = RegExp("[" + ma + Sr + Gi + Ds + "]"), wa = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Bh = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], ka = -1, bt = {};
      bt[Pi] = bt[Bt] = bt[yt] = bt[He] = bt[Le] = bt[Et] = bt[qt] = bt[st] = bt[li] = !0, bt[Ze] = bt[Re] = bt[kt] = bt[re] = bt[jt] = bt[B] = bt[J] = bt[he] = bt[be] = bt[Ce] = bt[Ke] = bt[Te] = bt[Ue] = bt[se] = bt[vt] = !1;
      var pt = {};
      pt[Ze] = pt[Re] = pt[kt] = pt[jt] = pt[re] = pt[B] = pt[Pi] = pt[Bt] = pt[yt] = pt[He] = pt[Le] = pt[be] = pt[Ce] = pt[Ke] = pt[Te] = pt[Ue] = pt[se] = pt[wt] = pt[Et] = pt[qt] = pt[st] = pt[li] = !0, pt[J] = pt[he] = pt[vt] = !1;
      var Ih = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, Nh = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, _ = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, z = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, N = parseFloat, ie = parseInt, ce = typeof Ec == "object" && Ec && Ec.Object === Object && Ec, Se = typeof self == "object" && self && self.Object === Object && self, oe = ce || Se || Function("return this")(), De = e && !e.nodeType && e, Qe = De && !0 && n && !n.nodeType && n, gt = Qe && Qe.exports === De, ht = gt && ce.process, ft = function() {
        try {
          var X = Qe && Qe.require && Qe.require("util").types;
          return X || ht && ht.binding && ht.binding("util");
        } catch {
        }
      }(), lt = ft && ft.isArrayBuffer, Fe = ft && ft.isDate, Ve = ft && ft.isMap, at = ft && ft.isRegExp, St = ft && ft.isSet, Nn = ft && ft.isTypedArray;
      function Ht(X, j, L) {
        switch (L.length) {
          case 0:
            return X.call(j);
          case 1:
            return X.call(j, L[0]);
          case 2:
            return X.call(j, L[0], L[1]);
          case 3:
            return X.call(j, L[0], L[1], L[2]);
        }
        return X.apply(j, L);
      }
      function Fh(X, j, L, ve) {
        for (var ze = -1, ut = X == null ? 0 : X.length; ++ze < ut; ) {
          var Kt = X[ze];
          j(ve, Kt, L(Kt), X);
        }
        return ve;
      }
      function gi(X, j) {
        for (var L = -1, ve = X == null ? 0 : X.length; ++L < ve && j(X[L], L, X) !== !1; )
          ;
        return X;
      }
      function Hl(X, j) {
        for (var L = X == null ? 0 : X.length; L-- && j(X[L], L, X) !== !1; )
          ;
        return X;
      }
      function Gs(X, j) {
        for (var L = -1, ve = X == null ? 0 : X.length; ++L < ve; )
          if (!j(X[L], L, X))
            return !1;
        return !0;
      }
      function Rn(X, j) {
        for (var L = -1, ve = X == null ? 0 : X.length, ze = 0, ut = []; ++L < ve; ) {
          var Kt = X[L];
          j(Kt, L, X) && (ut[ze++] = Kt);
        }
        return ut;
      }
      function Hs(X, j) {
        var L = X == null ? 0 : X.length;
        return !!L && Ks(X, j, 0) > -1;
      }
      function Gh(X, j, L) {
        for (var ve = -1, ze = X == null ? 0 : X.length; ++ve < ze; )
          if (L(j, X[ve]))
            return !0;
        return !1;
      }
      function Ct(X, j) {
        for (var L = -1, ve = X == null ? 0 : X.length, ze = Array(ve); ++L < ve; )
          ze[L] = j(X[L], L, X);
        return ze;
      }
      function jr(X, j) {
        for (var L = -1, ve = j.length, ze = X.length; ++L < ve; )
          X[ze + L] = j[L];
        return X;
      }
      function Hh(X, j, L, ve) {
        var ze = -1, ut = X == null ? 0 : X.length;
        for (ve && ut && (L = X[++ze]); ++ze < ut; )
          L = j(L, X[ze], ze, X);
        return L;
      }
      function n$(X, j, L, ve) {
        var ze = X == null ? 0 : X.length;
        for (ve && ze && (L = X[--ze]); ze--; )
          L = j(L, X[ze], ze, X);
        return L;
      }
      function Kh(X, j) {
        for (var L = -1, ve = X == null ? 0 : X.length; ++L < ve; )
          if (j(X[L], L, X))
            return !0;
        return !1;
      }
      var r$ = Jh("length");
      function s$(X) {
        return X.split("");
      }
      function l$(X) {
        return X.match(fn) || [];
      }
      function wd(X, j, L) {
        var ve;
        return L(X, function(ze, ut, Kt) {
          if (j(ze, ut, Kt))
            return ve = ut, !1;
        }), ve;
      }
      function _a(X, j, L, ve) {
        for (var ze = X.length, ut = L + (ve ? 1 : -1); ve ? ut-- : ++ut < ze; )
          if (j(X[ut], ut, X))
            return ut;
        return -1;
      }
      function Ks(X, j, L) {
        return j === j ? v$(X, j, L) : _a(X, kd, L);
      }
      function o$(X, j, L, ve) {
        for (var ze = L - 1, ut = X.length; ++ze < ut; )
          if (ve(X[ze], j))
            return ze;
        return -1;
      }
      function kd(X) {
        return X !== X;
      }
      function _d(X, j) {
        var L = X == null ? 0 : X.length;
        return L ? tf(X, j) / L : me;
      }
      function Jh(X) {
        return function(j) {
          return j == null ? t : j[X];
        };
      }
      function ef(X) {
        return function(j) {
          return X == null ? t : X[j];
        };
      }
      function Wd(X, j, L, ve, ze) {
        return ze(X, function(ut, Kt, Qt) {
          L = ve ? (ve = !1, ut) : j(L, ut, Kt, Qt);
        }), L;
      }
      function a$(X, j) {
        var L = X.length;
        for (X.sort(j); L--; )
          X[L] = X[L].value;
        return X;
      }
      function tf(X, j) {
        for (var L, ve = -1, ze = X.length; ++ve < ze; ) {
          var ut = j(X[ve]);
          ut !== t && (L = L === t ? ut : L + ut);
        }
        return L;
      }
      function nf(X, j) {
        for (var L = -1, ve = Array(X); ++L < X; )
          ve[L] = j(L);
        return ve;
      }
      function c$(X, j) {
        return Ct(j, function(L) {
          return [L, X[L]];
        });
      }
      function Zd(X) {
        return X && X.slice(0, Xd(X) + 1).replace(Fi, "");
      }
      function Hi(X) {
        return function(j) {
          return X(j);
        };
      }
      function rf(X, j) {
        return Ct(j, function(L) {
          return X[L];
        });
      }
      function Kl(X, j) {
        return X.has(j);
      }
      function Td(X, j) {
        for (var L = -1, ve = X.length; ++L < ve && Ks(j, X[L], 0) > -1; )
          ;
        return L;
      }
      function Cd(X, j) {
        for (var L = X.length; L-- && Ks(j, X[L], 0) > -1; )
          ;
        return L;
      }
      function h$(X, j) {
        for (var L = X.length, ve = 0; L--; )
          X[L] === j && ++ve;
        return ve;
      }
      var f$ = ef(Ih), u$ = ef(Nh);
      function O$(X) {
        return "\\" + z[X];
      }
      function d$(X, j) {
        return X == null ? t : X[j];
      }
      function Js(X) {
        return Pa.test(X);
      }
      function p$(X) {
        return wa.test(X);
      }
      function g$(X) {
        for (var j, L = []; !(j = X.next()).done; )
          L.push(j.value);
        return L;
      }
      function sf(X) {
        var j = -1, L = Array(X.size);
        return X.forEach(function(ve, ze) {
          L[++j] = [ze, ve];
        }), L;
      }
      function Rd(X, j) {
        return function(L) {
          return X(j(L));
        };
      }
      function Br(X, j) {
        for (var L = -1, ve = X.length, ze = 0, ut = []; ++L < ve; ) {
          var Kt = X[L];
          (Kt === j || Kt === O) && (X[L] = O, ut[ze++] = L);
        }
        return ut;
      }
      function Wa(X) {
        var j = -1, L = Array(X.size);
        return X.forEach(function(ve) {
          L[++j] = ve;
        }), L;
      }
      function m$(X) {
        var j = -1, L = Array(X.size);
        return X.forEach(function(ve) {
          L[++j] = [ve, ve];
        }), L;
      }
      function v$(X, j, L) {
        for (var ve = L - 1, ze = X.length; ++ve < ze; )
          if (X[ve] === j)
            return ve;
        return -1;
      }
      function b$(X, j, L) {
        for (var ve = L + 1; ve--; )
          if (X[ve] === j)
            return ve;
        return ve;
      }
      function el(X) {
        return Js(X) ? $$(X) : r$(X);
      }
      function Xn(X) {
        return Js(X) ? y$(X) : s$(X);
      }
      function Xd(X) {
        for (var j = X.length; j-- && Dr.test(X.charAt(j)); )
          ;
        return j;
      }
      var S$ = ef(_);
      function $$(X) {
        for (var j = Gl.lastIndex = 0; Gl.test(X); )
          ++j;
        return j;
      }
      function y$(X) {
        return X.match(Gl) || [];
      }
      function Q$(X) {
        return X.match(xa) || [];
      }
      var x$ = function X(j) {
        j = j == null ? oe : tl.defaults(oe.Object(), j, tl.pick(oe, Bh));
        var L = j.Array, ve = j.Date, ze = j.Error, ut = j.Function, Kt = j.Math, Qt = j.Object, lf = j.RegExp, P$ = j.String, un = j.TypeError, Za = L.prototype, w$ = ut.prototype, il = Qt.prototype, Ta = j["__core-js_shared__"], Ca = w$.toString, mt = il.hasOwnProperty, k$ = 0, Ad = function() {
          var a = /[^.]+$/.exec(Ta && Ta.keys && Ta.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), Ra = il.toString, _$ = Ca.call(Qt), W$ = oe._, Z$ = lf(
          "^" + Ca.call(mt).replace(kn, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Xa = gt ? j.Buffer : t, Ir = j.Symbol, Aa = j.Uint8Array, Md = Xa ? Xa.allocUnsafe : t, Ma = Rd(Qt.getPrototypeOf, Qt), Ed = Qt.create, qd = il.propertyIsEnumerable, Ea = Za.splice, Vd = Ir ? Ir.isConcatSpreadable : t, Jl = Ir ? Ir.iterator : t, Ss = Ir ? Ir.toStringTag : t, qa = function() {
          try {
            var a = Ps(Qt, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), T$ = j.clearTimeout !== oe.clearTimeout && j.clearTimeout, C$ = ve && ve.now !== oe.Date.now && ve.now, R$ = j.setTimeout !== oe.setTimeout && j.setTimeout, Va = Kt.ceil, La = Kt.floor, of = Qt.getOwnPropertySymbols, X$ = Xa ? Xa.isBuffer : t, Ld = j.isFinite, A$ = Za.join, M$ = Rd(Qt.keys, Qt), Jt = Kt.max, mi = Kt.min, E$ = ve.now, q$ = j.parseInt, Ud = Kt.random, V$ = Za.reverse, af = Ps(j, "DataView"), eo = Ps(j, "Map"), cf = Ps(j, "Promise"), nl = Ps(j, "Set"), to = Ps(j, "WeakMap"), io = Ps(Qt, "create"), Ua = to && new to(), rl = {}, L$ = ws(af), U$ = ws(eo), Y$ = ws(cf), D$ = ws(nl), z$ = ws(to), Ya = Ir ? Ir.prototype : t, no = Ya ? Ya.valueOf : t, Yd = Ya ? Ya.toString : t;
        function y(a) {
          if (Vt(a) && !je(a) && !(a instanceof tt)) {
            if (a instanceof On)
              return a;
            if (mt.call(a, "__wrapped__"))
              return Dp(a);
          }
          return new On(a);
        }
        var sl = /* @__PURE__ */ function() {
          function a() {
          }
          return function(h) {
            if (!Xt(h))
              return {};
            if (Ed)
              return Ed(h);
            a.prototype = h;
            var d = new a();
            return a.prototype = t, d;
          };
        }();
        function Da() {
        }
        function On(a, h) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!h, this.__index__ = 0, this.__values__ = t;
        }
        y.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: pr,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: gr,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: di,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: y
          }
        }, y.prototype = Da.prototype, y.prototype.constructor = y, On.prototype = sl(Da.prototype), On.prototype.constructor = On;
        function tt(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = de, this.__views__ = [];
        }
        function j$() {
          var a = new tt(this.__wrapped__);
          return a.__actions__ = qi(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = qi(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = qi(this.__views__), a;
        }
        function B$() {
          if (this.__filtered__) {
            var a = new tt(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function I$() {
          var a = this.__wrapped__.value(), h = this.__dir__, d = je(a), m = h < 0, S = d ? a.length : 0, Q = sQ(0, S, this.__views__), W = Q.start, C = Q.end, A = C - W, G = m ? C : W - 1, H = this.__iteratees__, ee = H.length, Oe = 0, Pe = mi(A, this.__takeCount__);
          if (!d || !m && S == A && Pe == A)
            return up(a, this.__actions__);
          var Ee = [];
          e:
            for (; A-- && Oe < Pe; ) {
              G += h;
              for (var Ie = -1, qe = a[G]; ++Ie < ee; ) {
                var Je = H[Ie], nt = Je.iteratee, en = Je.type, Zi = nt(qe);
                if (en == ue)
                  qe = Zi;
                else if (!Zi) {
                  if (en == te)
                    continue e;
                  break e;
                }
              }
              Ee[Oe++] = qe;
            }
          return Ee;
        }
        tt.prototype = sl(Da.prototype), tt.prototype.constructor = tt;
        function $s(a) {
          var h = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++h < d; ) {
            var m = a[h];
            this.set(m[0], m[1]);
          }
        }
        function N$() {
          this.__data__ = io ? io(null) : {}, this.size = 0;
        }
        function F$(a) {
          var h = this.has(a) && delete this.__data__[a];
          return this.size -= h ? 1 : 0, h;
        }
        function G$(a) {
          var h = this.__data__;
          if (io) {
            var d = h[a];
            return d === f ? t : d;
          }
          return mt.call(h, a) ? h[a] : t;
        }
        function H$(a) {
          var h = this.__data__;
          return io ? h[a] !== t : mt.call(h, a);
        }
        function K$(a, h) {
          var d = this.__data__;
          return this.size += this.has(a) ? 0 : 1, d[a] = io && h === t ? f : h, this;
        }
        $s.prototype.clear = N$, $s.prototype.delete = F$, $s.prototype.get = G$, $s.prototype.has = H$, $s.prototype.set = K$;
        function yr(a) {
          var h = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++h < d; ) {
            var m = a[h];
            this.set(m[0], m[1]);
          }
        }
        function J$() {
          this.__data__ = [], this.size = 0;
        }
        function ey(a) {
          var h = this.__data__, d = za(h, a);
          if (d < 0)
            return !1;
          var m = h.length - 1;
          return d == m ? h.pop() : Ea.call(h, d, 1), --this.size, !0;
        }
        function ty(a) {
          var h = this.__data__, d = za(h, a);
          return d < 0 ? t : h[d][1];
        }
        function iy(a) {
          return za(this.__data__, a) > -1;
        }
        function ny(a, h) {
          var d = this.__data__, m = za(d, a);
          return m < 0 ? (++this.size, d.push([a, h])) : d[m][1] = h, this;
        }
        yr.prototype.clear = J$, yr.prototype.delete = ey, yr.prototype.get = ty, yr.prototype.has = iy, yr.prototype.set = ny;
        function Qr(a) {
          var h = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++h < d; ) {
            var m = a[h];
            this.set(m[0], m[1]);
          }
        }
        function ry() {
          this.size = 0, this.__data__ = {
            hash: new $s(),
            map: new (eo || yr)(),
            string: new $s()
          };
        }
        function sy(a) {
          var h = ic(this, a).delete(a);
          return this.size -= h ? 1 : 0, h;
        }
        function ly(a) {
          return ic(this, a).get(a);
        }
        function oy(a) {
          return ic(this, a).has(a);
        }
        function ay(a, h) {
          var d = ic(this, a), m = d.size;
          return d.set(a, h), this.size += d.size == m ? 0 : 1, this;
        }
        Qr.prototype.clear = ry, Qr.prototype.delete = sy, Qr.prototype.get = ly, Qr.prototype.has = oy, Qr.prototype.set = ay;
        function ys(a) {
          var h = -1, d = a == null ? 0 : a.length;
          for (this.__data__ = new Qr(); ++h < d; )
            this.add(a[h]);
        }
        function cy(a) {
          return this.__data__.set(a, f), this;
        }
        function hy(a) {
          return this.__data__.has(a);
        }
        ys.prototype.add = ys.prototype.push = cy, ys.prototype.has = hy;
        function An(a) {
          var h = this.__data__ = new yr(a);
          this.size = h.size;
        }
        function fy() {
          this.__data__ = new yr(), this.size = 0;
        }
        function uy(a) {
          var h = this.__data__, d = h.delete(a);
          return this.size = h.size, d;
        }
        function Oy(a) {
          return this.__data__.get(a);
        }
        function dy(a) {
          return this.__data__.has(a);
        }
        function py(a, h) {
          var d = this.__data__;
          if (d instanceof yr) {
            var m = d.__data__;
            if (!eo || m.length < r - 1)
              return m.push([a, h]), this.size = ++d.size, this;
            d = this.__data__ = new Qr(m);
          }
          return d.set(a, h), this.size = d.size, this;
        }
        An.prototype.clear = fy, An.prototype.delete = uy, An.prototype.get = Oy, An.prototype.has = dy, An.prototype.set = py;
        function Dd(a, h) {
          var d = je(a), m = !d && ks(a), S = !d && !m && Kr(a), Q = !d && !m && !S && cl(a), W = d || m || S || Q, C = W ? nf(a.length, P$) : [], A = C.length;
          for (var G in a)
            (h || mt.call(a, G)) && !(W && // Safari 9 has enumerable `arguments.length` in strict mode.
            (G == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            S && (G == "offset" || G == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            Q && (G == "buffer" || G == "byteLength" || G == "byteOffset") || // Skip index properties.
            kr(G, A))) && C.push(G);
          return C;
        }
        function zd(a) {
          var h = a.length;
          return h ? a[Sf(0, h - 1)] : t;
        }
        function gy(a, h) {
          return nc(qi(a), Qs(h, 0, a.length));
        }
        function my(a) {
          return nc(qi(a));
        }
        function hf(a, h, d) {
          (d !== t && !Mn(a[h], d) || d === t && !(h in a)) && xr(a, h, d);
        }
        function ro(a, h, d) {
          var m = a[h];
          (!(mt.call(a, h) && Mn(m, d)) || d === t && !(h in a)) && xr(a, h, d);
        }
        function za(a, h) {
          for (var d = a.length; d--; )
            if (Mn(a[d][0], h))
              return d;
          return -1;
        }
        function vy(a, h, d, m) {
          return Nr(a, function(S, Q, W) {
            h(m, S, d(S), W);
          }), m;
        }
        function jd(a, h) {
          return a && Gn(h, ni(h), a);
        }
        function by(a, h) {
          return a && Gn(h, Li(h), a);
        }
        function xr(a, h, d) {
          h == "__proto__" && qa ? qa(a, h, {
            configurable: !0,
            enumerable: !0,
            value: d,
            writable: !0
          }) : a[h] = d;
        }
        function ff(a, h) {
          for (var d = -1, m = h.length, S = L(m), Q = a == null; ++d < m; )
            S[d] = Q ? t : jf(a, h[d]);
          return S;
        }
        function Qs(a, h, d) {
          return a === a && (d !== t && (a = a <= d ? a : d), h !== t && (a = a >= h ? a : h)), a;
        }
        function dn(a, h, d, m, S, Q) {
          var W, C = h & p, A = h & g, G = h & b;
          if (d && (W = S ? d(a, m, S, Q) : d(a)), W !== t)
            return W;
          if (!Xt(a))
            return a;
          var H = je(a);
          if (H) {
            if (W = oQ(a), !C)
              return qi(a, W);
          } else {
            var ee = vi(a), Oe = ee == he || ee == ye;
            if (Kr(a))
              return pp(a, C);
            if (ee == Ke || ee == Ze || Oe && !S) {
              if (W = A || Oe ? {} : Xp(a), !C)
                return A ? Gy(a, by(W, a)) : Fy(a, jd(W, a));
            } else {
              if (!pt[ee])
                return S ? a : {};
              W = aQ(a, ee, C);
            }
          }
          Q || (Q = new An());
          var Pe = Q.get(a);
          if (Pe)
            return Pe;
          Q.set(a, W), cg(a) ? a.forEach(function(qe) {
            W.add(dn(qe, h, d, qe, a, Q));
          }) : og(a) && a.forEach(function(qe, Je) {
            W.set(Je, dn(qe, h, d, Je, a, Q));
          });
          var Ee = G ? A ? Tf : Zf : A ? Li : ni, Ie = H ? t : Ee(a);
          return gi(Ie || a, function(qe, Je) {
            Ie && (Je = qe, qe = a[Je]), ro(W, Je, dn(qe, h, d, Je, a, Q));
          }), W;
        }
        function Sy(a) {
          var h = ni(a);
          return function(d) {
            return Bd(d, a, h);
          };
        }
        function Bd(a, h, d) {
          var m = d.length;
          if (a == null)
            return !m;
          for (a = Qt(a); m--; ) {
            var S = d[m], Q = h[S], W = a[S];
            if (W === t && !(S in a) || !Q(W))
              return !1;
          }
          return !0;
        }
        function Id(a, h, d) {
          if (typeof a != "function")
            throw new un(o);
          return fo(function() {
            a.apply(t, d);
          }, h);
        }
        function so(a, h, d, m) {
          var S = -1, Q = Hs, W = !0, C = a.length, A = [], G = h.length;
          if (!C)
            return A;
          d && (h = Ct(h, Hi(d))), m ? (Q = Gh, W = !1) : h.length >= r && (Q = Kl, W = !1, h = new ys(h));
          e:
            for (; ++S < C; ) {
              var H = a[S], ee = d == null ? H : d(H);
              if (H = m || H !== 0 ? H : 0, W && ee === ee) {
                for (var Oe = G; Oe--; )
                  if (h[Oe] === ee)
                    continue e;
                A.push(H);
              } else Q(h, ee, m) || A.push(H);
            }
          return A;
        }
        var Nr = Sp(Fn), Nd = Sp(Of, !0);
        function $y(a, h) {
          var d = !0;
          return Nr(a, function(m, S, Q) {
            return d = !!h(m, S, Q), d;
          }), d;
        }
        function ja(a, h, d) {
          for (var m = -1, S = a.length; ++m < S; ) {
            var Q = a[m], W = h(Q);
            if (W != null && (C === t ? W === W && !Ji(W) : d(W, C)))
              var C = W, A = Q;
          }
          return A;
        }
        function yy(a, h, d, m) {
          var S = a.length;
          for (d = Be(d), d < 0 && (d = -d > S ? 0 : S + d), m = m === t || m > S ? S : Be(m), m < 0 && (m += S), m = d > m ? 0 : fg(m); d < m; )
            a[d++] = h;
          return a;
        }
        function Fd(a, h) {
          var d = [];
          return Nr(a, function(m, S, Q) {
            h(m, S, Q) && d.push(m);
          }), d;
        }
        function ai(a, h, d, m, S) {
          var Q = -1, W = a.length;
          for (d || (d = hQ), S || (S = []); ++Q < W; ) {
            var C = a[Q];
            h > 0 && d(C) ? h > 1 ? ai(C, h - 1, d, m, S) : jr(S, C) : m || (S[S.length] = C);
          }
          return S;
        }
        var uf = $p(), Gd = $p(!0);
        function Fn(a, h) {
          return a && uf(a, h, ni);
        }
        function Of(a, h) {
          return a && Gd(a, h, ni);
        }
        function Ba(a, h) {
          return Rn(h, function(d) {
            return _r(a[d]);
          });
        }
        function xs(a, h) {
          h = Gr(h, a);
          for (var d = 0, m = h.length; a != null && d < m; )
            a = a[Hn(h[d++])];
          return d && d == m ? a : t;
        }
        function Hd(a, h, d) {
          var m = h(a);
          return je(a) ? m : jr(m, d(a));
        }
        function _i(a) {
          return a == null ? a === t ? Mt : rt : Ss && Ss in Qt(a) ? rQ(a) : mQ(a);
        }
        function df(a, h) {
          return a > h;
        }
        function Qy(a, h) {
          return a != null && mt.call(a, h);
        }
        function xy(a, h) {
          return a != null && h in Qt(a);
        }
        function Py(a, h, d) {
          return a >= mi(h, d) && a < Jt(h, d);
        }
        function pf(a, h, d) {
          for (var m = d ? Gh : Hs, S = a[0].length, Q = a.length, W = Q, C = L(Q), A = 1 / 0, G = []; W--; ) {
            var H = a[W];
            W && h && (H = Ct(H, Hi(h))), A = mi(H.length, A), C[W] = !d && (h || S >= 120 && H.length >= 120) ? new ys(W && H) : t;
          }
          H = a[0];
          var ee = -1, Oe = C[0];
          e:
            for (; ++ee < S && G.length < A; ) {
              var Pe = H[ee], Ee = h ? h(Pe) : Pe;
              if (Pe = d || Pe !== 0 ? Pe : 0, !(Oe ? Kl(Oe, Ee) : m(G, Ee, d))) {
                for (W = Q; --W; ) {
                  var Ie = C[W];
                  if (!(Ie ? Kl(Ie, Ee) : m(a[W], Ee, d)))
                    continue e;
                }
                Oe && Oe.push(Ee), G.push(Pe);
              }
            }
          return G;
        }
        function wy(a, h, d, m) {
          return Fn(a, function(S, Q, W) {
            h(m, d(S), Q, W);
          }), m;
        }
        function lo(a, h, d) {
          h = Gr(h, a), a = qp(a, h);
          var m = a == null ? a : a[Hn(gn(h))];
          return m == null ? t : Ht(m, a, d);
        }
        function Kd(a) {
          return Vt(a) && _i(a) == Ze;
        }
        function ky(a) {
          return Vt(a) && _i(a) == kt;
        }
        function _y(a) {
          return Vt(a) && _i(a) == B;
        }
        function oo(a, h, d, m, S) {
          return a === h ? !0 : a == null || h == null || !Vt(a) && !Vt(h) ? a !== a && h !== h : Wy(a, h, d, m, oo, S);
        }
        function Wy(a, h, d, m, S, Q) {
          var W = je(a), C = je(h), A = W ? Re : vi(a), G = C ? Re : vi(h);
          A = A == Ze ? Ke : A, G = G == Ze ? Ke : G;
          var H = A == Ke, ee = G == Ke, Oe = A == G;
          if (Oe && Kr(a)) {
            if (!Kr(h))
              return !1;
            W = !0, H = !1;
          }
          if (Oe && !H)
            return Q || (Q = new An()), W || cl(a) ? Tp(a, h, d, m, S, Q) : iQ(a, h, A, d, m, S, Q);
          if (!(d & $)) {
            var Pe = H && mt.call(a, "__wrapped__"), Ee = ee && mt.call(h, "__wrapped__");
            if (Pe || Ee) {
              var Ie = Pe ? a.value() : a, qe = Ee ? h.value() : h;
              return Q || (Q = new An()), S(Ie, qe, d, m, Q);
            }
          }
          return Oe ? (Q || (Q = new An()), nQ(a, h, d, m, S, Q)) : !1;
        }
        function Zy(a) {
          return Vt(a) && vi(a) == be;
        }
        function gf(a, h, d, m) {
          var S = d.length, Q = S, W = !m;
          if (a == null)
            return !Q;
          for (a = Qt(a); S--; ) {
            var C = d[S];
            if (W && C[2] ? C[1] !== a[C[0]] : !(C[0] in a))
              return !1;
          }
          for (; ++S < Q; ) {
            C = d[S];
            var A = C[0], G = a[A], H = C[1];
            if (W && C[2]) {
              if (G === t && !(A in a))
                return !1;
            } else {
              var ee = new An();
              if (m)
                var Oe = m(G, H, A, a, h, ee);
              if (!(Oe === t ? oo(H, G, $ | x, m, ee) : Oe))
                return !1;
            }
          }
          return !0;
        }
        function Jd(a) {
          if (!Xt(a) || uQ(a))
            return !1;
          var h = _r(a) ? Z$ : vr;
          return h.test(ws(a));
        }
        function Ty(a) {
          return Vt(a) && _i(a) == Te;
        }
        function Cy(a) {
          return Vt(a) && vi(a) == Ue;
        }
        function Ry(a) {
          return Vt(a) && cc(a.length) && !!bt[_i(a)];
        }
        function ep(a) {
          return typeof a == "function" ? a : a == null ? Ui : typeof a == "object" ? je(a) ? np(a[0], a[1]) : ip(a) : yg(a);
        }
        function mf(a) {
          if (!ho(a))
            return M$(a);
          var h = [];
          for (var d in Qt(a))
            mt.call(a, d) && d != "constructor" && h.push(d);
          return h;
        }
        function Xy(a) {
          if (!Xt(a))
            return gQ(a);
          var h = ho(a), d = [];
          for (var m in a)
            m == "constructor" && (h || !mt.call(a, m)) || d.push(m);
          return d;
        }
        function vf(a, h) {
          return a < h;
        }
        function tp(a, h) {
          var d = -1, m = Vi(a) ? L(a.length) : [];
          return Nr(a, function(S, Q, W) {
            m[++d] = h(S, Q, W);
          }), m;
        }
        function ip(a) {
          var h = Rf(a);
          return h.length == 1 && h[0][2] ? Mp(h[0][0], h[0][1]) : function(d) {
            return d === a || gf(d, a, h);
          };
        }
        function np(a, h) {
          return Af(a) && Ap(h) ? Mp(Hn(a), h) : function(d) {
            var m = jf(d, a);
            return m === t && m === h ? Bf(d, a) : oo(h, m, $ | x);
          };
        }
        function Ia(a, h, d, m, S) {
          a !== h && uf(h, function(Q, W) {
            if (S || (S = new An()), Xt(Q))
              Ay(a, h, W, d, Ia, m, S);
            else {
              var C = m ? m(Ef(a, W), Q, W + "", a, h, S) : t;
              C === t && (C = Q), hf(a, W, C);
            }
          }, Li);
        }
        function Ay(a, h, d, m, S, Q, W) {
          var C = Ef(a, d), A = Ef(h, d), G = W.get(A);
          if (G) {
            hf(a, d, G);
            return;
          }
          var H = Q ? Q(C, A, d + "", a, h, W) : t, ee = H === t;
          if (ee) {
            var Oe = je(A), Pe = !Oe && Kr(A), Ee = !Oe && !Pe && cl(A);
            H = A, Oe || Pe || Ee ? je(C) ? H = C : Yt(C) ? H = qi(C) : Pe ? (ee = !1, H = pp(A, !0)) : Ee ? (ee = !1, H = gp(A, !0)) : H = [] : uo(A) || ks(A) ? (H = C, ks(C) ? H = ug(C) : (!Xt(C) || _r(C)) && (H = Xp(A))) : ee = !1;
          }
          ee && (W.set(A, H), S(H, A, m, Q, W), W.delete(A)), hf(a, d, H);
        }
        function rp(a, h) {
          var d = a.length;
          if (d)
            return h += h < 0 ? d : 0, kr(h, d) ? a[h] : t;
        }
        function sp(a, h, d) {
          h.length ? h = Ct(h, function(Q) {
            return je(Q) ? function(W) {
              return xs(W, Q.length === 1 ? Q[0] : Q);
            } : Q;
          }) : h = [Ui];
          var m = -1;
          h = Ct(h, Hi(Xe()));
          var S = tp(a, function(Q, W, C) {
            var A = Ct(h, function(G) {
              return G(Q);
            });
            return { criteria: A, index: ++m, value: Q };
          });
          return a$(S, function(Q, W) {
            return Ny(Q, W, d);
          });
        }
        function My(a, h) {
          return lp(a, h, function(d, m) {
            return Bf(a, m);
          });
        }
        function lp(a, h, d) {
          for (var m = -1, S = h.length, Q = {}; ++m < S; ) {
            var W = h[m], C = xs(a, W);
            d(C, W) && ao(Q, Gr(W, a), C);
          }
          return Q;
        }
        function Ey(a) {
          return function(h) {
            return xs(h, a);
          };
        }
        function bf(a, h, d, m) {
          var S = m ? o$ : Ks, Q = -1, W = h.length, C = a;
          for (a === h && (h = qi(h)), d && (C = Ct(a, Hi(d))); ++Q < W; )
            for (var A = 0, G = h[Q], H = d ? d(G) : G; (A = S(C, H, A, m)) > -1; )
              C !== a && Ea.call(C, A, 1), Ea.call(a, A, 1);
          return a;
        }
        function op(a, h) {
          for (var d = a ? h.length : 0, m = d - 1; d--; ) {
            var S = h[d];
            if (d == m || S !== Q) {
              var Q = S;
              kr(S) ? Ea.call(a, S, 1) : Qf(a, S);
            }
          }
          return a;
        }
        function Sf(a, h) {
          return a + La(Ud() * (h - a + 1));
        }
        function qy(a, h, d, m) {
          for (var S = -1, Q = Jt(Va((h - a) / (d || 1)), 0), W = L(Q); Q--; )
            W[m ? Q : ++S] = a, a += d;
          return W;
        }
        function $f(a, h) {
          var d = "";
          if (!a || h < 1 || h > we)
            return d;
          do
            h % 2 && (d += a), h = La(h / 2), h && (a += a);
          while (h);
          return d;
        }
        function Ge(a, h) {
          return qf(Ep(a, h, Ui), a + "");
        }
        function Vy(a) {
          return zd(hl(a));
        }
        function Ly(a, h) {
          var d = hl(a);
          return nc(d, Qs(h, 0, d.length));
        }
        function ao(a, h, d, m) {
          if (!Xt(a))
            return a;
          h = Gr(h, a);
          for (var S = -1, Q = h.length, W = Q - 1, C = a; C != null && ++S < Q; ) {
            var A = Hn(h[S]), G = d;
            if (A === "__proto__" || A === "constructor" || A === "prototype")
              return a;
            if (S != W) {
              var H = C[A];
              G = m ? m(H, A, C) : t, G === t && (G = Xt(H) ? H : kr(h[S + 1]) ? [] : {});
            }
            ro(C, A, G), C = C[A];
          }
          return a;
        }
        var ap = Ua ? function(a, h) {
          return Ua.set(a, h), a;
        } : Ui, Uy = qa ? function(a, h) {
          return qa(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: Nf(h),
            writable: !0
          });
        } : Ui;
        function Yy(a) {
          return nc(hl(a));
        }
        function pn(a, h, d) {
          var m = -1, S = a.length;
          h < 0 && (h = -h > S ? 0 : S + h), d = d > S ? S : d, d < 0 && (d += S), S = h > d ? 0 : d - h >>> 0, h >>>= 0;
          for (var Q = L(S); ++m < S; )
            Q[m] = a[m + h];
          return Q;
        }
        function Dy(a, h) {
          var d;
          return Nr(a, function(m, S, Q) {
            return d = h(m, S, Q), !d;
          }), !!d;
        }
        function Na(a, h, d) {
          var m = 0, S = a == null ? m : a.length;
          if (typeof h == "number" && h === h && S <= le) {
            for (; m < S; ) {
              var Q = m + S >>> 1, W = a[Q];
              W !== null && !Ji(W) && (d ? W <= h : W < h) ? m = Q + 1 : S = Q;
            }
            return S;
          }
          return yf(a, h, Ui, d);
        }
        function yf(a, h, d, m) {
          var S = 0, Q = a == null ? 0 : a.length;
          if (Q === 0)
            return 0;
          h = d(h);
          for (var W = h !== h, C = h === null, A = Ji(h), G = h === t; S < Q; ) {
            var H = La((S + Q) / 2), ee = d(a[H]), Oe = ee !== t, Pe = ee === null, Ee = ee === ee, Ie = Ji(ee);
            if (W)
              var qe = m || Ee;
            else G ? qe = Ee && (m || Oe) : C ? qe = Ee && Oe && (m || !Pe) : A ? qe = Ee && Oe && !Pe && (m || !Ie) : Pe || Ie ? qe = !1 : qe = m ? ee <= h : ee < h;
            qe ? S = H + 1 : Q = H;
          }
          return mi(Q, K);
        }
        function cp(a, h) {
          for (var d = -1, m = a.length, S = 0, Q = []; ++d < m; ) {
            var W = a[d], C = h ? h(W) : W;
            if (!d || !Mn(C, A)) {
              var A = C;
              Q[S++] = W === 0 ? 0 : W;
            }
          }
          return Q;
        }
        function hp(a) {
          return typeof a == "number" ? a : Ji(a) ? me : +a;
        }
        function Ki(a) {
          if (typeof a == "string")
            return a;
          if (je(a))
            return Ct(a, Ki) + "";
          if (Ji(a))
            return Yd ? Yd.call(a) : "";
          var h = a + "";
          return h == "0" && 1 / a == -1 / 0 ? "-0" : h;
        }
        function Fr(a, h, d) {
          var m = -1, S = Hs, Q = a.length, W = !0, C = [], A = C;
          if (d)
            W = !1, S = Gh;
          else if (Q >= r) {
            var G = h ? null : eQ(a);
            if (G)
              return Wa(G);
            W = !1, S = Kl, A = new ys();
          } else
            A = h ? [] : C;
          e:
            for (; ++m < Q; ) {
              var H = a[m], ee = h ? h(H) : H;
              if (H = d || H !== 0 ? H : 0, W && ee === ee) {
                for (var Oe = A.length; Oe--; )
                  if (A[Oe] === ee)
                    continue e;
                h && A.push(ee), C.push(H);
              } else S(A, ee, d) || (A !== C && A.push(ee), C.push(H));
            }
          return C;
        }
        function Qf(a, h) {
          return h = Gr(h, a), a = qp(a, h), a == null || delete a[Hn(gn(h))];
        }
        function fp(a, h, d, m) {
          return ao(a, h, d(xs(a, h)), m);
        }
        function Fa(a, h, d, m) {
          for (var S = a.length, Q = m ? S : -1; (m ? Q-- : ++Q < S) && h(a[Q], Q, a); )
            ;
          return d ? pn(a, m ? 0 : Q, m ? Q + 1 : S) : pn(a, m ? Q + 1 : 0, m ? S : Q);
        }
        function up(a, h) {
          var d = a;
          return d instanceof tt && (d = d.value()), Hh(h, function(m, S) {
            return S.func.apply(S.thisArg, jr([m], S.args));
          }, d);
        }
        function xf(a, h, d) {
          var m = a.length;
          if (m < 2)
            return m ? Fr(a[0]) : [];
          for (var S = -1, Q = L(m); ++S < m; )
            for (var W = a[S], C = -1; ++C < m; )
              C != S && (Q[S] = so(Q[S] || W, a[C], h, d));
          return Fr(ai(Q, 1), h, d);
        }
        function Op(a, h, d) {
          for (var m = -1, S = a.length, Q = h.length, W = {}; ++m < S; ) {
            var C = m < Q ? h[m] : t;
            d(W, a[m], C);
          }
          return W;
        }
        function Pf(a) {
          return Yt(a) ? a : [];
        }
        function wf(a) {
          return typeof a == "function" ? a : Ui;
        }
        function Gr(a, h) {
          return je(a) ? a : Af(a, h) ? [a] : Yp(Ot(a));
        }
        var zy = Ge;
        function Hr(a, h, d) {
          var m = a.length;
          return d = d === t ? m : d, !h && d >= m ? a : pn(a, h, d);
        }
        var dp = T$ || function(a) {
          return oe.clearTimeout(a);
        };
        function pp(a, h) {
          if (h)
            return a.slice();
          var d = a.length, m = Md ? Md(d) : new a.constructor(d);
          return a.copy(m), m;
        }
        function kf(a) {
          var h = new a.constructor(a.byteLength);
          return new Aa(h).set(new Aa(a)), h;
        }
        function jy(a, h) {
          var d = h ? kf(a.buffer) : a.buffer;
          return new a.constructor(d, a.byteOffset, a.byteLength);
        }
        function By(a) {
          var h = new a.constructor(a.source, ki.exec(a));
          return h.lastIndex = a.lastIndex, h;
        }
        function Iy(a) {
          return no ? Qt(no.call(a)) : {};
        }
        function gp(a, h) {
          var d = h ? kf(a.buffer) : a.buffer;
          return new a.constructor(d, a.byteOffset, a.length);
        }
        function mp(a, h) {
          if (a !== h) {
            var d = a !== t, m = a === null, S = a === a, Q = Ji(a), W = h !== t, C = h === null, A = h === h, G = Ji(h);
            if (!C && !G && !Q && a > h || Q && W && A && !C && !G || m && W && A || !d && A || !S)
              return 1;
            if (!m && !Q && !G && a < h || G && d && S && !m && !Q || C && d && S || !W && S || !A)
              return -1;
          }
          return 0;
        }
        function Ny(a, h, d) {
          for (var m = -1, S = a.criteria, Q = h.criteria, W = S.length, C = d.length; ++m < W; ) {
            var A = mp(S[m], Q[m]);
            if (A) {
              if (m >= C)
                return A;
              var G = d[m];
              return A * (G == "desc" ? -1 : 1);
            }
          }
          return a.index - h.index;
        }
        function vp(a, h, d, m) {
          for (var S = -1, Q = a.length, W = d.length, C = -1, A = h.length, G = Jt(Q - W, 0), H = L(A + G), ee = !m; ++C < A; )
            H[C] = h[C];
          for (; ++S < W; )
            (ee || S < Q) && (H[d[S]] = a[S]);
          for (; G--; )
            H[C++] = a[S++];
          return H;
        }
        function bp(a, h, d, m) {
          for (var S = -1, Q = a.length, W = -1, C = d.length, A = -1, G = h.length, H = Jt(Q - C, 0), ee = L(H + G), Oe = !m; ++S < H; )
            ee[S] = a[S];
          for (var Pe = S; ++A < G; )
            ee[Pe + A] = h[A];
          for (; ++W < C; )
            (Oe || S < Q) && (ee[Pe + d[W]] = a[S++]);
          return ee;
        }
        function qi(a, h) {
          var d = -1, m = a.length;
          for (h || (h = L(m)); ++d < m; )
            h[d] = a[d];
          return h;
        }
        function Gn(a, h, d, m) {
          var S = !d;
          d || (d = {});
          for (var Q = -1, W = h.length; ++Q < W; ) {
            var C = h[Q], A = m ? m(d[C], a[C], C, d, a) : t;
            A === t && (A = a[C]), S ? xr(d, C, A) : ro(d, C, A);
          }
          return d;
        }
        function Fy(a, h) {
          return Gn(a, Xf(a), h);
        }
        function Gy(a, h) {
          return Gn(a, Cp(a), h);
        }
        function Ga(a, h) {
          return function(d, m) {
            var S = je(d) ? Fh : vy, Q = h ? h() : {};
            return S(d, a, Xe(m, 2), Q);
          };
        }
        function ll(a) {
          return Ge(function(h, d) {
            var m = -1, S = d.length, Q = S > 1 ? d[S - 1] : t, W = S > 2 ? d[2] : t;
            for (Q = a.length > 3 && typeof Q == "function" ? (S--, Q) : t, W && Wi(d[0], d[1], W) && (Q = S < 3 ? t : Q, S = 1), h = Qt(h); ++m < S; ) {
              var C = d[m];
              C && a(h, C, m, Q);
            }
            return h;
          });
        }
        function Sp(a, h) {
          return function(d, m) {
            if (d == null)
              return d;
            if (!Vi(d))
              return a(d, m);
            for (var S = d.length, Q = h ? S : -1, W = Qt(d); (h ? Q-- : ++Q < S) && m(W[Q], Q, W) !== !1; )
              ;
            return d;
          };
        }
        function $p(a) {
          return function(h, d, m) {
            for (var S = -1, Q = Qt(h), W = m(h), C = W.length; C--; ) {
              var A = W[a ? C : ++S];
              if (d(Q[A], A, Q) === !1)
                break;
            }
            return h;
          };
        }
        function Hy(a, h, d) {
          var m = h & P, S = co(a);
          function Q() {
            var W = this && this !== oe && this instanceof Q ? S : a;
            return W.apply(m ? d : this, arguments);
          }
          return Q;
        }
        function yp(a) {
          return function(h) {
            h = Ot(h);
            var d = Js(h) ? Xn(h) : t, m = d ? d[0] : h.charAt(0), S = d ? Hr(d, 1).join("") : h.slice(1);
            return m[a]() + S;
          };
        }
        function ol(a) {
          return function(h) {
            return Hh(Sg(bg(h).replace(Fl, "")), a, "");
          };
        }
        function co(a) {
          return function() {
            var h = arguments;
            switch (h.length) {
              case 0:
                return new a();
              case 1:
                return new a(h[0]);
              case 2:
                return new a(h[0], h[1]);
              case 3:
                return new a(h[0], h[1], h[2]);
              case 4:
                return new a(h[0], h[1], h[2], h[3]);
              case 5:
                return new a(h[0], h[1], h[2], h[3], h[4]);
              case 6:
                return new a(h[0], h[1], h[2], h[3], h[4], h[5]);
              case 7:
                return new a(h[0], h[1], h[2], h[3], h[4], h[5], h[6]);
            }
            var d = sl(a.prototype), m = a.apply(d, h);
            return Xt(m) ? m : d;
          };
        }
        function Ky(a, h, d) {
          var m = co(a);
          function S() {
            for (var Q = arguments.length, W = L(Q), C = Q, A = al(S); C--; )
              W[C] = arguments[C];
            var G = Q < 3 && W[0] !== A && W[Q - 1] !== A ? [] : Br(W, A);
            if (Q -= G.length, Q < d)
              return kp(
                a,
                h,
                Ha,
                S.placeholder,
                t,
                W,
                G,
                t,
                t,
                d - Q
              );
            var H = this && this !== oe && this instanceof S ? m : a;
            return Ht(H, this, W);
          }
          return S;
        }
        function Qp(a) {
          return function(h, d, m) {
            var S = Qt(h);
            if (!Vi(h)) {
              var Q = Xe(d, 3);
              h = ni(h), d = function(C) {
                return Q(S[C], C, S);
              };
            }
            var W = a(h, d, m);
            return W > -1 ? S[Q ? h[W] : W] : t;
          };
        }
        function xp(a) {
          return wr(function(h) {
            var d = h.length, m = d, S = On.prototype.thru;
            for (a && h.reverse(); m--; ) {
              var Q = h[m];
              if (typeof Q != "function")
                throw new un(o);
              if (S && !W && tc(Q) == "wrapper")
                var W = new On([], !0);
            }
            for (m = W ? m : d; ++m < d; ) {
              Q = h[m];
              var C = tc(Q), A = C == "wrapper" ? Cf(Q) : t;
              A && Mf(A[0]) && A[1] == (M | w | T | D) && !A[4].length && A[9] == 1 ? W = W[tc(A[0])].apply(W, A[3]) : W = Q.length == 1 && Mf(Q) ? W[C]() : W.thru(Q);
            }
            return function() {
              var G = arguments, H = G[0];
              if (W && G.length == 1 && je(H))
                return W.plant(H).value();
              for (var ee = 0, Oe = d ? h[ee].apply(this, G) : H; ++ee < d; )
                Oe = h[ee].call(this, Oe);
              return Oe;
            };
          });
        }
        function Ha(a, h, d, m, S, Q, W, C, A, G) {
          var H = h & M, ee = h & P, Oe = h & k, Pe = h & (w | Z), Ee = h & V, Ie = Oe ? t : co(a);
          function qe() {
            for (var Je = arguments.length, nt = L(Je), en = Je; en--; )
              nt[en] = arguments[en];
            if (Pe)
              var Zi = al(qe), tn = h$(nt, Zi);
            if (m && (nt = vp(nt, m, S, Pe)), Q && (nt = bp(nt, Q, W, Pe)), Je -= tn, Pe && Je < G) {
              var Dt = Br(nt, Zi);
              return kp(
                a,
                h,
                Ha,
                qe.placeholder,
                d,
                nt,
                Dt,
                C,
                A,
                G - Je
              );
            }
            var En = ee ? d : this, Zr = Oe ? En[a] : a;
            return Je = nt.length, C ? nt = vQ(nt, C) : Ee && Je > 1 && nt.reverse(), H && A < Je && (nt.length = A), this && this !== oe && this instanceof qe && (Zr = Ie || co(Zr)), Zr.apply(En, nt);
          }
          return qe;
        }
        function Pp(a, h) {
          return function(d, m) {
            return wy(d, a, h(m), {});
          };
        }
        function Ka(a, h) {
          return function(d, m) {
            var S;
            if (d === t && m === t)
              return h;
            if (d !== t && (S = d), m !== t) {
              if (S === t)
                return m;
              typeof d == "string" || typeof m == "string" ? (d = Ki(d), m = Ki(m)) : (d = hp(d), m = hp(m)), S = a(d, m);
            }
            return S;
          };
        }
        function _f(a) {
          return wr(function(h) {
            return h = Ct(h, Hi(Xe())), Ge(function(d) {
              var m = this;
              return a(h, function(S) {
                return Ht(S, m, d);
              });
            });
          });
        }
        function Ja(a, h) {
          h = h === t ? " " : Ki(h);
          var d = h.length;
          if (d < 2)
            return d ? $f(h, a) : h;
          var m = $f(h, Va(a / el(h)));
          return Js(h) ? Hr(Xn(m), 0, a).join("") : m.slice(0, a);
        }
        function Jy(a, h, d, m) {
          var S = h & P, Q = co(a);
          function W() {
            for (var C = -1, A = arguments.length, G = -1, H = m.length, ee = L(H + A), Oe = this && this !== oe && this instanceof W ? Q : a; ++G < H; )
              ee[G] = m[G];
            for (; A--; )
              ee[G++] = arguments[++C];
            return Ht(Oe, S ? d : this, ee);
          }
          return W;
        }
        function wp(a) {
          return function(h, d, m) {
            return m && typeof m != "number" && Wi(h, d, m) && (d = m = t), h = Wr(h), d === t ? (d = h, h = 0) : d = Wr(d), m = m === t ? h < d ? 1 : -1 : Wr(m), qy(h, d, m, a);
          };
        }
        function ec(a) {
          return function(h, d) {
            return typeof h == "string" && typeof d == "string" || (h = mn(h), d = mn(d)), a(h, d);
          };
        }
        function kp(a, h, d, m, S, Q, W, C, A, G) {
          var H = h & w, ee = H ? W : t, Oe = H ? t : W, Pe = H ? Q : t, Ee = H ? t : Q;
          h |= H ? T : E, h &= ~(H ? E : T), h & R || (h &= -4);
          var Ie = [
            a,
            h,
            S,
            Pe,
            ee,
            Ee,
            Oe,
            C,
            A,
            G
          ], qe = d.apply(t, Ie);
          return Mf(a) && Vp(qe, Ie), qe.placeholder = m, Lp(qe, a, h);
        }
        function Wf(a) {
          var h = Kt[a];
          return function(d, m) {
            if (d = mn(d), m = m == null ? 0 : mi(Be(m), 292), m && Ld(d)) {
              var S = (Ot(d) + "e").split("e"), Q = h(S[0] + "e" + (+S[1] + m));
              return S = (Ot(Q) + "e").split("e"), +(S[0] + "e" + (+S[1] - m));
            }
            return h(d);
          };
        }
        var eQ = nl && 1 / Wa(new nl([, -0]))[1] == We ? function(a) {
          return new nl(a);
        } : Hf;
        function _p(a) {
          return function(h) {
            var d = vi(h);
            return d == be ? sf(h) : d == Ue ? m$(h) : c$(h, a(h));
          };
        }
        function Pr(a, h, d, m, S, Q, W, C) {
          var A = h & k;
          if (!A && typeof a != "function")
            throw new un(o);
          var G = m ? m.length : 0;
          if (G || (h &= -97, m = S = t), W = W === t ? W : Jt(Be(W), 0), C = C === t ? C : Be(C), G -= S ? S.length : 0, h & E) {
            var H = m, ee = S;
            m = S = t;
          }
          var Oe = A ? t : Cf(a), Pe = [
            a,
            h,
            d,
            m,
            S,
            H,
            ee,
            Q,
            W,
            C
          ];
          if (Oe && pQ(Pe, Oe), a = Pe[0], h = Pe[1], d = Pe[2], m = Pe[3], S = Pe[4], C = Pe[9] = Pe[9] === t ? A ? 0 : a.length : Jt(Pe[9] - G, 0), !C && h & (w | Z) && (h &= -25), !h || h == P)
            var Ee = Hy(a, h, d);
          else h == w || h == Z ? Ee = Ky(a, h, C) : (h == T || h == (P | T)) && !S.length ? Ee = Jy(a, h, d, m) : Ee = Ha.apply(t, Pe);
          var Ie = Oe ? ap : Vp;
          return Lp(Ie(Ee, Pe), a, h);
        }
        function Wp(a, h, d, m) {
          return a === t || Mn(a, il[d]) && !mt.call(m, d) ? h : a;
        }
        function Zp(a, h, d, m, S, Q) {
          return Xt(a) && Xt(h) && (Q.set(h, a), Ia(a, h, t, Zp, Q), Q.delete(h)), a;
        }
        function tQ(a) {
          return uo(a) ? t : a;
        }
        function Tp(a, h, d, m, S, Q) {
          var W = d & $, C = a.length, A = h.length;
          if (C != A && !(W && A > C))
            return !1;
          var G = Q.get(a), H = Q.get(h);
          if (G && H)
            return G == h && H == a;
          var ee = -1, Oe = !0, Pe = d & x ? new ys() : t;
          for (Q.set(a, h), Q.set(h, a); ++ee < C; ) {
            var Ee = a[ee], Ie = h[ee];
            if (m)
              var qe = W ? m(Ie, Ee, ee, h, a, Q) : m(Ee, Ie, ee, a, h, Q);
            if (qe !== t) {
              if (qe)
                continue;
              Oe = !1;
              break;
            }
            if (Pe) {
              if (!Kh(h, function(Je, nt) {
                if (!Kl(Pe, nt) && (Ee === Je || S(Ee, Je, d, m, Q)))
                  return Pe.push(nt);
              })) {
                Oe = !1;
                break;
              }
            } else if (!(Ee === Ie || S(Ee, Ie, d, m, Q))) {
              Oe = !1;
              break;
            }
          }
          return Q.delete(a), Q.delete(h), Oe;
        }
        function iQ(a, h, d, m, S, Q, W) {
          switch (d) {
            case jt:
              if (a.byteLength != h.byteLength || a.byteOffset != h.byteOffset)
                return !1;
              a = a.buffer, h = h.buffer;
            case kt:
              return !(a.byteLength != h.byteLength || !Q(new Aa(a), new Aa(h)));
            case re:
            case B:
            case Ce:
              return Mn(+a, +h);
            case J:
              return a.name == h.name && a.message == h.message;
            case Te:
            case se:
              return a == h + "";
            case be:
              var C = sf;
            case Ue:
              var A = m & $;
              if (C || (C = Wa), a.size != h.size && !A)
                return !1;
              var G = W.get(a);
              if (G)
                return G == h;
              m |= x, W.set(a, h);
              var H = Tp(C(a), C(h), m, S, Q, W);
              return W.delete(a), H;
            case wt:
              if (no)
                return no.call(a) == no.call(h);
          }
          return !1;
        }
        function nQ(a, h, d, m, S, Q) {
          var W = d & $, C = Zf(a), A = C.length, G = Zf(h), H = G.length;
          if (A != H && !W)
            return !1;
          for (var ee = A; ee--; ) {
            var Oe = C[ee];
            if (!(W ? Oe in h : mt.call(h, Oe)))
              return !1;
          }
          var Pe = Q.get(a), Ee = Q.get(h);
          if (Pe && Ee)
            return Pe == h && Ee == a;
          var Ie = !0;
          Q.set(a, h), Q.set(h, a);
          for (var qe = W; ++ee < A; ) {
            Oe = C[ee];
            var Je = a[Oe], nt = h[Oe];
            if (m)
              var en = W ? m(nt, Je, Oe, h, a, Q) : m(Je, nt, Oe, a, h, Q);
            if (!(en === t ? Je === nt || S(Je, nt, d, m, Q) : en)) {
              Ie = !1;
              break;
            }
            qe || (qe = Oe == "constructor");
          }
          if (Ie && !qe) {
            var Zi = a.constructor, tn = h.constructor;
            Zi != tn && "constructor" in a && "constructor" in h && !(typeof Zi == "function" && Zi instanceof Zi && typeof tn == "function" && tn instanceof tn) && (Ie = !1);
          }
          return Q.delete(a), Q.delete(h), Ie;
        }
        function wr(a) {
          return qf(Ep(a, t, Bp), a + "");
        }
        function Zf(a) {
          return Hd(a, ni, Xf);
        }
        function Tf(a) {
          return Hd(a, Li, Cp);
        }
        var Cf = Ua ? function(a) {
          return Ua.get(a);
        } : Hf;
        function tc(a) {
          for (var h = a.name + "", d = rl[h], m = mt.call(rl, h) ? d.length : 0; m--; ) {
            var S = d[m], Q = S.func;
            if (Q == null || Q == a)
              return S.name;
          }
          return h;
        }
        function al(a) {
          var h = mt.call(y, "placeholder") ? y : a;
          return h.placeholder;
        }
        function Xe() {
          var a = y.iteratee || Ff;
          return a = a === Ff ? ep : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function ic(a, h) {
          var d = a.__data__;
          return fQ(h) ? d[typeof h == "string" ? "string" : "hash"] : d.map;
        }
        function Rf(a) {
          for (var h = ni(a), d = h.length; d--; ) {
            var m = h[d], S = a[m];
            h[d] = [m, S, Ap(S)];
          }
          return h;
        }
        function Ps(a, h) {
          var d = d$(a, h);
          return Jd(d) ? d : t;
        }
        function rQ(a) {
          var h = mt.call(a, Ss), d = a[Ss];
          try {
            a[Ss] = t;
            var m = !0;
          } catch {
          }
          var S = Ra.call(a);
          return m && (h ? a[Ss] = d : delete a[Ss]), S;
        }
        var Xf = of ? function(a) {
          return a == null ? [] : (a = Qt(a), Rn(of(a), function(h) {
            return qd.call(a, h);
          }));
        } : Kf, Cp = of ? function(a) {
          for (var h = []; a; )
            jr(h, Xf(a)), a = Ma(a);
          return h;
        } : Kf, vi = _i;
        (af && vi(new af(new ArrayBuffer(1))) != jt || eo && vi(new eo()) != be || cf && vi(cf.resolve()) != Oi || nl && vi(new nl()) != Ue || to && vi(new to()) != vt) && (vi = function(a) {
          var h = _i(a), d = h == Ke ? a.constructor : t, m = d ? ws(d) : "";
          if (m)
            switch (m) {
              case L$:
                return jt;
              case U$:
                return be;
              case Y$:
                return Oi;
              case D$:
                return Ue;
              case z$:
                return vt;
            }
          return h;
        });
        function sQ(a, h, d) {
          for (var m = -1, S = d.length; ++m < S; ) {
            var Q = d[m], W = Q.size;
            switch (Q.type) {
              case "drop":
                a += W;
                break;
              case "dropRight":
                h -= W;
                break;
              case "take":
                h = mi(h, a + W);
                break;
              case "takeRight":
                a = Jt(a, h - W);
                break;
            }
          }
          return { start: a, end: h };
        }
        function lQ(a) {
          var h = a.match(dt);
          return h ? h[1].split(Mi) : [];
        }
        function Rp(a, h, d) {
          h = Gr(h, a);
          for (var m = -1, S = h.length, Q = !1; ++m < S; ) {
            var W = Hn(h[m]);
            if (!(Q = a != null && d(a, W)))
              break;
            a = a[W];
          }
          return Q || ++m != S ? Q : (S = a == null ? 0 : a.length, !!S && cc(S) && kr(W, S) && (je(a) || ks(a)));
        }
        function oQ(a) {
          var h = a.length, d = new a.constructor(h);
          return h && typeof a[0] == "string" && mt.call(a, "index") && (d.index = a.index, d.input = a.input), d;
        }
        function Xp(a) {
          return typeof a.constructor == "function" && !ho(a) ? sl(Ma(a)) : {};
        }
        function aQ(a, h, d) {
          var m = a.constructor;
          switch (h) {
            case kt:
              return kf(a);
            case re:
            case B:
              return new m(+a);
            case jt:
              return jy(a, d);
            case Pi:
            case Bt:
            case yt:
            case He:
            case Le:
            case Et:
            case qt:
            case st:
            case li:
              return gp(a, d);
            case be:
              return new m();
            case Ce:
            case se:
              return new m(a);
            case Te:
              return By(a);
            case Ue:
              return new m();
            case wt:
              return Iy(a);
          }
        }
        function cQ(a, h) {
          var d = h.length;
          if (!d)
            return a;
          var m = d - 1;
          return h[m] = (d > 1 ? "& " : "") + h[m], h = h.join(d > 2 ? ", " : " "), a.replace(_n, `{
/* [wrapped with ` + h + `] */
`);
        }
        function hQ(a) {
          return je(a) || ks(a) || !!(Vd && a && a[Vd]);
        }
        function kr(a, h) {
          var d = typeof a;
          return h = h ?? we, !!h && (d == "number" || d != "symbol" && br.test(a)) && a > -1 && a % 1 == 0 && a < h;
        }
        function Wi(a, h, d) {
          if (!Xt(d))
            return !1;
          var m = typeof h;
          return (m == "number" ? Vi(d) && kr(h, d.length) : m == "string" && h in d) ? Mn(d[h], a) : !1;
        }
        function Af(a, h) {
          if (je(a))
            return !1;
          var d = typeof a;
          return d == "number" || d == "symbol" || d == "boolean" || a == null || Ji(a) ? !0 : hn.test(a) || !cn.test(a) || h != null && a in Qt(h);
        }
        function fQ(a) {
          var h = typeof a;
          return h == "string" || h == "number" || h == "symbol" || h == "boolean" ? a !== "__proto__" : a === null;
        }
        function Mf(a) {
          var h = tc(a), d = y[h];
          if (typeof d != "function" || !(h in tt.prototype))
            return !1;
          if (a === d)
            return !0;
          var m = Cf(d);
          return !!m && a === m[0];
        }
        function uQ(a) {
          return !!Ad && Ad in a;
        }
        var OQ = Ta ? _r : Jf;
        function ho(a) {
          var h = a && a.constructor, d = typeof h == "function" && h.prototype || il;
          return a === d;
        }
        function Ap(a) {
          return a === a && !Xt(a);
        }
        function Mp(a, h) {
          return function(d) {
            return d == null ? !1 : d[a] === h && (h !== t || a in Qt(d));
          };
        }
        function dQ(a) {
          var h = oc(a, function(m) {
            return d.size === u && d.clear(), m;
          }), d = h.cache;
          return h;
        }
        function pQ(a, h) {
          var d = a[1], m = h[1], S = d | m, Q = S < (P | k | M), W = m == M && d == w || m == M && d == D && a[7].length <= h[8] || m == (M | D) && h[7].length <= h[8] && d == w;
          if (!(Q || W))
            return a;
          m & P && (a[2] = h[2], S |= d & P ? 0 : R);
          var C = h[3];
          if (C) {
            var A = a[3];
            a[3] = A ? vp(A, C, h[4]) : C, a[4] = A ? Br(a[3], O) : h[4];
          }
          return C = h[5], C && (A = a[5], a[5] = A ? bp(A, C, h[6]) : C, a[6] = A ? Br(a[5], O) : h[6]), C = h[7], C && (a[7] = C), m & M && (a[8] = a[8] == null ? h[8] : mi(a[8], h[8])), a[9] == null && (a[9] = h[9]), a[0] = h[0], a[1] = S, a;
        }
        function gQ(a) {
          var h = [];
          if (a != null)
            for (var d in Qt(a))
              h.push(d);
          return h;
        }
        function mQ(a) {
          return Ra.call(a);
        }
        function Ep(a, h, d) {
          return h = Jt(h === t ? a.length - 1 : h, 0), function() {
            for (var m = arguments, S = -1, Q = Jt(m.length - h, 0), W = L(Q); ++S < Q; )
              W[S] = m[h + S];
            S = -1;
            for (var C = L(h + 1); ++S < h; )
              C[S] = m[S];
            return C[h] = d(W), Ht(a, this, C);
          };
        }
        function qp(a, h) {
          return h.length < 2 ? a : xs(a, pn(h, 0, -1));
        }
        function vQ(a, h) {
          for (var d = a.length, m = mi(h.length, d), S = qi(a); m--; ) {
            var Q = h[m];
            a[m] = kr(Q, d) ? S[Q] : t;
          }
          return a;
        }
        function Ef(a, h) {
          if (!(h === "constructor" && typeof a[h] == "function") && h != "__proto__")
            return a[h];
        }
        var Vp = Up(ap), fo = R$ || function(a, h) {
          return oe.setTimeout(a, h);
        }, qf = Up(Uy);
        function Lp(a, h, d) {
          var m = h + "";
          return qf(a, cQ(m, bQ(lQ(m), d)));
        }
        function Up(a) {
          var h = 0, d = 0;
          return function() {
            var m = E$(), S = q - (m - d);
            if (d = m, S > 0) {
              if (++h >= Y)
                return arguments[0];
            } else
              h = 0;
            return a.apply(t, arguments);
          };
        }
        function nc(a, h) {
          var d = -1, m = a.length, S = m - 1;
          for (h = h === t ? m : h; ++d < h; ) {
            var Q = Sf(d, S), W = a[Q];
            a[Q] = a[d], a[d] = W;
          }
          return a.length = h, a;
        }
        var Yp = dQ(function(a) {
          var h = [];
          return a.charCodeAt(0) === 46 && h.push(""), a.replace(Yr, function(d, m, S, Q) {
            h.push(S ? Q.replace(mr, "$1") : m || d);
          }), h;
        });
        function Hn(a) {
          if (typeof a == "string" || Ji(a))
            return a;
          var h = a + "";
          return h == "0" && 1 / a == -1 / 0 ? "-0" : h;
        }
        function ws(a) {
          if (a != null) {
            try {
              return Ca.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function bQ(a, h) {
          return gi($e, function(d) {
            var m = "_." + d[0];
            h & d[1] && !Hs(a, m) && a.push(m);
          }), a.sort();
        }
        function Dp(a) {
          if (a instanceof tt)
            return a.clone();
          var h = new On(a.__wrapped__, a.__chain__);
          return h.__actions__ = qi(a.__actions__), h.__index__ = a.__index__, h.__values__ = a.__values__, h;
        }
        function SQ(a, h, d) {
          (d ? Wi(a, h, d) : h === t) ? h = 1 : h = Jt(Be(h), 0);
          var m = a == null ? 0 : a.length;
          if (!m || h < 1)
            return [];
          for (var S = 0, Q = 0, W = L(Va(m / h)); S < m; )
            W[Q++] = pn(a, S, S += h);
          return W;
        }
        function $Q(a) {
          for (var h = -1, d = a == null ? 0 : a.length, m = 0, S = []; ++h < d; ) {
            var Q = a[h];
            Q && (S[m++] = Q);
          }
          return S;
        }
        function yQ() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var h = L(a - 1), d = arguments[0], m = a; m--; )
            h[m - 1] = arguments[m];
          return jr(je(d) ? qi(d) : [d], ai(h, 1));
        }
        var QQ = Ge(function(a, h) {
          return Yt(a) ? so(a, ai(h, 1, Yt, !0)) : [];
        }), xQ = Ge(function(a, h) {
          var d = gn(h);
          return Yt(d) && (d = t), Yt(a) ? so(a, ai(h, 1, Yt, !0), Xe(d, 2)) : [];
        }), PQ = Ge(function(a, h) {
          var d = gn(h);
          return Yt(d) && (d = t), Yt(a) ? so(a, ai(h, 1, Yt, !0), t, d) : [];
        });
        function wQ(a, h, d) {
          var m = a == null ? 0 : a.length;
          return m ? (h = d || h === t ? 1 : Be(h), pn(a, h < 0 ? 0 : h, m)) : [];
        }
        function kQ(a, h, d) {
          var m = a == null ? 0 : a.length;
          return m ? (h = d || h === t ? 1 : Be(h), h = m - h, pn(a, 0, h < 0 ? 0 : h)) : [];
        }
        function _Q(a, h) {
          return a && a.length ? Fa(a, Xe(h, 3), !0, !0) : [];
        }
        function WQ(a, h) {
          return a && a.length ? Fa(a, Xe(h, 3), !0) : [];
        }
        function ZQ(a, h, d, m) {
          var S = a == null ? 0 : a.length;
          return S ? (d && typeof d != "number" && Wi(a, h, d) && (d = 0, m = S), yy(a, h, d, m)) : [];
        }
        function zp(a, h, d) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var S = d == null ? 0 : Be(d);
          return S < 0 && (S = Jt(m + S, 0)), _a(a, Xe(h, 3), S);
        }
        function jp(a, h, d) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var S = m - 1;
          return d !== t && (S = Be(d), S = d < 0 ? Jt(m + S, 0) : mi(S, m - 1)), _a(a, Xe(h, 3), S, !0);
        }
        function Bp(a) {
          var h = a == null ? 0 : a.length;
          return h ? ai(a, 1) : [];
        }
        function TQ(a) {
          var h = a == null ? 0 : a.length;
          return h ? ai(a, We) : [];
        }
        function CQ(a, h) {
          var d = a == null ? 0 : a.length;
          return d ? (h = h === t ? 1 : Be(h), ai(a, h)) : [];
        }
        function RQ(a) {
          for (var h = -1, d = a == null ? 0 : a.length, m = {}; ++h < d; ) {
            var S = a[h];
            m[S[0]] = S[1];
          }
          return m;
        }
        function Ip(a) {
          return a && a.length ? a[0] : t;
        }
        function XQ(a, h, d) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var S = d == null ? 0 : Be(d);
          return S < 0 && (S = Jt(m + S, 0)), Ks(a, h, S);
        }
        function AQ(a) {
          var h = a == null ? 0 : a.length;
          return h ? pn(a, 0, -1) : [];
        }
        var MQ = Ge(function(a) {
          var h = Ct(a, Pf);
          return h.length && h[0] === a[0] ? pf(h) : [];
        }), EQ = Ge(function(a) {
          var h = gn(a), d = Ct(a, Pf);
          return h === gn(d) ? h = t : d.pop(), d.length && d[0] === a[0] ? pf(d, Xe(h, 2)) : [];
        }), qQ = Ge(function(a) {
          var h = gn(a), d = Ct(a, Pf);
          return h = typeof h == "function" ? h : t, h && d.pop(), d.length && d[0] === a[0] ? pf(d, t, h) : [];
        });
        function VQ(a, h) {
          return a == null ? "" : A$.call(a, h);
        }
        function gn(a) {
          var h = a == null ? 0 : a.length;
          return h ? a[h - 1] : t;
        }
        function LQ(a, h, d) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var S = m;
          return d !== t && (S = Be(d), S = S < 0 ? Jt(m + S, 0) : mi(S, m - 1)), h === h ? b$(a, h, S) : _a(a, kd, S, !0);
        }
        function UQ(a, h) {
          return a && a.length ? rp(a, Be(h)) : t;
        }
        var YQ = Ge(Np);
        function Np(a, h) {
          return a && a.length && h && h.length ? bf(a, h) : a;
        }
        function DQ(a, h, d) {
          return a && a.length && h && h.length ? bf(a, h, Xe(d, 2)) : a;
        }
        function zQ(a, h, d) {
          return a && a.length && h && h.length ? bf(a, h, t, d) : a;
        }
        var jQ = wr(function(a, h) {
          var d = a == null ? 0 : a.length, m = ff(a, h);
          return op(a, Ct(h, function(S) {
            return kr(S, d) ? +S : S;
          }).sort(mp)), m;
        });
        function BQ(a, h) {
          var d = [];
          if (!(a && a.length))
            return d;
          var m = -1, S = [], Q = a.length;
          for (h = Xe(h, 3); ++m < Q; ) {
            var W = a[m];
            h(W, m, a) && (d.push(W), S.push(m));
          }
          return op(a, S), d;
        }
        function Vf(a) {
          return a == null ? a : V$.call(a);
        }
        function IQ(a, h, d) {
          var m = a == null ? 0 : a.length;
          return m ? (d && typeof d != "number" && Wi(a, h, d) ? (h = 0, d = m) : (h = h == null ? 0 : Be(h), d = d === t ? m : Be(d)), pn(a, h, d)) : [];
        }
        function NQ(a, h) {
          return Na(a, h);
        }
        function FQ(a, h, d) {
          return yf(a, h, Xe(d, 2));
        }
        function GQ(a, h) {
          var d = a == null ? 0 : a.length;
          if (d) {
            var m = Na(a, h);
            if (m < d && Mn(a[m], h))
              return m;
          }
          return -1;
        }
        function HQ(a, h) {
          return Na(a, h, !0);
        }
        function KQ(a, h, d) {
          return yf(a, h, Xe(d, 2), !0);
        }
        function JQ(a, h) {
          var d = a == null ? 0 : a.length;
          if (d) {
            var m = Na(a, h, !0) - 1;
            if (Mn(a[m], h))
              return m;
          }
          return -1;
        }
        function ex(a) {
          return a && a.length ? cp(a) : [];
        }
        function tx(a, h) {
          return a && a.length ? cp(a, Xe(h, 2)) : [];
        }
        function ix(a) {
          var h = a == null ? 0 : a.length;
          return h ? pn(a, 1, h) : [];
        }
        function nx(a, h, d) {
          return a && a.length ? (h = d || h === t ? 1 : Be(h), pn(a, 0, h < 0 ? 0 : h)) : [];
        }
        function rx(a, h, d) {
          var m = a == null ? 0 : a.length;
          return m ? (h = d || h === t ? 1 : Be(h), h = m - h, pn(a, h < 0 ? 0 : h, m)) : [];
        }
        function sx(a, h) {
          return a && a.length ? Fa(a, Xe(h, 3), !1, !0) : [];
        }
        function lx(a, h) {
          return a && a.length ? Fa(a, Xe(h, 3)) : [];
        }
        var ox = Ge(function(a) {
          return Fr(ai(a, 1, Yt, !0));
        }), ax = Ge(function(a) {
          var h = gn(a);
          return Yt(h) && (h = t), Fr(ai(a, 1, Yt, !0), Xe(h, 2));
        }), cx = Ge(function(a) {
          var h = gn(a);
          return h = typeof h == "function" ? h : t, Fr(ai(a, 1, Yt, !0), t, h);
        });
        function hx(a) {
          return a && a.length ? Fr(a) : [];
        }
        function fx(a, h) {
          return a && a.length ? Fr(a, Xe(h, 2)) : [];
        }
        function ux(a, h) {
          return h = typeof h == "function" ? h : t, a && a.length ? Fr(a, t, h) : [];
        }
        function Lf(a) {
          if (!(a && a.length))
            return [];
          var h = 0;
          return a = Rn(a, function(d) {
            if (Yt(d))
              return h = Jt(d.length, h), !0;
          }), nf(h, function(d) {
            return Ct(a, Jh(d));
          });
        }
        function Fp(a, h) {
          if (!(a && a.length))
            return [];
          var d = Lf(a);
          return h == null ? d : Ct(d, function(m) {
            return Ht(h, t, m);
          });
        }
        var Ox = Ge(function(a, h) {
          return Yt(a) ? so(a, h) : [];
        }), dx = Ge(function(a) {
          return xf(Rn(a, Yt));
        }), px = Ge(function(a) {
          var h = gn(a);
          return Yt(h) && (h = t), xf(Rn(a, Yt), Xe(h, 2));
        }), gx = Ge(function(a) {
          var h = gn(a);
          return h = typeof h == "function" ? h : t, xf(Rn(a, Yt), t, h);
        }), mx = Ge(Lf);
        function vx(a, h) {
          return Op(a || [], h || [], ro);
        }
        function bx(a, h) {
          return Op(a || [], h || [], ao);
        }
        var Sx = Ge(function(a) {
          var h = a.length, d = h > 1 ? a[h - 1] : t;
          return d = typeof d == "function" ? (a.pop(), d) : t, Fp(a, d);
        });
        function Gp(a) {
          var h = y(a);
          return h.__chain__ = !0, h;
        }
        function $x(a, h) {
          return h(a), a;
        }
        function rc(a, h) {
          return h(a);
        }
        var yx = wr(function(a) {
          var h = a.length, d = h ? a[0] : 0, m = this.__wrapped__, S = function(Q) {
            return ff(Q, a);
          };
          return h > 1 || this.__actions__.length || !(m instanceof tt) || !kr(d) ? this.thru(S) : (m = m.slice(d, +d + (h ? 1 : 0)), m.__actions__.push({
            func: rc,
            args: [S],
            thisArg: t
          }), new On(m, this.__chain__).thru(function(Q) {
            return h && !Q.length && Q.push(t), Q;
          }));
        });
        function Qx() {
          return Gp(this);
        }
        function xx() {
          return new On(this.value(), this.__chain__);
        }
        function Px() {
          this.__values__ === t && (this.__values__ = hg(this.value()));
          var a = this.__index__ >= this.__values__.length, h = a ? t : this.__values__[this.__index__++];
          return { done: a, value: h };
        }
        function wx() {
          return this;
        }
        function kx(a) {
          for (var h, d = this; d instanceof Da; ) {
            var m = Dp(d);
            m.__index__ = 0, m.__values__ = t, h ? S.__wrapped__ = m : h = m;
            var S = m;
            d = d.__wrapped__;
          }
          return S.__wrapped__ = a, h;
        }
        function _x() {
          var a = this.__wrapped__;
          if (a instanceof tt) {
            var h = a;
            return this.__actions__.length && (h = new tt(this)), h = h.reverse(), h.__actions__.push({
              func: rc,
              args: [Vf],
              thisArg: t
            }), new On(h, this.__chain__);
          }
          return this.thru(Vf);
        }
        function Wx() {
          return up(this.__wrapped__, this.__actions__);
        }
        var Zx = Ga(function(a, h, d) {
          mt.call(a, d) ? ++a[d] : xr(a, d, 1);
        });
        function Tx(a, h, d) {
          var m = je(a) ? Gs : $y;
          return d && Wi(a, h, d) && (h = t), m(a, Xe(h, 3));
        }
        function Cx(a, h) {
          var d = je(a) ? Rn : Fd;
          return d(a, Xe(h, 3));
        }
        var Rx = Qp(zp), Xx = Qp(jp);
        function Ax(a, h) {
          return ai(sc(a, h), 1);
        }
        function Mx(a, h) {
          return ai(sc(a, h), We);
        }
        function Ex(a, h, d) {
          return d = d === t ? 1 : Be(d), ai(sc(a, h), d);
        }
        function Hp(a, h) {
          var d = je(a) ? gi : Nr;
          return d(a, Xe(h, 3));
        }
        function Kp(a, h) {
          var d = je(a) ? Hl : Nd;
          return d(a, Xe(h, 3));
        }
        var qx = Ga(function(a, h, d) {
          mt.call(a, d) ? a[d].push(h) : xr(a, d, [h]);
        });
        function Vx(a, h, d, m) {
          a = Vi(a) ? a : hl(a), d = d && !m ? Be(d) : 0;
          var S = a.length;
          return d < 0 && (d = Jt(S + d, 0)), hc(a) ? d <= S && a.indexOf(h, d) > -1 : !!S && Ks(a, h, d) > -1;
        }
        var Lx = Ge(function(a, h, d) {
          var m = -1, S = typeof h == "function", Q = Vi(a) ? L(a.length) : [];
          return Nr(a, function(W) {
            Q[++m] = S ? Ht(h, W, d) : lo(W, h, d);
          }), Q;
        }), Ux = Ga(function(a, h, d) {
          xr(a, d, h);
        });
        function sc(a, h) {
          var d = je(a) ? Ct : tp;
          return d(a, Xe(h, 3));
        }
        function Yx(a, h, d, m) {
          return a == null ? [] : (je(h) || (h = h == null ? [] : [h]), d = m ? t : d, je(d) || (d = d == null ? [] : [d]), sp(a, h, d));
        }
        var Dx = Ga(function(a, h, d) {
          a[d ? 0 : 1].push(h);
        }, function() {
          return [[], []];
        });
        function zx(a, h, d) {
          var m = je(a) ? Hh : Wd, S = arguments.length < 3;
          return m(a, Xe(h, 4), d, S, Nr);
        }
        function jx(a, h, d) {
          var m = je(a) ? n$ : Wd, S = arguments.length < 3;
          return m(a, Xe(h, 4), d, S, Nd);
        }
        function Bx(a, h) {
          var d = je(a) ? Rn : Fd;
          return d(a, ac(Xe(h, 3)));
        }
        function Ix(a) {
          var h = je(a) ? zd : Vy;
          return h(a);
        }
        function Nx(a, h, d) {
          (d ? Wi(a, h, d) : h === t) ? h = 1 : h = Be(h);
          var m = je(a) ? gy : Ly;
          return m(a, h);
        }
        function Fx(a) {
          var h = je(a) ? my : Yy;
          return h(a);
        }
        function Gx(a) {
          if (a == null)
            return 0;
          if (Vi(a))
            return hc(a) ? el(a) : a.length;
          var h = vi(a);
          return h == be || h == Ue ? a.size : mf(a).length;
        }
        function Hx(a, h, d) {
          var m = je(a) ? Kh : Dy;
          return d && Wi(a, h, d) && (h = t), m(a, Xe(h, 3));
        }
        var Kx = Ge(function(a, h) {
          if (a == null)
            return [];
          var d = h.length;
          return d > 1 && Wi(a, h[0], h[1]) ? h = [] : d > 2 && Wi(h[0], h[1], h[2]) && (h = [h[0]]), sp(a, ai(h, 1), []);
        }), lc = C$ || function() {
          return oe.Date.now();
        };
        function Jx(a, h) {
          if (typeof h != "function")
            throw new un(o);
          return a = Be(a), function() {
            if (--a < 1)
              return h.apply(this, arguments);
          };
        }
        function Jp(a, h, d) {
          return h = d ? t : h, h = a && h == null ? a.length : h, Pr(a, M, t, t, t, t, h);
        }
        function eg(a, h) {
          var d;
          if (typeof h != "function")
            throw new un(o);
          return a = Be(a), function() {
            return --a > 0 && (d = h.apply(this, arguments)), a <= 1 && (h = t), d;
          };
        }
        var Uf = Ge(function(a, h, d) {
          var m = P;
          if (d.length) {
            var S = Br(d, al(Uf));
            m |= T;
          }
          return Pr(a, m, h, d, S);
        }), tg = Ge(function(a, h, d) {
          var m = P | k;
          if (d.length) {
            var S = Br(d, al(tg));
            m |= T;
          }
          return Pr(h, m, a, d, S);
        });
        function ig(a, h, d) {
          h = d ? t : h;
          var m = Pr(a, w, t, t, t, t, t, h);
          return m.placeholder = ig.placeholder, m;
        }
        function ng(a, h, d) {
          h = d ? t : h;
          var m = Pr(a, Z, t, t, t, t, t, h);
          return m.placeholder = ng.placeholder, m;
        }
        function rg(a, h, d) {
          var m, S, Q, W, C, A, G = 0, H = !1, ee = !1, Oe = !0;
          if (typeof a != "function")
            throw new un(o);
          h = mn(h) || 0, Xt(d) && (H = !!d.leading, ee = "maxWait" in d, Q = ee ? Jt(mn(d.maxWait) || 0, h) : Q, Oe = "trailing" in d ? !!d.trailing : Oe);
          function Pe(Dt) {
            var En = m, Zr = S;
            return m = S = t, G = Dt, W = a.apply(Zr, En), W;
          }
          function Ee(Dt) {
            return G = Dt, C = fo(Je, h), H ? Pe(Dt) : W;
          }
          function Ie(Dt) {
            var En = Dt - A, Zr = Dt - G, Qg = h - En;
            return ee ? mi(Qg, Q - Zr) : Qg;
          }
          function qe(Dt) {
            var En = Dt - A, Zr = Dt - G;
            return A === t || En >= h || En < 0 || ee && Zr >= Q;
          }
          function Je() {
            var Dt = lc();
            if (qe(Dt))
              return nt(Dt);
            C = fo(Je, Ie(Dt));
          }
          function nt(Dt) {
            return C = t, Oe && m ? Pe(Dt) : (m = S = t, W);
          }
          function en() {
            C !== t && dp(C), G = 0, m = A = S = C = t;
          }
          function Zi() {
            return C === t ? W : nt(lc());
          }
          function tn() {
            var Dt = lc(), En = qe(Dt);
            if (m = arguments, S = this, A = Dt, En) {
              if (C === t)
                return Ee(A);
              if (ee)
                return dp(C), C = fo(Je, h), Pe(A);
            }
            return C === t && (C = fo(Je, h)), W;
          }
          return tn.cancel = en, tn.flush = Zi, tn;
        }
        var eP = Ge(function(a, h) {
          return Id(a, 1, h);
        }), tP = Ge(function(a, h, d) {
          return Id(a, mn(h) || 0, d);
        });
        function iP(a) {
          return Pr(a, V);
        }
        function oc(a, h) {
          if (typeof a != "function" || h != null && typeof h != "function")
            throw new un(o);
          var d = function() {
            var m = arguments, S = h ? h.apply(this, m) : m[0], Q = d.cache;
            if (Q.has(S))
              return Q.get(S);
            var W = a.apply(this, m);
            return d.cache = Q.set(S, W) || Q, W;
          };
          return d.cache = new (oc.Cache || Qr)(), d;
        }
        oc.Cache = Qr;
        function ac(a) {
          if (typeof a != "function")
            throw new un(o);
          return function() {
            var h = arguments;
            switch (h.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, h[0]);
              case 2:
                return !a.call(this, h[0], h[1]);
              case 3:
                return !a.call(this, h[0], h[1], h[2]);
            }
            return !a.apply(this, h);
          };
        }
        function nP(a) {
          return eg(2, a);
        }
        var rP = zy(function(a, h) {
          h = h.length == 1 && je(h[0]) ? Ct(h[0], Hi(Xe())) : Ct(ai(h, 1), Hi(Xe()));
          var d = h.length;
          return Ge(function(m) {
            for (var S = -1, Q = mi(m.length, d); ++S < Q; )
              m[S] = h[S].call(this, m[S]);
            return Ht(a, this, m);
          });
        }), Yf = Ge(function(a, h) {
          var d = Br(h, al(Yf));
          return Pr(a, T, t, h, d);
        }), sg = Ge(function(a, h) {
          var d = Br(h, al(sg));
          return Pr(a, E, t, h, d);
        }), sP = wr(function(a, h) {
          return Pr(a, D, t, t, t, h);
        });
        function lP(a, h) {
          if (typeof a != "function")
            throw new un(o);
          return h = h === t ? h : Be(h), Ge(a, h);
        }
        function oP(a, h) {
          if (typeof a != "function")
            throw new un(o);
          return h = h == null ? 0 : Jt(Be(h), 0), Ge(function(d) {
            var m = d[h], S = Hr(d, 0, h);
            return m && jr(S, m), Ht(a, this, S);
          });
        }
        function aP(a, h, d) {
          var m = !0, S = !0;
          if (typeof a != "function")
            throw new un(o);
          return Xt(d) && (m = "leading" in d ? !!d.leading : m, S = "trailing" in d ? !!d.trailing : S), rg(a, h, {
            leading: m,
            maxWait: h,
            trailing: S
          });
        }
        function cP(a) {
          return Jp(a, 1);
        }
        function hP(a, h) {
          return Yf(wf(h), a);
        }
        function fP() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return je(a) ? a : [a];
        }
        function uP(a) {
          return dn(a, b);
        }
        function OP(a, h) {
          return h = typeof h == "function" ? h : t, dn(a, b, h);
        }
        function dP(a) {
          return dn(a, p | b);
        }
        function pP(a, h) {
          return h = typeof h == "function" ? h : t, dn(a, p | b, h);
        }
        function gP(a, h) {
          return h == null || Bd(a, h, ni(h));
        }
        function Mn(a, h) {
          return a === h || a !== a && h !== h;
        }
        var mP = ec(df), vP = ec(function(a, h) {
          return a >= h;
        }), ks = Kd(/* @__PURE__ */ function() {
          return arguments;
        }()) ? Kd : function(a) {
          return Vt(a) && mt.call(a, "callee") && !qd.call(a, "callee");
        }, je = L.isArray, bP = lt ? Hi(lt) : ky;
        function Vi(a) {
          return a != null && cc(a.length) && !_r(a);
        }
        function Yt(a) {
          return Vt(a) && Vi(a);
        }
        function SP(a) {
          return a === !0 || a === !1 || Vt(a) && _i(a) == re;
        }
        var Kr = X$ || Jf, $P = Fe ? Hi(Fe) : _y;
        function yP(a) {
          return Vt(a) && a.nodeType === 1 && !uo(a);
        }
        function QP(a) {
          if (a == null)
            return !0;
          if (Vi(a) && (je(a) || typeof a == "string" || typeof a.splice == "function" || Kr(a) || cl(a) || ks(a)))
            return !a.length;
          var h = vi(a);
          if (h == be || h == Ue)
            return !a.size;
          if (ho(a))
            return !mf(a).length;
          for (var d in a)
            if (mt.call(a, d))
              return !1;
          return !0;
        }
        function xP(a, h) {
          return oo(a, h);
        }
        function PP(a, h, d) {
          d = typeof d == "function" ? d : t;
          var m = d ? d(a, h) : t;
          return m === t ? oo(a, h, t, d) : !!m;
        }
        function Df(a) {
          if (!Vt(a))
            return !1;
          var h = _i(a);
          return h == J || h == ne || typeof a.message == "string" && typeof a.name == "string" && !uo(a);
        }
        function wP(a) {
          return typeof a == "number" && Ld(a);
        }
        function _r(a) {
          if (!Xt(a))
            return !1;
          var h = _i(a);
          return h == he || h == ye || h == Me || h == et;
        }
        function lg(a) {
          return typeof a == "number" && a == Be(a);
        }
        function cc(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= we;
        }
        function Xt(a) {
          var h = typeof a;
          return a != null && (h == "object" || h == "function");
        }
        function Vt(a) {
          return a != null && typeof a == "object";
        }
        var og = Ve ? Hi(Ve) : Zy;
        function kP(a, h) {
          return a === h || gf(a, h, Rf(h));
        }
        function _P(a, h, d) {
          return d = typeof d == "function" ? d : t, gf(a, h, Rf(h), d);
        }
        function WP(a) {
          return ag(a) && a != +a;
        }
        function ZP(a) {
          if (OQ(a))
            throw new ze(l);
          return Jd(a);
        }
        function TP(a) {
          return a === null;
        }
        function CP(a) {
          return a == null;
        }
        function ag(a) {
          return typeof a == "number" || Vt(a) && _i(a) == Ce;
        }
        function uo(a) {
          if (!Vt(a) || _i(a) != Ke)
            return !1;
          var h = Ma(a);
          if (h === null)
            return !0;
          var d = mt.call(h, "constructor") && h.constructor;
          return typeof d == "function" && d instanceof d && Ca.call(d) == _$;
        }
        var zf = at ? Hi(at) : Ty;
        function RP(a) {
          return lg(a) && a >= -9007199254740991 && a <= we;
        }
        var cg = St ? Hi(St) : Cy;
        function hc(a) {
          return typeof a == "string" || !je(a) && Vt(a) && _i(a) == se;
        }
        function Ji(a) {
          return typeof a == "symbol" || Vt(a) && _i(a) == wt;
        }
        var cl = Nn ? Hi(Nn) : Ry;
        function XP(a) {
          return a === t;
        }
        function AP(a) {
          return Vt(a) && vi(a) == vt;
        }
        function MP(a) {
          return Vt(a) && _i(a) == Ut;
        }
        var EP = ec(vf), qP = ec(function(a, h) {
          return a <= h;
        });
        function hg(a) {
          if (!a)
            return [];
          if (Vi(a))
            return hc(a) ? Xn(a) : qi(a);
          if (Jl && a[Jl])
            return g$(a[Jl]());
          var h = vi(a), d = h == be ? sf : h == Ue ? Wa : hl;
          return d(a);
        }
        function Wr(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = mn(a), a === We || a === -1 / 0) {
            var h = a < 0 ? -1 : 1;
            return h * xe;
          }
          return a === a ? a : 0;
        }
        function Be(a) {
          var h = Wr(a), d = h % 1;
          return h === h ? d ? h - d : h : 0;
        }
        function fg(a) {
          return a ? Qs(Be(a), 0, de) : 0;
        }
        function mn(a) {
          if (typeof a == "number")
            return a;
          if (Ji(a))
            return me;
          if (Xt(a)) {
            var h = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = Xt(h) ? h + "" : h;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = Zd(a);
          var d = In.test(a);
          return d || Zn.test(a) ? ie(a.slice(2), d ? 2 : 8) : pi.test(a) ? me : +a;
        }
        function ug(a) {
          return Gn(a, Li(a));
        }
        function VP(a) {
          return a ? Qs(Be(a), -9007199254740991, we) : a === 0 ? a : 0;
        }
        function Ot(a) {
          return a == null ? "" : Ki(a);
        }
        var LP = ll(function(a, h) {
          if (ho(h) || Vi(h)) {
            Gn(h, ni(h), a);
            return;
          }
          for (var d in h)
            mt.call(h, d) && ro(a, d, h[d]);
        }), Og = ll(function(a, h) {
          Gn(h, Li(h), a);
        }), fc = ll(function(a, h, d, m) {
          Gn(h, Li(h), a, m);
        }), UP = ll(function(a, h, d, m) {
          Gn(h, ni(h), a, m);
        }), YP = wr(ff);
        function DP(a, h) {
          var d = sl(a);
          return h == null ? d : jd(d, h);
        }
        var zP = Ge(function(a, h) {
          a = Qt(a);
          var d = -1, m = h.length, S = m > 2 ? h[2] : t;
          for (S && Wi(h[0], h[1], S) && (m = 1); ++d < m; )
            for (var Q = h[d], W = Li(Q), C = -1, A = W.length; ++C < A; ) {
              var G = W[C], H = a[G];
              (H === t || Mn(H, il[G]) && !mt.call(a, G)) && (a[G] = Q[G]);
            }
          return a;
        }), jP = Ge(function(a) {
          return a.push(t, Zp), Ht(dg, t, a);
        });
        function BP(a, h) {
          return wd(a, Xe(h, 3), Fn);
        }
        function IP(a, h) {
          return wd(a, Xe(h, 3), Of);
        }
        function NP(a, h) {
          return a == null ? a : uf(a, Xe(h, 3), Li);
        }
        function FP(a, h) {
          return a == null ? a : Gd(a, Xe(h, 3), Li);
        }
        function GP(a, h) {
          return a && Fn(a, Xe(h, 3));
        }
        function HP(a, h) {
          return a && Of(a, Xe(h, 3));
        }
        function KP(a) {
          return a == null ? [] : Ba(a, ni(a));
        }
        function JP(a) {
          return a == null ? [] : Ba(a, Li(a));
        }
        function jf(a, h, d) {
          var m = a == null ? t : xs(a, h);
          return m === t ? d : m;
        }
        function ew(a, h) {
          return a != null && Rp(a, h, Qy);
        }
        function Bf(a, h) {
          return a != null && Rp(a, h, xy);
        }
        var tw = Pp(function(a, h, d) {
          h != null && typeof h.toString != "function" && (h = Ra.call(h)), a[h] = d;
        }, Nf(Ui)), iw = Pp(function(a, h, d) {
          h != null && typeof h.toString != "function" && (h = Ra.call(h)), mt.call(a, h) ? a[h].push(d) : a[h] = [d];
        }, Xe), nw = Ge(lo);
        function ni(a) {
          return Vi(a) ? Dd(a) : mf(a);
        }
        function Li(a) {
          return Vi(a) ? Dd(a, !0) : Xy(a);
        }
        function rw(a, h) {
          var d = {};
          return h = Xe(h, 3), Fn(a, function(m, S, Q) {
            xr(d, h(m, S, Q), m);
          }), d;
        }
        function sw(a, h) {
          var d = {};
          return h = Xe(h, 3), Fn(a, function(m, S, Q) {
            xr(d, S, h(m, S, Q));
          }), d;
        }
        var lw = ll(function(a, h, d) {
          Ia(a, h, d);
        }), dg = ll(function(a, h, d, m) {
          Ia(a, h, d, m);
        }), ow = wr(function(a, h) {
          var d = {};
          if (a == null)
            return d;
          var m = !1;
          h = Ct(h, function(Q) {
            return Q = Gr(Q, a), m || (m = Q.length > 1), Q;
          }), Gn(a, Tf(a), d), m && (d = dn(d, p | g | b, tQ));
          for (var S = h.length; S--; )
            Qf(d, h[S]);
          return d;
        });
        function aw(a, h) {
          return pg(a, ac(Xe(h)));
        }
        var cw = wr(function(a, h) {
          return a == null ? {} : My(a, h);
        });
        function pg(a, h) {
          if (a == null)
            return {};
          var d = Ct(Tf(a), function(m) {
            return [m];
          });
          return h = Xe(h), lp(a, d, function(m, S) {
            return h(m, S[0]);
          });
        }
        function hw(a, h, d) {
          h = Gr(h, a);
          var m = -1, S = h.length;
          for (S || (S = 1, a = t); ++m < S; ) {
            var Q = a == null ? t : a[Hn(h[m])];
            Q === t && (m = S, Q = d), a = _r(Q) ? Q.call(a) : Q;
          }
          return a;
        }
        function fw(a, h, d) {
          return a == null ? a : ao(a, h, d);
        }
        function uw(a, h, d, m) {
          return m = typeof m == "function" ? m : t, a == null ? a : ao(a, h, d, m);
        }
        var gg = _p(ni), mg = _p(Li);
        function Ow(a, h, d) {
          var m = je(a), S = m || Kr(a) || cl(a);
          if (h = Xe(h, 4), d == null) {
            var Q = a && a.constructor;
            S ? d = m ? new Q() : [] : Xt(a) ? d = _r(Q) ? sl(Ma(a)) : {} : d = {};
          }
          return (S ? gi : Fn)(a, function(W, C, A) {
            return h(d, W, C, A);
          }), d;
        }
        function dw(a, h) {
          return a == null ? !0 : Qf(a, h);
        }
        function pw(a, h, d) {
          return a == null ? a : fp(a, h, wf(d));
        }
        function gw(a, h, d, m) {
          return m = typeof m == "function" ? m : t, a == null ? a : fp(a, h, wf(d), m);
        }
        function hl(a) {
          return a == null ? [] : rf(a, ni(a));
        }
        function mw(a) {
          return a == null ? [] : rf(a, Li(a));
        }
        function vw(a, h, d) {
          return d === t && (d = h, h = t), d !== t && (d = mn(d), d = d === d ? d : 0), h !== t && (h = mn(h), h = h === h ? h : 0), Qs(mn(a), h, d);
        }
        function bw(a, h, d) {
          return h = Wr(h), d === t ? (d = h, h = 0) : d = Wr(d), a = mn(a), Py(a, h, d);
        }
        function Sw(a, h, d) {
          if (d && typeof d != "boolean" && Wi(a, h, d) && (h = d = t), d === t && (typeof h == "boolean" ? (d = h, h = t) : typeof a == "boolean" && (d = a, a = t)), a === t && h === t ? (a = 0, h = 1) : (a = Wr(a), h === t ? (h = a, a = 0) : h = Wr(h)), a > h) {
            var m = a;
            a = h, h = m;
          }
          if (d || a % 1 || h % 1) {
            var S = Ud();
            return mi(a + S * (h - a + N("1e-" + ((S + "").length - 1))), h);
          }
          return Sf(a, h);
        }
        var $w = ol(function(a, h, d) {
          return h = h.toLowerCase(), a + (d ? vg(h) : h);
        });
        function vg(a) {
          return If(Ot(a).toLowerCase());
        }
        function bg(a) {
          return a = Ot(a), a && a.replace(ms, f$).replace(jh, "");
        }
        function yw(a, h, d) {
          a = Ot(a), h = Ki(h);
          var m = a.length;
          d = d === t ? m : Qs(Be(d), 0, m);
          var S = d;
          return d -= h.length, d >= 0 && a.slice(d, S) == h;
        }
        function Qw(a) {
          return a = Ot(a), a && dr.test(a) ? a.replace(Gt, u$) : a;
        }
        function xw(a) {
          return a = Ot(a), a && wi.test(a) ? a.replace(kn, "\\$&") : a;
        }
        var Pw = ol(function(a, h, d) {
          return a + (d ? "-" : "") + h.toLowerCase();
        }), ww = ol(function(a, h, d) {
          return a + (d ? " " : "") + h.toLowerCase();
        }), kw = yp("toLowerCase");
        function _w(a, h, d) {
          a = Ot(a), h = Be(h);
          var m = h ? el(a) : 0;
          if (!h || m >= h)
            return a;
          var S = (h - m) / 2;
          return Ja(La(S), d) + a + Ja(Va(S), d);
        }
        function Ww(a, h, d) {
          a = Ot(a), h = Be(h);
          var m = h ? el(a) : 0;
          return h && m < h ? a + Ja(h - m, d) : a;
        }
        function Zw(a, h, d) {
          a = Ot(a), h = Be(h);
          var m = h ? el(a) : 0;
          return h && m < h ? Ja(h - m, d) + a : a;
        }
        function Tw(a, h, d) {
          return d || h == null ? h = 0 : h && (h = +h), q$(Ot(a).replace(Fi, ""), h || 0);
        }
        function Cw(a, h, d) {
          return (d ? Wi(a, h, d) : h === t) ? h = 1 : h = Be(h), $f(Ot(a), h);
        }
        function Rw() {
          var a = arguments, h = Ot(a[0]);
          return a.length < 3 ? h : h.replace(a[1], a[2]);
        }
        var Xw = ol(function(a, h, d) {
          return a + (d ? "_" : "") + h.toLowerCase();
        });
        function Aw(a, h, d) {
          return d && typeof d != "number" && Wi(a, h, d) && (h = d = t), d = d === t ? de : d >>> 0, d ? (a = Ot(a), a && (typeof h == "string" || h != null && !zf(h)) && (h = Ki(h), !h && Js(a)) ? Hr(Xn(a), 0, d) : a.split(h, d)) : [];
        }
        var Mw = ol(function(a, h, d) {
          return a + (d ? " " : "") + If(h);
        });
        function Ew(a, h, d) {
          return a = Ot(a), d = d == null ? 0 : Qs(Be(d), 0, a.length), h = Ki(h), a.slice(d, d + h.length) == h;
        }
        function qw(a, h, d) {
          var m = y.templateSettings;
          d && Wi(a, h, d) && (h = t), a = Ot(a), h = fc({}, h, m, Wp);
          var S = fc({}, h.imports, m.imports, Wp), Q = ni(S), W = rf(S, Q), C, A, G = 0, H = h.interpolate || Tn, ee = "__p += '", Oe = lf(
            (h.escape || Tn).source + "|" + H.source + "|" + (H === di ? Ul : Tn).source + "|" + (h.evaluate || Tn).source + "|$",
            "g"
          ), Pe = "//# sourceURL=" + (mt.call(h, "sourceURL") ? (h.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++ka + "]") + `
`;
          a.replace(Oe, function(qe, Je, nt, en, Zi, tn) {
            return nt || (nt = en), ee += a.slice(G, tn).replace(Ls, O$), Je && (C = !0, ee += `' +
__e(` + Je + `) +
'`), Zi && (A = !0, ee += `';
` + Zi + `;
__p += '`), nt && (ee += `' +
((__t = (` + nt + `)) == null ? '' : __t) +
'`), G = tn + qe.length, qe;
          }), ee += `';
`;
          var Ee = mt.call(h, "variable") && h.variable;
          if (!Ee)
            ee = `with (obj) {
` + ee + `
}
`;
          else if (Wn.test(Ee))
            throw new ze(c);
          ee = (A ? ee.replace(ii, "") : ee).replace(Xi, "$1").replace(oi, "$1;"), ee = "function(" + (Ee || "obj") + `) {
` + (Ee ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (C ? ", __e = _.escape" : "") + (A ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + ee + `return __p
}`;
          var Ie = $g(function() {
            return ut(Q, Pe + "return " + ee).apply(t, W);
          });
          if (Ie.source = ee, Df(Ie))
            throw Ie;
          return Ie;
        }
        function Vw(a) {
          return Ot(a).toLowerCase();
        }
        function Lw(a) {
          return Ot(a).toUpperCase();
        }
        function Uw(a, h, d) {
          if (a = Ot(a), a && (d || h === t))
            return Zd(a);
          if (!a || !(h = Ki(h)))
            return a;
          var m = Xn(a), S = Xn(h), Q = Td(m, S), W = Cd(m, S) + 1;
          return Hr(m, Q, W).join("");
        }
        function Yw(a, h, d) {
          if (a = Ot(a), a && (d || h === t))
            return a.slice(0, Xd(a) + 1);
          if (!a || !(h = Ki(h)))
            return a;
          var m = Xn(a), S = Cd(m, Xn(h)) + 1;
          return Hr(m, 0, S).join("");
        }
        function Dw(a, h, d) {
          if (a = Ot(a), a && (d || h === t))
            return a.replace(Fi, "");
          if (!a || !(h = Ki(h)))
            return a;
          var m = Xn(a), S = Td(m, Xn(h));
          return Hr(m, S).join("");
        }
        function zw(a, h) {
          var d = I, m = U;
          if (Xt(h)) {
            var S = "separator" in h ? h.separator : S;
            d = "length" in h ? Be(h.length) : d, m = "omission" in h ? Ki(h.omission) : m;
          }
          a = Ot(a);
          var Q = a.length;
          if (Js(a)) {
            var W = Xn(a);
            Q = W.length;
          }
          if (d >= Q)
            return a;
          var C = d - el(m);
          if (C < 1)
            return m;
          var A = W ? Hr(W, 0, C).join("") : a.slice(0, C);
          if (S === t)
            return A + m;
          if (W && (C += A.length - C), zf(S)) {
            if (a.slice(C).search(S)) {
              var G, H = A;
              for (S.global || (S = lf(S.source, Ot(ki.exec(S)) + "g")), S.lastIndex = 0; G = S.exec(H); )
                var ee = G.index;
              A = A.slice(0, ee === t ? C : ee);
            }
          } else if (a.indexOf(Ki(S), C) != C) {
            var Oe = A.lastIndexOf(S);
            Oe > -1 && (A = A.slice(0, Oe));
          }
          return A + m;
        }
        function jw(a) {
          return a = Ot(a), a && Ai.test(a) ? a.replace(Ni, S$) : a;
        }
        var Bw = ol(function(a, h, d) {
          return a + (d ? " " : "") + h.toUpperCase();
        }), If = yp("toUpperCase");
        function Sg(a, h, d) {
          return a = Ot(a), h = d ? t : h, h === t ? p$(a) ? Q$(a) : l$(a) : a.match(h) || [];
        }
        var $g = Ge(function(a, h) {
          try {
            return Ht(a, t, h);
          } catch (d) {
            return Df(d) ? d : new ze(d);
          }
        }), Iw = wr(function(a, h) {
          return gi(h, function(d) {
            d = Hn(d), xr(a, d, Uf(a[d], a));
          }), a;
        });
        function Nw(a) {
          var h = a == null ? 0 : a.length, d = Xe();
          return a = h ? Ct(a, function(m) {
            if (typeof m[1] != "function")
              throw new un(o);
            return [d(m[0]), m[1]];
          }) : [], Ge(function(m) {
            for (var S = -1; ++S < h; ) {
              var Q = a[S];
              if (Ht(Q[0], this, m))
                return Ht(Q[1], this, m);
            }
          });
        }
        function Fw(a) {
          return Sy(dn(a, p));
        }
        function Nf(a) {
          return function() {
            return a;
          };
        }
        function Gw(a, h) {
          return a == null || a !== a ? h : a;
        }
        var Hw = xp(), Kw = xp(!0);
        function Ui(a) {
          return a;
        }
        function Ff(a) {
          return ep(typeof a == "function" ? a : dn(a, p));
        }
        function Jw(a) {
          return ip(dn(a, p));
        }
        function ek(a, h) {
          return np(a, dn(h, p));
        }
        var tk = Ge(function(a, h) {
          return function(d) {
            return lo(d, a, h);
          };
        }), ik = Ge(function(a, h) {
          return function(d) {
            return lo(a, d, h);
          };
        });
        function Gf(a, h, d) {
          var m = ni(h), S = Ba(h, m);
          d == null && !(Xt(h) && (S.length || !m.length)) && (d = h, h = a, a = this, S = Ba(h, ni(h)));
          var Q = !(Xt(d) && "chain" in d) || !!d.chain, W = _r(a);
          return gi(S, function(C) {
            var A = h[C];
            a[C] = A, W && (a.prototype[C] = function() {
              var G = this.__chain__;
              if (Q || G) {
                var H = a(this.__wrapped__), ee = H.__actions__ = qi(this.__actions__);
                return ee.push({ func: A, args: arguments, thisArg: a }), H.__chain__ = G, H;
              }
              return A.apply(a, jr([this.value()], arguments));
            });
          }), a;
        }
        function nk() {
          return oe._ === this && (oe._ = W$), this;
        }
        function Hf() {
        }
        function rk(a) {
          return a = Be(a), Ge(function(h) {
            return rp(h, a);
          });
        }
        var sk = _f(Ct), lk = _f(Gs), ok = _f(Kh);
        function yg(a) {
          return Af(a) ? Jh(Hn(a)) : Ey(a);
        }
        function ak(a) {
          return function(h) {
            return a == null ? t : xs(a, h);
          };
        }
        var ck = wp(), hk = wp(!0);
        function Kf() {
          return [];
        }
        function Jf() {
          return !1;
        }
        function fk() {
          return {};
        }
        function uk() {
          return "";
        }
        function Ok() {
          return !0;
        }
        function dk(a, h) {
          if (a = Be(a), a < 1 || a > we)
            return [];
          var d = de, m = mi(a, de);
          h = Xe(h), a -= de;
          for (var S = nf(m, h); ++d < a; )
            h(d);
          return S;
        }
        function pk(a) {
          return je(a) ? Ct(a, Hn) : Ji(a) ? [a] : qi(Yp(Ot(a)));
        }
        function gk(a) {
          var h = ++k$;
          return Ot(a) + h;
        }
        var mk = Ka(function(a, h) {
          return a + h;
        }, 0), vk = Wf("ceil"), bk = Ka(function(a, h) {
          return a / h;
        }, 1), Sk = Wf("floor");
        function $k(a) {
          return a && a.length ? ja(a, Ui, df) : t;
        }
        function yk(a, h) {
          return a && a.length ? ja(a, Xe(h, 2), df) : t;
        }
        function Qk(a) {
          return _d(a, Ui);
        }
        function xk(a, h) {
          return _d(a, Xe(h, 2));
        }
        function Pk(a) {
          return a && a.length ? ja(a, Ui, vf) : t;
        }
        function wk(a, h) {
          return a && a.length ? ja(a, Xe(h, 2), vf) : t;
        }
        var kk = Ka(function(a, h) {
          return a * h;
        }, 1), _k = Wf("round"), Wk = Ka(function(a, h) {
          return a - h;
        }, 0);
        function Zk(a) {
          return a && a.length ? tf(a, Ui) : 0;
        }
        function Tk(a, h) {
          return a && a.length ? tf(a, Xe(h, 2)) : 0;
        }
        return y.after = Jx, y.ary = Jp, y.assign = LP, y.assignIn = Og, y.assignInWith = fc, y.assignWith = UP, y.at = YP, y.before = eg, y.bind = Uf, y.bindAll = Iw, y.bindKey = tg, y.castArray = fP, y.chain = Gp, y.chunk = SQ, y.compact = $Q, y.concat = yQ, y.cond = Nw, y.conforms = Fw, y.constant = Nf, y.countBy = Zx, y.create = DP, y.curry = ig, y.curryRight = ng, y.debounce = rg, y.defaults = zP, y.defaultsDeep = jP, y.defer = eP, y.delay = tP, y.difference = QQ, y.differenceBy = xQ, y.differenceWith = PQ, y.drop = wQ, y.dropRight = kQ, y.dropRightWhile = _Q, y.dropWhile = WQ, y.fill = ZQ, y.filter = Cx, y.flatMap = Ax, y.flatMapDeep = Mx, y.flatMapDepth = Ex, y.flatten = Bp, y.flattenDeep = TQ, y.flattenDepth = CQ, y.flip = iP, y.flow = Hw, y.flowRight = Kw, y.fromPairs = RQ, y.functions = KP, y.functionsIn = JP, y.groupBy = qx, y.initial = AQ, y.intersection = MQ, y.intersectionBy = EQ, y.intersectionWith = qQ, y.invert = tw, y.invertBy = iw, y.invokeMap = Lx, y.iteratee = Ff, y.keyBy = Ux, y.keys = ni, y.keysIn = Li, y.map = sc, y.mapKeys = rw, y.mapValues = sw, y.matches = Jw, y.matchesProperty = ek, y.memoize = oc, y.merge = lw, y.mergeWith = dg, y.method = tk, y.methodOf = ik, y.mixin = Gf, y.negate = ac, y.nthArg = rk, y.omit = ow, y.omitBy = aw, y.once = nP, y.orderBy = Yx, y.over = sk, y.overArgs = rP, y.overEvery = lk, y.overSome = ok, y.partial = Yf, y.partialRight = sg, y.partition = Dx, y.pick = cw, y.pickBy = pg, y.property = yg, y.propertyOf = ak, y.pull = YQ, y.pullAll = Np, y.pullAllBy = DQ, y.pullAllWith = zQ, y.pullAt = jQ, y.range = ck, y.rangeRight = hk, y.rearg = sP, y.reject = Bx, y.remove = BQ, y.rest = lP, y.reverse = Vf, y.sampleSize = Nx, y.set = fw, y.setWith = uw, y.shuffle = Fx, y.slice = IQ, y.sortBy = Kx, y.sortedUniq = ex, y.sortedUniqBy = tx, y.split = Aw, y.spread = oP, y.tail = ix, y.take = nx, y.takeRight = rx, y.takeRightWhile = sx, y.takeWhile = lx, y.tap = $x, y.throttle = aP, y.thru = rc, y.toArray = hg, y.toPairs = gg, y.toPairsIn = mg, y.toPath = pk, y.toPlainObject = ug, y.transform = Ow, y.unary = cP, y.union = ox, y.unionBy = ax, y.unionWith = cx, y.uniq = hx, y.uniqBy = fx, y.uniqWith = ux, y.unset = dw, y.unzip = Lf, y.unzipWith = Fp, y.update = pw, y.updateWith = gw, y.values = hl, y.valuesIn = mw, y.without = Ox, y.words = Sg, y.wrap = hP, y.xor = dx, y.xorBy = px, y.xorWith = gx, y.zip = mx, y.zipObject = vx, y.zipObjectDeep = bx, y.zipWith = Sx, y.entries = gg, y.entriesIn = mg, y.extend = Og, y.extendWith = fc, Gf(y, y), y.add = mk, y.attempt = $g, y.camelCase = $w, y.capitalize = vg, y.ceil = vk, y.clamp = vw, y.clone = uP, y.cloneDeep = dP, y.cloneDeepWith = pP, y.cloneWith = OP, y.conformsTo = gP, y.deburr = bg, y.defaultTo = Gw, y.divide = bk, y.endsWith = yw, y.eq = Mn, y.escape = Qw, y.escapeRegExp = xw, y.every = Tx, y.find = Rx, y.findIndex = zp, y.findKey = BP, y.findLast = Xx, y.findLastIndex = jp, y.findLastKey = IP, y.floor = Sk, y.forEach = Hp, y.forEachRight = Kp, y.forIn = NP, y.forInRight = FP, y.forOwn = GP, y.forOwnRight = HP, y.get = jf, y.gt = mP, y.gte = vP, y.has = ew, y.hasIn = Bf, y.head = Ip, y.identity = Ui, y.includes = Vx, y.indexOf = XQ, y.inRange = bw, y.invoke = nw, y.isArguments = ks, y.isArray = je, y.isArrayBuffer = bP, y.isArrayLike = Vi, y.isArrayLikeObject = Yt, y.isBoolean = SP, y.isBuffer = Kr, y.isDate = $P, y.isElement = yP, y.isEmpty = QP, y.isEqual = xP, y.isEqualWith = PP, y.isError = Df, y.isFinite = wP, y.isFunction = _r, y.isInteger = lg, y.isLength = cc, y.isMap = og, y.isMatch = kP, y.isMatchWith = _P, y.isNaN = WP, y.isNative = ZP, y.isNil = CP, y.isNull = TP, y.isNumber = ag, y.isObject = Xt, y.isObjectLike = Vt, y.isPlainObject = uo, y.isRegExp = zf, y.isSafeInteger = RP, y.isSet = cg, y.isString = hc, y.isSymbol = Ji, y.isTypedArray = cl, y.isUndefined = XP, y.isWeakMap = AP, y.isWeakSet = MP, y.join = VQ, y.kebabCase = Pw, y.last = gn, y.lastIndexOf = LQ, y.lowerCase = ww, y.lowerFirst = kw, y.lt = EP, y.lte = qP, y.max = $k, y.maxBy = yk, y.mean = Qk, y.meanBy = xk, y.min = Pk, y.minBy = wk, y.stubArray = Kf, y.stubFalse = Jf, y.stubObject = fk, y.stubString = uk, y.stubTrue = Ok, y.multiply = kk, y.nth = UQ, y.noConflict = nk, y.noop = Hf, y.now = lc, y.pad = _w, y.padEnd = Ww, y.padStart = Zw, y.parseInt = Tw, y.random = Sw, y.reduce = zx, y.reduceRight = jx, y.repeat = Cw, y.replace = Rw, y.result = hw, y.round = _k, y.runInContext = X, y.sample = Ix, y.size = Gx, y.snakeCase = Xw, y.some = Hx, y.sortedIndex = NQ, y.sortedIndexBy = FQ, y.sortedIndexOf = GQ, y.sortedLastIndex = HQ, y.sortedLastIndexBy = KQ, y.sortedLastIndexOf = JQ, y.startCase = Mw, y.startsWith = Ew, y.subtract = Wk, y.sum = Zk, y.sumBy = Tk, y.template = qw, y.times = dk, y.toFinite = Wr, y.toInteger = Be, y.toLength = fg, y.toLower = Vw, y.toNumber = mn, y.toSafeInteger = VP, y.toString = Ot, y.toUpper = Lw, y.trim = Uw, y.trimEnd = Yw, y.trimStart = Dw, y.truncate = zw, y.unescape = jw, y.uniqueId = gk, y.upperCase = Bw, y.upperFirst = If, y.each = Hp, y.eachRight = Kp, y.first = Ip, Gf(y, function() {
          var a = {};
          return Fn(y, function(h, d) {
            mt.call(y.prototype, d) || (a[d] = h);
          }), a;
        }(), { chain: !1 }), y.VERSION = i, gi(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          y[a].placeholder = y;
        }), gi(["drop", "take"], function(a, h) {
          tt.prototype[a] = function(d) {
            d = d === t ? 1 : Jt(Be(d), 0);
            var m = this.__filtered__ && !h ? new tt(this) : this.clone();
            return m.__filtered__ ? m.__takeCount__ = mi(d, m.__takeCount__) : m.__views__.push({
              size: mi(d, de),
              type: a + (m.__dir__ < 0 ? "Right" : "")
            }), m;
          }, tt.prototype[a + "Right"] = function(d) {
            return this.reverse()[a](d).reverse();
          };
        }), gi(["filter", "map", "takeWhile"], function(a, h) {
          var d = h + 1, m = d == te || d == Ae;
          tt.prototype[a] = function(S) {
            var Q = this.clone();
            return Q.__iteratees__.push({
              iteratee: Xe(S, 3),
              type: d
            }), Q.__filtered__ = Q.__filtered__ || m, Q;
          };
        }), gi(["head", "last"], function(a, h) {
          var d = "take" + (h ? "Right" : "");
          tt.prototype[a] = function() {
            return this[d](1).value()[0];
          };
        }), gi(["initial", "tail"], function(a, h) {
          var d = "drop" + (h ? "" : "Right");
          tt.prototype[a] = function() {
            return this.__filtered__ ? new tt(this) : this[d](1);
          };
        }), tt.prototype.compact = function() {
          return this.filter(Ui);
        }, tt.prototype.find = function(a) {
          return this.filter(a).head();
        }, tt.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, tt.prototype.invokeMap = Ge(function(a, h) {
          return typeof a == "function" ? new tt(this) : this.map(function(d) {
            return lo(d, a, h);
          });
        }), tt.prototype.reject = function(a) {
          return this.filter(ac(Xe(a)));
        }, tt.prototype.slice = function(a, h) {
          a = Be(a);
          var d = this;
          return d.__filtered__ && (a > 0 || h < 0) ? new tt(d) : (a < 0 ? d = d.takeRight(-a) : a && (d = d.drop(a)), h !== t && (h = Be(h), d = h < 0 ? d.dropRight(-h) : d.take(h - a)), d);
        }, tt.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, tt.prototype.toArray = function() {
          return this.take(de);
        }, Fn(tt.prototype, function(a, h) {
          var d = /^(?:filter|find|map|reject)|While$/.test(h), m = /^(?:head|last)$/.test(h), S = y[m ? "take" + (h == "last" ? "Right" : "") : h], Q = m || /^find/.test(h);
          S && (y.prototype[h] = function() {
            var W = this.__wrapped__, C = m ? [1] : arguments, A = W instanceof tt, G = C[0], H = A || je(W), ee = function(Je) {
              var nt = S.apply(y, jr([Je], C));
              return m && Oe ? nt[0] : nt;
            };
            H && d && typeof G == "function" && G.length != 1 && (A = H = !1);
            var Oe = this.__chain__, Pe = !!this.__actions__.length, Ee = Q && !Oe, Ie = A && !Pe;
            if (!Q && H) {
              W = Ie ? W : new tt(this);
              var qe = a.apply(W, C);
              return qe.__actions__.push({ func: rc, args: [ee], thisArg: t }), new On(qe, Oe);
            }
            return Ee && Ie ? a.apply(this, C) : (qe = this.thru(ee), Ee ? m ? qe.value()[0] : qe.value() : qe);
          });
        }), gi(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var h = Za[a], d = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", m = /^(?:pop|shift)$/.test(a);
          y.prototype[a] = function() {
            var S = arguments;
            if (m && !this.__chain__) {
              var Q = this.value();
              return h.apply(je(Q) ? Q : [], S);
            }
            return this[d](function(W) {
              return h.apply(je(W) ? W : [], S);
            });
          };
        }), Fn(tt.prototype, function(a, h) {
          var d = y[h];
          if (d) {
            var m = d.name + "";
            mt.call(rl, m) || (rl[m] = []), rl[m].push({ name: h, func: d });
          }
        }), rl[Ha(t, k).name] = [{
          name: "wrapper",
          func: t
        }], tt.prototype.clone = j$, tt.prototype.reverse = B$, tt.prototype.value = I$, y.prototype.at = yx, y.prototype.chain = Qx, y.prototype.commit = xx, y.prototype.next = Px, y.prototype.plant = kx, y.prototype.reverse = _x, y.prototype.toJSON = y.prototype.valueOf = y.prototype.value = Wx, y.prototype.first = y.prototype.head, Jl && (y.prototype[Jl] = wx), y;
      }, tl = x$();
      Qe ? ((Qe.exports = tl)._ = tl, De._ = tl) : oe._ = tl;
    }).call(L4);
  }(Wo, Wo.exports)), Wo.exports;
}
var Y4 = U4();
const D4 = Os.define({
  parser: qZ.configure({
    props: [
      Ml.add({
        ParenthesisedExpression: Jr({
          closing: ")",
          align: !1
        }),
        Application: Jr({ closing: ")", align: !1 }),
        GeneratorCallGenerators: Jr({
          closing: ")",
          align: !1
        }),
        LetItems: Jr({ closing: "}", align: !1 }),
        ArrayLiteral: Jr({ closing: "]", align: !1 }),
        ArrayLiteral2d: Jr({
          closing: "|]",
          align: !1
        }),
        SetLiteral: Jr({ closing: "}", align: !1 })
      }),
      El.add({
        ParenthesisedExpression: ir,
        Application: ir,
        GeneratorCallGenerators: ir,
        LetItems: ir,
        ArrayLiteral: ir,
        ArrayLiteral2d: ir,
        SetLiteral: ir
      }),
      Al({
        Keyword: v.keyword,
        "Identifier QuotedIdentifier": v.variableName,
        "Call/Identifier Call/QuotedIdentifier GeneratorCall/Identifier GeneratorCall/QuotedIdentifier": v.name,
        Absent: v.null,
        Anonymous: v.null,
        BooleanLiteral: v.bool,
        Number: v.number,
        Infinity: v.number,
        StringLiteral: v.string,
        LineComment: v.comment,
        BlockComment: v.comment,
        "( )": v.paren,
        "{ }": v.paren,
        "[ ]": v.paren
      })
    ]
  }),
  languageData: {
    commentTokens: { line: "%" }
  }
});
function G0() {
  return new sa(D4);
}
const zS = si({
  variant: "light",
  settings: {
    background: "#fff",
    foreground: "#000",
    caret: "#000",
    selection: "#036dd626",
    gutterBackground: "#fcfcfc",
    gutterForeground: "#999",
    lineHighlight: "#90909020"
  },
  styles: [
    {
      tag: v.comment,
      color: "slategray"
    },
    {
      tag: v.string,
      color: "#690"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#905"
    },
    {
      tag: v.variableName,
      color: "#000000"
    },
    {
      tag: v.name,
      color: "#07a"
    },
    {
      tag: [v.keyword],
      color: "#07a"
    }
  ]
}), jS = si({
  variant: "dark",
  settings: {
    background: "var(--bulma-scheme-main-bis)",
    foreground: "#F6F6F6",
    caret: "#EEE",
    selection: "#036dd626",
    gutterBackground: "var(--bulma-scheme-main-ter)",
    gutterForeground: "var(--bulma-text)",
    lineHighlight: "#90909014"
  },
  styles: [
    {
      tag: v.comment,
      color: "slategray"
    },
    {
      tag: v.string,
      color: "#e09177"
    },
    {
      tag: [v.number, v.bool, v.null],
      color: "#a9e07e"
    },
    {
      tag: v.variableName,
      color: "#FFFFFF"
    },
    {
      tag: v.name,
      color: "#e6cf77"
    },
    {
      tag: [v.keyword],
      color: "#54a2e3"
    }
  ]
}), Pd = new Rl(), Ts = new Rl(), z4 = Ts.reconfigure(
  ae.editable.of(!1)
), j4 = Ts.reconfigure(
  ae.editable.of(!0)
), B4 = Pd.reconfigure(zS), I4 = Pd.reconfigure(jS);
function qc(n, e, t, i = !1) {
  const r = [
    _R,
    na.of([
      {
        key: "Tab",
        preventDefault: !0,
        run: ({ state: l, dispatch: o }) => {
          if (l.selection.ranges.some((u) => !u.empty))
            return Eb({ state: l, dispatch: o });
          const c = l.selection.main.from, f = c - l.doc.lineAt(c).from;
          return o(
            l.update(
              l.replaceSelection(f % 2 === 0 ? "  " : " "),
              {
                scrollIntoView: !0,
                userEvent: "input"
              }
            )
          ), !0;
        }
      },
      {
        key: "Shift-Tab",
        preventDefault: !0,
        run: qb
      }
    ]),
    Pd.of(t ? jS : zS),
    ae.theme({
      "&": { height: "100%" },
      "&.cm-editor.cm-focused": { outline: "none" },
      ".cm-content, .cm-gutter": { minHeight: "100%" },
      "&.cm-focused .cm-selectionBackground": {
        backgroundColor: "#036dd638"
      }
    })
  ];
  return n === ".json" || n === ".mpc" ? [
    ...r,
    Ts.of(ae.editable.of(!i)),
    CR()
  ] : n === ".mzc" ? [...r, Ts.of(ae.editable.of(!1))] : n === ".dzn" ? [
    ...r,
    Ts.of(ae.editable.of(!i)),
    G0()
  ] : n === ".html" ? [
    ...r,
    Ts.of(ae.editable.of(!i)),
    q4()
  ] : [
    ...r,
    Ts.of(ae.editable.of(!i)),
    G0(),
    ae.updateListener.of(Y4.debounce(e, 250))
  ];
}
var N4 = s.template('<pre class="svelte-w513p9"><a> </a></pre> <br>', 1), F4 = s.template('<pre class="svelte-w513p9">    with </pre>'), G4 = s.template('<pre class="svelte-w513p9">  in </pre>'), H4 = s.template('<!> <!> <pre class="svelte-w513p9"> </pre> <br>', 1), K4 = s.template('<pre class="svelte-w513p9"><a> </a>:</pre> <br>', 1), J4 = s.template('<pre class="svelte-w513p9"> </pre> <br>', 1), eX = s.template('<pre class="svelte-w513p9">MiniZinc:</pre>'), tX = s.template('<pre class="svelte-w513p9">Warning:</pre>'), iX = s.template('<pre class="svelte-w513p9"> </pre>'), nX = s.template('<pre class="svelte-w513p9"> </pre> <br>', 1), rX = s.template('<!> <!> <!> <!> <pre class="svelte-w513p9"> </pre> <!> <br>', 1);
function XO(n, e) {
  if (new.target) return Qi({ component: XO, ...n });
  s.push(e, !1);
  let t = s.prop(e, "msg", 12);
  const i = an();
  function r(Z) {
    return Z.firstLine == Z.lastLine ? Z.firstColumn == Z.lastColumn ? `${Z.filename}:${Z.firstLine}.${Z.firstColumn}` : `${Z.filename}:${Z.firstLine}.${Z.firstColumn}-${Z.lastColumn}` : `${Z.filename}:${Z.firstLine}.${Z.firstColumn}-${Z.lastLine}.${Z.lastColumn}`;
  }
  s.init();
  var l = rX(), o = s.first_child(l);
  {
    var c = (Z) => {
      var T = s.comment(), E = s.first_child(T);
      s.each(E, 1, () => t().stack, s.index, (M, D, V) => {
        var I = H4(), U = s.first_child(I);
        {
          var Y = (we) => {
            var xe = N4(), me = s.first_child(xe), de = s.child(me), K = s.child(de, !0);
            s.reset(de), s.reset(me), s.next(2), s.template_effect(
              (le) => {
                s.set_class(de, `mzn-link mzn-${t().type ?? ""} svelte-w513p9`), s.set_text(K, le);
              },
              [
                () => r(s.get(D).location)
              ],
              s.derived_safe_equal
            ), s.event("click", de, () => i("goto", { location: s.get(D).location })), s.append(we, xe);
          };
          s.if(U, (we) => {
            (V === 0 || s.get(D).location.filename !== t().stack[V - 1].location.filename || s.get(D).location.firstLine !== t().stack[V - 1].location.firstLine) && we(Y);
          });
        }
        var q = s.sibling(U, 2);
        {
          var te = (we) => {
            var xe = F4();
            s.append(we, xe);
          }, ue = (we) => {
            var xe = G4();
            s.append(we, xe);
          };
          s.if(q, (we) => {
            s.get(D).isCompIter ? we(te) : we(ue, !1);
          });
        }
        var Ae = s.sibling(q, 2), We = s.child(Ae, !0);
        s.reset(Ae), s.next(2), s.template_effect(() => s.set_text(We, s.get(D).description)), s.append(M, I);
      }), s.append(Z, T);
    }, f = (Z) => {
      var T = s.comment(), E = s.first_child(T);
      {
        var M = (D) => {
          var V = K4(), I = s.first_child(V), U = s.child(I), Y = s.child(U, !0);
          s.reset(U), s.next(), s.reset(I), s.next(2), s.template_effect(
            (q) => {
              s.set_class(U, `mzn-link mzn-${t().type ?? ""} svelte-w513p9`), s.set_text(Y, q);
            },
            [() => r(t().location)],
            s.derived_safe_equal
          ), s.event("click", U, () => i("goto", { location: t().location })), s.append(D, V);
        };
        s.if(
          E,
          (D) => {
            t().location && D(M);
          },
          !0
        );
      }
      s.append(Z, T);
    };
    s.if(o, (Z) => {
      t().stack && t().stack.length > 0 ? Z(c) : Z(f, !1);
    });
  }
  var u = s.sibling(o, 2);
  {
    var O = (Z) => {
      var T = s.comment(), E = s.first_child(T);
      s.each(E, 1, () => t().includedFrom, s.index, (M, D) => {
        var V = J4(), I = s.first_child(V), U = s.child(I);
        s.reset(I), s.next(2), s.template_effect(() => s.set_text(U, ` (included from ${s.get(D) ?? ""})`)), s.append(M, V);
      }), s.append(Z, T);
    };
    s.if(u, (Z) => {
      t().includedFrom && Z(O);
    });
  }
  var p = s.sibling(u, 2);
  {
    var g = (Z) => {
      var T = eX();
      s.append(Z, T);
    }, b = (Z) => {
      var T = tX();
      s.append(Z, T);
    };
    s.if(p, (Z) => {
      t().type === "error" ? Z(g) : Z(b, !1);
    });
  }
  var $ = s.sibling(p, 2);
  {
    var x = (Z) => {
      var T = iX(), E = s.child(T);
      s.reset(T), s.template_effect(() => s.set_text(E, `${t().what ?? ""}: `)), s.append(Z, T);
    };
    s.if($, (Z) => {
      t().what && Z(x);
    });
  }
  var P = s.sibling($, 2), k = s.child(P, !0);
  s.reset(P);
  var R = s.sibling(P, 2);
  {
    var w = (Z) => {
      var T = s.comment(), E = s.first_child(T);
      s.each(E, 1, () => t().cycle, s.index, (M, D) => {
        var V = nX(), I = s.first_child(V), U = s.child(I);
        s.reset(I), s.next(2), s.template_effect(() => s.set_text(U, ` ${s.get(D) ?? ""}`)), s.append(M, V);
      }), s.append(Z, T);
    };
    s.if(R, (Z) => {
      t().cycle && Z(w);
    });
  }
  return s.next(2), s.template_effect(() => s.set_text(k, t().message)), s.append(n, l), s.pop({
    get msg() {
      return t();
    },
    set msg(Z) {
      t(Z), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (Z, T) => s.add_legacy_event_listener(e, Z, T)
  });
}
var sX = s.template('<button class="button is-small section-toggle svelte-1290457"> </button>'), lX = s.template('<button class="button is-small section-toggle svelte-1290457">Statistics</button>'), oX = s.template('<button class="button is-small section-toggle svelte-1290457">Standard error</button>'), aX = s.template('<button class="button is-small section-toggle svelte-1290457">Timing</button>'), cX = s.template('<button class="button is-small section-toggle svelte-1290457">Warnings</button>'), hX = s.template('<button class="button is-small section-toggle svelte-1290457">Errors</button>'), fX = s.template('<button class="button is-small section-toggle svelte-1290457"><!></button> <!> <div class="spacer svelte-1290457"></div> <!> <!> <!> <!> <!>', 1), uX = s.template('<p class="control"><button class="button is-small" title="Clear output on each run"><span class="icon"><!></span></button></p>'), OX = s.template('<p class="control"><button class="button is-small is-danger" title="Clear output"><span class="icon"><!></span></button></p>'), dX = s.template('<div class="field has-addons svelte-1290457"><!> <!> <!></div>'), pX = s.template("<pre> </pre> <br>", 1), gX = s.template("<pre> </pre>"), mX = s.template("<!> <pre>----------</pre> <br>", 1), vX = s.template("<pre> </pre>"), bX = s.template('<span class="mzn-checker svelte-1290457"><pre>% Solution checker report:</pre> <br> <!></span>'), SX = s.template('<pre class="mzn-time"> </pre> <br>', 1), $X = s.template("<pre> </pre> <br>", 1), yX = s.template('<pre class="mzn-trace"> </pre>'), QX = s.template('<pre class="mzn-comment"> </pre>'), xX = s.template('<pre class="mzn-stderr"> </pre>'), PX = s.template('<pre><span class="mzn-stat">%%%mzn-stat:</span> </pre> <br>', 1), wX = s.template('<!> <pre><span class="mzn-stat">%%%mzn-stat-end</span></pre> <br>', 1), kX = s.template('<pre class="mzn-runtime">Stopped.</pre> <br>', 1), _X = s.template("<pre> </pre> <br>", 1), WX = s.template('<pre class="mzn-error"> </pre> <br>', 1), ZX = s.template('<!> <pre class="mzn-runtime"> </pre>', 1), TX = s.template('<details open class="svelte-1290457"><summary><!> </summary> <div class="messages svelte-1290457"></div></details>'), CX = s.template('<div class="stack output-window svelte-1290457"><div class="top svelte-1290457"><!> <!></div> <div class="grow svelte-1290457"><div class="output-window-contents svelte-1290457"></div></div></div>');
function BS(n, e) {
  if (new.target) return Qi({ component: BS, ...n });
  s.push(e, !1);
  const t = s.mutable_state(), i = s.mutable_state(), r = s.mutable_state(), l = s.mutable_state(), o = s.mutable_state(), c = s.mutable_state(), f = an();
  let u = s.prop(e, "output", 12), O = s.prop(e, "autoClearOutput", 12, !1), p = s.prop(e, "showClearOutput", 12, !0), g = s.prop(e, "showAutoClearOutput", 12, !0), b = s.prop(e, "showSectionToggles", 12, !0), $ = s.prop(e, "showRightControls", 12, !0), x = s.prop(e, "isTab", 12, !1), P = s.mutable_state(), k = s.mutable_state(!0), R = s.mutable_state(!0), w = s.mutable_state(!0), Z = s.mutable_state(!0), T = s.mutable_state(!0);
  function E(K) {
    const le = K.flatMap((Re) => Re.output), $e = new Set([
      ...le.filter((Re) => Re.type === "solution" || Re.type === "checker").flatMap((Re) => Re.sections.filter((Me) => Re.output[Me].length > 0)),
      ...le.filter((Re) => Re.type === "trace").map((Re) => Re.section)
    ].filter((Re) => Re !== "raw" && !Re.startsWith("mzn_vis_"))), Ze = [...$e.values()];
    return Ze.sort(), s.set(V, s.get(V).filter((Re) => $e.has(Re))), Ze;
  }
  function M(K) {
    s.get(V).indexOf(K) === -1 ? s.set(V, [...s.get(V), K]) : s.set(V, s.get(V).filter((le) => le !== K));
  }
  function D() {
    s.get(V).length === 0 ? s.set(V, [...s.get(c)]) : s.set(V, []);
  }
  let V = s.mutable_state([]);
  const I = {
    ALL_SOLUTIONS: "==========",
    OPTIMAL_SOLUTION: "==========",
    UNSATISFIABLE: "=====UNSATISFIABLE=====",
    UNSAT_OR_UNBOUNDED: "=====UNSATorUNBOUNDED=====",
    UNBOUNDED: "=====UNBOUNDED=====",
    UNKNOWN: "=====UNKNOWN=====",
    ERROR: "=====ERROR====="
  };
  async function U(K) {
    s.get(P) && (await Yn(), s.get(P).scrollTo(0, s.get(P).scrollHeight));
  }
  function Y(K) {
    const le = Math.floor(K / 36e5), $e = Math.floor(K % 36e5 / 6e4), Ze = Math.floor(K % 6e4 / 1e3), Re = Math.floor(K % 1e3);
    let Me = "";
    return le > 0 && (Me += `${le}h `), (le > 0 || $e > 0) && (Me += `${$e}m `), (le > 0 || $e > 0 || Ze > 0) && (Me += `${Ze}s `), le == 0 && $e == 0 && (Ze > 0 && (Me += " "), Me += `${Re}msec`), Me.trimEnd();
  }
  function q(K, le) {
    const $e = [];
    let Ze = [];
    const Re = () => {
      if (Ze.length > 0) {
        const Me = Ze.join("").split(`
`);
        Me[Me.length - 1] === "" && Me.splice(Me.length - 1, 1), $e.push({
          type: "text",
          message: Me.map((re) => `% ${re}`).join(`
`)
        }), Ze = [];
      }
    };
    if (K.messages) {
      for (const Me of K.messages)
        if (Me.type === "solution")
          for (const re of Me.sections)
            le.indexOf(re) === -1 && re !== "raw" && Ze.push(K.output[re]);
        else Me.type === "trace" ? le.indexOf(Me.section) === -1 && Me.section !== "raw" && Ze.push(Me.message) : (Re(), $e.push(Me));
      Re();
    } else {
      for (const Me of K.sections)
        le.indexOf(Me) === -1 && Me !== "raw" && Ze.push(K.output[Me]);
      Re();
    }
    return $e;
  }
  s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(t, u().some((K) => K.output.some((le) => le.type === "statistics")));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(i, u().some((K) => K.output.some((le) => le.type === "stderr")));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(r, u().some((K) => K.output.some((le) => le.type === "time")));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(l, u().some((K) => K.output.some((le) => le.type === "warning" || le.type === "checker" && le.messages && le.messages.some(($e) => $e.type === "warning"))));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(o, u().some((K) => K.output.some((le) => le.type === "error" || le.type === "checker" && le.messages && le.messages.some(($e) => $e.type === "error"))));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(c, E(u()));
  }), s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    U(u());
  }), s.legacy_pre_effect_reset(), s.init();
  var te = CX(), ue = s.child(te), Ae = s.child(ue);
  {
    var We = (K) => {
      var le = fX(), $e = s.first_child(le), Ze = s.child($e);
      {
        var Re = (et) => {
          var Te = s.text("Hide all");
          s.append(et, Te);
        }, Me = (et) => {
          var Te = s.text("Show all");
          s.append(et, Te);
        };
        s.if(Ze, (et) => {
          s.get(V).length === 0 ? et(Re) : et(Me, !1);
        });
      }
      s.reset($e);
      var re = s.sibling($e, 2);
      s.each(re, 1, () => s.get(c), s.index, (et, Te) => {
        var Ue = sX(), se = s.child(Ue, !0);
        s.reset(Ue), s.template_effect(
          (wt, Mt, vt) => {
            s.set_attribute(Ue, "title", wt), s.toggle_class(Ue, "is-primary", Mt), s.toggle_class(Ue, "is-light", vt), s.set_text(se, s.get(Te));
          },
          [
            () => `Click to ${s.get(V).indexOf(s.get(Te)) === -1 ? "hide" : "show"} ${s.get(Te)} output`,
            () => s.get(V).indexOf(s.get(Te)) === -1,
            () => s.get(V).indexOf(s.get(Te)) !== -1
          ],
          s.derived_safe_equal
        ), s.event("click", Ue, () => M(s.get(Te))), s.append(et, Ue);
      });
      var B = s.sibling(re, 4);
      {
        var ne = (et) => {
          var Te = lX();
          s.template_effect(() => {
            s.set_attribute(Te, "title", `Click to ${s.get(k) ? "hide" : "show"} statistics information`), s.toggle_class(Te, "is-primary", s.get(k)), s.toggle_class(Te, "is-light", !s.get(k));
          }), s.event("click", Te, () => s.set(k, !s.get(k))), s.append(et, Te);
        };
        s.if(B, (et) => {
          s.get(t) && et(ne);
        });
      }
      var J = s.sibling(B, 2);
      {
        var he = (et) => {
          var Te = oX();
          s.template_effect(() => {
            s.set_attribute(Te, "title", `Click to ${s.get(R) ? "hide" : "show"} standard error output`), s.toggle_class(Te, "is-primary", s.get(R)), s.toggle_class(Te, "is-light", !s.get(R));
          }), s.event("click", Te, () => s.set(R, !s.get(R))), s.append(et, Te);
        };
        s.if(J, (et) => {
          s.get(i) && et(he);
        });
      }
      var ye = s.sibling(J, 2);
      {
        var be = (et) => {
          var Te = aX();
          s.template_effect(() => {
            s.set_attribute(Te, "title", `Click to ${s.get(w) ? "hide" : "show"} timing information`), s.toggle_class(Te, "is-primary", s.get(w)), s.toggle_class(Te, "is-light", !s.get(w));
          }), s.event("click", Te, () => s.set(w, !s.get(w))), s.append(et, Te);
        };
        s.if(ye, (et) => {
          s.get(r) && et(be);
        });
      }
      var Ce = s.sibling(ye, 2);
      {
        var rt = (et) => {
          var Te = cX();
          s.template_effect(() => {
            s.set_attribute(Te, "title", `Click to ${s.get(w) ? "hide" : "show"} warnings`), s.toggle_class(Te, "is-primary", s.get(Z)), s.toggle_class(Te, "is-light", !s.get(Z));
          }), s.event("click", Te, () => s.set(Z, !s.get(Z))), s.append(et, Te);
        };
        s.if(Ce, (et) => {
          s.get(l) && et(rt);
        });
      }
      var Ke = s.sibling(Ce, 2);
      {
        var Oi = (et) => {
          var Te = hX();
          s.template_effect(() => {
            s.set_attribute(Te, "title", `Click to ${s.get(w) ? "hide" : "show"} errors`), s.toggle_class(Te, "is-primary", s.get(T)), s.toggle_class(Te, "is-light", !s.get(T));
          }), s.event("click", Te, () => s.set(T, !s.get(T))), s.append(et, Te);
        };
        s.if(Ke, (et) => {
          s.get(o) && et(Oi);
        });
      }
      s.template_effect(() => $e.disabled = s.get(c).length === 0), s.event("click", $e, () => D()), s.append(K, le);
    };
    s.if(Ae, (K) => {
      b() && K(We);
    });
  }
  var we = s.sibling(Ae, 2);
  {
    var xe = (K) => {
      var le = dX(), $e = s.child(le);
      s.slot($e, e, "before-right-controls", {}, null);
      var Ze = s.sibling($e, 2);
      {
        var Re = (B) => {
          var ne = uX(), J = s.child(ne), he = s.child(J), ye = s.child(he);
          $t(ye, { icon: nZ }), s.reset(he), s.reset(J), s.reset(ne), s.template_effect(() => {
            s.toggle_class(J, "is-primary", O()), s.toggle_class(J, "is-light", !O());
          }), s.event("click", J, () => O(!O())), s.append(B, ne);
        };
        s.if(Ze, (B) => {
          g() && B(Re);
        });
      }
      var Me = s.sibling(Ze, 2);
      {
        var re = (B) => {
          var ne = OX(), J = s.child(ne), he = s.child(J), ye = s.child(he);
          $t(ye, { icon: Wv }), s.reset(he), s.reset(J), s.reset(ne), s.event("click", J, () => f("clear")), s.append(B, ne);
        };
        s.if(Me, (B) => {
          p() && B(re);
        });
      }
      s.reset(le), s.append(K, le);
    };
    s.if(we, (K) => {
      $() && K(xe);
    });
  }
  s.reset(ue);
  var me = s.sibling(ue, 2), de = s.child(me);
  return s.each(de, 5, u, s.index, (K, le) => {
    var $e = TX(), Ze = s.child($e), Re = s.child(Ze);
    {
      var Me = (J) => {
        var he = s.text("Compiling");
        s.append(J, he);
      }, re = (J) => {
        var he = s.text("Running");
        s.append(J, he);
      };
      s.if(Re, (J) => {
        s.get(le).isCompile ? J(Me) : J(re, !1);
      });
    }
    var B = s.sibling(Re);
    s.reset(Ze);
    var ne = s.sibling(Ze, 2);
    s.each(ne, 5, () => s.get(le).output, s.index, (J, he) => {
      var ye = s.comment(), be = s.first_child(ye);
      {
        var Ce = (Ke) => {
          var Oi = mX(), et = s.first_child(Oi);
          s.each(et, 1, () => s.get(he).sections, s.index, (Te, Ue) => {
            var se = s.comment(), wt = s.first_child(se);
            {
              var Mt = (vt) => {
                var Ut = s.comment(), kt = s.first_child(Ut);
                {
                  var jt = (Bt) => {
                    var yt = pX(), He = s.first_child(yt), Le = s.child(He, !0);
                    s.reset(He), s.next(2), s.template_effect(
                      (Et) => s.set_text(Le, Et),
                      [
                        () => JSON.stringify(s.get(he).output[s.get(Ue)], null, 2)
                      ],
                      s.derived_safe_equal
                    ), s.append(Bt, yt);
                  }, Pi = (Bt) => {
                    var yt = s.comment(), He = s.first_child(yt);
                    {
                      var Le = (Et) => {
                        var qt = gX(), st = s.child(qt, !0);
                        s.reset(qt), s.template_effect(() => s.set_text(st, s.get(he).output[s.get(Ue)])), s.append(Et, qt);
                      };
                      s.if(
                        He,
                        (Et) => {
                          s.get(Ue) !== "raw" && Et(Le);
                        },
                        !0
                      );
                    }
                    s.append(Bt, yt);
                  };
                  s.if(kt, (Bt) => {
                    typeof s.get(he).output[s.get(Ue)] != "string" ? Bt(jt) : Bt(Pi, !1);
                  });
                }
                s.append(vt, Ut);
              };
              s.if(wt, (vt) => {
                s.get(V).indexOf(s.get(Ue)) === -1 && !s.get(Ue).startsWith("mzn_vis_") && vt(Mt);
              });
            }
            s.append(Te, se);
          }), s.next(4), s.append(Ke, Oi);
        }, rt = (Ke) => {
          var Oi = s.comment(), et = s.first_child(Oi);
          {
            var Te = (se) => {
              var wt = bX(), Mt = s.sibling(s.child(wt), 4);
              s.each(Mt, 1, () => q(s.get(he), s.get(V)), s.index, (vt, Ut) => {
                var kt = s.comment(), jt = s.first_child(kt);
                {
                  var Pi = (yt) => {
                    var He = vX(), Le = s.child(He, !0);
                    s.reset(He), s.template_effect(() => s.set_text(Le, s.get(Ut).message)), s.append(yt, He);
                  }, Bt = (yt) => {
                    var He = s.comment(), Le = s.first_child(He);
                    {
                      var Et = (qt) => {
                        var st = s.comment(), li = s.first_child(st);
                        {
                          var ii = (Xi) => {
                            XO(Xi, {
                              get msg() {
                                return s.get(Ut);
                              },
                              $$events: {
                                goto(oi) {
                                  s.bubble_event.call(this, e, oi);
                                }
                              }
                            });
                          };
                          s.if(li, (Xi) => {
                            (s.get(Ut).type === "error" && s.get(T) || s.get(Ut).type === "warning" && s.get(Z)) && Xi(ii);
                          });
                        }
                        s.append(qt, st);
                      };
                      s.if(
                        Le,
                        (qt) => {
                          (s.get(Ut).type === "error" || s.get(Ut).type === "warning") && qt(Et);
                        },
                        !0
                      );
                    }
                    s.append(yt, He);
                  };
                  s.if(jt, (yt) => {
                    s.get(Ut).type === "text" ? yt(Pi) : yt(Bt, !1);
                  });
                }
                s.append(vt, kt);
              }), s.reset(wt), s.append(se, wt);
            }, Ue = (se) => {
              var wt = s.comment(), Mt = s.first_child(wt);
              {
                var vt = (kt) => {
                  var jt = s.comment(), Pi = s.first_child(jt);
                  {
                    var Bt = (yt) => {
                      var He = SX(), Le = s.first_child(He), Et = s.child(Le);
                      s.reset(Le), s.next(2), s.template_effect((qt) => s.set_text(Et, `% time elapsed: ${qt ?? ""}`), [() => Y(s.get(he).time)], s.derived_safe_equal), s.append(yt, He);
                    };
                    s.if(Pi, (yt) => {
                      s.get(w) && yt(Bt);
                    });
                  }
                  s.append(kt, jt);
                }, Ut = (kt) => {
                  var jt = s.comment(), Pi = s.first_child(jt);
                  {
                    var Bt = (He) => {
                      var Le = s.comment(), Et = s.first_child(Le);
                      {
                        var qt = (st) => {
                          var li = s.comment(), ii = s.first_child(li);
                          {
                            var Xi = (Ni) => {
                              var Gt = $X(), Ai = s.first_child(Gt), dr = s.child(Ai, !0);
                              s.reset(Ai), s.next(2), s.template_effect(
                                (pr) => s.set_text(dr, pr),
                                [
                                  () => JSON.stringify(s.get(he).message, null, 2)
                                ],
                                s.derived_safe_equal
                              ), s.append(Ni, Gt);
                            }, oi = (Ni) => {
                              var Gt = yX(), Ai = s.child(Gt, !0);
                              s.reset(Gt), s.template_effect(() => s.set_text(Ai, s.get(he).message)), s.append(Ni, Gt);
                            };
                            s.if(ii, (Ni) => {
                              typeof s.get(he).message != "string" ? Ni(Xi) : Ni(oi, !1);
                            });
                          }
                          s.append(st, li);
                        };
                        s.if(Et, (st) => {
                          s.get(V).indexOf(s.get(he).section) === -1 && !s.get(he).section.startsWith("mzn_vis_") && st(qt);
                        });
                      }
                      s.append(He, Le);
                    }, yt = (He) => {
                      var Le = s.comment(), Et = s.first_child(Le);
                      {
                        var qt = (li) => {
                          var ii = QX(), Xi = s.child(ii, !0);
                          s.reset(ii), s.template_effect(() => s.set_text(Xi, s.get(he).comment)), s.append(li, ii);
                        }, st = (li) => {
                          var ii = s.comment(), Xi = s.first_child(ii);
                          {
                            var oi = (Gt) => {
                              var Ai = s.comment(), dr = s.first_child(Ai);
                              {
                                var pr = (gr) => {
                                  var di = xX(), cn = s.child(di, !0);
                                  s.reset(di), s.template_effect(() => s.set_text(cn, s.get(he).value)), s.append(gr, di);
                                };
                                s.if(dr, (gr) => {
                                  s.get(R) && gr(pr);
                                });
                              }
                              s.append(Gt, Ai);
                            }, Ni = (Gt) => {
                              var Ai = s.comment(), dr = s.first_child(Ai);
                              {
                                var pr = (di) => {
                                  var cn = s.comment(), hn = s.first_child(cn);
                                  {
                                    var Yr = (kn) => {
                                      var wi = wX(), Fi = s.first_child(wi);
                                      s.each(Fi, 1, () => Object.keys(s.get(he).statistics), s.index, (Dr, _n) => {
                                        var dt = PX(), Mi = s.first_child(dt), fn = s.sibling(s.child(Mi));
                                        s.reset(Mi), s.next(2), s.template_effect(() => s.set_text(fn, ` ${s.get(_n) ?? ""}=${s.get(he).statistics[s.get(_n)] ?? ""}`)), s.append(Dr, dt);
                                      }), s.next(4), s.append(kn, wi);
                                    };
                                    s.if(hn, (kn) => {
                                      s.get(k) && kn(Yr);
                                    });
                                  }
                                  s.append(di, cn);
                                }, gr = (di) => {
                                  var cn = s.comment(), hn = s.first_child(cn);
                                  {
                                    var Yr = (wi) => {
                                      var Fi = kX();
                                      s.next(2), s.append(wi, Fi);
                                    }, kn = (wi) => {
                                      var Fi = s.comment(), Dr = s.first_child(Fi);
                                      {
                                        var _n = (Mi) => {
                                          var fn = _X(), Wn = s.first_child(fn), mr = s.child(Wn, !0);
                                          s.reset(Wn), s.next(2), s.template_effect(() => s.set_text(mr, I[s.get(he).status])), s.append(Mi, fn);
                                        }, dt = (Mi) => {
                                          var fn = s.comment(), Wn = s.first_child(fn);
                                          {
                                            var mr = (ki) => {
                                              var pi = s.comment(), In = s.first_child(pi);
                                              {
                                                var vr = (Zn) => {
                                                  XO(Zn, {
                                                    get msg() {
                                                      return s.get(he);
                                                    },
                                                    $$events: {
                                                      goto(br) {
                                                        s.bubble_event.call(this, e, br);
                                                      }
                                                    }
                                                  });
                                                };
                                                s.if(In, (Zn) => {
                                                  (s.get(he).type === "error" && s.get(T) || s.get(he).type === "warning" && s.get(Z)) && Zn(vr);
                                                });
                                              }
                                              s.append(ki, pi);
                                            }, Ul = (ki) => {
                                              var pi = s.comment(), In = s.first_child(pi);
                                              {
                                                var vr = (Zn) => {
                                                  var br = ZX(), ms = s.first_child(br);
                                                  {
                                                    var Tn = ($r) => {
                                                      var Us = WX(), Ei = s.first_child(Us), Gi = s.child(Ei);
                                                      s.reset(Ei), s.next(2), s.template_effect(() => s.set_text(Gi, `Process finished with non-zero exit code ${s.get(he).code ?? ""}.`)), s.append($r, Us);
                                                    };
                                                    s.if(ms, ($r) => {
                                                      s.get(he).code && $r(Tn);
                                                    });
                                                  }
                                                  var Ls = s.sibling(ms, 2), Sr = s.child(Ls);
                                                  s.reset(Ls), s.template_effect(
                                                    ($r) => s.set_text(Sr, `Finished in ${$r ?? ""}.`),
                                                    [
                                                      () => Y(s.get(he).runTime)
                                                    ],
                                                    s.derived_safe_equal
                                                  ), s.append(Zn, br);
                                                };
                                                s.if(
                                                  In,
                                                  (Zn) => {
                                                    s.get(he).type === "exit" && Zn(vr);
                                                  },
                                                  !0
                                                );
                                              }
                                              s.append(ki, pi);
                                            };
                                            s.if(
                                              Wn,
                                              (ki) => {
                                                s.get(he).type === "error" || s.get(he).type === "warning" ? ki(mr) : ki(Ul, !1);
                                              },
                                              !0
                                            );
                                          }
                                          s.append(Mi, fn);
                                        };
                                        s.if(
                                          Dr,
                                          (Mi) => {
                                            s.get(he).type === "status" ? Mi(_n) : Mi(dt, !1);
                                          },
                                          !0
                                        );
                                      }
                                      s.append(wi, Fi);
                                    };
                                    s.if(
                                      hn,
                                      (wi) => {
                                        s.get(he).type === "cancel" ? wi(Yr) : wi(kn, !1);
                                      },
                                      !0
                                    );
                                  }
                                  s.append(di, cn);
                                };
                                s.if(
                                  dr,
                                  (di) => {
                                    s.get(he).type === "statistics" ? di(pr) : di(gr, !1);
                                  },
                                  !0
                                );
                              }
                              s.append(Gt, Ai);
                            };
                            s.if(
                              Xi,
                              (Gt) => {
                                s.get(he).type === "stderr" ? Gt(oi) : Gt(Ni, !1);
                              },
                              !0
                            );
                          }
                          s.append(li, ii);
                        };
                        s.if(
                          Et,
                          (li) => {
                            s.get(he).type === "comment" ? li(qt) : li(st, !1);
                          },
                          !0
                        );
                      }
                      s.append(He, Le);
                    };
                    s.if(
                      Pi,
                      (He) => {
                        s.get(he).type === "trace" ? He(Bt) : He(yt, !1);
                      },
                      !0
                    );
                  }
                  s.append(kt, jt);
                };
                s.if(
                  Mt,
                  (kt) => {
                    s.get(he).type === "time" ? kt(vt) : kt(Ut, !1);
                  },
                  !0
                );
              }
              s.append(se, wt);
            };
            s.if(
              et,
              (se) => {
                s.get(he).type === "checker" ? se(Te) : se(Ue, !1);
              },
              !0
            );
          }
          s.append(Ke, Oi);
        };
        s.if(be, (Ke) => {
          s.get(he).type === "solution" ? Ke(Ce) : Ke(rt, !1);
        });
      }
      s.append(J, ye);
    }), s.reset(ne), s.reset($e), s.template_effect((J) => s.set_text(B, ` ${J ?? ""}`), [() => s.get(le).files.join(", ")], s.derived_safe_equal), s.append(K, $e);
  }), s.reset(de), s.bind_this(de, (K) => s.set(P, K), () => s.get(P)), s.reset(me), s.reset(te), s.template_effect(() => {
    s.toggle_class(ue, "is-empty", !b() && !$()), s.toggle_class(ue, "is-tab", x());
  }), s.append(n, te), s.pop({
    get output() {
      return u();
    },
    set output(K) {
      u(K), s.flush_sync();
    },
    get autoClearOutput() {
      return O();
    },
    set autoClearOutput(K) {
      O(K), s.flush_sync();
    },
    get showClearOutput() {
      return p();
    },
    set showClearOutput(K) {
      p(K), s.flush_sync();
    },
    get showAutoClearOutput() {
      return g();
    },
    set showAutoClearOutput(K) {
      g(K), s.flush_sync();
    },
    get showSectionToggles() {
      return b();
    },
    set showSectionToggles(K) {
      b(K), s.flush_sync();
    },
    get showRightControls() {
      return $();
    },
    set showRightControls(K) {
      $(K), s.flush_sync();
    },
    get isTab() {
      return x();
    },
    set isTab(K) {
      x(K), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (K, le) => s.add_legacy_event_listener(e, K, le)
  });
}
const RX = `const MiniZincIDE = (() => {
    const callbacks = {};
    const responses = [];
    const freeSlots = [];
    let userData;

    window.addEventListener('message', (e) => {
        switch (e.data.event) {
            case 'response': {
                resolveResponse(e.data.id, e.data.payload);
                break;
            }
            case 'error': {
                rejectResponse(e.data.id, e.data.message);
                break;
            }
            default:
                if (e.data.event in callbacks) {
                    callbacks[e.data.event].forEach((callback) => {
                        callback(e.data.payload);
                    });
                }
                break;
        }
    });

    function resolveResponse(index, payload) {
        const { resolve } = responses[index];
        resolve(payload);
        responses[index] = null;
        freeSlots.push(index);
    }

    function rejectResponse(index, message) {
        const { reject } = responses[index];
        reject(message);
        responses[index] = null;
        freeSlots.push(index);
    }

    function createPromise(message) {
        return new Promise((resolve, reject) => {
            const id =
                freeSlots.length > 0 ? freeSlots.pop() : responses.length;
            responses[id] = { resolve, reject };
            window.parent.postMessage(
                {
                    ...message,
                    id,
                },
                '*',
            );
        });
    }

    function on(event, callback) {
        if (!(event in callbacks)) {
            callbacks[event] = new Set();
        }
        callbacks[event].add(callback);
    }
    function off(event, callback) {
        if (event in callbacks) {
            callbacks[event].delete(callback);
        }
    }
    function getUserData() {
        return new Promise((resolve, reject) => {
            if (userData === undefined) {
                on('init', (data) => {
                    userData = data;
                    resolve(userData);
                });
            } else {
                resolve(userData);
            }
        });
    }
    function goToSolution(idx) {
        window.parent.postMessage(
            {
                event: 'rebroadcast',
                message: {
                    event: 'goToSolution',
                    payload: idx,
                },
            },
            '*',
        );
    }
    function solve(modelFile, dataFiles, options) {
        window.parent.postMessage(
            {
                event: 'solve',
                modelFile,
                dataFiles,
                options,
            },
            '*',
        );
    }
    function getNumSolutions() {
        return createPromise({
            event: 'getNumSolutions',
        });
    }
    function getSolution(index) {
        return createPromise({
            event: 'getSolution',
            index,
        });
    }
    function getAllSolutions() {
        return createPromise({
            event: 'getAllSolutions',
        });
    }
    function getStatus() {
        return createPromise({
            event: 'getStatus',
        });
    }
    function getFinishTime() {
        return createPromise({
            event: 'getFinishTime',
        });
    }

    return {
        getUserData,
        on,
        off,
        goToSolution,
        solve,
        getNumSolutions,
        getSolution,
        getAllSolutions,
        getStatus,
        getFinishTime,
    };
})();
`, XX = URL.createObjectURL(new Blob([RX], { type: "text/html; charset=utf-8" }));
var AX = s.template('<div class="top svelte-g2g7zr"><div class="solution-label svelte-g2g7zr"><span>Solution:</span></div> <div><input class="input is-small" type="number"></div> <div class="solution-slider svelte-g2g7zr"><input type="range" class="svelte-g2g7zr"></div> <div class="field has-addons svelte-g2g7zr"><p class="control"><button class="button is-small" title="Follow latest solution"><span class="icon"><!></span></button></p></div></div>'), MX = s.template('<iframe class="vis-window svelte-g2g7zr" title="Visualisation"></iframe>'), EX = s.template('<div class="stack svelte-g2g7zr"><!> <div class="grow svelte-g2g7zr"><div class="vis-grid svelte-g2g7zr"></div></div></div>');
function IS(n, e) {
  if (new.target) return Qi({ component: IS, ...n });
  s.push(e, !1);
  const t = s.mutable_state(), i = an();
  let r = s.prop(e, "files", 28, () => []), l = !0, o = s.mutable_state(!0), c = 0, f = s.mutable_state(0), u = s.mutable_state(0), O = s.mutable_state([]), p = null, g = null;
  function b() {
    for (const I of s.get(O)) {
      URL.revokeObjectURL(I.url);
      for (const U of I.extraUrls)
        URL.revokeObjectURL(U);
    }
    l = !0, s.set(o, !0), c = 0, s.set(f, 0), s.set(u, 0), s.set(O, []), p = null, g = null;
  }
  function $(I, U, Y) {
    let q;
    const te = new Promise((me, de) => {
      q = me;
    });
    te.then((me) => {
      me.contentWindow.postMessage({ event: "init", payload: Y }, "*");
    });
    const ue = r().reduce((me, de) => ({ ...me, [de.name]: de.state.doc.toString() }), {}), Ae = [], We = new DOMParser().parseFromString(U, "text/html");
    for (const me of We.getElementsByTagName("script")) {
      const de = me.getAttribute("src");
      if (de === "/minizinc-ide.js")
        me.src = XX;
      else if (de in ue && de.endsWith(".js")) {
        const K = URL.createObjectURL(new Blob([ue[de]], { type: "text/javascript; charset=utf-8" }));
        me.src = K, Ae.push(K);
      }
    }
    for (const me of We.getElementsByTagName("link")) {
      const de = me.getAttribute("href");
      if (de in ue && de.endsWith(".css")) {
        const K = URL.createObjectURL(new Blob([ue[de]], { type: "text/css; charset=utf-8" }));
        me.href = K, Ae.push(K);
      }
    }
    const we = new XMLSerializer().serializeToString(We.doctype) + We.documentElement.outerHTML, xe = URL.createObjectURL(new Blob([we], { type: "text/html; charset=utf-8" }));
    s.set(O, [
      ...s.get(O),
      {
        key: I,
        url: xe,
        extraUrls: Ae,
        makeReady: q,
        ready: te,
        solutions: [],
        element: null
      }
    ]);
  }
  function x(I, U) {
    for (const Y in I) {
      const q = s.get(O).find((ue) => ue.key === Y);
      if (!q) {
        console.error(`Did not find visualisation for ${Y}`);
        continue;
      }
      const te = { time: U, data: I[Y] };
      q.solutions.push(te), w({ event: "solution", payload: te }, q);
    }
    s.update(u);
  }
  function P(I, U) {
    p = { status: I, time: U };
    for (let Y = 0; Y < s.get(O).length; Y++)
      w({ event: "status", payload: p }, s.get(O)[Y]);
  }
  function k(I) {
    g = I;
    for (let U = 0; U < s.get(O).length; U++)
      w({ event: "finish", payload: g }, s.get(O)[U]);
  }
  function R(I) {
    const U = I.data, Y = s.get(O).find((q) => q.element.contentWindow === I.source);
    switch (U.event) {
      case "rebroadcast":
        for (const te of s.get(O))
          w(U.message, te);
        U.message.event === "goToSolution" && (l = U.message.payload === -1, s.set(o, U.message.payload === -1), c = U.message.payload + 1, s.set(f, U.message.payload + 1));
        break;
      case "solve":
        i("solve", {
          modelFile: U.modelFile,
          dataFiles: U.dataFiles,
          options: U.options
        });
        break;
      case "getNumSolutions":
        w(
          {
            event: "response",
            id: U.id,
            payload: Y.solutions.length
          },
          Y
        );
        break;
      case "getSolution":
        const q = U.index < 0 ? U.index + Y.solutions.length : U.index;
        if (q < 0 || q >= Y.solutions.length)
          w(
            {
              event: "error",
              id: U.id,
              message: "Solution index out of range"
            },
            Y
          );
        else {
          w(
            {
              event: "response",
              id: U.id,
              payload: Y.solutions[U.index === -1 ? Y.solutions.length - 1 : U.index]
            },
            Y
          );
          break;
        }
      case "getAllSolutions":
        w(
          {
            event: "response",
            id: U.id,
            payload: Y.solutions
          },
          Y
        );
        break;
      case "getStatus":
        w(
          {
            event: "response",
            id: U.id,
            payload: p
          },
          Y
        );
        break;
      case "getFinishTime":
        w(
          {
            event: "response",
            id: U.id,
            payload: g
          },
          Y
        );
        break;
    }
  }
  async function w(I, U) {
    await U.ready, U.element.contentWindow.postMessage(I, "*");
  }
  function Z(I, U, Y) {
    if (s.get(o) && c === s.get(f) && (c = s.get(u), s.set(f, s.get(u))), s.get(o) !== l) {
      l = s.get(o);
      for (const q of s.get(O))
        w(
          {
            event: "goToSolution",
            payload: s.get(o) ? -1 : s.get(f) - 1
          },
          q
        );
    }
    if (c !== s.get(f)) {
      c = s.get(f), l = !1, s.set(o, !1);
      for (const q of s.get(O))
        w(
          {
            event: "goToSolution",
            payload: s.get(f) - 1
          },
          q
        );
    }
  }
  s.legacy_pre_effect(() => s.get(O), () => {
    s.set(t, Math.ceil(Math.sqrt(s.get(O).length)));
  }), s.legacy_pre_effect(
    () => (s.get(f), s.get(o), s.get(u)),
    () => {
      Z(s.get(f), s.get(o), s.get(u));
    }
  ), s.legacy_pre_effect_reset(), s.init();
  var T = EX();
  s.event("message", s.window, R);
  var E = s.child(T);
  {
    var M = (I) => {
      var U = AX(), Y = s.sibling(s.child(U), 2), q = s.child(Y);
      s.remove_input_defaults(q), s.reset(Y);
      var te = s.sibling(Y, 2), ue = s.child(te);
      s.remove_input_defaults(ue), s.reset(te);
      var Ae = s.sibling(te, 2), We = s.child(Ae), we = s.child(We), xe = s.child(we), me = s.child(xe);
      $t(me, { icon: GW }), s.reset(xe), s.reset(we), s.reset(We), s.reset(Ae), s.reset(U), s.template_effect(() => {
        s.set_attribute(q, "min", s.get(u) > 0 ? 1 : 0), s.set_attribute(q, "max", s.get(u)), s.set_attribute(ue, "min", s.get(u) > 0 ? 1 : 0), s.set_attribute(ue, "max", s.get(u)), s.toggle_class(we, "is-primary", s.get(o)), s.toggle_class(we, "is-light", !s.get(o));
      }), s.bind_value(q, () => s.get(f), (de) => s.set(f, de)), s.bind_value(ue, () => s.get(f), (de) => s.set(f, de)), s.event("click", we, () => s.set(o, !s.get(o))), s.append(I, U);
    };
    s.if(E, (I) => {
      s.get(u) > 0 && I(M);
    });
  }
  var D = s.sibling(E, 2), V = s.child(D);
  return s.each(V, 5, () => s.get(O), s.index, (I, U, Y) => {
    var q = MX();
    s.bind_this(
      q,
      (te, ue) => (ue.element = te, s.invalidate_inner_signals(() => s.get(O))),
      (te) => te == null ? void 0 : te.element,
      () => [s.get(U)]
    ), s.template_effect(() => s.set_attribute(q, "src", s.get(U).url)), s.event("load", q, (te) => s.get(U).makeReady(te.target)), s.append(I, q);
  }), s.reset(V), s.reset(D), s.reset(T), s.template_effect(() => s.set_style(V, "grid-template-columns", `repeat(${s.get(t)}, auto)`)), s.append(n, T), s.bind_prop(e, "reset", b), s.bind_prop(e, "addVisualisation", $), s.bind_prop(e, "addSolution", x), s.bind_prop(e, "status", P), s.bind_prop(e, "finish", k), s.pop({
    reset: b,
    addVisualisation: $,
    addSolution: x,
    status: P,
    finish: k,
    get files() {
      return r();
    },
    set files(I) {
      r(I), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (I, U) => s.add_legacy_event_listener(e, I, U)
  });
}
const H0 = [
  ".mzn",
  ".mzc",
  ".dzn",
  ".json",
  ".html",
  ".js",
  ".css"
];
async function qX(n) {
  const e = n.startsWith("http://") || n.startsWith("https://") ? n : `http://${n}`, t = e.split("/").pop();
  if (!t.endsWith(".mzp") && H0.every((r) => !t.endsWith(r)))
    throw new Error("File type not recognised");
  const i = await fetch(new URL(e));
  if (!i.ok)
    throw new Error(
      `Request failed (${i.status} ${i.statusText})`
    );
  if (t.endsWith(".mzp")) {
    const r = await i.json(), l = [], o = r.openFiles[r.openTab];
    let c = 0;
    for (const u of r.projectFiles) {
      const O = u.split("/").pop();
      if (H0.every((b) => !O.endsWith(b)))
        continue;
      u === o && (c = l.length);
      const p = await fetch(new URL(u, e));
      if (!p.ok)
        throw new Error(
          `Request failed (${p.status} ${p.statusText})`
        );
      const g = await p.text();
      l.push({
        name: O,
        contents: g,
        hidden: r.openFiles.indexOf(u) === -1
      });
    }
    let f = r.selectedBuiltinConfigId;
    return f === "org.gecode.gecode" ? f = "org.minizinc.gecode_presolver" : f === "org.chuffed.chuffed" && (f = "org.minizinc.chuffed"), {
      files: l,
      tab: c,
      solverId: f,
      timestamp: Date.now()
    };
  } else {
    const r = await i.text();
    return { files: [{ name: t, contents: r }], timestamp: Date.now() };
  }
}
var VX = s.template('<div class="error svelte-6l40ed"> </div>'), LX = s.template('<!> <div class="field"><p class="control is-expanded"><input class="input" type="text" pattern=".+\\.(mzn|dzn|json|js|html|css|mzp|mzc)" required></p></div>', 1), UX = s.template('<div slot="footer"><button class="button is-primary">OK</button> <button class="button" type="button">Cancel</button></div>'), YX = s.template('<aside class="menu"><p class="menu-label">Model</p> <ul class="menu-list"><li><button type="button">Model file (.mzn)</button></li> <li><button type="button">Solution checker model (.mzc.mzn)</button></li></ul> <p class="menu-label">Data</p> <ul class="menu-list"><li><button type="button">Data file (.dzn)</button></li> <li><button type="button">JSON data file (.json)</button></li></ul> <p class="menu-label">Visualisation</p> <ul class="menu-list"><li><button type="button">Custom visualisation (.html)</button></li></ul> <p class="menu-label">Import</p> <ul class="menu-list"><li><button type="button">Upload file(s)</button></li> <li><button type="button">Import from URL</button></li></ul></aside>'), DX = s.template('<!> <input class="is-hidden svelte-6l40ed" type="file" multiple accept=".mzn,.mzc,.dzn,.json,.html,.js,.css">', 1);
function NS(n, e) {
  if (new.target) return Qi({ component: NS, ...n });
  s.push(e, !1);
  let t = s.prop(e, "active", 12, !1);
  const i = an();
  let r = s.mutable_state(), l = s.mutable_state(), o = s.mutable_state(), c = s.mutable_state(""), f = s.mutable_state(!1), u = s.mutable_state(null);
  function O(w) {
    s.set(f, !1), s.set(c, ""), s.set(u, null);
  }
  async function p() {
    await Yn(), s.get(o) && s.get(o).focus();
  }
  async function g() {
    const w = [];
    for (const T of s.get(l))
      w.push(new Promise((E, M) => {
        const D = new FileReader();
        D.onload = () => {
          E({ name: T.name, contents: D.result });
        }, D.onerror = (V) => M(V), D.readAsText(T);
      }));
    const Z = await Promise.all(w);
    i("open", { files: Z });
  }
  async function b() {
    try {
      i("open", await qX(s.get(c)));
    } catch (w) {
      s.set(u, `Failed to import from URL: ${w.message || w}`), console.error(w);
    }
  }
  s.legacy_pre_effect(() => s.deep_read_state(t()), () => {
    O(t());
  }), s.legacy_pre_effect_reset(), s.init();
  var $ = DX(), x = s.first_child($);
  {
    var P = (w) => {
      hs(w, {
        get active() {
          return t();
        },
        title: "Import from URL",
        $$events: {
          activate: p,
          cancel: () => i("cancel"),
          submit: b
        },
        children: (Z, T) => {
          var E = LX(), M = s.first_child(E);
          {
            var D = (Y) => {
              var q = VX(), te = s.child(q, !0);
              s.reset(q), s.template_effect(() => s.set_text(te, s.get(u))), s.append(Y, q);
            };
            s.if(M, (Y) => {
              s.get(u) && Y(D);
            });
          }
          var V = s.sibling(M, 2), I = s.child(V), U = s.child(I);
          s.remove_input_defaults(U), s.bind_this(U, (Y) => s.set(o, Y), () => s.get(o)), s.reset(I), s.reset(V), s.bind_value(U, () => s.get(c), (Y) => s.set(c, Y)), s.append(Z, E);
        },
        $$slots: {
          default: !0,
          footer: (Z, T) => {
            var E = UX(), M = s.sibling(s.child(E), 2);
            s.reset(E), s.event("click", M, () => i("cancel")), s.append(Z, E);
          }
        }
      });
    }, k = (w) => {
      hs(w, {
        get active() {
          return t();
        },
        title: "Create new file",
        $$events: {
          activate: p,
          cancel: () => i("cancel")
        },
        children: (Z, T) => {
          var E = YX(), M = s.sibling(s.child(E), 2), D = s.child(M), V = s.child(D);
          s.bind_this(V, (Ze) => s.set(o, Ze), () => s.get(o)), s.reset(D);
          var I = s.sibling(D, 2), U = s.child(I);
          s.reset(I), s.reset(M);
          var Y = s.sibling(M, 4), q = s.child(Y), te = s.child(q);
          s.reset(q);
          var ue = s.sibling(q, 2), Ae = s.child(ue);
          s.reset(ue), s.reset(Y);
          var We = s.sibling(Y, 4), we = s.child(We), xe = s.child(we);
          s.reset(we), s.reset(We);
          var me = s.sibling(We, 4), de = s.child(me), K = s.child(de);
          s.reset(de);
          var le = s.sibling(de, 2), $e = s.child(le);
          s.reset(le), s.reset(me), s.reset(E), s.event("click", V, () => i("new", { type: ".mzn" })), s.event("click", U, () => i("new", { type: ".mzc.mzn" })), s.event("click", te, () => i("new", { type: ".dzn" })), s.event("click", Ae, () => i("new", { type: ".json" })), s.event("click", xe, () => i("new", { type: ".html" })), s.event("click", K, () => s.get(r).click()), s.event("click", $e, () => s.set(f, !0)), s.append(Z, E);
        },
        $$slots: { default: !0 }
      });
    };
    s.if(x, (w) => {
      s.get(f) ? w(P) : w(k, !1);
    });
  }
  var R = s.sibling(x, 2);
  return s.bind_this(R, (w) => s.set(r, w), () => s.get(r)), s.bind_files(R, () => s.get(l), (w) => s.set(l, w)), s.event("change", R, g), s.append(n, $), s.pop({
    get active() {
      return t();
    },
    set active(w) {
      t(w), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (w, Z) => s.add_legacy_event_listener(e, w, Z)
  });
}
var zX = s.template('<button class="button is-small is-light" title="Compiled checkers are read only" type="button" disabled><span class="icon"><!></span></button>'), jX = s.template('<button class="button is-small" type="button"><span class="icon"><!></span></button>'), BX = s.template('<tr><td> </td><td><div class="tool-buttons svelte-1bgv9sn"><div class="field is-grouped"><p class="control"><button class="button is-small" type="button"><span class="icon"><!></span></button></p> <p class="control"><!></p> <p class="control"><button class="button is-small is-danger" title="Delete this file" type="button"><span class="icon"><!></span></button></p></div></div></td></tr>'), IX = s.template('<p> </p> <table class="table is-fullwidth"><tbody></tbody></table>', 1), NX = s.template('<!> <div><button class="button is-fullwidth" type="button"><span class="icon"><!></span> <span>Add new</span></button></div>', 1), FX = s.template('<div slot="footer"><button class="button is-primary">Accept</button></div>');
function FS(n, e) {
  if (new.target) return Qi({ component: FS, ...n });
  s.push(e, !1);
  const t = s.mutable_state(), i = s.mutable_state(), r = s.mutable_state(), l = s.mutable_state(), o = s.mutable_state(), c = s.mutable_state();
  let f = s.prop(e, "active", 12, !1), u = s.prop(e, "files", 28, () => []);
  const O = an();
  function p() {
    O("close");
  }
  return s.legacy_pre_effect(() => s.deep_read_state(u()), () => {
    s.set(t, u().map((g, b) => ({ file: g, index: b })));
  }), s.legacy_pre_effect(() => s.get(t), () => {
    s.set(i, s.get(t).filter((g) => g.file.name.endsWith(".mzn") && !g.file.name.endsWith(".mzc.mzn")).sort((g, b) => g.file.name.localeCompare(b.file.name)));
  }), s.legacy_pre_effect(() => s.get(t), () => {
    s.set(r, s.get(t).filter((g) => g.file.name.endsWith(".dzn") || g.file.name.endsWith(".json")).sort((g, b) => g.file.name.localeCompare(b.file.name)));
  }), s.legacy_pre_effect(() => s.get(t), () => {
    s.set(l, s.get(t).filter((g) => g.file.name.endsWith(".mzc") || g.file.name.endsWith(".mzc.mzn")).sort((g, b) => g.file.name.localeCompare(b.file.name)));
  }), s.legacy_pre_effect(() => s.get(t), () => {
    s.set(o, s.get(t).filter((g) => !g.file.name.endsWith(".mzn") && !g.file.name.endsWith(".mzc") && !g.file.name.endsWith(".dzn") && !g.file.name.endsWith(".json")).sort((g, b) => g.file.name.localeCompare(b.file.name)));
  }), s.legacy_pre_effect(
    () => (s.get(i), s.get(r), s.get(l), s.get(o)),
    () => {
      s.set(c, [
        {
          label: "Model files",
          files: s.get(i)
        },
        { label: "Data files", files: s.get(r) },
        {
          label: "Solution checkers",
          files: s.get(l)
        },
        { label: "Other files", files: s.get(o) }
      ].filter((g) => g.files.length > 0));
    }
  ), s.legacy_pre_effect_reset(), s.init(), hs(n, {
    get active() {
      return f();
    },
    title: "Manage files",
    $$events: { submit: p, cancel: p },
    children: (g, b) => {
      var $ = NX(), x = s.first_child($);
      s.each(x, 1, () => s.get(c), s.index, (Z, T) => {
        var E = IX(), M = s.first_child(E), D = s.child(M, !0);
        s.reset(M);
        var V = s.sibling(M, 2), I = s.child(V);
        s.each(I, 5, () => s.get(T).files, s.index, (U, Y) => {
          let q = () => s.get(Y).file, te = () => s.get(Y).index;
          var ue = BX(), Ae = s.child(ue), We = s.child(Ae, !0);
          s.reset(Ae);
          var we = s.sibling(Ae), xe = s.child(we), me = s.child(xe), de = s.child(me), K = s.child(de), le = s.child(K), $e = s.child(le);
          const Ze = s.derived_safe_equal(() => q().hidden ? BW : HW);
          $t($e, {
            get icon() {
              return s.get(Ze);
            }
          }), s.reset(le), s.reset(K), s.reset(de);
          var Re = s.sibling(de, 2), Me = s.child(Re);
          {
            var re = (be) => {
              var Ce = zX(), rt = s.child(Ce), Ke = s.child(rt);
              $t(Ke, { icon: Zm }), s.reset(rt), s.reset(Ce), s.append(be, Ce);
            }, B = (be) => {
              var Ce = jX(), rt = s.child(Ce), Ke = s.child(rt);
              const Oi = s.derived_safe_equal(() => q().readOnly ? Zm : FW);
              $t(Ke, {
                get icon() {
                  return s.get(Oi);
                }
              }), s.reset(rt), s.reset(Ce), s.template_effect(() => {
                s.set_attribute(Ce, "title", `Click to ${(q().readOnly ? "unlock" : "lock") ?? ""} this file for editing`), s.toggle_class(Ce, "is-primary", !q().readOnly), s.toggle_class(Ce, "is-light", q().readOnly);
              }), s.event("click", Ce, () => O("modifyFile", {
                index: te(),
                options: { readOnly: !q().readOnly }
              })), s.append(be, Ce);
            };
            s.if(Me, (be) => {
              q().name.endsWith(".mzc") ? be(re) : be(B, !1);
            });
          }
          s.reset(Re);
          var ne = s.sibling(Re, 2), J = s.child(ne), he = s.child(J), ye = s.child(he);
          $t(ye, { icon: Wv }), s.reset(he), s.reset(J), s.reset(ne), s.reset(me), s.reset(xe), s.reset(we), s.reset(ue), s.template_effect(() => {
            s.set_text(We, q().name), s.set_attribute(K, "title", `Click to ${(q().hidden ? "show" : "hide") ?? ""} this file`), s.toggle_class(K, "is-primary", !q().hidden), s.toggle_class(K, "is-light", q().hidden);
          }), s.event("click", K, () => O("modifyFile", {
            index: te(),
            options: { hidden: !q().hidden }
          })), s.event("click", J, () => O("delete", { index: te() })), s.append(U, ue);
        }), s.reset(I), s.reset(V), s.template_effect(() => s.set_text(D, s.get(T).label)), s.append(Z, E);
      });
      var P = s.sibling(x, 2), k = s.child(P), R = s.child(k), w = s.child(R);
      $t(w, { icon: Zv }), s.reset(R), s.next(2), s.reset(k), s.reset(P), s.event("click", k, () => O("newFile")), s.append(g, $);
    },
    $$slots: {
      default: !0,
      footer: (g, b) => {
        var $ = FX();
        s.append(g, $);
      }
    }
  }), s.pop({
    get active() {
      return f();
    },
    set active(g) {
      f(g), s.flush_sync();
    },
    get files() {
      return u();
    },
    set files(g) {
      u(g), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (g, b) => s.add_legacy_event_listener(e, g, b)
  });
}
var GX = s.template('<option class="svelte-1x5266v"> </option>'), HX = s.template('<div class="select is-fullwidth is-multiple svelte-1x5266v"><select class="svelte-1x5266v"></select></div>'), KX = s.template('<div slot="footer"><button class="button is-primary">OK</button> <button type="button" class="button">Cancel</button></div>');
function GS(n, e) {
  if (new.target) return Qi({ component: GS, ...n });
  s.push(e, !1);
  const t = an();
  let i = s.prop(e, "modelFiles", 12), r = s.prop(e, "active", 12, !1), l = s.mutable_state(null);
  function o(f) {
    !s.get(l) && f && f.length > 0 && s.set(l, f[0]);
  }
  function c() {
    t("accept", { modelFile: s.get(l) });
  }
  return s.legacy_pre_effect(() => s.deep_read_state(i()), () => {
    o(i());
  }), s.legacy_pre_effect_reset(), s.init(), hs(n, {
    get active() {
      return r();
    },
    title: "Select model to run",
    $$events: {
      submit: c,
      cancel: () => t("cancel")
    },
    children: (f, u) => {
      var O = HX(), p = s.child(O);
      s.template_effect(() => {
        s.get(l), s.invalidate_inner_signals(() => {
          i();
        });
      }), s.each(p, 5, i, s.index, (g, b) => {
        var $ = GX(), x = {}, P = s.child($, !0);
        s.reset($), s.template_effect(() => {
          x !== (x = s.get(b)) && ($.value = ($.__value = s.get(b)) == null ? "" : s.get(b)), s.set_text(P, s.get(b));
        }), s.append(g, $);
      }), s.reset(p), s.reset(O), s.template_effect((g) => s.set_attribute(p, "size", g), [() => Math.min(8, i().length)], s.derived_safe_equal), s.bind_select_value(p, () => s.get(l), (g) => s.set(l, g)), s.append(f, O);
    },
    $$slots: {
      default: !0,
      footer: (f, u) => {
        var O = KX(), p = s.sibling(s.child(O), 2);
        s.reset(O), s.event("click", p, () => t("cancel")), s.append(f, O);
      }
    }
  }), s.pop({
    get modelFiles() {
      return i();
    },
    set modelFiles(f) {
      i(f), s.flush_sync();
    },
    get active() {
      return r();
    },
    set active(f) {
      r(f), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (f, u) => s.add_legacy_event_listener(e, f, u)
  });
}
var JX = s.template('<div class="tabs"><ul><li><a>Enter parameters</a></li> <li><a>Select data file</a></li></ul></div>'), eA = s.template("<option> </option>"), tA = s.template('<div class="select is-fullwidth is-multiple"><select multiple></select></div>'), iA = s.template('<input class="input svelte-7d5f7m">'), nA = s.template('<input class="input svelte-7d5f7m">'), rA = s.template('<div class="param svelte-7d5f7m"><span> </span> <!></div>'), sA = s.template("<!> <!>", 1), lA = s.template('<div slot="footer"><button class="button is-primary">OK</button> <button type="button" class="button">Cancel</button></div>');
function HS(n, e) {
  if (new.target) return Qi({ component: HS, ...n });
  s.push(e, !1);
  const t = s.mutable_state(), i = s.mutable_state(), r = an();
  let l = s.prop(e, "active", 12, !1), o = s.prop(e, "parameters", 12), c = s.prop(e, "dataFiles", 12), f = s.mutable_state(!0), u = s.mutable_state([]), O = s.mutable_state([]), p = s.mutable_state();
  async function g() {
    await Yn(), s.get(p) && s.get(p).focus();
  }
  function b(x) {
    s.set(O, Object.keys(x).sort().map((P) => x[P] === void 0 ? { name: P, value: "" } : { name: P, value: x[P] }));
  }
  function $() {
    s.get(i) ? r("accept", { dataFiles: s.get(u) }) : r("accept", {
      parameters: s.get(O).reduce((x, P) => ({ ...x, [P.name]: P.value }), {})
    });
  }
  return s.legacy_pre_effect(() => s.deep_read_state(o()), () => {
    b(o());
  }), s.legacy_pre_effect(() => s.deep_read_state(c()), () => {
    s.set(t, c().length > 0);
  }), s.legacy_pre_effect(() => (s.get(t), s.get(f)), () => {
    s.set(i, s.get(t) && s.get(f));
  }), s.legacy_pre_effect_reset(), s.init(), hs(n, {
    get active() {
      return l();
    },
    title: "Model parameters",
    $$events: {
      activate: g,
      submit: $,
      cancel: () => r("cancel")
    },
    children: (x, P) => {
      var k = sA(), R = s.first_child(k);
      {
        var w = (M) => {
          var D = JX(), V = s.child(D), I = s.child(V), U = s.child(I);
          s.reset(I);
          var Y = s.sibling(I, 2), q = s.child(Y);
          s.reset(Y), s.reset(V), s.reset(D), s.template_effect(() => {
            s.toggle_class(I, "is-active", !s.get(f)), s.toggle_class(Y, "is-active", s.get(f));
          }), s.event("click", U, () => s.set(f, !1)), s.event("click", q, () => s.set(f, !0)), s.append(M, D);
        };
        s.if(R, (M) => {
          s.get(t) && M(w);
        });
      }
      var Z = s.sibling(R, 2);
      {
        var T = (M) => {
          var D = tA(), V = s.child(D);
          s.template_effect(() => {
            s.get(u), s.invalidate_inner_signals(() => {
              s.get(p), c();
            });
          }), s.each(V, 5, c, s.index, (I, U) => {
            var Y = eA(), q = {}, te = s.child(Y, !0);
            s.reset(Y), s.template_effect(() => {
              q !== (q = s.get(U)) && (Y.value = (Y.__value = s.get(U)) == null ? "" : s.get(U)), s.set_text(te, s.get(U));
            }), s.append(I, Y);
          }), s.reset(V), s.bind_this(V, (I) => s.set(p, I), () => s.get(p)), s.reset(D), s.template_effect((I) => s.set_attribute(V, "size", I), [() => Math.min(8, c().length)], s.derived_safe_equal), s.bind_select_value(V, () => s.get(u), (I) => s.set(u, I)), s.append(M, D);
        }, E = (M) => {
          var D = s.comment(), V = s.first_child(D);
          s.each(V, 1, () => s.get(O), s.index, (I, U, Y) => {
            var q = rA(), te = s.child(q), ue = s.child(te);
            s.reset(te);
            var Ae = s.sibling(te, 2);
            {
              var We = (xe) => {
                var me = iA();
                s.remove_input_defaults(me), s.bind_this(me, (de) => s.set(p, de), () => s.get(p)), s.bind_value(me, () => s.get(U).value, (de) => (s.get(U).value = de, s.invalidate_inner_signals(() => s.get(O)))), s.append(xe, me);
              }, we = (xe) => {
                var me = nA();
                s.remove_input_defaults(me), s.bind_value(me, () => s.get(U).value, (de) => (s.get(U).value = de, s.invalidate_inner_signals(() => s.get(O)))), s.append(xe, me);
              };
              s.if(Ae, (xe) => {
                Y === 0 ? xe(We) : xe(we, !1);
              });
            }
            s.reset(q), s.template_effect(() => s.set_text(ue, `${s.get(U).name ?? ""} =`)), s.append(I, q);
          }), s.append(M, D);
        };
        s.if(Z, (M) => {
          s.get(i) ? M(T) : M(E, !1);
        });
      }
      s.append(x, k);
    },
    $$slots: {
      default: !0,
      footer: (x, P) => {
        var k = lA(), R = s.sibling(s.child(k), 2);
        s.reset(k), s.event("click", R, () => r("cancel")), s.append(x, k);
      }
    }
  }), s.pop({
    get active() {
      return l();
    },
    set active(x) {
      l(x), s.flush_sync();
    },
    get parameters() {
      return o();
    },
    set parameters(x) {
      o(x), s.flush_sync();
    },
    get dataFiles() {
      return c();
    },
    set dataFiles(x) {
      c(x), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (x, P) => s.add_legacy_event_listener(e, x, P)
  });
}
var oA = s.template('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-all-solutions" type="checkbox" class="svelte-makhy9"> <label for="enable-all-solutions" class="svelte-makhy9">All solutions (for satisfication problems)</label></p></div>'), aA = s.template('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-free-search" type="checkbox" class="svelte-makhy9"> <label for="enable-free-search" class="svelte-makhy9">Free search</label></p></div>'), cA = s.template('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-verbose-solve" type="checkbox" class="svelte-makhy9"> <label for="enable-verbose-solve" class="svelte-makhy9">Verbose solving</label></p></div>'), hA = s.template('<div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-solving-satistics" type="checkbox" class="svelte-makhy9"> <label for="enable-solving-satistics" class="svelte-makhy9">Solving statistics</label></p></div>'), fA = s.template('<div class="config-window svelte-makhy9"><button class="button is-text is-small exit-button svelte-makhy9"><span class="icon"><!></span></button> <form><h5 class="title is-5 svelte-makhy9">Solving options</h5> <div class="field is-grouped"><p class="control checkbox-control svelte-makhy9"><input id="enable-timelimit" type="checkbox" class="svelte-makhy9"> <label for="enable-timelimit" class="svelte-makhy9">Time limit (s)</label></p> <p class="control is-expanded"><input class="input is-fullwidth" type="number" step="1"></p></div> <!> <!> <h5 class="title is-5 svelte-makhy9">Output options</h5> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-verbose-compile" type="checkbox" class="svelte-makhy9"> <label for="enable-verbose-compile" class="svelte-makhy9">Verbose compilation</label></p></div> <!> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-compilation-satistics" type="checkbox" class="svelte-makhy9"> <label for="enable-compilation-satistics" class="svelte-makhy9">Compilation statistics</label></p></div> <!> <div class="field"><p class="control checkbox-control svelte-makhy9"><input id="enable-timing-information" type="checkbox" class="svelte-makhy9"> <label for="enable-timing-information" class="svelte-makhy9">Timing information</label></p></div> <div class="field is-grouped bottom-buttons svelte-makhy9"><p class="control"><button class="button is-primary">Accept</button></p> <p class="control"><button type="button" class="button is-danger">Reset to defaults</button></p></div></form></div>');
function KS(n, e) {
  if (new.target) return Qi({ component: KS, ...n });
  s.push(e, !1);
  const t = an();
  let i = s.prop(e, "active", 12), r = s.prop(e, "stdFlags", 28, () => []);
  const l = {
    enableTimeLimit: !1,
    timeLimit: 1,
    allSolutions: !1,
    verboseCompilation: !1,
    verboseSolving: !1,
    compilerStatistics: !1,
    solvingStatistics: !1,
    outputTime: !1,
    freeSearch: !1
  };
  let o = s.mutable_state({ ...l });
  function c(R) {
    const w = R * 1e3;
    w !== Math.floor(w) && s.mutate(o, s.get(o).timeLimit = Math.floor(w) / 1e3);
  }
  function f(R, w) {
    return R.indexOf(w) !== -1;
  }
  function u() {
    for (const R in s.get(o))
      if (l[R] !== s.get(o)[R])
        return !1;
    return !0;
  }
  function O() {
    s.set(o, { ...l });
  }
  function p(R) {
    const w = { ...l };
    for (const Z in l)
      Z in R && (w[Z] = R[Z]);
    s.set(o, w);
  }
  function g() {
    return { ...s.get(o) };
  }
  function b(R) {
    const w = { solver: R };
    return s.get(o).enableTimeLimit && s.get(o).timeLimit > 0 && (w["time-limit"] = s.get(o).timeLimit * 1e3), s.get(o).allSolutions && f(r(), "-a") && (w["all-satisfaction"] = !0), s.get(o).verboseCompilation && (w["verbose-compilation"] = !0), s.get(o).verboseSolving && f(r(), "-v") && (w["verbose-solving"] = !0), s.get(o).compilerStatistics && (w["compiler-statistics"] = !0), s.get(o).solvingStatistics && f(r(), "-s") && (w["solver-statistics"] = !0), s.get(o).outputTime && (w["output-time"] = !0), s.get(o).freeSearch && f(r(), "-f") && (w["free-search"] = !0), w;
  }
  function $(R) {
    const w = { solver: R };
    return s.get(o).verboseCompilation && (w["verbose-compilation"] = !0), s.get(o).compilerStatistics && (w["compiler-statistics"] = !0), w;
  }
  s.legacy_pre_effect(() => s.get(o), () => {
    c(s.get(o).timeLimit);
  }), s.legacy_pre_effect_reset(), s.init();
  var x = s.comment(), P = s.first_child(x);
  {
    var k = (R) => {
      var w = fA(), Z = s.child(w), T = s.child(Z), E = s.child(T);
      $t(E, { icon: Tv }), s.reset(T), s.reset(Z);
      var M = s.sibling(Z, 2), D = s.sibling(s.child(M), 2), V = s.child(D), I = s.child(V);
      s.remove_input_defaults(I), s.next(2), s.reset(V);
      var U = s.sibling(V, 2), Y = s.child(U);
      s.remove_input_defaults(Y), s.set_attribute(Y, "min", 0), s.reset(U), s.reset(D);
      var q = s.sibling(D, 2);
      {
        var te = (ye) => {
          var be = oA(), Ce = s.child(be), rt = s.child(Ce);
          s.remove_input_defaults(rt), s.next(2), s.reset(Ce), s.reset(be), s.bind_checked(rt, () => s.get(o).allSolutions, (Ke) => s.mutate(o, s.get(o).allSolutions = Ke)), s.append(ye, be);
        };
        s.if(q, (ye) => {
          f(r(), "-a") && ye(te);
        });
      }
      var ue = s.sibling(q, 2);
      {
        var Ae = (ye) => {
          var be = aA(), Ce = s.child(be), rt = s.child(Ce);
          s.remove_input_defaults(rt), s.next(2), s.reset(Ce), s.reset(be), s.bind_checked(rt, () => s.get(o).freeSearch, (Ke) => s.mutate(o, s.get(o).freeSearch = Ke)), s.append(ye, be);
        };
        s.if(ue, (ye) => {
          f(r(), "-f") && ye(Ae);
        });
      }
      var We = s.sibling(ue, 4), we = s.child(We), xe = s.child(we);
      s.remove_input_defaults(xe), s.next(2), s.reset(we), s.reset(We);
      var me = s.sibling(We, 2);
      {
        var de = (ye) => {
          var be = cA(), Ce = s.child(be), rt = s.child(Ce);
          s.remove_input_defaults(rt), s.next(2), s.reset(Ce), s.reset(be), s.bind_checked(rt, () => s.get(o).verboseSolving, (Ke) => s.mutate(o, s.get(o).verboseSolving = Ke)), s.append(ye, be);
        };
        s.if(me, (ye) => {
          f(r(), "-v") && ye(de);
        });
      }
      var K = s.sibling(me, 2), le = s.child(K), $e = s.child(le);
      s.remove_input_defaults($e), s.next(2), s.reset(le), s.reset(K);
      var Ze = s.sibling(K, 2);
      {
        var Re = (ye) => {
          var be = hA(), Ce = s.child(be), rt = s.child(Ce);
          s.remove_input_defaults(rt), s.next(2), s.reset(Ce), s.reset(be), s.bind_checked(rt, () => s.get(o).solvingStatistics, (Ke) => s.mutate(o, s.get(o).solvingStatistics = Ke)), s.append(ye, be);
        };
        s.if(Ze, (ye) => {
          f(r(), "-s") && ye(Re);
        });
      }
      var Me = s.sibling(Ze, 2), re = s.child(Me), B = s.child(re);
      s.remove_input_defaults(B), s.next(2), s.reset(re), s.reset(Me);
      var ne = s.sibling(Me, 2), J = s.sibling(s.child(ne), 2), he = s.child(J);
      s.reset(J), s.reset(ne), s.reset(M), s.reset(w), s.template_effect(() => Y.disabled = !s.get(o).enableTimeLimit), s.event("click", Z, () => t("close")), s.bind_checked(I, () => s.get(o).enableTimeLimit, (ye) => s.mutate(o, s.get(o).enableTimeLimit = ye)), s.bind_value(Y, () => s.get(o).timeLimit, (ye) => s.mutate(o, s.get(o).timeLimit = ye)), s.bind_checked(xe, () => s.get(o).verboseCompilation, (ye) => s.mutate(o, s.get(o).verboseCompilation = ye)), s.bind_checked($e, () => s.get(o).compilerStatistics, (ye) => s.mutate(o, s.get(o).compilerStatistics = ye)), s.bind_checked(B, () => s.get(o).outputTime, (ye) => s.mutate(o, s.get(o).outputTime = ye)), s.event("click", he, O), s.event("submit", M, s.preventDefault(() => t("close"))), s.transition(3, w, () => J0, () => ({ x: 100, duration: 200 })), s.append(R, w);
    };
    s.if(P, (R) => {
      i() && R(k);
    });
  }
  return s.append(n, x), s.bind_prop(e, "isDefault", u), s.bind_prop(e, "reset", O), s.bind_prop(e, "load", p), s.bind_prop(e, "save", g), s.bind_prop(e, "getSolvingConfiguration", b), s.bind_prop(e, "getCompilationConfiguration", $), s.pop({
    isDefault: u,
    reset: O,
    load: p,
    save: g,
    getSolvingConfiguration: b,
    getCompilationConfiguration: $,
    get active() {
      return i();
    },
    set active(R) {
      i(R), s.flush_sync();
    },
    get stdFlags() {
      return r();
    },
    set stdFlags(R) {
      r(R), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (R, w) => s.add_legacy_event_listener(e, R, w)
  });
}
var uA = s.template('<a href="javascript:void(0);" class="dropdown-item"><!></a>'), OA = s.template('<div class="dropdown"><div class="dropdown-trigger"><button class="button"><span><!></span> <span class="icon is-small"><!></span></button></div> <div class="dropdown-menu"><div class="dropdown-content"></div></div></div>');
function JS(n, e) {
  if (new.target) return Qi({ component: JS, ...n });
  s.push(e, !1);
  const t = an();
  let i = s.prop(e, "title", 12, null), r = s.prop(e, "items", 28, () => []), l = s.prop(e, "currentItem", 12, null), o = s.prop(e, "active", 12, !1), c = s.prop(e, "disabled", 12, !1), f = s.mutable_state();
  function u(T) {
    t("selectItem", { item: T }), o(!1);
  }
  function O(T) {
    s.get(f) && !s.get(f).contains(T.target) && o(!1);
  }
  s.init();
  var p = OA();
  s.event("click", s.document.body, O);
  var g = s.child(p), b = s.child(g), $ = s.child(b), x = s.child($);
  {
    var P = (T) => {
      var E = s.comment(), M = s.first_child(E);
      s.slot(
        M,
        e,
        "selected",
        {
          get item() {
            return l();
          }
        },
        (D) => {
          var V = s.text();
          s.template_effect(() => s.set_text(V, l().label)), s.append(D, V);
        }
      ), s.append(T, E);
    };
    s.if(x, (T) => {
      l() && T(P);
    });
  }
  s.reset($);
  var k = s.sibling($, 2), R = s.child(k);
  $t(R, { icon: iZ }), s.reset(k), s.reset(b), s.reset(g);
  var w = s.sibling(g, 2), Z = s.child(w);
  return s.each(Z, 5, r, s.index, (T, E) => {
    var M = uA(), D = s.child(M);
    s.slot(
      D,
      e,
      "item",
      {
        get item() {
          return s.get(E);
        }
      },
      (V) => {
        var I = s.text();
        s.template_effect(() => s.set_text(I, s.get(E).label)), s.append(V, I);
      }
    ), s.reset(M), s.template_effect(() => s.toggle_class(M, "is-active", l() === s.get(E))), s.event("click", M, () => u(s.get(E))), s.append(T, M);
  }), s.reset(Z), s.reset(w), s.reset(p), s.bind_this(p, (T) => s.set(f, T), () => s.get(f)), s.template_effect(() => {
    s.set_attribute(p, "title", i()), s.toggle_class(p, "is-active", o()), b.disabled = c();
  }), s.event("click", b, () => o(!o())), s.append(n, p), s.pop({
    get title() {
      return i();
    },
    set title(T) {
      i(T), s.flush_sync();
    },
    get items() {
      return r();
    },
    set items(T) {
      r(T), s.flush_sync();
    },
    get currentItem() {
      return l();
    },
    set currentItem(T) {
      l(T), s.flush_sync();
    },
    get active() {
      return o();
    },
    set active(T) {
      o(T), s.flush_sync();
    },
    get disabled() {
      return c();
    },
    set disabled(T) {
      c(T), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (T, E) => s.add_legacy_event_listener(e, T, E)
  });
}
const e$ = Ye.define({
  /**
   * @param {{from: number, to: number, msg: string, type: string}} e
   */
  map: (n, e) => ({
    from: e.mapPos(n.from),
    to: e.mapPos(n.to),
    msg: n.msg,
    type: n.type
  })
}), t$ = Ye.define(), K0 = ti.define({
  create() {
    return _e.none;
  },
  update(n, e) {
    n = n.map(e.changes);
    for (const t of e.effects)
      t.is(t$) && (n = _e.none), t.is(e$) && (n = n.update({
        add: [
          _e.mark({
            class: `cm-mzn-underline-${t.value.type}`,
            attributes: { title: t.value.msg }
          }).range(t.value.from, t.value.to)
        ]
      }));
    return n;
  },
  provide: (n) => ae.decorations.from(n)
});
function AO(n, e, t) {
  let i, r = 1, l = 1;
  for (i = 0; i < t.length; i++) {
    if (r >= n && l >= e)
      return i;
    l++, t[i] === `
` && (r++, l = 1);
  }
  return i;
}
function dA(n, e, t) {
  const i = e.map(
    (r) => e$.of({
      from: AO(
        r.location.firstLine,
        r.location.firstColumn,
        n
      ),
      to: AO(
        r.location.lastLine,
        r.location.lastColumn,
        n
      ) + 1,
      msg: `${r.type === "error" ? "Error" : "Warning"}: ${r.what}: ${r.message}`,
      type: r.type
    })
  );
  t.state.field(K0, !1) || i.push(
    // @ts-ignore
    Ye.appendConfig.of([K0])
  ), t.dispatch({ effects: [t$.of(null), ...i] });
}
const i$ = (n) => {
  const e = window.matchMedia(n);
  return Mk(e.matches, (t) => {
    const i = () => t(window.matchMedia(n).matches);
    return e.addEventListener("change", i), () => e.removeEventListener("change", i);
  });
}, pA = i$("(prefers-color-scheme: dark)"), gA = i$("(max-width: 768px)");
var mA = s.template('<button class="button is-danger" title="Cancel solving"><span>Stop</span> <span class="icon"><!></span></button>'), vA = s.template('<button class="button is-primary" title="Run the current file"><span>Run</span> <span class="icon"><!></span></button>'), bA = s.template('<div class="control"><button class="button" title="Compile the current file and show the resultant FlatZinc"><span>Compile</span></button></div>'), SA = s.template('<span slot="item"> </span>'), $A = s.template('<div class="control"><!></div>'), yA = s.template("<option> </option>"), QA = s.template('<div class="control is-expanded"><div class="select is-fullwidth"><select></select></div></div>'), xA = s.template("<option> </option>"), PA = s.template('<div class="control"><button class="button is-primary" title="Solver configuration"><span class="icon"><!></span></button></div>'), wA = s.template('<div class="navbar-item is-hidden-mobile"><div class="field has-addons"><div class="control"><button class="button is-static">Solver:</button></div> <div class="control is-expanded"><div class="select is-fullwidth"><select></select></div></div> <!></div></div>'), kA = s.template('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Compile current file</span></a>'), _A = s.template('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Solver configuration</span></a>'), WA = s.template('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span> </span></a>'), ZA = s.template('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Share this project</span></a>'), TA = s.template('<a class="navbar-item mobile-menu-item svelte-hl0lfa" href="javascript:void(0);"><span class="icon svelte-hl0lfa"><!></span> <span>Open in MiniZinc Playground</span></a>'), CA = s.template("<!> <!> <!> <!> <!> <!>", 1), RA = s.template('<div class="control"><button class="button is-primary" title="Share"><span class="icon"><!></span></button></div>'), XA = s.template('<div class="control"><button class="button" title="Download project"><span class="icon"><!></span></button></div>'), AA = s.template('<div class="control"><button class="button is-primary" title="Open in playground"><span class="icon"><!></span></button></div>'), MA = s.template('<!> <div class="navbar-item"><div class="field has-addons"><!> <!> <!> <!></div></div>', 1), EA = s.template('<div class="top svelte-hl0lfa"><!></div>'), qA = s.template('<div class="panel stack svelte-hl0lfa" slot="panelA"><!> <div class="grow svelte-hl0lfa"><!></div></div>'), VA = s.template('<li class="tab-end svelte-hl0lfa"><button class="button is-small" title="Switch orientation"><span class="icon"><!></span></button></li>'), LA = s.template('<div class="top svelte-hl0lfa"><div class="tabs is-boxed"><ul><li><a href="javascript:void(0);">Output</a></li> <li><a href="javascript:void(0);">Visualisation</a></li> <!></ul></div></div>'), UA = s.template('<button class="button is-small" title="Switch orientation"><span class="icon"><!></span></button>'), YA = s.template('<p class="control" slot="before-right-controls"><!></p>'), DA = s.template('<div class="panel stack svelte-hl0lfa" slot="panelB"><!> <div class="grow svelte-hl0lfa"><div class="tab-window svelte-hl0lfa"><!></div> <div class="tab-window svelte-hl0lfa"><!></div></div></div>'), zA = s.template("<p>Are you sure you wish to delete <code> </code>?</p> <p>This cannot be undone.</p>", 1), jA = s.template('<div slot="footer"><button class="button is-danger">Delete</button> <button type="button" class="button">Cancel</button></div>'), BA = s.template('<div class="field has-addons"><p class="control is-expanded"><input class="input" type="text" readonly=""></p> <p class="control"><button type="button" class="button"><span class="icon"><!></span></button></p></div>'), IA = s.template('<div slot="footer"><button class="button is-primary">Done</button></div>'), NA = s.template('<div class="mzn-playground svelte-hl0lfa"><div class="mzn-playground-wrapper svelte-hl0lfa"><div class="stack svelte-hl0lfa"><div class="top svelte-hl0lfa"><nav class="navbar"><div class="navbar-brand"><!> <div class="navbar-item is-expanded"><div class="field navbar-run-buttons has-addons svelte-hl0lfa"><div class="control"><!></div> <!> <!> <!> <!></div></div> <!> <!> <!>  <a role="button" class="navbar-burger" aria-label="menu"><span aria-hidden="true"></span> <span aria-hidden="true"></span> <span aria-hidden="true"></span></a></div> <div class="navbar-menu"><div class="navbar-start is-hidden-tablet"></div> <div class="navbar-end"><!> <!></div></div></nav></div> <div class="grow main-panel svelte-hl0lfa"><div class="left svelte-hl0lfa"><!></div> <!></div></div> <!> <!> <!> <!> <!> <!> <!></div></div>');
function FA(n, e) {
  if (new.target) return Qi({ component: FA, ...n });
  s.push(e, !1);
  const [t, i] = s.setup_stores(), r = () => s.store_get(pA, "$browserDarkMode", t), l = () => s.store_get(gA, "$screenMobile", t), o = s.mutable_state(), c = s.mutable_state(), f = s.mutable_state(), u = s.mutable_state(), O = s.mutable_state(), p = s.mutable_state(), g = s.mutable_state(), b = s.mutable_state(), $ = s.mutable_state(), x = s.mutable_state(), P = s.mutable_state(), k = s.mutable_state(), R = s.mutable_state(), w = s.mutable_state(), Z = s.mutable_state(), T = s.mutable_state(), E = s.mutable_state();
  let M = s.prop(e, "showVersionSwitcher", 12, !0), D = s.prop(e, "showSolverDropdown", 12, !0), V = s.prop(e, "edgeMiniZinc", 12, !1), I = s.prop(e, "autoClearOutput", 12, !1), U = s.prop(e, "showTabs", 12, !0), Y = s.prop(e, "canEditTabs", 12, !0), q = s.prop(e, "compilationEnabled", 12, !0), te = s.prop(e, "project", 12), ue = s.prop(e, "enabledSolvers", 12, null), Ae = s.prop(e, "canEditSolverSettings", 12, !0), We = s.prop(e, "showShareButton", 12, !0), we = s.prop(e, "showDownloadButton", 12, !0), xe = s.prop(e, "externalPlaygroundURL", 12, null), me = s.prop(e, "splitterDirection", 12, "vertical"), de = s.prop(e, "splitterSize", 12, 75), K = s.prop(e, "canSwitchOrientation", 12, !0), le = s.prop(e, "showClearOutput", 12, !0), $e = s.prop(e, "showAutoClearOutput", 12, !0), Ze = s.prop(e, "showOutputSectionToggles", 12, !0), Re = s.prop(e, "showOutputRightControls", 12, !0), Me = s.prop(e, "theme", 12, "auto"), re = s.prop(e, "hideOutputOnStartup", 12, !0), B = s.prop(e, "autoFocus", 12, !0);
  const ne = an();
  let J = s.mutable_state(0), he = s.mutable_state([]), ye, be, Ce = s.mutable_state({
    latest: { label: "Latest", detail: "stable" },
    edge: { label: "Edge", detail: "development" }
  });
  function rt(_) {
    const z = V() ? Ak : Xk;
    if (be !== z) {
      s.update(J);
      const N = ye;
      ye = new Promise(async (ie, ce) => {
        N && await N, be && be.shutdown(), be = z, be.shutdown(), await be.init();
        const [Se] = /version \d+\.\d+\.\d+(?:, build .*)?$/m.exec(await be.version()), oe = V() ? "edge" : "latest";
        s.set(Ce, {
          ...s.get(Ce),
          [oe]: {
            ...s.get(Ce)[oe],
            detail: Se
          }
        }), s.set(he, await be.solvers()), await Yn(), s.update(J, -1), ie();
      });
    }
    return ye;
  }
  const Ke = new Promise((_, z) => {
    MO(() => {
      rt(), _();
    });
  });
  async function Oi(_) {
    V(_.minizincVersion === "edge"), await Ke, s.set(se, []), Gt(_.files, B()), s.set(Mt, _.tab || 0), await rt(), _.solverId ? s.set(st, s.get(w).findIndex((z) => z.id === _.solverId)) : s.set(st, s.get(w).findIndex((z) => z.extraInfo && z.extraInfo.isDefault) || 0), _.solverConfig ? s.get(vt).load(_.solverConfig) : s.get(vt).reset();
  }
  async function et(_) {
    const z = s.get(se).length;
    Gt(_.files), _.tab !== void 0 && _.tab !== null && _.tab >= 0 && oi(z + _.tab), _.solverId && (await rt(), s.set(st, s.get(w).findIndex((N) => N.id === _.solverId)));
  }
  function Te() {
    return s.get(se).length > 0;
  }
  let Ue = s.mutable_state(), se = s.mutable_state([]), wt = s.mutable_state(!1), Mt = s.mutable_state(0), vt = s.mutable_state(), Ut = s.mutable_state(!1), kt = s.mutable_state(null), jt = s.mutable_state(!1), Pi = s.mutable_state(!1), Bt = s.mutable_state(null), yt = s.mutable_state(!1), He = s.mutable_state([]), Le = s.mutable_state(null), Et = [], qt = s.mutable_state({}), st = s.mutable_state(-1);
  async function li(_, z) {
    if (await rt(), s.get(st) < 0 || s.get(st) >= s.get(w).length) {
      const N = s.get(w).findIndex((ie) => ie.extraInfo && ie.extraInfo.isDefault);
      N !== -1 && s.set(st, N);
    }
  }
  let ii = s.mutable_state(!1);
  function Xi() {
    s.set(ii, !s.get(ii));
  }
  async function oi(_, z = !0) {
    for (s.get(Ue) && s.get(Mt) < s.get(se).length && (s.mutate(b, s.get(b).state = s.get(Ue).getState()), s.mutate(b, s.get(b).scrollTop = s.get(Ue).getView().scrollDOM.scrollTop), s.mutate(b, s.get(b).scrollLeft = s.get(Ue).getView().scrollDOM.scrollLeft)); _ >= 0 && s.get(se)[_].hidden; )
      _--;
    _ === -1 && (_ = s.get(se).findIndex((N) => !N.hidden)), s.set(Mt, _), await Yn(), s.get(Ue) && s.get(b) && (z && s.get(Ue).focus(), s.get(b).scrollTop !== void 0 && s.get(Ue).getView().requestMeasure({
      read(N) {
        N.scrollDOM.scrollTo(s.get(b).scrollLeft, s.get(b).scrollTop);
      }
    }));
  }
  function Ni(_) {
    let z = `Untitled${_}`, N = 2;
    for (; s.get(se).find((ie) => ie.name === z); )
      z = `Untitled-${N++}${_}`;
    s.set(se, [
      ...s.get(se),
      {
        name: z,
        state: it.create({
          extensions: qc(_, Tn, s.get(E))
        })
      }
    ]), oi(s.get(se).length - 1), s.set(Ut, !1);
  }
  function Gt(_, z = !0) {
    let N = [];
    for (const ie of _) {
      const ce = ie.name.endsWith(".mzc.mzn") ? ie.name.length - 8 : ie.name.lastIndexOf("."), Se = ie.name.substring(0, ce).replaceAll(/[\/\\\.]/g, ""), oe = ie.name.substring(ce);
      let De = `${Se}${oe}`, Qe = 2;
      for (; s.get(se).find((ht) => ht.name === De); )
        De = `${Se}-${Qe++}${oe}`;
      const gt = qc(oe, Tn, s.get(E), ie.readOnly);
      N.push({
        ...ie,
        hidden: ie.hidden || oe === ".mzc",
        name: De,
        state: it.create({
          doc: ie.contents,
          extensions: gt,
          selection: { anchor: ie.anchor || 0 }
        })
      });
    }
    s.set(se, [...s.get(se), ...N]), oi(s.get(se).length - 1, z), s.set(Ut, !1);
  }
  function Ai(_) {
    const { index: z, name: N, suffix: ie } = _.detail;
    let ce = N, Se = 2;
    for (; s.get(se).some((oe) => oe === ce + ie); )
      ce = `${N}-${Se++}`;
    s.get(b) && s.mutate(b, s.get(b).state = s.get(Ue).getState()), s.set(se, [
      ...s.get(se).slice(0, z),
      {
        ...s.get(se)[z],
        name: N + ie
      },
      ...s.get(se).slice(z + 1)
    ]);
  }
  function dr(_) {
    const z = s.get(c) === 1 && !s.get(se)[_].hidden;
    s.set(se, [
      ...s.get(se).slice(0, _),
      ...s.get(se).slice(_ + 1),
      ...z ? [
        {
          name: "Untitled.mzn",
          state: it.create({
            extensions: qc(".mzn", Tn, s.get(E))
          })
        }
      ] : []
    ]), s.get(Mt) >= s.get(se).length ? oi(s.get(se).length - 1) : oi(s.get(Mt)), s.set(kt, null);
  }
  function pr(_, z) {
    s.get(b) && s.mutate(b, s.get(b).state = s.get(Ue).getState());
    const N = { ...s.get(se)[_], ...z };
    "readOnly" in z && di(N, z.readOnly ? z4 : j4), s.set(se, [
      ...s.get(se).slice(0, _),
      N,
      ...s.get(se).slice(_ + 1)
    ]), oi(s.get(Mt));
  }
  function gr(_, z) {
    let N;
    _ < z ? N = [
      ...s.get(se).slice(0, _),
      ...s.get(se).slice(_ + 1, z + 1),
      s.get(se)[_],
      ...s.get(se).slice(z + 1)
    ] : N = [
      ...s.get(se).slice(0, z),
      s.get(se)[_],
      ...s.get(se).slice(z, _),
      ...s.get(se).slice(_ + 1)
    ];
    const ie = N.indexOf(s.get(b));
    s.set(se, N), s.set(Mt, ie);
  }
  function di(_, z) {
    _.effects = _.effects ? [..._.effects, z] : [z];
  }
  async function cn(_) {
    if (s.get(Ue) && _ && _.effects && _.effects.length > 0) {
      await Yn();
      const z = s.get(Ue).getView();
      z && z.state === _.state && (z.dispatch({ effects: _.effects }), _.effects = []);
    }
  }
  let hn = s.mutable_state(null);
  async function Yr(_) {
    s.update(J), s.mutate(b, s.get(b).state = s.get(Ue).getState());
    let z = s.get($) ? s.get(b) : null;
    if (!z) {
      if (s.get(k).length === 0)
        return s.update(J, -1), !1;
      if (s.get(k).length === 1)
        z = s.get(se).find((ce) => ce.name === s.get(k)[0]);
      else
        try {
          const ce = await new Promise((Se, oe) => {
            s.set(hn, Se), s.set(Pi, !0);
          });
          if (!ce)
            return s.update(J, -1), !1;
          z = s.get(se).find((Se) => Se.name === ce.modelFile);
        } finally {
          s.set(Pi, !1);
        }
    }
    const N = new be.Model(), ie = [z.name];
    {
      const ce = z.name.substring(0, z.name.length - 4), Se = s.get(se).find((oe) => oe.name === `${ce}.mzc` || oe.name === `${ce}.mzc.mzn`);
      Se && ie.push(Se.name);
    }
    z !== s.get(b) && ie.push(s.get(b).name);
    for (const ce of s.get(se))
      N.addFile(ce.name, ce.state.doc.toString(), ie.indexOf(ce.name) !== -1);
    try {
      const { input: ce } = await N.interface({
        options: s.get(vt).getCompilationConfiguration(s.get(Z).id)
      });
      if (Object.keys(ce).length > 0) {
        const Se = {};
        for (const oe in ce)
          Se[oe] = s.get(qt)[oe];
        s.set(qt, Se), s.get(x) && Et.indexOf(s.get(b).name) === -1 && (Et = [
          ...Et,
          s.get(b).name
        ]);
        try {
          const oe = await new Promise((De, Qe) => {
            s.set(hn, De), s.set(Bt, !0);
          });
          if (!oe)
            return s.update(J, -1), !1;
          if (oe.parameters) {
            let De = "";
            for (const Qe in oe.parameters)
              oe.parameters[Qe].trim().length > 0 && (De += `${Qe} = ${oe.parameters[Qe]};
`);
            N.addDznString(De), s.set(qt, oe.parameters);
          } else {
            for (const De of oe.dataFiles)
              ie.indexOf(De) === -1 && (N.addFile(De), ie.push(De));
            Et = oe.dataFiles;
          }
        } finally {
          s.set(Bt, !1);
        }
      }
    } catch (ce) {
      console.error(ce);
    }
    return s.update(J, -1), { model: N, fileList: ie };
  }
  async function kn() {
    if (s.get(P)) {
      const ce = new be.Model();
      ce.addFile(s.get(b).name, s.get(b).state.doc.toString());
      const Se = [s.get(b).name], oe = s.get(vt).getSolvingConfiguration(s.get(Z).id);
      await wi(ce, Se, oe);
      return;
    }
    const _ = await Yr();
    if (!_)
      return;
    const { model: z, fileList: N } = _, ie = s.get(vt).getSolvingConfiguration(s.get(Z).id);
    await wi(z, N, ie);
  }
  async function wi(_, z, N) {
    s.set(yt, !0);
    const ie = Date.now();
    I() && s.set(He, []), s.set(He, [
      ...s.get(He),
      { files: z, output: [] }
    ]), s.set(Le, _.solve({ options: N, jsonOutput: !1 })), Mi(), s.get(Le).on("error", dt), s.get(Le).on("warning", dt), s.get(Le).on("solution", (ce) => dt(ce, Date.now() - ie)), s.get(Le).on("status", (ce) => dt(ce, Date.now() - ie)), s.get(Le).on("statistics", dt), s.get(Le).on("trace", (ce) => dt(ce, Date.now() - ie)), s.get(Le).on("statistics", dt), s.get(Le).on("comment", dt), s.get(Le).on("time", dt), s.get(Le).on("checker", dt), s.get(Le).on("stderr", dt);
    try {
      await s.get(Le), dt({
        type: "exit",
        code: 0,
        runTime: Date.now() - ie
      });
    } catch (ce) {
      dt({
        type: "exit",
        code: ce.code,
        runTime: Date.now() - ie
      });
    }
    s.set(Le, null);
  }
  async function Fi() {
    s.set(yt, !0);
    const _ = await Yr();
    if (!_)
      return;
    Mi();
    const { model: z, fileList: N } = _, ie = N[0], ce = Date.now();
    I() && s.set(He, []), s.set(He, [
      ...s.get(He),
      { files: N, isCompile: !0, output: [] }
    ]), s.set(Le, z.compile({
      options: s.get(vt).getCompilationConfiguration(s.get(Z).id)
    })), s.get(Le).on("error", dt), s.get(Le).on("warning", dt), s.get(Le).on("statistics", dt), s.get(Le).on("trace", dt), s.get(Le).on("statistics", dt), s.get(Le).on("stderr", dt);
    try {
      const Se = await s.get(Le), oe = ie.substring(0, ie.indexOf("."));
      let De = `${oe}.fzn`, Qe = 1;
      for (; s.get(se).find((gt) => gt.name === De); )
        De = `${oe}-${Qe}.fzn`, Qe++;
      s.set(se, [
        ...s.get(se),
        {
          name: De,
          state: it.create({
            extensions: qc(".fzn", Tn, s.get(E)),
            doc: Se
          })
        }
      ]), oi(s.get(se).length - 1), dt({
        type: "exit",
        code: 0,
        runTime: Date.now() - ce
      });
    } catch (Se) {
      dt({
        type: "exit",
        code: Se.code,
        runTime: Date.now() - ce
      });
    }
    s.set(Le, null);
  }
  function Dr() {
    dt({ type: "cancel" }), s.get(Le).cancel();
  }
  let _n = null;
  function dt(_, z) {
    _n ? _n.then(() => {
      _n = fn(_, z);
    }) : _n = fn(_, z), s.get(He)[s.get(He).length - 1].output.push(_), s.set(He, s.get(He));
  }
  function Mi() {
    s.get(Ei) && s.get(Ei).reset(), s.set(Gi, !1), s.set(Cn, !1);
  }
  async function fn(_, z) {
    if (_.type === "trace" && _.section.startsWith("mzn_vis_")) {
      s.get(Gi) || (s.set(Gi, !0), s.set(Cn, !0)), await Yn();
      const N = s.get(se).find((ce) => ce.name === _.message.url);
      let ie = null;
      if (N)
        ie = N.state.doc.toString();
      else
        try {
          ie = await be.readStdlibFileContents(_.message.url);
        } catch (ce) {
          console.error(ce);
          return;
        }
      if (ie === null) {
        console.error(`Failed to get visualisation file ${_.message.url}`);
        return;
      }
      s.get(Ei).addVisualisation(_.section, ie, _.message.userData);
      return;
    }
    if (s.get(Gi)) {
      for (; !s.get(Ei); )
        await Yn();
      switch (_.type) {
        case "solution":
          s.get(Ei).addSolution(_.sections.filter((N) => N.startsWith("mzn_vis_")).reduce((N, ie) => ({ ...N, [ie]: _.output[ie] }), {}), "time" in _ ? _.time : z);
          break;
        case "status":
          s.get(Ei).status(_.status, "time" in _ ? _.time : z);
          break;
        case "exit":
          s.get(Ei).status("time" in _ ? _.time : z);
          break;
      }
    }
  }
  function Wn() {
    return s.get(b) && s.mutate(b, s.get(b).state = s.get(Ue).getState()), {
      files: s.get(se).map((_) => ({
        name: _.name,
        contents: _.state.doc.toString(),
        ..._.hidden ? { hidden: !0 } : {},
        ..._.readOnly ? { readOnly: !0 } : {}
      })),
      tab: s.get(Mt),
      solverId: s.get(Z).id,
      solverConfig: s.get(vt).save(),
      minizincVersion: V() ? "edge" : "latest"
    };
  }
  let mr = s.mutable_state(!1);
  async function Ul() {
    s.set(mr, !0);
    try {
      const _ = (await import("./jszip.min-BCXm0mpD.js").then((Qe) => Qe.j)).default, z = (await import("./FileSaver.min-CZk5b_5E.js").then((Qe) => Qe.F)).default, N = Wn(), ie = s.get(se).map((Qe) => Qe.name), ce = s.get(se).filter((Qe) => !Qe.hidden).map((Qe) => Qe.name);
      let Se = s.get(Z).id;
      Se === "org.minizinc.gecode_presolver" ? Se = "org.gecode.gecode" : Se === "org.minizinc.chuffed" && (Se = "org.chuffed.chuffed");
      const oe = new _();
      for (const Qe of N.files)
        oe.file(Qe.name, Qe.contents);
      oe.file("Project.mzp", JSON.stringify({
        version: 105,
        projectFiles: ie,
        openFiles: ce,
        openTab: N.tab,
        selectedBuiltinConfigId: Se,
        selectedBuiltinConfigVersion: "default"
      }));
      const De = await oe.generateAsync({ type: "blob" });
      z.saveAs(De, "Project.zip");
    } catch (_) {
      console.error(_);
    } finally {
      s.set(mr, !1);
    }
  }
  let ki = s.mutable_state(), pi = s.mutable_state(null), In = s.mutable_state(!1);
  function vr(_) {
    const z = Wn(), N = new URL(_);
    return N.hash = `#project=${encodeURIComponent(JSON.stringify(z))}`, s.set(In, !1), N.toString();
  }
  function Zn() {
    s.get(ki).select(), s.get(ki).setSelectionRange(0, s.get(pi).length), navigator.clipboard.writeText(s.get(pi)), s.set(In, !0);
  }
  function br() {
    xe() && window.open(vr(xe()), "_blank").focus();
  }
  let ms = null;
  async function Tn(_) {
    const z = _.view;
    if (!(s.get(J) !== 0 || !s.get(Z) || !s.get(b) || !s.get(b).name.endsWith(".mzn")))
      try {
        const N = z.state.doc.toString();
        if (N === ms)
          return;
        ms = N;
        const ie = new be.Model();
        for (const oe of s.get(se))
          ie.addFile(oe.name, oe.state.doc.toString(), !1);
        const ce = ie.addString(N), Se = await ie.check({
          options: s.get(vt).getCompilationConfiguration(s.get(Z).id)
        });
        if (z.state.doc.toString() !== N)
          return;
        dA(N, Se.filter((oe) => oe.location.filename === ce), z);
      } catch (N) {
        console.error(N);
      }
  }
  function Ls(_) {
    const z = s.get(se).findIndex((N) => N.name === _.filename);
    if (z !== -1) {
      oi(z);
      const N = s.get(se)[z].state.doc.toString(), ie = AO(_.firstLine, _.firstColumn, N);
      s.get(Ue).focus(), s.get(Ue).setCursor(ie);
    }
  }
  function Sr() {
    me() === "horizontal" ? me("vertical") : me("horizontal");
  }
  function $r(_) {
    V(_.detail.item === s.get(Ce).edge);
  }
  function Us(_) {
    s.get(b) && s.mutate(b, s.get(b).state = s.get(Ue).getState()), s.get(se).forEach((z) => di(z, _ ? I4 : B4)), cn(s.get(b));
  }
  let Ei = s.mutable_state(), Gi = s.mutable_state(!1), Cn = s.mutable_state(!1);
  function fa(_) {
    s.get(Le) && Dr();
    const z = [_.modelFile], N = _.modelFile.substring(0, _.modelFile.length - 4), ie = s.get(se).find((Se) => Se.name === `${N}.mzc` || Se.name === `${N}.mzc.mzn`);
    if (ie && z.push(ie.name), _.dataFiles)
      for (const Se of _.dataFiles)
        z.push(Se);
    const ce = new be.Model();
    for (const Se of s.get(se))
      ce.addFile(Se.name, Se.state.doc.toString(), z.indexOf(Se.name) !== -1);
    wi(ce, z, _.options || s.get(vt).getSolvingConfiguration(s.get(Z).id));
  }
  function ua() {
    return s.get(st) === (s.get(w).findIndex((_) => _.extraInfo && _.extraInfo.isDefault) || 0);
  }
  function Oa() {
    return s.get(vt).isDefault();
  }
  s.legacy_pre_effect(() => s.get(Ce), () => {
    s.set(o, [
      s.get(Ce).latest,
      s.get(Ce).edge
    ]);
  }), s.legacy_pre_effect(() => s.deep_read_state(V()), () => {
    rt(V());
  }), s.legacy_pre_effect(() => s.deep_read_state(te()), () => {
    Oi(te());
  }), s.legacy_pre_effect(() => s.get(se), () => {
    s.set(c, s.get(se).filter((_) => !_.hidden).length);
  }), s.legacy_pre_effect(() => (s.get(Mt), s.get(se)), () => {
    s.set(b, s.get(Mt) < s.get(se).length ? s.get(se)[s.get(Mt)] : null);
  }), s.legacy_pre_effect(() => s.get(b), () => {
    s.set(f, s.get(b) ? s.get(b).state : null);
  }), s.legacy_pre_effect(
    () => (s.deep_read_state(ue()), s.get(he)),
    () => {
      s.set(w, ue() ? s.get(he).filter((_) => ue().indexOf(_.id) !== -1) : s.get(he));
    }
  ), s.legacy_pre_effect(
    () => (s.get(st), s.get(w)),
    () => {
      s.set(Z, s.get(st) >= 0 && s.get(st) < s.get(w).length ? s.get(w)[s.get(st)] : null);
    }
  ), s.legacy_pre_effect(() => s.get(b), () => {
    s.set($, s.get(b) && s.get(b).name.endsWith(".mzn") && !s.get(b).name.endsWith(".mzc.mzn"));
  }), s.legacy_pre_effect(() => s.get(b), () => {
    s.set(x, s.get(b) && (s.get(b).name.endsWith(".dzn") || s.get(b).name.endsWith(".json")));
  }), s.legacy_pre_effect(() => s.get(b), () => {
    s.set(P, s.get(b) && s.get(b).name.endsWith(".fzn"));
  }), s.legacy_pre_effect(
    () => (s.get(J), s.get(Z), s.get($), s.get(x), s.get(P)),
    () => {
      s.set(u, s.get(J) === 0 && s.get(Z) && (s.get($) || s.get(x) || s.get(P)));
    }
  ), s.legacy_pre_effect(
    () => (s.get(J), s.get(Z), s.get($), s.get(x)),
    () => {
      s.set(O, s.get(J) === 0 && s.get(Z) && (s.get($) || s.get(x)));
    }
  ), s.legacy_pre_effect(
    () => (s.deep_read_state(re()), s.get(yt)),
    () => {
      s.set(p, !re() || s.get(yt) ? "all" : "a");
    }
  ), s.legacy_pre_effect(() => s.get(Le), () => {
    s.set(g, s.get(Le) !== null);
  }), s.legacy_pre_effect(() => s.get(se), () => {
    s.set(k, s.get(se).filter((_) => _.name.endsWith(".mzn") && !_.name.endsWith(".mzc.mzn")).map((_) => _.name));
  }), s.legacy_pre_effect(() => s.get(se), () => {
    s.set(R, s.get(se).filter((_) => _.name.endsWith(".dzn") || _.name.endsWith(".json")).map((_) => _.name));
  }), s.legacy_pre_effect(
    () => (s.get(w), s.get(st)),
    () => {
      li(s.get(w), s.get(st));
    }
  ), s.legacy_pre_effect(() => s.get(Z), () => {
    s.set(T, s.get(Z) ? s.get(Z).stdFlags : []);
  }), s.legacy_pre_effect(() => s.get(b), () => {
    cn(s.get(b));
  }), s.legacy_pre_effect(
    () => (r(), s.deep_read_state(Me())),
    () => {
      s.set(E, {
        dark: !0,
        light: !1,
        auto: r()
      }[Me()]);
    }
  ), s.legacy_pre_effect(() => s.get(E), () => {
    Us(s.get(E));
  }), s.legacy_pre_effect(() => s.get(w), () => {
    ne("solversChanged", { solvers: s.get(w) });
  }), s.legacy_pre_effect_reset(), s.init();
  var Yl = NA(), Dl = s.child(Yl), Ys = s.child(Dl), Ds = s.child(Ys), zl = s.child(Ds), vs = s.child(zl), da = s.child(vs);
  s.slot(
    da,
    e,
    "navbar-before-run-buttons",
    {
      get isMobile() {
        return l();
      }
    },
    null
  );
  var zs = s.sibling(da, 2), bs = s.child(zs), js = s.child(bs), Uh = s.child(js);
  {
    var pa = (_) => {
      var z = mA(), N = s.sibling(s.child(z), 2), ie = s.child(N);
      $t(ie, { icon: tZ }), s.reset(N), s.reset(z), s.event("click", z, Dr), s.append(_, z);
    }, ga = (_) => {
      var z = vA(), N = s.sibling(s.child(z), 2), ie = s.child(N);
      $t(ie, { icon: rZ }), s.reset(N), s.reset(z), s.template_effect(() => z.disabled = !s.get(u)), s.event("click", z, kn), s.append(_, z);
    };
    s.if(Uh, (_) => {
      s.get(g) ? _(pa) : _(ga, !1);
    });
  }
  s.reset(js);
  var Bs = s.sibling(js, 2);
  {
    var Yh = (_) => {
      var z = bA(), N = s.child(z);
      s.reset(z), s.template_effect(() => N.disabled = s.get(g) || !s.get(O)), s.event("click", N, Fi), s.append(_, z);
    };
    s.if(Bs, (_) => {
      !l() && q() && _(Yh);
    });
  }
  var jl = s.sibling(Bs, 2);
  {
    var Bl = (_) => {
      var z = $A(), N = s.child(z);
      const ie = s.derived_safe_equal(() => V() ? s.get(Ce).edge : s.get(Ce).latest);
      JS(N, {
        get items() {
          return s.get(o);
        },
        get currentItem() {
          return s.get(ie);
        },
        get disabled() {
          return s.get(g);
        },
        title: "Configure MiniZinc version",
        $$events: { selectItem: $r },
        $$slots: {
          item: (ce, Se) => {
            var oe = SA();
            const De = s.derived_safe_equal(() => Se.item);
            var Qe = s.child(oe);
            s.reset(oe), s.template_effect(() => s.set_text(Qe, `${s.get(De).label ?? ""} (${s.get(De).detail ?? ""})`)), s.append(ce, oe);
          }
        }
      }), s.reset(z), s.append(_, z);
    };
    s.if(jl, (_) => {
      !l() && M() && _(Bl);
    });
  }
  var Is = s.sibling(jl, 2);
  s.slot(
    Is,
    e,
    "navbar-run-buttons",
    {
      get isMobile() {
        return l();
      }
    },
    null
  );
  var zr = s.sibling(Is, 2);
  {
    var ma = (_) => {
      var z = QA(), N = s.child(z), ie = s.child(N);
      s.template_effect(() => {
        s.get(st), s.invalidate_inner_signals(() => {
          s.get(w);
        });
      }), s.each(ie, 5, () => s.get(w), s.index, (ce, Se, oe) => {
        var De = yA();
        De.value = (De.__value = oe) == null ? "" : oe;
        var Qe = s.child(De);
        s.reset(De), s.template_effect(() => s.set_text(Qe, `${s.get(Se).name ?? ""}
                                                        ${s.get(Se).version ?? ""}`)), s.append(ce, De);
      }), s.reset(ie), s.reset(N), s.reset(z), s.bind_select_value(ie, () => s.get(st), (ce) => s.set(st, ce)), s.append(_, z);
    };
    s.if(zr, (_) => {
      l() && D() && s.get(w).length > 0 && _(ma);
    });
  }
  s.reset(bs), s.reset(zs);
  var Il = s.sibling(zs, 2);
  s.slot(
    Il,
    e,
    "navbar-after-run-buttons",
    {
      get isMobile() {
        return l();
      }
    },
    null
  );
  var va = s.sibling(Il, 2);
  {
    var ba = (_) => {
      var z = wA(), N = s.child(z), ie = s.sibling(s.child(N), 2), ce = s.child(ie), Se = s.child(ce);
      s.template_effect(() => {
        s.get(st), s.invalidate_inner_signals(() => {
          s.get(w);
        });
      }), s.each(Se, 5, () => s.get(w), s.index, (Qe, gt, ht) => {
        var ft = xA();
        ft.value = (ft.__value = ht) == null ? "" : ht;
        var lt = s.child(ft);
        s.reset(ft), s.template_effect(() => s.set_text(lt, `${s.get(gt).name ?? ""}
                                                        ${s.get(gt).version ?? ""}`)), s.append(Qe, ft);
      }), s.reset(Se), s.reset(ce), s.reset(ie);
      var oe = s.sibling(ie, 2);
      {
        var De = (Qe) => {
          var gt = PA(), ht = s.child(gt), ft = s.child(ht), lt = s.child(ft);
          $t(lt, { icon: Rm }), s.reset(ft), s.reset(ht), s.reset(gt), s.event("click", ht, Xi), s.append(Qe, gt);
        };
        s.if(oe, (Qe) => {
          Ae() && Qe(De);
        });
      }
      s.reset(N), s.reset(z), s.bind_select_value(Se, () => s.get(st), (Qe) => s.set(st, Qe)), s.append(_, z);
    };
    s.if(va, (_) => {
      D() && s.get(w).length > 0 && _(ba);
    });
  }
  var Nl = s.sibling(va, 2);
  s.slot(
    Nl,
    e,
    "navbar-after-solver-selector",
    {
      get isMobile() {
        return l();
      }
    },
    null
  );
  var Ns = s.sibling(Nl, 2);
  s.reset(vs);
  var Fs = s.sibling(vs, 2), Sa = s.sibling(s.child(Fs), 2), $a = s.child(Sa);
  {
    var Dh = (_) => {
      var z = CA(), N = s.first_child(z);
      {
        var ie = (Fe) => {
          var Ve = kA(), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: sZ }), s.reset(at), s.next(2), s.reset(Ve), s.event("click", Ve, () => {
            Fi(), s.set(wt, !1);
          }), s.append(Fe, Ve);
        };
        s.if(N, (Fe) => {
          q() && !s.get(g) && s.get(O) && Fe(ie);
        });
      }
      var ce = s.sibling(N, 2);
      {
        var Se = (Fe) => {
          var Ve = _A(), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: Rm }), s.reset(at), s.next(2), s.reset(Ve), s.event("click", Ve, () => {
            Xi(), s.set(wt, !1);
          }), s.append(Fe, Ve);
        };
        s.if(ce, (Fe) => {
          Ae() && D() && s.get(w).length > 0 && Fe(Se);
        });
      }
      var oe = s.sibling(ce, 2);
      {
        var De = (Fe) => {
          var Ve = WA(), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: IW }), s.reset(at);
          var Nn = s.sibling(at, 2), Ht = s.child(Nn);
          s.reset(Nn), s.reset(Ve), s.template_effect(() => s.set_text(Ht, `Switch to the ${(V() ? "latest" : "edge") ?? ""} version of MiniZinc`)), s.event("click", Ve, () => {
            V(!V()), s.set(wt, !1);
          }), s.append(Fe, Ve);
        };
        s.if(oe, (Fe) => {
          M() && !s.get(g) && Fe(De);
        });
      }
      var Qe = s.sibling(oe, 2);
      s.slot(
        Qe,
        e,
        "navbar-before-share-buttons",
        {
          get isMobile() {
            return l();
          }
        },
        null
      );
      var gt = s.sibling(Qe, 2);
      {
        var ht = (Fe) => {
          var Ve = ZA(), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: Tm }), s.reset(at), s.next(2), s.reset(Ve), s.event("click", Ve, () => {
            s.set(pi, vr(window.location.href)), s.set(wt, !1);
          }), s.append(Fe, Ve);
        };
        s.if(gt, (Fe) => {
          We() && s.get(J) === 0 && Fe(ht);
        });
      }
      var ft = s.sibling(gt, 2);
      {
        var lt = (Fe) => {
          var Ve = TA(), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: Cm }), s.reset(at), s.next(2), s.reset(Ve), s.event("click", Ve, () => {
            br(), s.set(wt, !1);
          }), s.append(Fe, Ve);
        };
        s.if(ft, (Fe) => {
          xe() && s.get(J) === 0 && Fe(lt);
        });
      }
      s.append(_, z);
    }, ya = (_) => {
      var z = MA(), N = s.first_child(z);
      s.slot(
        N,
        e,
        "navbar-before-share-buttons",
        {
          get isMobile() {
            return l();
          }
        },
        null
      );
      var ie = s.sibling(N, 2), ce = s.child(ie), Se = s.child(ce);
      {
        var oe = (lt) => {
          var Fe = RA(), Ve = s.child(Fe), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: Tm }), s.reset(at), s.reset(Ve), s.reset(Fe), s.template_effect(() => Ve.disabled = s.get(J) !== 0), s.event("click", Ve, () => s.set(pi, vr(window.location.href))), s.append(lt, Fe);
        };
        s.if(Se, (lt) => {
          We() && lt(oe);
        });
      }
      var De = s.sibling(Se, 2);
      {
        var Qe = (lt) => {
          var Fe = XA(), Ve = s.child(Fe), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: eZ }), s.reset(at), s.reset(Ve), s.reset(Fe), s.template_effect(() => Ve.disabled = s.get(mr) || s.get(J) !== 0), s.event("click", Ve, () => Ul()), s.append(lt, Fe);
        };
        s.if(De, (lt) => {
          we() && lt(Qe);
        });
      }
      var gt = s.sibling(De, 2);
      {
        var ht = (lt) => {
          var Fe = AA(), Ve = s.child(Fe), at = s.child(Ve), St = s.child(at);
          $t(St, { icon: Cm }), s.reset(at), s.reset(Ve), s.reset(Fe), s.template_effect(() => Ve.disabled = s.get(J) !== 0), s.event("click", Ve, br), s.append(lt, Fe);
        };
        s.if(gt, (lt) => {
          xe() && lt(ht);
        });
      }
      var ft = s.sibling(gt, 2);
      s.slot(
        ft,
        e,
        "navbar-share-buttons",
        {
          get isMobile() {
            return l();
          }
        },
        null
      ), s.reset(ce), s.reset(ie), s.append(_, z);
    };
    s.if($a, (_) => {
      l() ? _(Dh) : _(ya, !1);
    });
  }
  var zh = s.sibling($a, 2);
  s.slot(
    zh,
    e,
    "navbar-after-share-buttons",
    {
      get isMobile() {
        return l();
      }
    },
    null
  ), s.reset(Sa), s.reset(Fs), s.reset(zl), s.reset(Ds);
  var Qa = s.sibling(Ds, 2), Fl = s.child(Qa), jh = s.child(Fl);
  _v(jh, {
    get direction() {
      return me();
    },
    get showPanels() {
      return s.get(p);
    },
    get split() {
      return de();
    },
    set split(_) {
      de(_);
    },
    $$slots: {
      panelA: (_, z) => {
        var N = qA(), ie = s.child(N);
        {
          var ce = (Qe) => {
            var gt = EA(), ht = s.child(gt);
            const ft = s.derived_safe_equal(() => !Y());
            Rv(ht, {
              get files() {
                return s.get(se);
              },
              get currentIndex() {
                return s.get(Mt);
              },
              get readonly() {
                return s.get(ft);
              },
              $$events: {
                selectTab: (lt) => oi(lt.detail.index),
                reorder: (lt) => gr(lt.detail.src, lt.detail.dest),
                newFile: () => s.set(Ut, !0),
                rename: Ai,
                close: (lt) => s.set(kt, lt.detail.index),
                manageFiles: () => s.set(jt, !0)
              }
            }), s.reset(gt), s.append(Qe, gt);
          };
          s.if(ie, (Qe) => {
            U() && Qe(ce);
          });
        }
        var Se = s.sibling(ie, 2), oe = s.child(Se);
        {
          var De = (Qe) => {
            s.bind_this(
              wv(Qe, {
                get state() {
                  return s.get(f);
                },
                $$legacy: !0
              }),
              (gt) => s.set(Ue, gt),
              () => s.get(Ue)
            );
          };
          s.if(oe, (Qe) => {
            s.get(f) && Qe(De);
          });
        }
        s.reset(Se), s.reset(N), s.append(_, N);
      },
      panelB: (_, z) => {
        var N = DA(), ie = s.child(N);
        {
          var ce = (ht) => {
            var ft = LA(), lt = s.child(ft), Fe = s.child(lt), Ve = s.child(Fe), at = s.child(Ve);
            s.reset(Ve);
            var St = s.sibling(Ve, 2), Nn = s.child(St);
            s.reset(St);
            var Ht = s.sibling(St, 2);
            {
              var Fh = (gi) => {
                var Hl = VA(), Gs = s.child(Hl), Rn = s.child(Gs), Hs = s.child(Rn);
                $t(Hs, { icon: Xm }), s.reset(Rn), s.reset(Gs), s.reset(Hl), s.event("click", Gs, Sr), s.append(gi, Hl);
              };
              s.if(Ht, (gi) => {
                K() && gi(Fh);
              });
            }
            s.reset(Fe), s.reset(lt), s.reset(ft), s.template_effect(() => {
              s.toggle_class(Ve, "is-active", !s.get(Cn)), s.toggle_class(St, "is-active", s.get(Cn));
            }), s.event("click", at, () => {
              s.set(Cn, !1);
            }), s.event("click", Nn, () => {
              s.set(Cn, !0);
            }), s.append(ht, ft);
          };
          s.if(ie, (ht) => {
            s.get(Gi) && ht(ce);
          });
        }
        var Se = s.sibling(ie, 2), oe = s.child(Se), De = s.child(oe);
        s.bind_this(
          IS(De, {
            get files() {
              return s.get(se);
            },
            $$events: { solve: (ht) => fa(ht.detail) },
            $$legacy: !0
          }),
          (ht) => s.set(Ei, ht),
          () => s.get(Ei)
        ), s.reset(oe);
        var Qe = s.sibling(oe, 2), gt = s.child(Qe);
        BS(gt, {
          get output() {
            return s.get(He);
          },
          get showClearOutput() {
            return le();
          },
          get showAutoClearOutput() {
            return $e();
          },
          get showSectionToggles() {
            return Ze();
          },
          get showRightControls() {
            return Re();
          },
          get isTab() {
            return s.get(Gi);
          },
          get autoClearOutput() {
            return I();
          },
          set autoClearOutput(ht) {
            I(ht);
          },
          $$events: {
            clear: () => s.set(He, []),
            goto: (ht) => Ls(ht.detail.location)
          },
          $$slots: {
            "before-right-controls": (ht, ft) => {
              var lt = YA(), Fe = s.child(lt);
              {
                var Ve = (at) => {
                  var St = UA(), Nn = s.child(St), Ht = s.child(Nn);
                  $t(Ht, { icon: Xm }), s.reset(Nn), s.reset(St), s.event("click", St, Sr), s.append(at, St);
                };
                s.if(Fe, (at) => {
                  K() && !s.get(Gi) && at(Ve);
                });
              }
              s.reset(lt), s.append(ht, lt);
            }
          },
          $$legacy: !0
        }), s.reset(Qe), s.reset(Se), s.reset(N), s.template_effect(() => {
          s.toggle_class(oe, "visible", s.get(Cn)), s.toggle_class(Qe, "visible", !s.get(Gi) || !s.get(Cn));
        }), s.append(_, N);
      }
    },
    $$legacy: !0
  }), s.reset(Fl);
  var Gl = s.sibling(Fl, 2);
  s.bind_this(
    KS(Gl, {
      get active() {
        return s.get(ii);
      },
      get stdFlags() {
        return s.get(T);
      },
      $$events: {
        close: () => s.set(ii, !1)
      },
      $$legacy: !0
    }),
    (_) => s.set(vt, _),
    () => s.get(vt)
  ), s.reset(Qa), s.reset(Ys);
  var xa = s.sibling(Ys, 2);
  FS(xa, {
    get active() {
      return s.get(jt);
    },
    get files() {
      return s.get(se);
    },
    $$events: {
      close: () => s.set(jt, !1),
      delete: (_) => s.set(kt, _.detail.index),
      modifyFile: (_) => pr(_.detail.index, _.detail.options),
      newFile: () => s.set(Ut, !0)
    }
  });
  var Pa = s.sibling(xa, 2);
  NS(Pa, {
    get active() {
      return s.get(Ut);
    },
    $$events: {
      cancel: () => s.set(Ut, !1),
      new: (_) => Ni(_.detail.type),
      open: (_) => et(_.detail)
    }
  });
  var wa = s.sibling(Pa, 2);
  const Bh = s.derived_safe_equal(() => s.get(kt) !== null);
  hs(wa, {
    get active() {
      return s.get(Bh);
    },
    title: "Delete file",
    $$events: {
      cancel: () => s.set(kt, null)
    },
    children: (_, z) => {
      var N = zA(), ie = s.first_child(N), ce = s.sibling(s.child(ie)), Se = s.child(ce, !0);
      s.reset(ce), s.next(), s.reset(ie), s.next(2), s.template_effect(() => s.set_text(Se, s.get(se)[s.get(kt)].name)), s.append(_, N);
    },
    $$slots: {
      default: !0,
      footer: (_, z) => {
        var N = jA(), ie = s.child(N), ce = s.sibling(ie, 2);
        s.reset(N), s.event("click", ie, () => dr(s.get(kt))), s.event("click", ce, () => s.set(kt, null)), s.append(_, N);
      }
    }
  });
  var ka = s.sibling(wa, 2);
  GS(ka, {
    get active() {
      return s.get(Pi);
    },
    get modelFiles() {
      return s.get(k);
    },
    $$events: {
      accept: (_) => s.get(hn)(_.detail),
      cancel: () => s.get(hn)(!1)
    }
  });
  var bt = s.sibling(ka, 2);
  HS(bt, {
    get active() {
      return s.get(Bt);
    },
    get dataFiles() {
      return s.get(R);
    },
    get parameters() {
      return s.get(qt);
    },
    $$events: {
      accept: (_) => s.get(hn)(_.detail),
      cancel: () => s.get(hn)(!1)
    }
  });
  var pt = s.sibling(bt, 2);
  hs(pt, {
    get active() {
      return s.get(pi);
    },
    title: "Share this project",
    $$events: { cancel: () => s.set(pi, null) },
    children: (_, z) => {
      var N = BA(), ie = s.child(N), ce = s.child(ie);
      s.remove_input_defaults(ce), s.bind_this(ce, (gt) => s.set(ki, gt), () => s.get(ki)), s.reset(ie);
      var Se = s.sibling(ie, 2), oe = s.child(Se), De = s.child(oe), Qe = s.child(De);
      $t(Qe, { icon: NW }), s.reset(De), s.reset(oe), s.reset(Se), s.reset(N), s.template_effect(() => {
        s.set_value(ce, s.get(pi)), s.toggle_class(oe, "is-primary", !s.get(In)), s.toggle_class(oe, "is-success", s.get(In));
      }), s.event("click", ce, () => s.get(ki).select()), s.event("click", oe, Zn), s.append(_, N);
    },
    $$slots: {
      default: !0,
      footer: (_, z) => {
        var N = IA(), ie = s.child(N);
        s.reset(N), s.event("click", ie, () => s.set(pi, null)), s.append(_, N);
      }
    }
  });
  var Ih = s.sibling(pt, 2);
  s.slot(Ih, e, "default", {}, null), s.reset(Dl), s.reset(Yl), s.template_effect(() => {
    s.toggle_class(Dl, "is-dark", s.get(E)), s.set_attribute(Ns, "aria-expanded", s.get(wt)), s.toggle_class(Ns, "is-active", s.get(wt)), s.toggle_class(Fs, "is-active", s.get(wt));
  }), s.event("click", Ns, () => {
    s.set(wt, !s.get(wt)), s.set(ii, !1);
  }), s.append(n, Yl), s.bind_prop(e, "loadProject", Oi), s.bind_prop(e, "hasFiles", Te), s.bind_prop(e, "getProject", Wn), s.bind_prop(e, "isDefaultSolver", ua), s.bind_prop(e, "isDefaultSolverConfig", Oa);
  var Nh = s.pop({
    loadProject: Oi,
    hasFiles: Te,
    getProject: Wn,
    isDefaultSolver: ua,
    isDefaultSolverConfig: Oa,
    get showVersionSwitcher() {
      return M();
    },
    set showVersionSwitcher(_) {
      M(_), s.flush_sync();
    },
    get showSolverDropdown() {
      return D();
    },
    set showSolverDropdown(_) {
      D(_), s.flush_sync();
    },
    get edgeMiniZinc() {
      return V();
    },
    set edgeMiniZinc(_) {
      V(_), s.flush_sync();
    },
    get autoClearOutput() {
      return I();
    },
    set autoClearOutput(_) {
      I(_), s.flush_sync();
    },
    get showTabs() {
      return U();
    },
    set showTabs(_) {
      U(_), s.flush_sync();
    },
    get canEditTabs() {
      return Y();
    },
    set canEditTabs(_) {
      Y(_), s.flush_sync();
    },
    get compilationEnabled() {
      return q();
    },
    set compilationEnabled(_) {
      q(_), s.flush_sync();
    },
    get project() {
      return te();
    },
    set project(_) {
      te(_), s.flush_sync();
    },
    get enabledSolvers() {
      return ue();
    },
    set enabledSolvers(_) {
      ue(_), s.flush_sync();
    },
    get canEditSolverSettings() {
      return Ae();
    },
    set canEditSolverSettings(_) {
      Ae(_), s.flush_sync();
    },
    get showShareButton() {
      return We();
    },
    set showShareButton(_) {
      We(_), s.flush_sync();
    },
    get showDownloadButton() {
      return we();
    },
    set showDownloadButton(_) {
      we(_), s.flush_sync();
    },
    get externalPlaygroundURL() {
      return xe();
    },
    set externalPlaygroundURL(_) {
      xe(_), s.flush_sync();
    },
    get splitterDirection() {
      return me();
    },
    set splitterDirection(_) {
      me(_), s.flush_sync();
    },
    get splitterSize() {
      return de();
    },
    set splitterSize(_) {
      de(_), s.flush_sync();
    },
    get canSwitchOrientation() {
      return K();
    },
    set canSwitchOrientation(_) {
      K(_), s.flush_sync();
    },
    get showClearOutput() {
      return le();
    },
    set showClearOutput(_) {
      le(_), s.flush_sync();
    },
    get showAutoClearOutput() {
      return $e();
    },
    set showAutoClearOutput(_) {
      $e(_), s.flush_sync();
    },
    get showOutputSectionToggles() {
      return Ze();
    },
    set showOutputSectionToggles(_) {
      Ze(_), s.flush_sync();
    },
    get showOutputRightControls() {
      return Re();
    },
    set showOutputRightControls(_) {
      Re(_), s.flush_sync();
    },
    get theme() {
      return Me();
    },
    set theme(_) {
      Me(_), s.flush_sync();
    },
    get hideOutputOnStartup() {
      return re();
    },
    set hideOutputOnStartup(_) {
      re(_), s.flush_sync();
    },
    get autoFocus() {
      return B();
    },
    set autoFocus(_) {
      B(_), s.flush_sync();
    },
    $set: s.update_legacy_props,
    $on: (_, z) => s.add_legacy_event_listener(e, _, z)
  });
  return i(), Nh;
}
export {
  FA as P,
  Ec as c,
  lM as g
};
